{
	"id": "0690a5b16d08ef18aad9c8332a06d483",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"./interfaces/IAIScoreRegistry.sol\";\nimport \"./utils/ExtendedAccessControl.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n/**\n * @title AIScoreRegistry\n * @dev Stores AI-generated scores and IPFS CIDs for proposal analysis\n * @author CrossFi Treasury Guard Team\n*/\n\ncontract AIScoreRegistry is IAIScoreRegistry, ExtendedAccessControl, Pausable, ReentrancyGuard {\n\n    // scoring..\n\n    struct ScoringCriteria {\n        uint8 ecosystemContribution;\n        uint8 feasibility;\n        uint8 riskAssessment;\n        uint8 teamReputation;\n        uint8 innovation;\n    }\n\n    // data structure\n\n        struct AIScoreData {\n        uint256 proposalId;\n        uint256 overallScore;\n        string justificationIPFS;\n        string modelVersion;\n        uint256 timestamp;\n        address oracle;    \n        bool exists;\n        ScoringBreakdown breakdown;\n    }\n\n    mapping(uint256 => AIScoreData) private aiScores;\n    mapping(address => bool) public authorizedOracles;\n    mapping(string => bool) public supportedModels;\n    \n    ScoringCriteria public scoringWeights;\n    uint256 public constant MIN_SCORE = 0;\n    uint256 public constant MAX_SCORE = 100;\n    uint256 public constant SCORE_VALIDITY_PERIOD = 30 days;\n\n    uint256 public totalScoresSubmitted;\n    mapping(address => uint256) public oracleScoreCount;\n\n    \n    event OracleAuthorized(address indexed oracle, bool authorized);\n    event ModelSupported(string modelVersion, bool supported);\n    event ScoringCriteriaUpdated(ScoringCriteria newCriteria);\n    event ScoreUpdated(uint256 indexed proposalId, uint256 newScore, string reason);\n\n    modifier onlyAuthorizedOracle() {\n        require(authorizedOracles[msg.sender], \"Not authorized oracle\");\n        _;\n    }\n\n    modifier validScore(uint256 score) {\n        require(score >= MIN_SCORE && score <= MAX_SCORE, \"Score out of range\");\n        _;\n    }\n    \n    modifier validProposalId(uint256 proposalId) {\n        require(proposalId > 0, \"Invalid proposal ID\");\n        _;\n    }\n\n    constructor() {\n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(ADMIN_ROLE, msg.sender);\n        _grantRole(AI_ORACLE_ROLE, msg.sender);\n        \n        // Initialize default scoring criteria\n        scoringWeights = ScoringCriteria({\n            ecosystemContribution: 25,\n            feasibility: 25,\n            riskAssessment: 20,\n            teamReputation: 15,\n            innovation: 15\n        });\n        \n        // default supported models\n        supportedModels[\"GPT-4\"] = true;\n        supportedModels[\"Claude-3\"] = true;\n    }\n\n    /**\n     * @dev Submit AI-generated score for a proposal\n     * @param proposalId The proposal ID\n     * @param overallScore Overall AI score (0-100)\n     * @param justificationIPFS IPFS CID containing detailed analysis\n     * @param modelVersion AI model version used\n     * @param breakdown Detailed scoring breakdown\n    */\n\n     function submitAIScore(\n        uint256 proposalId,\n        uint256 overallScore,\n        string memory justificationIPFS,\n        string memory modelVersion,\n        ScoringBreakdown memory breakdown\n    ) external override onlyAuthorizedOracle validProposalId(proposalId) validScore(overallScore) whenNotPaused nonReentrant {\n        require(bytes(justificationIPFS).length > 0, \"Justification IPFS required\");\n        require(supportedModels[modelVersion], \"Unsupported AI model\");\n        require(!aiScores[proposalId].exists, \"Score already exists\");\n        \n        // Validate breakdown scores\n        require(\n            breakdown.ecosystemScore <= 100 &&\n            breakdown.feasibilityScore <= 100 &&\n            breakdown.riskScore <= 100 &&\n            breakdown.teamScore <= 100 &&\n            breakdown.innovationScore <= 100,\n            \"Invalid breakdown scores\"\n        );\n\n        uint256 calculatedScore = (\n            (breakdown.ecosystemScore * scoringWeights.ecosystemContribution) +\n            (breakdown.feasibilityScore * scoringWeights.feasibility) +\n            (breakdown.riskScore * scoringWeights.riskAssessment) +\n            (breakdown.teamScore * scoringWeights.teamReputation) +\n            (breakdown.innovationScore * scoringWeights.innovation)\n        ) / 100;\n\n        require(\n            overallScore >= calculatedScore - 5 && overallScore <= calculatedScore + 5,\n            \"Score inconsistent with breakdown\"\n        );\n\n        aiScores[proposalId] = AIScoreData({\n            proposalId: proposalId,\n            overallScore: overallScore,\n            justificationIPFS: justificationIPFS,\n            modelVersion: modelVersion,\n            timestamp: block.timestamp,\n            oracle: msg.sender,\n            exists: true,\n            breakdown: breakdown\n        });\n        \n        totalScoresSubmitted++;\n        oracleScoreCount[msg.sender]++;\n        \n        emit AIScoreSubmitted(\n            proposalId,\n            overallScore,\n            justificationIPFS,\n            modelVersion,\n            msg.sender,\n            block.timestamp\n        );\n    }\n\n     /**\n     * @dev Update existing AI score (only within validity period)\n     * @param proposalId The proposal ID\n     * @param newScore New overall score\n     * @param newJustificationIPFS New IPFS CID for updated analysis\n     * @param reason Reason for score update\n     */\n    function updateAIScore(\n        uint256 proposalId,\n        uint256 newScore,\n        string memory newJustificationIPFS,\n        string memory reason\n    ) external onlyAuthorizedOracle validProposalId(proposalId) validScore(newScore) whenNotPaused {\n        require(aiScores[proposalId].exists, \"Score does not exist\");\n        require(aiScores[proposalId].oracle == msg.sender, \"Not original oracle\");\n        require(\n            block.timestamp <= aiScores[proposalId].timestamp + SCORE_VALIDITY_PERIOD,\n            \"Update period expired\"\n        );\n        require(bytes(reason).length > 0, \"Update reason required\");\n        \n        aiScores[proposalId].overallScore = newScore;\n        aiScores[proposalId].justificationIPFS = newJustificationIPFS;\n        aiScores[proposalId].timestamp = block.timestamp;\n        \n        emit ScoreUpdated(proposalId, newScore, reason);\n    }\n\n    /**\n     * @dev Get AI score for a proposal\n     * @param proposalId The proposal ID\n     * @return score Overall AI score\n     * @return justification IPFS CID for detailed analysis\n     * @return exists Whether score exists\n     */\n    function getAIScore(uint256 proposalId) external view override validProposalId(proposalId) returns (\n        uint256 score,\n        string memory justification,\n        bool exists\n    ) {\n        AIScoreData storage scoreData = aiScores[proposalId];\n        return (scoreData.overallScore, scoreData.justificationIPFS, scoreData.exists);\n    }\n\n    /**\n     * @dev Get detailed AI score data\n     * @param proposalId The proposal ID\n     * @return Complete AI score data structure\n     */\n    function getDetailedAIScore(uint256 proposalId) external view validProposalId(proposalId) returns (AIScoreData memory) {\n        require(aiScores[proposalId].exists, \"Score does not exist\");\n        return aiScores[proposalId];\n    }\n\n    /**\n     * @dev Get scoring breakdown for a proposal\n     * @param proposalId The proposal ID\n     * @return breakdown Detailed scoring breakdown\n     */\n    function getScoringBreakdown(uint256 proposalId) external view validProposalId(proposalId) returns (ScoringBreakdown memory breakdown) {\n        require(aiScores[proposalId].exists, \"Score does not exist\");\n        return aiScores[proposalId].breakdown;\n    }\n\n    /**\n     * @dev Check if AI score exists for a proposal\n     * @param proposalId The proposal ID\n     * @return exists Whether score exists\n     */\n    function hasAIScore(uint256 proposalId) external view override validProposalId(proposalId) returns (bool exists) {\n        return aiScores[proposalId].exists;\n    }\n\n    /**\n     * @dev Get oracle statistics\n     * @param oracle Oracle address\n     * @return scoreCount Number of scores submitted by oracle\n     * @return isAuthorized Whether oracle is authorized\n     */\n    function getOracleStats(address oracle) external view returns (uint256 scoreCount, bool isAuthorized) {\n        return (oracleScoreCount[oracle], authorizedOracles[oracle]);\n    }\n\n     /**\n     * @dev Authorize or deauthorize an AI oracle\n     * @param oracle Oracle address\n     * @param authorized Authorization status\n     */\n    function setOracleAuthorization(address oracle, bool authorized) external onlyRole(ADMIN_ROLE) {\n        require(oracle != address(0), \"Invalid oracle address\");\n        authorizedOracles[oracle] = authorized;\n        \n        if (authorized) {\n            grantRole(AI_ORACLE_ROLE, oracle);\n        } else {\n            revokeRole(AI_ORACLE_ROLE, oracle);\n        }\n        \n        emit OracleAuthorized(oracle, authorized);\n    }\n\n    /**\n     * @dev Add or remove supported AI model\n     * @param modelVersion Model version string\n     * @param supported Whether model is supported\n     */\n    function setSupportedModel(string memory modelVersion, bool supported) external onlyRole(ADMIN_ROLE) {\n        require(bytes(modelVersion).length > 0, \"Invalid model version\");\n        supportedModels[modelVersion] = supported;\n        emit ModelSupported(modelVersion, supported);\n    }\n\n    /**\n     * @dev Update scoring criteria weights\n     * @param newCriteria New scoring criteria\n     */\n    function updateScoringCriteria(ScoringCriteria memory newCriteria) external onlyRole(ADMIN_ROLE) {\n        require(\n            newCriteria.ecosystemContribution + \n            newCriteria.feasibility + \n            newCriteria.riskAssessment + \n            newCriteria.teamReputation + \n            newCriteria.innovation == 100,\n            \"Weights must sum to 100\"\n        );\n        \n        scoringWeights = newCriteria;\n        emit ScoringCriteriaUpdated(newCriteria);\n    }\n\n    /**\n     * @dev Emergency function to remove invalid score\n     * @param proposalId The proposal ID\n     * @param reason Reason for removal\n     */\n    function removeScore(uint256 proposalId, string memory reason) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        require(aiScores[proposalId].exists, \"Score does not exist\");\n        require(bytes(reason).length > 0, \"Reason required\");\n        \n        delete aiScores[proposalId];\n        totalScoresSubmitted--;\n        \n        emit ScoreUpdated(proposalId, 0, reason);\n    }\n\n    function pause() external onlyRole(ADMIN_ROLE) {\n        _pause();\n    }\n\n    function unpause() external onlyRole(ADMIN_ROLE) {\n        _unpause();\n    }\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\n/**\n * @title AccessControl\n * @dev Extended access control with custom roles for CrossFi Treasury Guard\n */\ncontract ExtendedAccessControl is AccessControl {\n    \n    // Custom roles\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\n    bytes32 public constant AI_ORACLE_ROLE = keccak256(\"AI_ORACLE_ROLE\");\n    bytes32 public constant TREASURY_MANAGER_ROLE = keccak256(\"TREASURY_MANAGER_ROLE\");\n    bytes32 public constant MILESTONE_APPROVER_ROLE = keccak256(\"MILESTONE_APPROVER_ROLE\");\n    bytes32 public constant DISPUTE_RESOLVER_ROLE = keccak256(\"DISPUTE_RESOLVER_ROLE\");\n    \n    constructor() {\n         _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n    }\n    \n    /**\n     * @dev Grant multiple roles to an account\n     * @param account Account to grant roles to\n     * @param roles Array of role identifiers\n     */\n    function grantMultipleRoles(address account, bytes32[] memory roles) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        for (uint256 i = 0; i < roles.length; i++) {\n            grantRole(roles[i], account);\n        }\n    }\n    \n    /**\n     * @dev Revoke multiple roles from an account\n     * @param account Account to revoke roles from\n     * @param roles Array of role identifiers\n     */\n    function revokeMultipleRoles(address account, bytes32[] memory roles) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        for (uint256 i = 0; i < roles.length; i++) {\n            revokeRole(roles[i], account);\n        }\n    }\n    \n    /**\n     * @dev Check if account has any of the specified roles\n     * @param account Account to check\n     * @param roles Array of role identifiers\n     * @return hasAnyRole True if account has at least one of the roles\n     */\n    function hasAnyRole(address account, bytes32[] memory roles) external view returns (bool) {\n        for (uint256 i = 0; i < roles.length; i++) {\n            if (hasRole(roles[i], account)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    \n    /**\n     * @dev Get all roles for an account\n     * @param account Account to check\n     * @return roleCount Number of roles the account has\n     */\n    function getRoleCount(address account) external view returns (uint256 roleCount) {\n        bytes32[] memory allRoles = getAllRoles();\n        uint256 count = 0;\n        \n        for (uint256 i = 0; i < allRoles.length; i++) {\n            if (hasRole(allRoles[i], account)) {\n                count++;\n            }\n        }\n        \n        return count;\n    }\n    \n    /**\n     * @dev Get all available roles\n     * @return roles Array of all role identifiers\n     */\n    function getAllRoles() public pure returns (bytes32[] memory roles) {\n        roles = new bytes32[](6);\n        roles[0] = DEFAULT_ADMIN_ROLE;\n        roles[1] = ADMIN_ROLE;\n        roles[2] = AI_ORACLE_ROLE;\n        roles[3] = TREASURY_MANAGER_ROLE;\n        roles[4] = MILESTONE_APPROVER_ROLE;\n        roles[5] = DISPUTE_RESOLVER_ROLE;\n        return roles;\n    }\n}"
			},
			"CrossFi-Treasury-Guard/contracts/interfaces/IAIScoreRegistry.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n/**\n * @title IAIScoreRegistry\n * @dev Interface for AIScoreRegistry contract\n */\ninterface IAIScoreRegistry {\n    \n    struct ScoringBreakdown {\n        uint8 ecosystemScore;\n        uint8 feasibilityScore;\n        uint8 riskScore;\n        uint8 teamScore;\n        uint8 innovationScore;\n    }\n    \n    // Events\n    event AIScoreSubmitted(\n        uint256 indexed proposalId,\n        uint256 overallScore,\n        string justificationIPFS,\n        string modelVersion,\n        address indexed oracle,\n        uint256 timestamp\n    );\n    \n    // Functions\n    function submitAIScore(\n        uint256 proposalId,\n        uint256 overallScore,\n        string memory justificationIPFS,\n        string memory modelVersion,\n        ScoringBreakdown memory breakdown\n    ) external;\n    \n    function getAIScore(uint256 proposalId) external view returns (\n        uint256 score,\n        string memory justification,\n        bool exists\n    );\n    \n    function hasAIScore(uint256 proposalId) external view returns (bool exists);\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\n\npragma solidity >=0.8.4;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)22_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)22_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)22_storage"
							},
							"t_struct(RoleData)22_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 19,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 21,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 397,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 498,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol": {
				"AIScoreRegistry": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "overallScore",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "justificationIPFS",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "modelVersion",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "oracle",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "AIScoreSubmitted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "modelVersion",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "supported",
									"type": "bool"
								}
							],
							"name": "ModelSupported",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oracle",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "authorized",
									"type": "bool"
								}
							],
							"name": "OracleAuthorized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newScore",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"name": "ScoreUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "ecosystemContribution",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "feasibility",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "riskAssessment",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "teamReputation",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "innovation",
											"type": "uint8"
										}
									],
									"indexed": false,
									"internalType": "struct AIScoreRegistry.ScoringCriteria",
									"name": "newCriteria",
									"type": "tuple"
								}
							],
							"name": "ScoringCriteriaUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "AI_ORACLE_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DISPUTE_RESOLVER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_SCORE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MILESTONE_APPROVER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MIN_SCORE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SCORE_VALIDITY_PERIOD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TREASURY_MANAGER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "authorizedOracles",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "getAIScore",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "score",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "justification",
									"type": "string"
								},
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllRoles",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "getDetailedAIScore",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "proposalId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "overallScore",
											"type": "uint256"
										},
										{
											"internalType": "string",
											"name": "justificationIPFS",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "modelVersion",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "timestamp",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "oracle",
											"type": "address"
										},
										{
											"internalType": "bool",
											"name": "exists",
											"type": "bool"
										},
										{
											"components": [
												{
													"internalType": "uint8",
													"name": "ecosystemScore",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "feasibilityScore",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "riskScore",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "teamScore",
													"type": "uint8"
												},
												{
													"internalType": "uint8",
													"name": "innovationScore",
													"type": "uint8"
												}
											],
											"internalType": "struct IAIScoreRegistry.ScoringBreakdown",
											"name": "breakdown",
											"type": "tuple"
										}
									],
									"internalType": "struct AIScoreRegistry.AIScoreData",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "oracle",
									"type": "address"
								}
							],
							"name": "getOracleStats",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "scoreCount",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isAuthorized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getRoleCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "roleCount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "getScoringBreakdown",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "ecosystemScore",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "feasibilityScore",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "riskScore",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "teamScore",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "innovationScore",
											"type": "uint8"
										}
									],
									"internalType": "struct IAIScoreRegistry.ScoringBreakdown",
									"name": "breakdown",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								}
							],
							"name": "grantMultipleRoles",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "hasAIScore",
							"outputs": [
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								}
							],
							"name": "hasAnyRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "oracleScoreCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"name": "removeScore",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								}
							],
							"name": "revokeMultipleRoles",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "scoringWeights",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "ecosystemContribution",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feasibility",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "riskAssessment",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "teamReputation",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "innovation",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "oracle",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "authorized",
									"type": "bool"
								}
							],
							"name": "setOracleAuthorization",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "modelVersion",
									"type": "string"
								},
								{
									"internalType": "bool",
									"name": "supported",
									"type": "bool"
								}
							],
							"name": "setSupportedModel",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "overallScore",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "justificationIPFS",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "modelVersion",
									"type": "string"
								},
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "ecosystemScore",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "feasibilityScore",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "riskScore",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "teamScore",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "innovationScore",
											"type": "uint8"
										}
									],
									"internalType": "struct IAIScoreRegistry.ScoringBreakdown",
									"name": "breakdown",
									"type": "tuple"
								}
							],
							"name": "submitAIScore",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"name": "supportedModels",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalScoresSubmitted",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "newScore",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "newJustificationIPFS",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"name": "updateAIScore",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "ecosystemContribution",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "feasibility",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "riskAssessment",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "teamReputation",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "innovation",
											"type": "uint8"
										}
									],
									"internalType": "struct AIScoreRegistry.ScoringCriteria",
									"name": "newCriteria",
									"type": "tuple"
								}
							],
							"name": "updateScoringCriteria",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "CrossFi Treasury Guard Team",
						"details": "Stores AI-generated scores and IPFS CIDs for proposal analysis",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"getAIScore(uint256)": {
								"details": "Get AI score for a proposal",
								"params": {
									"proposalId": "The proposal ID"
								},
								"returns": {
									"exists": "Whether score exists",
									"justification": "IPFS CID for detailed analysis",
									"score": "Overall AI score"
								}
							},
							"getAllRoles()": {
								"details": "Get all available roles",
								"returns": {
									"roles": "Array of all role identifiers"
								}
							},
							"getDetailedAIScore(uint256)": {
								"details": "Get detailed AI score data",
								"params": {
									"proposalId": "The proposal ID"
								},
								"returns": {
									"_0": "Complete AI score data structure"
								}
							},
							"getOracleStats(address)": {
								"details": "Get oracle statistics",
								"params": {
									"oracle": "Oracle address"
								},
								"returns": {
									"isAuthorized": "Whether oracle is authorized",
									"scoreCount": "Number of scores submitted by oracle"
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleCount(address)": {
								"details": "Get all roles for an account",
								"params": {
									"account": "Account to check"
								},
								"returns": {
									"roleCount": "Number of roles the account has"
								}
							},
							"getScoringBreakdown(uint256)": {
								"details": "Get scoring breakdown for a proposal",
								"params": {
									"proposalId": "The proposal ID"
								},
								"returns": {
									"breakdown": "Detailed scoring breakdown"
								}
							},
							"grantMultipleRoles(address,bytes32[])": {
								"details": "Grant multiple roles to an account",
								"params": {
									"account": "Account to grant roles to",
									"roles": "Array of role identifiers"
								}
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasAIScore(uint256)": {
								"details": "Check if AI score exists for a proposal",
								"params": {
									"proposalId": "The proposal ID"
								},
								"returns": {
									"exists": "Whether score exists"
								}
							},
							"hasAnyRole(address,bytes32[])": {
								"details": "Check if account has any of the specified roles",
								"params": {
									"account": "Account to check",
									"roles": "Array of role identifiers"
								},
								"returns": {
									"_0": "hasAnyRole True if account has at least one of the roles"
								}
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"removeScore(uint256,string)": {
								"details": "Emergency function to remove invalid score",
								"params": {
									"proposalId": "The proposal ID",
									"reason": "Reason for removal"
								}
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeMultipleRoles(address,bytes32[])": {
								"details": "Revoke multiple roles from an account",
								"params": {
									"account": "Account to revoke roles from",
									"roles": "Array of role identifiers"
								}
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"setOracleAuthorization(address,bool)": {
								"details": "Authorize or deauthorize an AI oracle",
								"params": {
									"authorized": "Authorization status",
									"oracle": "Oracle address"
								}
							},
							"setSupportedModel(string,bool)": {
								"details": "Add or remove supported AI model",
								"params": {
									"modelVersion": "Model version string",
									"supported": "Whether model is supported"
								}
							},
							"submitAIScore(uint256,uint256,string,string,(uint8,uint8,uint8,uint8,uint8))": {
								"details": "Submit AI-generated score for a proposal",
								"params": {
									"breakdown": "Detailed scoring breakdown",
									"justificationIPFS": "IPFS CID containing detailed analysis",
									"modelVersion": "AI model version used",
									"overallScore": "Overall AI score (0-100)",
									"proposalId": "The proposal ID"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"updateAIScore(uint256,uint256,string,string)": {
								"details": "Update existing AI score (only within validity period)",
								"params": {
									"newJustificationIPFS": "New IPFS CID for updated analysis",
									"newScore": "New overall score",
									"proposalId": "The proposal ID",
									"reason": "Reason for score update"
								}
							},
							"updateScoringCriteria((uint8,uint8,uint8,uint8,uint8))": {
								"details": "Update scoring criteria weights",
								"params": {
									"newCriteria": "New scoring criteria"
								}
							}
						},
						"title": "AIScoreRegistry",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":410:10788  contract AIScoreRegistry is IAIScoreRegistry, ExtendedAccessControl, Pausable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2150:2715  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":744:786  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_7\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n  0x00\n    /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":775:785  msg.sender */\n  caller\n    /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":744:754  _grantRole */\n  tag_8\n    /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":744:786  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1003  _paused */\n  0x01\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  dup2\n  sstore\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x02\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  sstore\n    /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2174:2216  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_12\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1006:1011  false */\n  0x00\n    /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2205:2215  msg.sender */\n  caller\n    /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2174:2184  _grantRole */\n  tag_8\n    /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2174:2216  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  jump\t// in\ntag_12:\n  pop\n    /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2226:2260  _grantRole(ADMIN_ROLE, msg.sender) */\n  tag_13\n    /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":343:366  keccak256(\"ADMIN_ROLE\") */\n  0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n    /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2249:2259  msg.sender */\n  caller\n    /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2226:2236  _grantRole */\n  tag_8\n    /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2226:2260  _grantRole(ADMIN_ROLE, msg.sender) */\n  jump\t// in\ntag_13:\n  pop\n    /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2270:2308  _grantRole(AI_ORACLE_ROLE, msg.sender) */\n  tag_14\n    /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":413:440  keccak256(\"AI_ORACLE_ROLE\") */\n  0x482648e7878e9fa54c0a2f67ffd22d00ebc37cf7a03e060e428d2ab0cd6735cc\n    /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2297:2307  msg.sender */\n  caller\n    /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2270:2280  _grantRole */\n  tag_8\n    /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2270:2308  _grantRole(AI_ORACLE_ROLE, msg.sender) */\n  jump\t// in\ntag_14:\n  pop\n    /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2391:2578  ScoringCriteria({... */\n  0x40\n  dup1\n  mload\n  0xa0\n  dup2\n  add\n  dup3\n  mstore\n    /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2444:2446  25 */\n  0x19\n    /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2391:2578  ScoringCriteria({... */\n  dup1\n  dup3\n  mstore\n  0x20\n  dup3\n  add\n  mstore\n    /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2505:2507  20 */\n  0x14\n    /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2391:2578  ScoringCriteria({... */\n  dup2\n  dup4\n  add\n  mstore\n    /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2537:2539  15 */\n  0x0f\n    /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2391:2578  ScoringCriteria({... */\n  0x60\n  dup3\n  add\n  dup2\n  swap1\n  mstore\n  0x80\n  swap1\n  swap2\n  add\n  mstore\n    /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2374:2388  scoringWeights */\n  0x06\n    /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2374:2578  scoringWeights = ScoringCriteria({... */\n  dup1\n  sload\n  not(0xffffffffff)\n  and\n  0x0f0f141919\n  or\n  swap1\n  sstore\n    /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2633:2657  supportedModels[\"GPT-4\"] */\n  dup1\n  mload\n  shl(0xda, 0x11d4150b4d)\n    /* \"#utility.yul\":216:236   */\n  dup2\n  mstore\n    /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2633:2648  supportedModels */\n  0x05\n    /* \"#utility.yul\":252:263   */\n  dup1\n  dup3\n  add\n    /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2633:2657  supportedModels[\"GPT-4\"] */\n  dup2\n  swap1\n  mstore\n  dup3\n  mload\n  swap2\n  dup3\n  swap1\n  sub\n  0x25\n  add\n  dup3\n  keccak256\n    /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2633:2664  supportedModels[\"GPT-4\"] = true */\n  dup1\n  sload\n  not(0xff)\n  swap1\n  dup2\n  and\n  0x01\n  swap1\n  dup2\n  or\n  swap1\n  swap3\n  sstore\n  shl(0xc0, 0x436c617564652d33)\n    /* \"#utility.yul\":476:499   */\n  dup5\n  mstore\n    /* \"#utility.yul\":524:525   */\n  0x08\n    /* \"#utility.yul\":515:526   */\n  dup5\n  add\n    /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2674:2701  supportedModels[\"Claude-3\"] */\n  swap3\n  swap1\n  swap3\n  mstore\n  swap3\n  mload\n  swap2\n  dup3\n  swap1\n  sub\n  0x28\n  add\n  swap1\n  swap2\n  keccak256\n    /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2674:2708  supportedModels[\"Claude-3\"] = true */\n  dup1\n  sload\n  swap1\n  swap2\n  and\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":410:10788  contract AIScoreRegistry is IAIScoreRegistry, ExtendedAccessControl, Pausable, ReentrancyGuard {... */\n  jump(tag_29)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6232:6236  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n  dup3\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n  dup6\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  dup2\n  keccak256\n  sload\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n  tag_23\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6297  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n  dup4\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n  dup7\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6323:6327  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n  tag_24\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  swap1\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  jump\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\ntag_24:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6364:6371  account */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6358:6362  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6407:6411  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n  jump(tag_26)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\ntag_23:\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6449:6454  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\ntag_26:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":274:532   */\ntag_29:\n    /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":410:10788  contract AIScoreRegistry is IAIScoreRegistry, ExtendedAccessControl, Pausable, ReentrancyGuard {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":410:10788  contract AIScoreRegistry is IAIScoreRegistry, ExtendedAccessControl, Pausable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8456cb59\n      gt\n      tag_42\n      jumpi\n      dup1\n      0xbfe42a37\n      gt\n      tag_43\n      jumpi\n      dup1\n      0xd5c1a1e1\n      gt\n      tag_44\n      jumpi\n      dup1\n      0xd5c1a1e1\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xea535940\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xebdf690f\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xf2bcac3d\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xff8dea01\n      eq\n      tag_41\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      dup1\n      0xbfe42a37\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xc601f7af\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xc772a8a6\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xcfe85a2f\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      dup1\n      0xa217fddf\n      gt\n      tag_45\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa91ad18e\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xaca5a8a7\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xb8a956d3\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xba340773\n      eq\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      dup1\n      0x8456cb59\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x91b9f9d8\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x96caac0a\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xa02d72fb\n      eq\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      dup1\n      0x3f4ba83a\n      gt\n      tag_46\n      jumpi\n      dup1\n      0x61c992a3\n      gt\n      tag_47\n      jumpi\n      dup1\n      0x61c992a3\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x68ca78f9\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x7092b0bc\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x7131f025\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x75b238fc\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      dup1\n      0x3f4ba83a\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x40b89270\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x4da89fbd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x4fe9d1f5\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      dup1\n      0x2b116373\n      gt\n      tag_48\n      jumpi\n      dup1\n      0x2b116373\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2ed49cf7\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3a1e017f\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0311b82d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x27ff6223\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_49\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n        /* \"#utility.yul\":566:580   */\n      swap1\n      iszero\n        /* \"#utility.yul\":559:581   */\n      iszero\n        /* \"#utility.yul\":541:582   */\n      dup2\n      mstore\n        /* \"#utility.yul\":529:531   */\n      0x20\n        /* \"#utility.yul\":514:532   */\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6593:6937  function getAIScore(uint256 proposalId) external view override validProposalId(proposalId) returns (... */\n    tag_4:\n      tag_55\n      tag_56\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_53\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_5:\n      tag_61\n      tag_62\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_62:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3851:3858  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      0x01\n      add\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      jump\n    tag_61:\n      mload(0x40)\n        /* \"#utility.yul\":2017:2042   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2005:2007   */\n      0x20\n        /* \"#utility.yul\":1990:2008   */\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      tag_53\n        /* \"#utility.yul\":1871:2048   */\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1260:1299  uint256 public constant MAX_SCORE = 100 */\n    tag_6:\n      tag_61\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1296:1299  100 */\n      0x64\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1260:1299  uint256 public constant MAX_SCORE = 100 */\n      dup2\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":5461:6349  function updateAIScore(... */\n    tag_7:\n      tag_71\n      tag_72\n      calldatasize\n      0x04\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      stop\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1117:1163  mapping(string => bool) public supportedModels */\n    tag_8:\n      tag_49\n      tag_76\n      calldatasize\n      0x04\n      tag_77\n      jump\t// in\n    tag_76:\n      dup1\n      mload\n      0x20\n      dup2\n      dup4\n      add\n      dup2\n      add\n      dup1\n      mload\n      0x05\n      dup3\n      mstore\n      swap3\n      dup3\n      add\n      swap2\n      swap1\n      swap4\n      add\n      keccak256\n      swap2\n      mstore\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_9:\n      tag_71\n      tag_81\n      calldatasize\n      0x04\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_10:\n      tag_71\n      tag_85\n      calldatasize\n      0x04\n      tag_82\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1367:1402  uint256 public totalScoresSubmitted */\n    tag_11:\n      tag_61\n      sload(0x07)\n      dup2\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10710:10786  function unpause() external onlyRole(ADMIN_ROLE) {... */\n    tag_12:\n      tag_71\n      tag_91\n      jump\t// in\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1217:1254  uint256 public constant MIN_SCORE = 0 */\n    tag_13:\n      tag_61\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1253:1254  0 */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1217:1254  uint256 public constant MIN_SCORE = 0 */\n      dup2\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1174:1211  ScoringCriteria public scoringWeights */\n    tag_14:\n      sload(0x06)\n      tag_95\n      swap1\n      0xff\n      dup1\n      dup3\n      and\n      swap2\n      0x0100\n      dup2\n      div\n      dup3\n      and\n      swap2\n      0x010000\n      dup3\n      div\n      dup2\n      and\n      swap2\n      0x01000000\n      dup2\n      div\n      dup3\n      and\n      swap2\n      0x0100000000\n      swap1\n      swap2\n      div\n      and\n      dup6\n      jump\n    tag_95:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4901:4905   */\n      0xff\n        /* \"#utility.yul\":4889:4906   */\n      swap7\n      dup8\n      and\n        /* \"#utility.yul\":4871:4907   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4943:4960   */\n      swap5\n      dup7\n      and\n        /* \"#utility.yul\":4938:4940   */\n      0x20\n        /* \"#utility.yul\":4923:4941   */\n      dup7\n      add\n        /* \"#utility.yul\":4916:4961   */\n      mstore\n        /* \"#utility.yul\":4997:5014   */\n      swap3\n      dup6\n      and\n        /* \"#utility.yul\":4977:4995   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":4970:5015   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":5051:5068   */\n      dup4\n      and\n        /* \"#utility.yul\":5046:5048   */\n      0x60\n        /* \"#utility.yul\":5031:5049   */\n      dup4\n      add\n        /* \"#utility.yul\":5024:5069   */\n      mstore\n        /* \"#utility.yul\":5106:5123   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5100:5103   */\n      0x80\n        /* \"#utility.yul\":5085:5104   */\n      dup3\n      add\n        /* \"#utility.yul\":5078:5124   */\n      mstore\n        /* \"#utility.yul\":4858:4861   */\n      0xa0\n        /* \"#utility.yul\":4843:4862   */\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1174:1211  ScoringCriteria public scoringWeights */\n      tag_53\n        /* \"#utility.yul\":4632:5130   */\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1352:1573  function revokeMultipleRoles(address account, bytes32[] memory roles) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_15:\n      tag_71\n      tag_100\n      calldatasize\n      0x04\n      tag_101\n      jump\t// in\n    tag_100:\n      tag_102\n      jump\t// in\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      and(0xff, sload(0x01))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      jump(tag_49)\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1062:1111  mapping(address => bool) public authorizedOracles */\n    tag_17:\n      tag_49\n      tag_107\n      calldatasize\n      0x04\n      tag_108\n      jump\t// in\n    tag_107:\n      mstore(0x20, 0x04)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1816:2087  function hasAnyRole(address account, bytes32[] memory roles) external view returns (bool) {... */\n    tag_18:\n      tag_49\n      tag_112\n      calldatasize\n      0x04\n      tag_101\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3054:5175  function submitAIScore(... */\n    tag_19:\n      tag_71\n      tag_116\n      calldatasize\n      0x04\n      tag_117\n      jump\t// in\n    tag_116:\n      tag_118\n      jump\t// in\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1408:1459  mapping(address => uint256) public oracleScoreCount */\n    tag_20:\n      tag_61\n      tag_120\n      calldatasize\n      0x04\n      tag_108\n      jump\t// in\n    tag_120:\n      mstore(0x20, 0x08)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":306:366  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n    tag_21:\n      tag_61\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      dup2\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10632:10704  function pause() external onlyRole(ADMIN_ROLE) {... */\n    tag_22:\n      tag_71\n      tag_127\n      jump\t// in\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":960:1179  function grantMultipleRoles(address account, bytes32[] memory roles) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_23:\n      tag_71\n      tag_129\n      calldatasize\n      0x04\n      tag_101\n      jump\t// in\n    tag_129:\n      tag_130\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_24:\n      tag_49\n      tag_132\n      calldatasize\n      0x04\n      tag_82\n      jump\t// in\n    tag_132:\n      tag_133\n      jump\t// in\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":7901:8065  function hasAIScore(uint256 proposalId) external view override validProposalId(proposalId) returns (bool exists) {... */\n    tag_25:\n      tag_49\n      tag_136\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_136:\n      tag_137\n      jump\t// in\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":534:620  bytes32 public constant MILESTONE_APPROVER_ROLE = keccak256(\"MILESTONE_APPROVER_ROLE\") */\n    tag_26:\n      tag_61\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":584:620  keccak256(\"MILESTONE_APPROVER_ROLE\") */\n      0x58223cdfb69946630d837d40b5c366a584f0217ada7fddd8318f2e08603cfa22\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":534:620  bytes32 public constant MILESTONE_APPROVER_ROLE = keccak256(\"MILESTONE_APPROVER_ROLE\") */\n      dup2\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1305:1360  uint256 public constant SCORE_VALIDITY_PERIOD = 30 days */\n    tag_28:\n      tag_61\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1353:1360  30 days */\n      0x278d00\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1305:1360  uint256 public constant SCORE_VALIDITY_PERIOD = 30 days */\n      dup2\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2250:2610  function getRoleCount(address account) external view returns (uint256 roleCount) {... */\n    tag_29:\n      tag_61\n      tag_149\n      calldatasize\n      0x04\n      tag_108\n      jump\t// in\n    tag_149:\n      tag_150\n      jump\t// in\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10249:10626  function removeScore(uint256 proposalId, string memory reason) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_30:\n      tag_71\n      tag_153\n      calldatasize\n      0x04\n      tag_154\n      jump\t// in\n    tag_153:\n      tag_155\n      jump\t// in\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9209:9496  function setSupportedModel(string memory modelVersion, bool supported) external onlyRole(ADMIN_ROLE) {... */\n    tag_31:\n      tag_71\n      tag_157\n      calldatasize\n      0x04\n      tag_158\n      jump\t// in\n    tag_157:\n      tag_159\n      jump\t// in\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":626:708  bytes32 public constant DISPUTE_RESOLVER_ROLE = keccak256(\"DISPUTE_RESOLVER_ROLE\") */\n    tag_32:\n      tag_61\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":674:708  keccak256(\"DISPUTE_RESOLVER_ROLE\") */\n      0x7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":626:708  bytes32 public constant DISPUTE_RESOLVER_ROLE = keccak256(\"DISPUTE_RESOLVER_ROLE\") */\n      dup2\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":372:440  bytes32 public constant AI_ORACLE_ROLE = keccak256(\"AI_ORACLE_ROLE\") */\n    tag_33:\n      tag_61\n      0x00\n      dup1\n      mload\n      0x20\n      data_a33092ec2ea5e84579a4a7f81a8171c84a984183e655ab76a6ea5c0d5344c7b0\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      dup2\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":8277:8456  function getOracleStats(address oracle) external view returns (uint256 scoreCount, bool isAuthorized) {... */\n    tag_34:\n      tag_166\n      tag_167\n      calldatasize\n      0x04\n      tag_108\n      jump\t// in\n    tag_167:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":8397:8421  oracleScoreCount[oracle] */\n      and\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":8340:8358  uint256 scoreCount */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":8397:8421  oracleScoreCount[oracle] */\n      swap1\n      dup2\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":8397:8413  oracleScoreCount */\n      0x08\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":8397:8421  oracleScoreCount[oracle] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":8423:8440  authorizedOracles */\n      0x04\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":8423:8448  authorizedOracles[oracle] */\n      swap1\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":8397:8421  oracleScoreCount[oracle] */\n      swap1\n      swap2\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":8423:8448  authorizedOracles[oracle] */\n      0xff\n      swap1\n      swap2\n      and\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":8277:8456  function getOracleStats(address oracle) external view returns (uint256 scoreCount, bool isAuthorized) {... */\n      jump\n    tag_166:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":9160:9185   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":9228:9242   */\n      swap1\n      iszero\n        /* \"#utility.yul\":9221:9243   */\n      iszero\n        /* \"#utility.yul\":9216:9218   */\n      0x20\n        /* \"#utility.yul\":9201:9219   */\n      dup4\n      add\n        /* \"#utility.yul\":9194:9244   */\n      mstore\n        /* \"#utility.yul\":9133:9151   */\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":8277:8456  function getOracleStats(address oracle) external view returns (uint256 scoreCount, bool isAuthorized) {... */\n      tag_53\n        /* \"#utility.yul\":8992:9250   */\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":7484:7743  function getScoringBreakdown(uint256 proposalId) external view validProposalId(proposalId) returns (ScoringBreakdown memory breakdown) {... */\n    tag_35:\n      tag_171\n      tag_172\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_172:\n      tag_173\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_175\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_36:\n      tag_71\n      tag_177\n      calldatasize\n      0x04\n      tag_82\n      jump\t// in\n    tag_177:\n      tag_178\n      jump\t// in\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":8611:9043  function setOracleAuthorization(address oracle, bool authorized) external onlyRole(ADMIN_ROLE) {... */\n    tag_37:\n      tag_71\n      tag_180\n      calldatasize\n      0x04\n      tag_181\n      jump\t// in\n    tag_180:\n      tag_182\n      jump\t// in\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":7087:7320  function getDetailedAIScore(uint256 proposalId) external view validProposalId(proposalId) returns (AIScoreData memory) {... */\n    tag_38:\n      tag_183\n      tag_184\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_184:\n      tag_185\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":446:528  bytes32 public constant TREASURY_MANAGER_ROLE = keccak256(\"TREASURY_MANAGER_ROLE\") */\n    tag_39:\n      tag_61\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":494:528  keccak256(\"TREASURY_MANAGER_ROLE\") */\n      0xede9dcdb0ce99dc7cec9c7be9246ad08b37853683ad91569c187b647ddf5e21c\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":446:528  bytes32 public constant TREASURY_MANAGER_ROLE = keccak256(\"TREASURY_MANAGER_ROLE\") */\n      dup2\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2723:3087  function getAllRoles() public pure returns (bytes32[] memory roles) {... */\n    tag_40:\n      tag_191\n      tag_192\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9609:10091  function updateScoringCriteria(ScoringCriteria memory newCriteria) external onlyRole(ADMIN_ROLE) {... */\n    tag_41:\n      tag_71\n      tag_196\n      calldatasize\n      0x04\n      tag_197\n      jump\t// in\n    tag_196:\n      tag_198\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2626:2630  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2696  interfaceId == type(IAccessControl).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x7965db0b)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      tag_201\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:869  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2736  super.supportsInterface(interfaceId) */\n    tag_201:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2642:2736  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6593:6937  function getAIScore(uint256 proposalId) external view override validProposalId(proposalId) returns (... */\n    tag_58:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6702:6715  uint256 score */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6725:6752  string memory justification */\n      0x60\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6762:6773  bool exists */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6672:6682  proposalId */\n      dup4\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2101:2102  0 */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2088:2098  proposalId */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2088:2102  proposalId > 0 */\n      gt\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2080:2126  require(proposalId > 0, \"Invalid proposal ID\") */\n      tag_204\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap1\n      tag_206\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_204:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6790:6819  AIScoreData storage scoreData */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6822:6842  aiScores[proposalId] */\n      dup6\n      dup2\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6822:6830  aiScores */\n      0x03\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6822:6842  aiScores[proposalId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6860:6882  scoreData.overallScore */\n      0x01\n      dup2\n      add\n      sload\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6913:6929  scoreData.exists */\n      0x05\n      dup3\n      add\n      sload\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6884:6911  scoreData.justificationIPFS */\n      0x02\n      dup4\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6852:6930  return (scoreData.overallScore, scoreData.justificationIPFS, scoreData.exists) */\n      dup1\n      sload\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6884:6911  scoreData.justificationIPFS */\n      swap1\n      swap2\n      shl(0xa0, 0x01)\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6913:6929  scoreData.exists */\n      swap1\n      div\n      0xff\n      and\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6884:6911  scoreData.justificationIPFS */\n      dup3\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6852:6930  return (scoreData.overallScore, scoreData.justificationIPFS, scoreData.exists) */\n      tag_208\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_210\n      swap1\n      tag_209\n      jump\t// in\n    tag_210:\n      dup1\n      iszero\n      tag_211\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_212\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_211)\n    tag_212:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_213:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_213\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_211:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6593:6937  function getAIScore(uint256 proposalId) external view override validProposalId(proposalId) returns (... */\n      pop\n      swap2\n      swap4\n      swap1\n      swap3\n      pop\n      jump\t// out\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":5461:6349  function updateAIScore(... */\n    tag_74:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1820:1830  msg.sender */\n      caller\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1802:1831  authorizedOracles[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1802:1819  authorizedOracles */\n      0x04\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1802:1831  authorizedOracles[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1794:1857  require(authorizedOracles[msg.sender], \"Not authorized oracle\") */\n      tag_216\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13087:13089   */\n      0x20\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1794:1857  require(authorizedOracles[msg.sender], \"Not authorized oracle\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13069:13090   */\n      mstore\n        /* \"#utility.yul\":13126:13128   */\n      0x15\n        /* \"#utility.yul\":13106:13124   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13099:13129   */\n      mstore\n      shl(0x58, 0x4e6f7420617574686f72697a6564206f7261636c65)\n        /* \"#utility.yul\":13145:13163   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13138:13189   */\n      mstore\n        /* \"#utility.yul\":13206:13224   */\n      0x64\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1794:1857  require(authorizedOracles[msg.sender], \"Not authorized oracle\") */\n      tag_205\n        /* \"#utility.yul\":12885:13230   */\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1794:1857  require(authorizedOracles[msg.sender], \"Not authorized oracle\") */\n    tag_216:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":5664:5674  proposalId */\n      dup4\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2101:2102  0 */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2088:2098  proposalId */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2088:2102  proposalId > 0 */\n      gt\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2080:2126  require(proposalId > 0, \"Invalid proposal ID\") */\n      tag_220\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap1\n      tag_206\n      jump\t// in\n    tag_220:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":5687:5695  newScore */\n      dup4\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1296:1299  100 */\n      0x64\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1956:1961  score */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1956:1974  score <= MAX_SCORE */\n      gt\n      iszero\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1926:1997  require(score >= MIN_SCORE && score <= MAX_SCORE, \"Score out of range\") */\n      tag_224\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13437:13439   */\n      0x20\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1926:1997  require(score >= MIN_SCORE && score <= MAX_SCORE, \"Score out of range\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13419:13440   */\n      mstore\n        /* \"#utility.yul\":13476:13478   */\n      0x12\n        /* \"#utility.yul\":13456:13474   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13449:13479   */\n      mstore\n      shl(0x70, 0x53636f7265206f7574206f662072616e6765)\n        /* \"#utility.yul\":13495:13513   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13488:13536   */\n      mstore\n        /* \"#utility.yul\":13553:13571   */\n      0x64\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1926:1997  require(score >= MIN_SCORE && score <= MAX_SCORE, \"Score out of range\") */\n      tag_205\n        /* \"#utility.yul\":13235:13577   */\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1926:1997  require(score >= MIN_SCORE && score <= MAX_SCORE, \"Score out of range\") */\n    tag_224:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_228\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_229\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_228:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":5729:5749  aiScores[proposalId] */\n      0x00\n      dup7\n      dup2\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":5729:5737  aiScores */\n      0x03\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":5729:5749  aiScores[proposalId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":5729:5756  aiScores[proposalId].exists */\n      0x05\n      add\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":5721:5781  require(aiScores[proposalId].exists, \"Score does not exist\") */\n      tag_231\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap1\n      tag_233\n      jump\t// in\n    tag_231:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":5799:5819  aiScores[proposalId] */\n      0x00\n      dup7\n      dup2\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":5799:5807  aiScores */\n      0x03\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":5799:5819  aiScores[proposalId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":5799:5826  aiScores[proposalId].oracle */\n      0x05\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":5830:5840  msg.sender */\n      caller\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":5799:5840  aiScores[proposalId].oracle == msg.sender */\n      eq\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":5791:5864  require(aiScores[proposalId].oracle == msg.sender, \"Not original oracle\") */\n      tag_234\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14133:14135   */\n      0x20\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":5791:5864  require(aiScores[proposalId].oracle == msg.sender, \"Not original oracle\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14115:14136   */\n      mstore\n        /* \"#utility.yul\":14172:14174   */\n      0x13\n        /* \"#utility.yul\":14152:14170   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14145:14175   */\n      mstore\n      shl(0x68, 0x4e6f74206f726967696e616c206f7261636c65)\n        /* \"#utility.yul\":14191:14209   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14184:14233   */\n      mstore\n        /* \"#utility.yul\":14250:14268   */\n      0x64\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":5791:5864  require(aiScores[proposalId].oracle == msg.sender, \"Not original oracle\") */\n      tag_205\n        /* \"#utility.yul\":13931:14274   */\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":5791:5864  require(aiScores[proposalId].oracle == msg.sender, \"Not original oracle\") */\n    tag_234:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":5914:5934  aiScores[proposalId] */\n      0x00\n      dup7\n      dup2\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":5914:5922  aiScores */\n      0x03\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":5914:5934  aiScores[proposalId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":5914:5944  aiScores[proposalId].timestamp */\n      0x04\n      add\n      sload\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":5914:5968  aiScores[proposalId].timestamp + SCORE_VALIDITY_PERIOD */\n      tag_237\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1353:1360  30 days */\n      0x278d00\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":5914:5968  aiScores[proposalId].timestamp + SCORE_VALIDITY_PERIOD */\n      tag_238\n      jump\t// in\n    tag_237:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":5895:5910  block.timestamp */\n      timestamp\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":5895:5968  block.timestamp <= aiScores[proposalId].timestamp + SCORE_VALIDITY_PERIOD */\n      gt\n      iszero\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":5874:6015  require(... */\n      tag_239\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14743:14745   */\n      0x20\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":5874:6015  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14725:14746   */\n      mstore\n        /* \"#utility.yul\":14782:14784   */\n      0x15\n        /* \"#utility.yul\":14762:14780   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14755:14785   */\n      mstore\n      shl(0x5a, 0x155c19185d19481c195c9a5bd908195e1c1a5c9959)\n        /* \"#utility.yul\":14801:14819   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14794:14845   */\n      mstore\n        /* \"#utility.yul\":14862:14880   */\n      0x64\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":5874:6015  require(... */\n      tag_205\n        /* \"#utility.yul\":14541:14886   */\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":5874:6015  require(... */\n    tag_239:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6056:6057  0 */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6039:6045  reason */\n      dup4\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6033:6053  bytes(reason).length */\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6033:6057  bytes(reason).length > 0 */\n      gt\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6025:6084  require(bytes(reason).length > 0, \"Update reason required\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15093:15095   */\n      0x20\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6025:6084  require(bytes(reason).length > 0, \"Update reason required\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15075:15096   */\n      mstore\n        /* \"#utility.yul\":15132:15134   */\n      0x16\n        /* \"#utility.yul\":15112:15130   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15105:15135   */\n      mstore\n      shl(0x52, 0x155c19185d19481c99585cdbdb881c995c5d5a5c9959)\n        /* \"#utility.yul\":15151:15169   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15144:15196   */\n      mstore\n        /* \"#utility.yul\":15213:15231   */\n      0x64\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6025:6084  require(bytes(reason).length > 0, \"Update reason required\") */\n      tag_205\n        /* \"#utility.yul\":14891:15237   */\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6025:6084  require(bytes(reason).length > 0, \"Update reason required\") */\n    tag_242:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6103:6123  aiScores[proposalId] */\n      0x00\n      dup7\n      dup2\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6103:6111  aiScores */\n      0x03\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6103:6123  aiScores[proposalId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6103:6136  aiScores[proposalId].overallScore */\n      0x01\n      dup2\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6103:6147  aiScores[proposalId].overallScore = newScore */\n      dup7\n      swap1\n      sstore\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6157:6195  aiScores[proposalId].justificationIPFS */\n      0x02\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6157:6218  aiScores[proposalId].justificationIPFS = newJustificationIPFS */\n      tag_245\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6198:6218  newJustificationIPFS */\n      dup6\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6157:6195  aiScores[proposalId].justificationIPFS */\n      dup3\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6157:6218  aiScores[proposalId].justificationIPFS = newJustificationIPFS */\n      tag_246\n      jump\t// in\n    tag_245:\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6228:6248  aiScores[proposalId] */\n      0x00\n      dup7\n      dup2\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6228:6236  aiScores */\n      0x03\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6228:6248  aiScores[proposalId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6261:6276  block.timestamp */\n      timestamp\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6228:6258  aiScores[proposalId].timestamp */\n      0x04\n      swap1\n      swap2\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6228:6276  aiScores[proposalId].timestamp = block.timestamp */\n      sstore\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6300:6342  ScoreUpdated(proposalId, newScore, reason) */\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6237:6247  proposalId */\n      dup7\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6300:6342  ScoreUpdated(proposalId, newScore, reason) */\n      0xd3e8dbbe8ff60a1fae1e5f88e71f27270ed38badc7b26e19922ed94fd12f5fe9\n      swap1\n      tag_247\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6325:6333  newScore */\n      dup9\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6335:6341  reason */\n      dup8\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":6300:6342  ScoreUpdated(proposalId, newScore, reason) */\n      tag_248\n      jump\t// in\n    tag_247:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2136:2137  _ */\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1867:1868  _ */\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":5461:6349  function updateAIScore(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3851:3858  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_251\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_252\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      tag_254\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4317:4321  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4323:4330  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4316  _grantRole */\n      tag_255\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      jump\t// in\n    tag_254:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n      tag_259\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5454:5484  AccessControlBadConfirmation() */\n      mload(0x40)\n      shl(0xe1, 0x334bd919)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      tag_260\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5517:5521  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5523:5541  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5516  _revokeRole */\n      tag_261\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_260:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10710:10786  function unpause() external onlyRole(ADMIN_ROLE) {... */\n    tag_91:\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_263\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_252\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_263:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10769:10779  _unpause() */\n      tag_265\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10769:10777  _unpause */\n      tag_266\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10769:10779  _unpause() */\n      jump\t// in\n    tag_265:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10710:10786  function unpause() external onlyRole(ADMIN_ROLE) {... */\n      pop\n      jump\t// out\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1352:1573  function revokeMultipleRoles(address account, bytes32[] memory roles) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_102:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_268\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_252\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_268:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1475:1484  uint256 i */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1470:1567  for (uint256 i = 0; i < roles.length; i++) {... */\n    tag_270:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1494:1499  roles */\n      dup3\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1494:1506  roles.length */\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1490:1491  i */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1490:1506  i < roles.length */\n      lt\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1470:1567  for (uint256 i = 0; i < roles.length; i++) {... */\n      iszero\n      tag_254\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1527:1556  revokeRole(roles[i], account) */\n      tag_273\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1538:1543  roles */\n      dup4\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1544:1545  i */\n      dup3\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1538:1546  roles[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_275\n      jumpi\n      tag_275\n      tag_276\n      jump\t// in\n    tag_275:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1548:1555  account */\n      dup6\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1527:1537  revokeRole */\n      tag_178\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1527:1556  revokeRole(roles[i], account) */\n      jump\t// in\n    tag_273:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1508:1511  i++ */\n      dup1\n      tag_277\n      dup2\n      tag_278\n      jump\t// in\n    tag_277:\n      swap2\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1470:1567  for (uint256 i = 0; i < roles.length; i++) {... */\n      jump(tag_270)\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1816:2087  function hasAnyRole(address account, bytes32[] memory roles) external view returns (bool) {... */\n    tag_113:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1900:1904  bool */\n      0x00\n      dup1\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1916:2059  for (uint256 i = 0; i < roles.length; i++) {... */\n    tag_281:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1940:1945  roles */\n      dup3\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1940:1952  roles.length */\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1936:1937  i */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1936:1952  i < roles.length */\n      lt\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1916:2059  for (uint256 i = 0; i < roles.length; i++) {... */\n      iszero\n      tag_282\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1977:2003  hasRole(roles[i], account) */\n      tag_284\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1985:1990  roles */\n      dup4\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1991:1992  i */\n      dup3\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1985:1993  roles[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_286\n      jumpi\n      tag_286\n      tag_276\n      jump\t// in\n    tag_286:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1995:2002  account */\n      dup6\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1977:1984  hasRole */\n      tag_133\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1977:2003  hasRole(roles[i], account) */\n      jump\t// in\n    tag_284:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1973:2049  if (hasRole(roles[i], account)) {... */\n      iszero\n      tag_287\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2030:2034  true */\n      0x01\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2023:2034  return true */\n      swap2\n      pop\n      pop\n      jump(tag_201)\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1973:2049  if (hasRole(roles[i], account)) {... */\n    tag_287:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1954:1957  i++ */\n      dup1\n      tag_288\n      dup2\n      tag_278\n      jump\t// in\n    tag_288:\n      swap2\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1916:2059  for (uint256 i = 0; i < roles.length; i++) {... */\n      jump(tag_281)\n    tag_282:\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2075:2080  false */\n      0x00\n      swap4\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1816:2087  function hasAnyRole(address account, bytes32[] memory roles) external view returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3054:5175  function submitAIScore(... */\n    tag_118:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1820:1830  msg.sender */\n      caller\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1802:1831  authorizedOracles[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1802:1819  authorizedOracles */\n      0x04\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1802:1831  authorizedOracles[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1794:1857  require(authorizedOracles[msg.sender], \"Not authorized oracle\") */\n      tag_290\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13087:13089   */\n      0x20\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1794:1857  require(authorizedOracles[msg.sender], \"Not authorized oracle\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13069:13090   */\n      mstore\n        /* \"#utility.yul\":13126:13128   */\n      0x15\n        /* \"#utility.yul\":13106:13124   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13099:13129   */\n      mstore\n      shl(0x58, 0x4e6f7420617574686f72697a6564206f7261636c65)\n        /* \"#utility.yul\":13145:13163   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13138:13189   */\n      mstore\n        /* \"#utility.yul\":13206:13224   */\n      0x64\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1794:1857  require(authorizedOracles[msg.sender], \"Not authorized oracle\") */\n      tag_205\n        /* \"#utility.yul\":12885:13230   */\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1794:1857  require(authorizedOracles[msg.sender], \"Not authorized oracle\") */\n    tag_290:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3316:3326  proposalId */\n      dup5\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2101:2102  0 */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2088:2098  proposalId */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2088:2102  proposalId > 0 */\n      gt\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2080:2126  require(proposalId > 0, \"Invalid proposal ID\") */\n      tag_293\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap1\n      tag_206\n      jump\t// in\n    tag_293:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3339:3351  overallScore */\n      dup5\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1296:1299  100 */\n      0x64\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1956:1961  score */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1956:1974  score <= MAX_SCORE */\n      gt\n      iszero\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1926:1997  require(score >= MIN_SCORE && score <= MAX_SCORE, \"Score out of range\") */\n      tag_297\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13437:13439   */\n      0x20\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1926:1997  require(score >= MIN_SCORE && score <= MAX_SCORE, \"Score out of range\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13419:13440   */\n      mstore\n        /* \"#utility.yul\":13476:13478   */\n      0x12\n        /* \"#utility.yul\":13456:13474   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13449:13479   */\n      mstore\n      shl(0x70, 0x53636f7265206f7574206f662072616e6765)\n        /* \"#utility.yul\":13495:13513   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13488:13536   */\n      mstore\n        /* \"#utility.yul\":13553:13571   */\n      0x64\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1926:1997  require(score >= MIN_SCORE && score <= MAX_SCORE, \"Score out of range\") */\n      tag_205\n        /* \"#utility.yul\":13235:13577   */\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1926:1997  require(score >= MIN_SCORE && score <= MAX_SCORE, \"Score out of range\") */\n    tag_297:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_300\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_229\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_300:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_302\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_303\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_302:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3432:3433  0 */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3404:3421  justificationIPFS */\n      dup6\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3398:3429  bytes(justificationIPFS).length */\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3398:3433  bytes(justificationIPFS).length > 0 */\n      gt\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3390:3465  require(bytes(justificationIPFS).length > 0, \"Justification IPFS required\") */\n      tag_305\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":18216:18218   */\n      0x20\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3390:3465  require(bytes(justificationIPFS).length > 0, \"Justification IPFS required\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18198:18219   */\n      mstore\n        /* \"#utility.yul\":18255:18257   */\n      0x1b\n        /* \"#utility.yul\":18235:18253   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18228:18258   */\n      mstore\n        /* \"#utility.yul\":18294:18323   */\n      0x4a757374696669636174696f6e20495046532072657175697265640000000000\n        /* \"#utility.yul\":18274:18292   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18267:18324   */\n      mstore\n        /* \"#utility.yul\":18341:18359   */\n      0x64\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3390:3465  require(bytes(justificationIPFS).length > 0, \"Justification IPFS required\") */\n      tag_205\n        /* \"#utility.yul\":18014:18365   */\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3390:3465  require(bytes(justificationIPFS).length > 0, \"Justification IPFS required\") */\n    tag_305:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3483:3498  supportedModels */\n      0x05\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3499:3511  modelVersion */\n      dup5\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3483:3512  supportedModels[modelVersion] */\n      mload(0x40)\n      tag_308\n      swap2\n      swap1\n      tag_309\n      jump\t// in\n    tag_308:\n      swap1\n      dup2\n      mstore\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3475:3537  require(supportedModels[modelVersion], \"Unsupported AI model\") */\n      tag_310\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":18866:18868   */\n      0x20\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3475:3537  require(supportedModels[modelVersion], \"Unsupported AI model\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":18848:18869   */\n      mstore\n        /* \"#utility.yul\":18905:18907   */\n      0x14\n        /* \"#utility.yul\":18885:18903   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":18878:18908   */\n      mstore\n      shl(0x62, 0x155b9cdd5c1c1bdc9d1959081052481b5bd9195b)\n        /* \"#utility.yul\":18924:18942   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":18917:18967   */\n      mstore\n        /* \"#utility.yul\":18984:19002   */\n      0x64\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3475:3537  require(supportedModels[modelVersion], \"Unsupported AI model\") */\n      tag_205\n        /* \"#utility.yul\":18664:19008   */\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3475:3537  require(supportedModels[modelVersion], \"Unsupported AI model\") */\n    tag_310:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3556:3576  aiScores[proposalId] */\n      0x00\n      dup8\n      dup2\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3556:3564  aiScores */\n      0x03\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3556:3576  aiScores[proposalId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3556:3583  aiScores[proposalId].exists */\n      0x05\n      add\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3555:3583  !aiScores[proposalId].exists */\n      iszero\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3547:3608  require(!aiScores[proposalId].exists, \"Score already exists\") */\n      tag_313\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":19215:19217   */\n      0x20\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3547:3608  require(!aiScores[proposalId].exists, \"Score already exists\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":19197:19218   */\n      mstore\n        /* \"#utility.yul\":19254:19256   */\n      0x14\n        /* \"#utility.yul\":19234:19252   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":19227:19257   */\n      mstore\n      shl(0x60, 0x53636f726520616c726561647920657869737473)\n        /* \"#utility.yul\":19273:19291   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":19266:19316   */\n      mstore\n        /* \"#utility.yul\":19333:19351   */\n      0x64\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3547:3608  require(!aiScores[proposalId].exists, \"Score already exists\") */\n      tag_205\n        /* \"#utility.yul\":19013:19357   */\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3547:3608  require(!aiScores[proposalId].exists, \"Score already exists\") */\n    tag_313:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3713:3716  100 */\n      0x64\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3685:3694  breakdown */\n      dup4\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3685:3709  breakdown.ecosystemScore */\n      0x00\n      add\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3685:3716  breakdown.ecosystemScore <= 100 */\n      0xff\n      and\n      gt\n      iszero\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3685:3765  breakdown.ecosystemScore <= 100 &&... */\n      dup1\n      iszero\n      tag_316\n      jumpi\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3762:3765  100 */\n      0x64\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3732:3741  breakdown */\n      dup4\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3732:3758  breakdown.feasibilityScore */\n      0x20\n      add\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3732:3765  breakdown.feasibilityScore <= 100 */\n      0xff\n      and\n      gt\n      iszero\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3685:3765  breakdown.ecosystemScore <= 100 &&... */\n    tag_316:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3685:3807  breakdown.ecosystemScore <= 100 &&... */\n      dup1\n      iszero\n      tag_317\n      jumpi\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3804:3807  100 */\n      0x64\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3781:3790  breakdown */\n      dup4\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3781:3800  breakdown.riskScore */\n      0x40\n      add\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3781:3807  breakdown.riskScore <= 100 */\n      0xff\n      and\n      gt\n      iszero\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3685:3807  breakdown.ecosystemScore <= 100 &&... */\n    tag_317:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3685:3849  breakdown.ecosystemScore <= 100 &&... */\n      dup1\n      iszero\n      tag_318\n      jumpi\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3846:3849  100 */\n      0x64\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3823:3832  breakdown */\n      dup4\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3823:3842  breakdown.teamScore */\n      0x60\n      add\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3823:3849  breakdown.teamScore <= 100 */\n      0xff\n      and\n      gt\n      iszero\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3685:3849  breakdown.ecosystemScore <= 100 &&... */\n    tag_318:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3685:3897  breakdown.ecosystemScore <= 100 &&... */\n      dup1\n      iszero\n      tag_319\n      jumpi\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3894:3897  100 */\n      0x64\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3865:3874  breakdown */\n      dup4\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3865:3890  breakdown.innovationScore */\n      0x80\n      add\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3865:3897  breakdown.innovationScore <= 100 */\n      0xff\n      and\n      gt\n      iszero\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3685:3897  breakdown.ecosystemScore <= 100 &&... */\n    tag_319:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3664:3947  require(... */\n      tag_320\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":19564:19566   */\n      0x20\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3664:3947  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":19546:19567   */\n      mstore\n        /* \"#utility.yul\":19603:19605   */\n      0x18\n        /* \"#utility.yul\":19583:19601   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":19576:19606   */\n      mstore\n        /* \"#utility.yul\":19642:19668   */\n      0x496e76616c696420627265616b646f776e2073636f7265730000000000000000\n        /* \"#utility.yul\":19622:19640   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":19615:19669   */\n      mstore\n        /* \"#utility.yul\":19686:19704   */\n      0x64\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3664:3947  require(... */\n      tag_205\n        /* \"#utility.yul\":19362:19710   */\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3664:3947  require(... */\n    tag_320:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4315:4329  scoringWeights */\n      0x06\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4315:4340  scoringWeights.innovation */\n      sload\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4287:4312  breakdown.innovationScore */\n      0x80\n      dup5\n      add\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3958:3981  uint256 calculatedScore */\n      0x00\n      swap2\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4354:4357  100 */\n      0x64\n      swap2\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4287:4340  breakdown.innovationScore * scoringWeights.innovation */\n      tag_323\n      swap2\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4315:4340  scoringWeights.innovation */\n      0x0100000000\n      swap1\n      div\n      0xff\n      and\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4287:4340  breakdown.innovationScore * scoringWeights.innovation */\n      tag_324\n      jump\t// in\n    tag_323:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4241:4255  scoringWeights */\n      0x06\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4241:4270  scoringWeights.teamReputation */\n      sload\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4219:4238  breakdown.teamScore */\n      0x60\n      dup8\n      add\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4219:4270  breakdown.teamScore * scoringWeights.teamReputation */\n      tag_325\n      swap2\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4241:4270  scoringWeights.teamReputation */\n      0x01000000\n      swap1\n      div\n      0xff\n      and\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4219:4270  breakdown.teamScore * scoringWeights.teamReputation */\n      tag_324\n      jump\t// in\n    tag_325:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4173:4187  scoringWeights */\n      0x06\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4173:4202  scoringWeights.riskAssessment */\n      sload\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4151:4170  breakdown.riskScore */\n      0x40\n      dup9\n      add\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4151:4202  breakdown.riskScore * scoringWeights.riskAssessment */\n      tag_326\n      swap2\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4173:4202  scoringWeights.riskAssessment */\n      0x010000\n      swap1\n      div\n      0xff\n      and\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4151:4202  breakdown.riskScore * scoringWeights.riskAssessment */\n      tag_324\n      jump\t// in\n    tag_326:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4108:4122  scoringWeights */\n      0x06\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4108:4134  scoringWeights.feasibility */\n      sload\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4079:4105  breakdown.feasibilityScore */\n      0x20\n      dup10\n      add\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4079:4134  breakdown.feasibilityScore * scoringWeights.feasibility */\n      tag_327\n      swap2\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4108:4134  scoringWeights.feasibility */\n      0x0100\n      swap1\n      div\n      0xff\n      and\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4079:4134  breakdown.feasibilityScore * scoringWeights.feasibility */\n      tag_324\n      jump\t// in\n    tag_327:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4026:4040  scoringWeights */\n      0x06\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4026:4062  scoringWeights.ecosystemContribution */\n      sload\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3999:4023  breakdown.ecosystemScore */\n      dup10\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3999:4062  breakdown.ecosystemScore * scoringWeights.ecosystemContribution */\n      tag_328\n      swap2\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4026:4062  scoringWeights.ecosystemContribution */\n      0xff\n      and\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3999:4062  breakdown.ecosystemScore * scoringWeights.ecosystemContribution */\n      tag_324\n      jump\t// in\n    tag_328:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3998:4135  (breakdown.ecosystemScore * scoringWeights.ecosystemContribution) +... */\n      tag_329\n      swap2\n      swap1\n      tag_330\n      jump\t// in\n    tag_329:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3998:4203  (breakdown.ecosystemScore * scoringWeights.ecosystemContribution) +... */\n      tag_331\n      swap2\n      swap1\n      tag_330\n      jump\t// in\n    tag_331:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3998:4271  (breakdown.ecosystemScore * scoringWeights.ecosystemContribution) +... */\n      tag_332\n      swap2\n      swap1\n      tag_330\n      jump\t// in\n    tag_332:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3998:4341  (breakdown.ecosystemScore * scoringWeights.ecosystemContribution) +... */\n      tag_333\n      swap2\n      swap1\n      tag_330\n      jump\t// in\n    tag_333:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3984:4357  (... */\n      tag_334\n      swap2\n      swap1\n      tag_335\n      jump\t// in\n    tag_334:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3958:4357  uint256 calculatedScore = (... */\n      0xff\n      and\n      swap1\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4405:4424  calculatedScore - 5 */\n      tag_336\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4423:4424  5 */\n      0x05\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3958:4357  uint256 calculatedScore = (... */\n      dup3\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4405:4424  calculatedScore - 5 */\n      tag_337\n      jump\t// in\n    tag_336:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4389:4401  overallScore */\n      dup8\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4389:4424  overallScore >= calculatedScore - 5 */\n      lt\n      iszero\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4389:4463  overallScore >= calculatedScore - 5 && overallScore <= calculatedScore + 5 */\n      dup1\n      iszero\n      tag_338\n      jumpi\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4444:4463  calculatedScore + 5 */\n      tag_339\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4444:4459  calculatedScore */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4462:4463  5 */\n      0x05\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4444:4463  calculatedScore + 5 */\n      tag_238\n      jump\t// in\n    tag_339:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4428:4440  overallScore */\n      dup8\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4428:4463  overallScore <= calculatedScore + 5 */\n      gt\n      iszero\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4389:4463  overallScore >= calculatedScore - 5 && overallScore <= calculatedScore + 5 */\n    tag_338:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4368:4522  require(... */\n      tag_340\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":20700:20702   */\n      0x20\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4368:4522  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":20682:20703   */\n      mstore\n        /* \"#utility.yul\":20739:20741   */\n      0x21\n        /* \"#utility.yul\":20719:20737   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":20712:20742   */\n      mstore\n        /* \"#utility.yul\":20778:20812   */\n      0x53636f726520696e636f6e73697374656e74207769746820627265616b646f77\n        /* \"#utility.yul\":20758:20776   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":20751:20813   */\n      mstore\n      shl(0xf9, 0x37)\n        /* \"#utility.yul\":20829:20847   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":20822:20853   */\n      mstore\n        /* \"#utility.yul\":20870:20889   */\n      0x84\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4368:4522  require(... */\n      tag_205\n        /* \"#utility.yul\":20498:20895   */\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4368:4522  require(... */\n    tag_340:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4556:4877  AIScoreData({... */\n      0x40\n      dup1\n      mload\n      0x0100\n      dup2\n      add\n      dup3\n      mstore\n      dup10\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      dup11\n      dup2\n      mstore\n      dup3\n      dup5\n      add\n      dup11\n      dup2\n      mstore\n      0x60\n      dup5\n      add\n      dup11\n      swap1\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4759:4774  block.timestamp */\n      timestamp\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4556:4877  AIScoreData({... */\n      0x80\n      dup6\n      add\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4796:4806  msg.sender */\n      caller\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4556:4877  AIScoreData({... */\n      0xa0\n      dup6\n      add\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4828:4832  true */\n      0x01\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4556:4877  AIScoreData({... */\n      0xc0\n      dup6\n      add\n      dup2\n      swap1\n      mstore\n      0xe0\n      dup6\n      add\n      dup11\n      swap1\n      mstore\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4533:4553  aiScores[proposalId] */\n      dup15\n      dup2\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4533:4541  aiScores */\n      0x03\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4533:4553  aiScores[proposalId] */\n      swap1\n      swap5\n      mstore\n      swap5\n      swap1\n      swap3\n      keccak256\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4533:4877  aiScores[proposalId] = AIScoreData({... */\n      dup4\n      mload\n      dup2\n      sstore\n      swap1\n      mload\n      swap4\n      dup2\n      add\n      swap4\n      swap1\n      swap4\n      sstore\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4556:4877  AIScoreData({... */\n      swap1\n      swap2\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4533:4553  aiScores[proposalId] */\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4533:4877  aiScores[proposalId] = AIScoreData({... */\n      0x02\n      dup3\n      add\n      swap1\n      tag_343\n      swap1\n      dup3\n      tag_246\n      jump\t// in\n    tag_343:\n      pop\n      0x60\n      dup3\n      add\n      mload\n      0x03\n      dup3\n      add\n      swap1\n      tag_344\n      swap1\n      dup3\n      tag_246\n      jump\t// in\n    tag_344:\n      pop\n      0x80\n      dup3\n      dup2\n      add\n      mload\n      0x04\n      dup4\n      add\n      sstore\n      0xa0\n      dup4\n      add\n      mload\n      0x05\n      dup4\n      add\n      dup1\n      sload\n      0xc0\n      dup7\n      add\n      mload\n      iszero\n      iszero\n      shl(0xa0, 0x01)\n      mul\n      not(sub(shl(0xa8, 0x01), 0x01))\n      swap1\n      swap2\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      0xe0\n      swap1\n      swap3\n      add\n      mload\n      dup1\n      mload\n      0x06\n      swap1\n      swap3\n      add\n      dup1\n      sload\n      0x20\n      dup4\n      add\n      mload\n      0x40\n      dup5\n      add\n      mload\n      0x60\n      dup6\n      add\n      mload\n      swap5\n      swap1\n      swap7\n      add\n      mload\n      0xff\n      swap1\n      dup2\n      and\n      0x0100000000\n      mul\n      not(0xff00000000)\n      swap6\n      dup3\n      and\n      0x01000000\n      mul\n      not(0xff000000)\n      swap9\n      dup4\n      and\n      0x010000\n      mul\n      swap9\n      swap1\n      swap9\n      and\n      not(0xffff0000)\n      swap4\n      dup4\n      and\n      0x0100\n      mul\n      not(0xffff)\n      swap1\n      swap6\n      and\n      swap8\n      swap1\n      swap3\n      and\n      swap7\n      swap1\n      swap7\n      or\n      swap3\n      swap1\n      swap3\n      or\n      and\n      or\n      swap4\n      swap1\n      swap4\n      or\n      and\n      or\n      swap1\n      sstore\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4896:4916  totalScoresSubmitted */\n      0x07\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4896:4918  totalScoresSubmitted++ */\n      dup1\n      sload\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4533:4877  aiScores[proposalId] = AIScoreData({... */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4896:4918  totalScoresSubmitted++ */\n      tag_345\n      dup4\n      tag_278\n      jump\t// in\n    tag_345:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4945:4955  msg.sender */\n      caller\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4928:4956  oracleScoreCount[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4928:4944  oracleScoreCount */\n      0x08\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4928:4956  oracleScoreCount[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4928:4958  oracleScoreCount[msg.sender]++ */\n      dup1\n      sload\n      swap2\n      tag_346\n      dup4\n      tag_278\n      jump\t// in\n    tag_346:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":5119:5129  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4982:5168  AIScoreSubmitted(... */\n      and\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":5012:5022  proposalId */\n      dup9\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4982:5168  AIScoreSubmitted(... */\n      0x09e8ad66e4736435405704d301d344e9454f286d3feeb2036b1adc6f4900ccbc\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":5036:5048  overallScore */\n      dup10\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":5062:5079  justificationIPFS */\n      dup10\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":5093:5105  modelVersion */\n      dup10\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":5143:5158  block.timestamp */\n      timestamp\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":4982:5168  AIScoreSubmitted(... */\n      mload(0x40)\n      tag_347\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_348\n      jump\t// in\n    tag_347:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3380:5175  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_349\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n    tag_349:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2136:2137  _ */\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":1867:1868  _ */\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":3054:5175  function submitAIScore(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10632:10704  function pause() external onlyRole(ADMIN_ROLE) {... */\n    tag_127:\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_352\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_252\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_352:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10689:10697  _pause() */\n      tag_265\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10689:10695  _pause */\n      tag_355\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10689:10697  _pause() */\n      jump\t// in\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":960:1179  function grantMultipleRoles(address account, bytes32[] memory roles) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_357\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_252\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_357:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1082:1091  uint256 i */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1077:1173  for (uint256 i = 0; i < roles.length; i++) {... */\n    tag_359:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1101:1106  roles */\n      dup3\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1101:1113  roles.length */\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1097:1098  i */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1097:1113  i < roles.length */\n      lt\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1077:1173  for (uint256 i = 0; i < roles.length; i++) {... */\n      iszero\n      tag_254\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1134:1162  grantRole(roles[i], account) */\n      tag_362\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1144:1149  roles */\n      dup4\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1150:1151  i */\n      dup3\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1144:1152  roles[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_364\n      jumpi\n      tag_364\n      tag_276\n      jump\t// in\n    tag_364:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1154:1161  account */\n      dup6\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1134:1143  grantRole */\n      tag_83\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1134:1162  grantRole(roles[i], account) */\n      jump\t// in\n    tag_362:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1115:1118  i++ */\n      dup1\n      tag_365\n      dup2\n      tag_278\n      jump\t// in\n    tag_365:\n      swap2\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1077:1173  for (uint256 i = 0; i < roles.length; i++) {... */\n      jump(tag_359)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_133:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2907:2911  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":7901:8065  function hasAIScore(uint256 proposalId) external view override validProposalId(proposalId) returns (bool exists) {... */\n    tag_137:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":8001:8012  bool exists */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":7980:7990  proposalId */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2101:2102  0 */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2088:2098  proposalId */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2088:2102  proposalId > 0 */\n      gt\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2080:2126  require(proposalId > 0, \"Invalid proposal ID\") */\n      tag_368\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap1\n      tag_206\n      jump\t// in\n    tag_368:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":8031:8051  aiScores[proposalId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":8031:8039  aiScores */\n      0x03\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":8031:8051  aiScores[proposalId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":8031:8058  aiScores[proposalId].exists */\n      0x05\n      add\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n      swap2\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2136:2137  _ */\n    tag_370:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":7901:8065  function hasAIScore(uint256 proposalId) external view override validProposalId(proposalId) returns (bool exists) {... */\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2250:2610  function getRoleCount(address account) external view returns (uint256 roleCount) {... */\n    tag_150:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2312:2329  uint256 roleCount */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2341:2366  bytes32[] memory allRoles */\n      dup1\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2369:2382  getAllRoles() */\n      tag_372\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2369:2380  getAllRoles */\n      tag_192\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2369:2382  getAllRoles() */\n      jump\t// in\n    tag_372:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2341:2382  bytes32[] memory allRoles = getAllRoles() */\n      swap1\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2392:2405  uint256 count */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2433:2442  uint256 i */\n      dup1\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2428:2573  for (uint256 i = 0; i < allRoles.length; i++) {... */\n    tag_373:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2452:2460  allRoles */\n      dup3\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2452:2467  allRoles.length */\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2448:2449  i */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2448:2467  i < allRoles.length */\n      lt\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2428:2573  for (uint256 i = 0; i < allRoles.length; i++) {... */\n      iszero\n      tag_374\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2492:2521  hasRole(allRoles[i], account) */\n      tag_376\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2500:2508  allRoles */\n      dup4\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2509:2510  i */\n      dup3\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2500:2511  allRoles[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_378\n      jumpi\n      tag_378\n      tag_276\n      jump\t// in\n    tag_378:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2513:2520  account */\n      dup7\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2492:2499  hasRole */\n      tag_133\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2492:2521  hasRole(allRoles[i], account) */\n      jump\t// in\n    tag_376:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2488:2563  if (hasRole(allRoles[i], account)) {... */\n      iszero\n      tag_379\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2541:2548  count++ */\n      dup2\n      tag_380\n      dup2\n      tag_278\n      jump\t// in\n    tag_380:\n      swap3\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2488:2563  if (hasRole(allRoles[i], account)) {... */\n    tag_379:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2469:2472  i++ */\n      dup1\n      tag_381\n      dup2\n      tag_278\n      jump\t// in\n    tag_381:\n      swap2\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2428:2573  for (uint256 i = 0; i < allRoles.length; i++) {... */\n      jump(tag_373)\n    tag_374:\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2598:2603  count */\n      swap4\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2250:2610  function getRoleCount(address account) external view returns (uint256 roleCount) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10249:10626  function removeScore(uint256 proposalId, string memory reason) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_383\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_252\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_383:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10368:10388  aiScores[proposalId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10368:10376  aiScores */\n      0x03\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10368:10388  aiScores[proposalId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10368:10395  aiScores[proposalId].exists */\n      0x05\n      add\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10360:10420  require(aiScores[proposalId].exists, \"Score does not exist\") */\n      tag_385\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap1\n      tag_233\n      jump\t// in\n    tag_385:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10461:10462  0 */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10444:10450  reason */\n      dup3\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10438:10458  bytes(reason).length */\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10438:10462  bytes(reason).length > 0 */\n      gt\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10430:10482  require(bytes(reason).length > 0, \"Reason required\") */\n      tag_387\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":21634:21636   */\n      0x20\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10430:10482  require(bytes(reason).length > 0, \"Reason required\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":21616:21637   */\n      mstore\n        /* \"#utility.yul\":21673:21675   */\n      0x0f\n        /* \"#utility.yul\":21653:21671   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":21646:21676   */\n      mstore\n      shl(0x8a, 0x1499585cdbdb881c995c5d5a5c9959)\n        /* \"#utility.yul\":21692:21710   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":21685:21730   */\n      mstore\n        /* \"#utility.yul\":21747:21765   */\n      0x64\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10430:10482  require(bytes(reason).length > 0, \"Reason required\") */\n      tag_205\n        /* \"#utility.yul\":21432:21771   */\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10430:10482  require(bytes(reason).length > 0, \"Reason required\") */\n    tag_387:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10508:10528  aiScores[proposalId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10508:10516  aiScores */\n      0x03\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10508:10528  aiScores[proposalId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10501:10528  delete aiScores[proposalId] */\n      dup2\n      dup2\n      sstore\n      0x01\n      dup2\n      add\n      dup3\n      swap1\n      sstore\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10508:10528  aiScores[proposalId] */\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10501:10528  delete aiScores[proposalId] */\n      tag_390\n      0x02\n      dup4\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10508:10528  aiScores[proposalId] */\n      dup3\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10501:10528  delete aiScores[proposalId] */\n      tag_391\n      jump\t// in\n    tag_390:\n      tag_392\n      0x03\n      dup4\n      add\n      0x00\n      tag_391\n      jump\t// in\n    tag_392:\n      pop\n      0x00\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      sstore\n      0x05\n      dup3\n      add\n      dup1\n      sload\n      not(sub(shl(0xa8, 0x01), 0x01))\n      and\n      swap1\n      sstore\n      0x06\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      not(0xffffffffff)\n      and\n      swap1\n      sstore\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10538:10558  totalScoresSubmitted */\n      0x07\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10538:10560  totalScoresSubmitted-- */\n      dup1\n      sload\n      swap2\n      tag_393\n      dup4\n      tag_394\n      jump\t// in\n    tag_393:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10597:10607  proposalId */\n      dup3\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10584:10619  ScoreUpdated(proposalId, 0, reason) */\n      0xd3e8dbbe8ff60a1fae1e5f88e71f27270ed38badc7b26e19922ed94fd12f5fe9\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10609:10610  0 */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10612:10618  reason */\n      dup5\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10584:10619  ScoreUpdated(proposalId, 0, reason) */\n      mload(0x40)\n      tag_395\n      swap3\n      swap2\n      swap1\n      tag_248\n      jump\t// in\n    tag_395:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10249:10626  function removeScore(uint256 proposalId, string memory reason) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9209:9496  function setSupportedModel(string memory modelVersion, bool supported) external onlyRole(ADMIN_ROLE) {... */\n    tag_159:\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_398\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_252\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_398:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9357:9358  0 */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9334:9346  modelVersion */\n      dup4\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9328:9354  bytes(modelVersion).length */\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9328:9358  bytes(modelVersion).length > 0 */\n      gt\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9320:9384  require(bytes(modelVersion).length > 0, \"Invalid model version\") */\n      tag_400\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":22423:22425   */\n      0x20\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9320:9384  require(bytes(modelVersion).length > 0, \"Invalid model version\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":22405:22426   */\n      mstore\n        /* \"#utility.yul\":22462:22464   */\n      0x15\n        /* \"#utility.yul\":22442:22460   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":22435:22465   */\n      mstore\n      shl(0x59, 0x24b73b30b634b21036b7b232b6103b32b939b4b7b7)\n        /* \"#utility.yul\":22481:22499   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":22474:22525   */\n      mstore\n        /* \"#utility.yul\":22542:22560   */\n      0x64\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9320:9384  require(bytes(modelVersion).length > 0, \"Invalid model version\") */\n      tag_205\n        /* \"#utility.yul\":22221:22566   */\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9320:9384  require(bytes(modelVersion).length > 0, \"Invalid model version\") */\n    tag_400:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9426:9435  supported */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9394:9409  supportedModels */\n      0x05\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9410:9422  modelVersion */\n      dup5\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9394:9423  supportedModels[modelVersion] */\n      mload(0x40)\n      tag_403\n      swap2\n      swap1\n      tag_309\n      jump\t// in\n    tag_403:\n      swap1\n      dup2\n      mstore\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      dup2\n      keccak256\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9394:9435  supportedModels[modelVersion] = supported */\n      dup1\n      sload\n      swap3\n      iszero\n      iszero\n      not(0xff)\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9450:9489  ModelSupported(modelVersion, supported) */\n      0x2e5180543742ece2db44ed70b2619f2bf555a29a7bdead994736174f0d90a9b6\n      swap1\n      tag_404\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9465:9477  modelVersion */\n      dup6\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9479:9488  supported */\n      dup6\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9450:9489  ModelSupported(modelVersion, supported) */\n      tag_405\n      jump\t// in\n    tag_404:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9209:9496  function setSupportedModel(string memory modelVersion, bool supported) external onlyRole(ADMIN_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":7484:7743  function getScoringBreakdown(uint256 proposalId) external view validProposalId(proposalId) returns (ScoringBreakdown memory breakdown) {... */\n    tag_173:\n      0x40\n      dup1\n      mload\n      0xa0\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      swap2\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x60\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      0x80\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":7563:7573  proposalId */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2101:2102  0 */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2088:2098  proposalId */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2088:2102  proposalId > 0 */\n      gt\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2080:2126  require(proposalId > 0, \"Invalid proposal ID\") */\n      tag_410\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap1\n      tag_206\n      jump\t// in\n    tag_410:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":7637:7657  aiScores[proposalId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":7637:7645  aiScores */\n      0x03\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":7637:7657  aiScores[proposalId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":7637:7664  aiScores[proposalId].exists */\n      0x05\n      add\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":7629:7689  require(aiScores[proposalId].exists, \"Score does not exist\") */\n      tag_413\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap1\n      tag_233\n      jump\t// in\n    tag_413:\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":7706:7726  aiScores[proposalId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":7706:7714  aiScores */\n      0x03\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":7706:7726  aiScores[proposalId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":7699:7736  return aiScores[proposalId].breakdown */\n      dup3\n      mload\n      0xa0\n      dup2\n      add\n      dup5\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":7706:7736  aiScores[proposalId].breakdown */\n      0x06\n      swap1\n      swap2\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":7699:7736  return aiScores[proposalId].breakdown */\n      sload\n      0xff\n      dup1\n      dup3\n      and\n      dup4\n      mstore\n      0x0100\n      dup3\n      div\n      dup2\n      and\n      swap4\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x010000\n      dup2\n      div\n      dup4\n      and\n      swap4\n      dup3\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x01000000\n      dup4\n      div\n      dup3\n      and\n      0x60\n      dup3\n      add\n      mstore\n      0x0100000000\n      swap1\n      swap3\n      div\n      and\n      0x80\n      dup3\n      add\n      mstore\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":7484:7743  function getScoringBreakdown(uint256 proposalId) external view validProposalId(proposalId) returns (ScoringBreakdown memory breakdown) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3851:3858  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_417\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_252\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_417:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      tag_254\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4735:4739  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4741:4748  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4734  _revokeRole */\n      tag_261\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      jump\t// in\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":8611:9043  function setOracleAuthorization(address oracle, bool authorized) external onlyRole(ADMIN_ROLE) {... */\n    tag_182:\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_421\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_252\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_421:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":8724:8744  oracle != address(0) */\n      dup4\n      and\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":8716:8771  require(oracle != address(0), \"Invalid oracle address\") */\n      tag_423\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":23079:23081   */\n      0x20\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":8716:8771  require(oracle != address(0), \"Invalid oracle address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":23061:23082   */\n      mstore\n        /* \"#utility.yul\":23118:23120   */\n      0x16\n        /* \"#utility.yul\":23098:23116   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":23091:23121   */\n      mstore\n      shl(0x50, 0x496e76616c6964206f7261636c652061646472657373)\n        /* \"#utility.yul\":23137:23155   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":23130:23182   */\n      mstore\n        /* \"#utility.yul\":23199:23217   */\n      0x64\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":8716:8771  require(oracle != address(0), \"Invalid oracle address\") */\n      tag_205\n        /* \"#utility.yul\":22877:23223   */\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":8716:8771  require(oracle != address(0), \"Invalid oracle address\") */\n    tag_423:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":8781:8806  authorizedOracles[oracle] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":8781:8798  authorizedOracles */\n      0x04\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":8781:8806  authorizedOracles[oracle] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":8781:8819  authorizedOracles[oracle] = authorized */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup4\n      iszero\n      dup1\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":8838:8977  if (authorized) {... */\n      tag_426\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":8868:8901  grantRole(AI_ORACLE_ROLE, oracle) */\n      tag_427\n      0x00\n      dup1\n      mload\n      0x20\n      data_a33092ec2ea5e84579a4a7f81a8171c84a984183e655ab76a6ea5c0d5344c7b0\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":8894:8900  oracle */\n      dup5\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":8868:8877  grantRole */\n      tag_83\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":8868:8901  grantRole(AI_ORACLE_ROLE, oracle) */\n      jump\t// in\n    tag_427:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":8838:8977  if (authorized) {... */\n      jump(tag_429)\n    tag_426:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":8932:8966  revokeRole(AI_ORACLE_ROLE, oracle) */\n      tag_429\n      0x00\n      dup1\n      mload\n      0x20\n      data_a33092ec2ea5e84579a4a7f81a8171c84a984183e655ab76a6ea5c0d5344c7b0\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":8959:8965  oracle */\n      dup5\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":8932:8942  revokeRole */\n      tag_178\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":8932:8966  revokeRole(AI_ORACLE_ROLE, oracle) */\n      jump\t// in\n    tag_429:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9017:9023  oracle */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9000:9036  OracleAuthorized(oracle, authorized) */\n      and\n      0x82a8fb1e779ea45ad427cc612e47087f5386a567e49dce488185e40646fa48d5\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9025:9035  authorized */\n      dup4\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9000:9036  OracleAuthorized(oracle, authorized) */\n      mload(0x40)\n      tag_395\n      swap2\n        /* \"#utility.yul\":566:580   */\n      iszero\n        /* \"#utility.yul\":559:581   */\n      iszero\n        /* \"#utility.yul\":541:582   */\n      dup2\n      mstore\n        /* \"#utility.yul\":529:531   */\n      0x20\n        /* \"#utility.yul\":514:532   */\n      add\n      swap1\n        /* \"#utility.yul\":401:588   */\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":7087:7320  function getDetailedAIScore(uint256 proposalId) external view validProposalId(proposalId) returns (AIScoreData memory) {... */\n    tag_185:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":7186:7204  AIScoreData memory */\n      tag_431\n      0x40\n      dup1\n      mload\n      0x0100\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      dup3\n      swap1\n      mstore\n      0x60\n      dup4\n      dup6\n      add\n      dup2\n      swap1\n      mstore\n      dup1\n      dup5\n      add\n      dup2\n      swap1\n      mstore\n      0x80\n      dup1\n      dup6\n      add\n      dup5\n      swap1\n      mstore\n      0xa0\n      dup1\n      dup7\n      add\n      dup6\n      swap1\n      mstore\n      0xc0\n      dup7\n      add\n      dup6\n      swap1\n      mstore\n      dup7\n      mload\n      swap1\n      dup2\n      add\n      dup8\n      mstore\n      dup5\n      dup2\n      mstore\n      swap3\n      dup4\n      add\n      dup5\n      swap1\n      mstore\n      swap5\n      dup3\n      add\n      dup4\n      swap1\n      mstore\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      swap3\n      dup4\n      add\n      mstore\n      swap1\n      0xe0\n      dup3\n      add\n      mstore\n      swap1\n      jump\n    tag_431:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":7165:7175  proposalId */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2101:2102  0 */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2088:2098  proposalId */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2088:2102  proposalId > 0 */\n      gt\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":2080:2126  require(proposalId > 0, \"Invalid proposal ID\") */\n      tag_434\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap1\n      tag_206\n      jump\t// in\n    tag_434:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":7224:7244  aiScores[proposalId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":7224:7232  aiScores */\n      0x03\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":7224:7244  aiScores[proposalId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":7224:7251  aiScores[proposalId].exists */\n      0x05\n      add\n      sload\n      shl(0xa0, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":7216:7276  require(aiScores[proposalId].exists, \"Score does not exist\") */\n      tag_437\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap1\n      tag_233\n      jump\t// in\n    tag_437:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":7293:7301  aiScores */\n      0x03\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":7293:7313  aiScores[proposalId] */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":7302:7312  proposalId */\n      dup5\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":7293:7313  aiScores[proposalId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":7286:7313  return aiScores[proposalId] */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      dup1\n      sload\n      tag_439\n      swap1\n      tag_209\n      jump\t// in\n    tag_439:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_440\n      swap1\n      tag_209\n      jump\t// in\n    tag_440:\n      dup1\n      iszero\n      tag_441\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_442\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_441)\n    tag_442:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_443:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_443\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_441:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      dup1\n      sload\n      tag_444\n      swap1\n      tag_209\n      jump\t// in\n    tag_444:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_445\n      swap1\n      tag_209\n      jump\t// in\n    tag_445:\n      dup1\n      iszero\n      tag_446\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_447\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_446)\n    tag_447:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_448:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_448\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_446:\n      pop\n      pop\n      pop\n      swap2\n      dup4\n      mstore\n      pop\n      pop\n      0x04\n      dup3\n      add\n      sload\n      0x20\n      dup1\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x05\n      dup4\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      0x40\n      dup1\n      dup6\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0xff\n      shl(0xa0, 0x01)\n      swap1\n      swap3\n      div\n      dup3\n      and\n      iszero\n      iszero\n      0x60\n      dup1\n      dup7\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup2\n      mload\n      0xa0\n      dup2\n      add\n      dup4\n      mstore\n      0x06\n      swap1\n      swap7\n      add\n      sload\n      dup1\n      dup5\n      and\n      dup8\n      mstore\n      0x0100\n      dup2\n      div\n      dup5\n      and\n      swap5\n      dup8\n      add\n      swap5\n      swap1\n      swap5\n      mstore\n      0x010000\n      dup5\n      div\n      dup4\n      and\n      swap2\n      dup7\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x01000000\n      dup4\n      div\n      dup3\n      and\n      swap1\n      dup6\n      add\n      mstore\n      0x0100000000\n      swap1\n      swap2\n      div\n      and\n      0x80\n      dup4\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      add\n      mstore\n      swap2\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":7087:7320  function getDetailedAIScore(uint256 proposalId) external view validProposalId(proposalId) returns (AIScoreData memory) {... */\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2723:3087  function getAllRoles() public pure returns (bytes32[] memory roles) {... */\n    tag_192:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2809:2825  new bytes32[](6) */\n      0x40\n      dup1\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2823:2824  6 */\n      0x06\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2809:2825  new bytes32[](6) */\n      dup1\n      dup3\n      mstore\n      0xe0\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2767:2789  bytes32[] memory roles */\n      0x60\n      swap2\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2809:2825  new bytes32[](6) */\n      0x20\n      dup3\n      add\n      0xc0\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2801:2825  roles = new bytes32[](6) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2846:2864  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2835:2840  roles */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2841:2842  0 */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2835:2843  roles[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_455\n      jumpi\n      tag_455\n      tag_276\n      jump\t// in\n    tag_455:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2835:2864  roles[0] = DEFAULT_ADMIN_ROLE */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2874:2879  roles */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2880:2881  1 */\n      0x01\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2874:2882  roles[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_457\n      jumpi\n      tag_457\n      tag_276\n      jump\t// in\n    tag_457:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2874:2895  roles[1] = ADMIN_ROLE */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_a33092ec2ea5e84579a4a7f81a8171c84a984183e655ab76a6ea5c0d5344c7b0\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2905:2910  roles */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2911:2912  2 */\n      0x02\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2905:2913  roles[2] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_459\n      jumpi\n      tag_459\n      tag_276\n      jump\t// in\n    tag_459:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2905:2930  roles[2] = AI_ORACLE_ROLE */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":494:528  keccak256(\"TREASURY_MANAGER_ROLE\") */\n      0xede9dcdb0ce99dc7cec9c7be9246ad08b37853683ad91569c187b647ddf5e21c\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2940:2945  roles */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2946:2947  3 */\n      0x03\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2940:2948  roles[3] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_461\n      jumpi\n      tag_461\n      tag_276\n      jump\t// in\n    tag_461:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2940:2972  roles[3] = TREASURY_MANAGER_ROLE */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":584:620  keccak256(\"MILESTONE_APPROVER_ROLE\") */\n      0x58223cdfb69946630d837d40b5c366a584f0217ada7fddd8318f2e08603cfa22\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2982:2987  roles */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2988:2989  4 */\n      0x04\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2982:2990  roles[4] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_463\n      jumpi\n      tag_463\n      tag_276\n      jump\t// in\n    tag_463:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2982:3016  roles[4] = MILESTONE_APPROVER_ROLE */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":674:708  keccak256(\"DISPUTE_RESOLVER_ROLE\") */\n      0x7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":3026:3031  roles */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":3032:3033  5 */\n      0x05\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":3026:3034  roles[5] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_465\n      jumpi\n      tag_465\n      tag_276\n      jump\t// in\n    tag_465:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":3026:3058  roles[5] = DISPUTE_RESOLVER_ROLE */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2723:3087  function getAllRoles() public pure returns (bytes32[] memory roles) {... */\n      swap1\n      jump\t// out\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9609:10091  function updateScoringCriteria(ScoringCriteria memory newCriteria) external onlyRole(ADMIN_ROLE) {... */\n    tag_198:\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_467\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_252\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_467:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9909:9931  newCriteria.innovation */\n      0x80\n      dup3\n      add\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9867:9893  newCriteria.teamReputation */\n      0x60\n      dup4\n      add\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9825:9851  newCriteria.riskAssessment */\n      0x40\n      dup5\n      add\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9786:9809  newCriteria.feasibility */\n      0x20\n      dup6\n      add\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9737:9770  newCriteria.ecosystemContribution */\n      dup6\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9737:9809  newCriteria.ecosystemContribution + ... */\n      tag_469\n      swap2\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9786:9809  newCriteria.feasibility */\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9737:9809  newCriteria.ecosystemContribution + ... */\n      tag_330\n      jump\t// in\n    tag_469:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9737:9851  newCriteria.ecosystemContribution + ... */\n      tag_470\n      swap2\n      swap1\n      tag_330\n      jump\t// in\n    tag_470:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9737:9893  newCriteria.ecosystemContribution + ... */\n      tag_471\n      swap2\n      swap1\n      tag_330\n      jump\t// in\n    tag_471:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9737:9931  newCriteria.ecosystemContribution + ... */\n      tag_472\n      swap2\n      swap1\n      tag_330\n      jump\t// in\n    tag_472:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9737:9938  newCriteria.ecosystemContribution + ... */\n      0xff\n      and\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9935:9938  100 */\n      0x64\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9737:9938  newCriteria.ecosystemContribution + ... */\n      eq\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9716:9987  require(... */\n      tag_473\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":23430:23432   */\n      0x20\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9716:9987  require(... */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":23412:23433   */\n      mstore\n        /* \"#utility.yul\":23469:23471   */\n      0x17\n        /* \"#utility.yul\":23449:23467   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":23442:23472   */\n      mstore\n        /* \"#utility.yul\":23508:23533   */\n      0x57656967687473206d7573742073756d20746f20313030000000000000000000\n        /* \"#utility.yul\":23488:23506   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":23481:23534   */\n      mstore\n        /* \"#utility.yul\":23551:23569   */\n      0x64\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9716:9987  require(... */\n      tag_205\n        /* \"#utility.yul\":23228:23575   */\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9716:9987  require(... */\n    tag_473:\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10006:10034  scoringWeights = newCriteria */\n      dup2\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10006:10020  scoringWeights */\n      0x06\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10006:10034  scoringWeights = newCriteria */\n      dup1\n      sload\n      0x20\n      dup6\n      add\n      mload\n      0x40\n      dup1\n      dup8\n      add\n      mload\n      0x60\n      dup9\n      add\n      mload\n      0x80\n      dup10\n      add\n      mload\n      0xff\n      swap1\n      dup2\n      and\n      0x0100000000\n      mul\n      not(0xff00000000)\n      swap3\n      dup3\n      and\n      0x01000000\n      mul\n      not(0xff000000)\n      swap5\n      dup4\n      and\n      0x010000\n      mul\n      swap5\n      swap1\n      swap5\n      and\n      not(0xffff0000)\n      swap7\n      dup4\n      and\n      0x0100\n      mul\n      not(0xffff)\n      swap1\n      swap9\n      and\n      swap3\n      swap1\n      swap10\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap6\n      swap1\n      swap6\n      or\n      swap4\n      swap1\n      swap4\n      and\n      swap6\n      swap1\n      swap6\n      or\n      swap5\n      swap1\n      swap5\n      or\n      and\n      or\n      swap1\n      sstore\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10049:10084  ScoringCriteriaUpdated(newCriteria) */\n      mload\n      0x90565f56924446477768885e9b20cf4cb9d2183f2ad4313f3e90f1dcaedcc0ae\n      swap1\n      tag_476\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10023:10034  newCriteria */\n      dup5\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":10049:10084  ScoringCriteriaUpdated(newCriteria) */\n      tag_175\n      jump\t// in\n    tag_476:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":9609:10091  function updateScoringCriteria(ScoringCriteria memory newCriteria) external onlyRole(ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_229:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      and(0xff, sload(0x01))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_481\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":24057:24059   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":24039:24060   */\n      mstore\n        /* \"#utility.yul\":24096:24098   */\n      0x10\n        /* \"#utility.yul\":24076:24094   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":24069:24099   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":24115:24133   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":24108:24154   */\n      mstore\n        /* \"#utility.yul\":24171:24189   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_205\n        /* \"#utility.yul\":23855:24195   */\n      jump\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n    tag_481:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_252:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3271  _checkRole(role, _msgSender()) */\n      tag_265\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3252:3256  role */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3251  _checkRole */\n      tag_487\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3271  _checkRole(role, _msgSender()) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6232:6236  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n      tag_489\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6261:6265  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6267:6274  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6260  hasRole */\n      tag_133\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n      jump\t// in\n    tag_489:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n      tag_490\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6297  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6323:6327  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n      tag_491\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n    tag_491:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6364:6371  account */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6358:6362  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6407:6411  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n      jump(tag_201)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n    tag_490:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6449:6454  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n      jump(tag_201)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6708:7025  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_261:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6786:6790  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6828  hasRole(role, account) */\n      tag_495\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6814:6818  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6820:6827  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6813  hasRole */\n      tag_133\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6828  hasRole(role, account) */\n      jump\t// in\n    tag_495:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6802:7019  if (hasRole(role, account)) {... */\n      iszero\n      tag_490\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6876:6881  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6856  _roles[role] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6873  _roles[role].hasRole[account] */\n      dup7\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6881  _roles[role].hasRole[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6856  _roles[role] */\n      dup7\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6876:6881  false */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      log4\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6961:6965  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6954:6965  return true */\n      jump(tag_201)\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_266:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_500\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_501\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_500:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2498  _paused */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n    tag_503:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":24364:24396   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":24346:24397   */\n      dup2\n      mstore\n        /* \"#utility.yul\":24334:24336   */\n      0x20\n        /* \"#utility.yul\":24319:24337   */\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_303:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_507\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":24610:24612   */\n      0x20\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":24592:24613   */\n      mstore\n        /* \"#utility.yul\":24649:24651   */\n      0x1f\n        /* \"#utility.yul\":24629:24647   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":24622:24652   */\n      mstore\n        /* \"#utility.yul\":24688:24721   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":24668:24686   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":24661:24722   */\n      mstore\n        /* \"#utility.yul\":24739:24757   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_205\n        /* \"#utility.yul\":24408:24763   */\n      jump\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_507:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup1\n      sstore\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_355:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_512\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_229\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_512:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_503\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3408:3605  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_487:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3518  hasRole(role, account) */\n      tag_517\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3504:3508  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3510:3517  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3503  hasRole */\n      tag_133\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3518  hasRole(role, account) */\n      jump\t// in\n    tag_517:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n      tag_518\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      shl(0xe0, 0xe2517d3f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":24960:24992   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":24942:24993   */\n      mstore\n        /* \"#utility.yul\":25009:25027   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":25002:25036   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":24915:24933   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      tag_205\n        /* \"#utility.yul\":24768:25042   */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n    tag_518:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3408:3605  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_501:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      and(0xff, sload(0x01))\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_481\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":25249:25251   */\n      0x20\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":25231:25252   */\n      mstore\n        /* \"#utility.yul\":25288:25290   */\n      0x14\n        /* \"#utility.yul\":25268:25286   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":25261:25291   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":25307:25325   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":25300:25350   */\n      mstore\n        /* \"#utility.yul\":25367:25385   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_205\n        /* \"#utility.yul\":25047:25391   */\n      jump\n    tag_391:\n      pop\n      dup1\n      sload\n      tag_526\n      swap1\n      tag_209\n      jump\t// in\n    tag_526:\n      0x00\n      dup3\n      sstore\n      dup1\n      0x1f\n      lt\n      tag_528\n      jumpi\n      pop\n      pop\n      jump\t// out\n    tag_528:\n      0x1f\n      add\n      0x20\n      swap1\n      div\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_265\n      swap2\n      swap1\n    tag_532:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_533\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_532)\n    tag_533:\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_51:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_550\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      dup1\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_550:\n        /* \"#utility.yul\":167:190   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":219:251   */\n      dup2\n      and\n        /* \"#utility.yul\":209:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":199:270   */\n      tag_551\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":199:270   */\n    tag_551:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:773   */\n    tag_57:\n        /* \"#utility.yul\":652:658   */\n      0x00\n        /* \"#utility.yul\":705:707   */\n      0x20\n        /* \"#utility.yul\":693:702   */\n      dup3\n        /* \"#utility.yul\":684:691   */\n      dup5\n        /* \"#utility.yul\":680:703   */\n      sub\n        /* \"#utility.yul\":676:708   */\n      slt\n        /* \"#utility.yul\":673:725   */\n      iszero\n      tag_555\n      jumpi\n        /* \"#utility.yul\":721:722   */\n      0x00\n        /* \"#utility.yul\":718:719   */\n      dup1\n        /* \"#utility.yul\":711:723   */\n      revert\n        /* \"#utility.yul\":673:725   */\n    tag_555:\n      pop\n        /* \"#utility.yul\":744:767   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":593:773   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":778:1028   */\n    tag_535:\n        /* \"#utility.yul\":863:864   */\n      0x00\n        /* \"#utility.yul\":873:986   */\n    tag_557:\n        /* \"#utility.yul\":887:893   */\n      dup4\n        /* \"#utility.yul\":884:885   */\n      dup2\n        /* \"#utility.yul\":881:894   */\n      lt\n        /* \"#utility.yul\":873:986   */\n      iszero\n      tag_559\n      jumpi\n        /* \"#utility.yul\":963:974   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":957:975   */\n      mload\n        /* \"#utility.yul\":944:955   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":937:976   */\n      mstore\n        /* \"#utility.yul\":909:911   */\n      0x20\n        /* \"#utility.yul\":902:912   */\n      add\n        /* \"#utility.yul\":873:986   */\n      jump(tag_557)\n    tag_559:\n      pop\n      pop\n        /* \"#utility.yul\":1020:1021   */\n      0x00\n        /* \"#utility.yul\":1002:1018   */\n      swap2\n      add\n        /* \"#utility.yul\":995:1022   */\n      mstore\n        /* \"#utility.yul\":778:1028   */\n      jump\t// out\n        /* \"#utility.yul\":1033:1304   */\n    tag_536:\n        /* \"#utility.yul\":1075:1078   */\n      0x00\n        /* \"#utility.yul\":1113:1118   */\n      dup2\n        /* \"#utility.yul\":1107:1119   */\n      mload\n        /* \"#utility.yul\":1140:1146   */\n      dup1\n        /* \"#utility.yul\":1135:1138   */\n      dup5\n        /* \"#utility.yul\":1128:1147   */\n      mstore\n        /* \"#utility.yul\":1156:1232   */\n      tag_561\n        /* \"#utility.yul\":1225:1231   */\n      dup2\n        /* \"#utility.yul\":1218:1222   */\n      0x20\n        /* \"#utility.yul\":1213:1216   */\n      dup7\n        /* \"#utility.yul\":1209:1223   */\n      add\n        /* \"#utility.yul\":1202:1206   */\n      0x20\n        /* \"#utility.yul\":1195:1200   */\n      dup7\n        /* \"#utility.yul\":1191:1207   */\n      add\n        /* \"#utility.yul\":1156:1232   */\n      tag_535\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":1286:1288   */\n      0x1f\n        /* \"#utility.yul\":1265:1280   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1261:1290   */\n      and\n        /* \"#utility.yul\":1252:1291   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1293:1297   */\n      0x20\n        /* \"#utility.yul\":1248:1298   */\n      add\n      swap3\n        /* \"#utility.yul\":1033:1304   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1309:1681   */\n    tag_60:\n        /* \"#utility.yul\":1508:1514   */\n      dup4\n        /* \"#utility.yul\":1497:1506   */\n      dup2\n        /* \"#utility.yul\":1490:1515   */\n      mstore\n        /* \"#utility.yul\":1551:1553   */\n      0x60\n        /* \"#utility.yul\":1546:1548   */\n      0x20\n        /* \"#utility.yul\":1535:1544   */\n      dup3\n        /* \"#utility.yul\":1531:1549   */\n      add\n        /* \"#utility.yul\":1524:1554   */\n      mstore\n        /* \"#utility.yul\":1471:1475   */\n      0x00\n        /* \"#utility.yul\":1571:1616   */\n      tag_563\n        /* \"#utility.yul\":1612:1614   */\n      0x60\n        /* \"#utility.yul\":1601:1610   */\n      dup4\n        /* \"#utility.yul\":1597:1615   */\n      add\n        /* \"#utility.yul\":1589:1595   */\n      dup6\n        /* \"#utility.yul\":1571:1616   */\n      tag_536\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":1563:1616   */\n      swap1\n      pop\n        /* \"#utility.yul\":1666:1672   */\n      dup3\n        /* \"#utility.yul\":1659:1673   */\n      iszero\n        /* \"#utility.yul\":1652:1674   */\n      iszero\n        /* \"#utility.yul\":1647:1649   */\n      0x40\n        /* \"#utility.yul\":1636:1645   */\n      dup4\n        /* \"#utility.yul\":1632:1650   */\n      add\n        /* \"#utility.yul\":1625:1675   */\n      mstore\n        /* \"#utility.yul\":1309:1681   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2235:2362   */\n    tag_452:\n        /* \"#utility.yul\":2296:2306   */\n      0x4e487b71\n        /* \"#utility.yul\":2291:2294   */\n      0xe0\n        /* \"#utility.yul\":2287:2307   */\n      shl\n        /* \"#utility.yul\":2284:2285   */\n      0x00\n        /* \"#utility.yul\":2277:2308   */\n      mstore\n        /* \"#utility.yul\":2327:2331   */\n      0x41\n        /* \"#utility.yul\":2324:2325   */\n      0x04\n        /* \"#utility.yul\":2317:2332   */\n      mstore\n        /* \"#utility.yul\":2351:2355   */\n      0x24\n        /* \"#utility.yul\":2348:2349   */\n      0x00\n        /* \"#utility.yul\":2341:2356   */\n      revert\n        /* \"#utility.yul\":2367:2642   */\n    tag_537:\n        /* \"#utility.yul\":2438:2440   */\n      0x40\n        /* \"#utility.yul\":2432:2441   */\n      mload\n        /* \"#utility.yul\":2503:2505   */\n      0x1f\n        /* \"#utility.yul\":2484:2497   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2480:2507   */\n      and\n        /* \"#utility.yul\":2468:2508   */\n      dup2\n      add\n        /* \"#utility.yul\":2538:2556   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2523:2557   */\n      dup2\n      gt\n        /* \"#utility.yul\":2559:2581   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2520:2582   */\n      or\n        /* \"#utility.yul\":2517:2605   */\n      iszero\n      tag_571\n      jumpi\n        /* \"#utility.yul\":2585:2603   */\n      tag_571\n      tag_452\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":2621:2623   */\n      0x40\n        /* \"#utility.yul\":2614:2636   */\n      mstore\n        /* \"#utility.yul\":2367:2642   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2647:3178   */\n    tag_538:\n        /* \"#utility.yul\":2690:2695   */\n      0x00\n        /* \"#utility.yul\":2743:2746   */\n      dup3\n        /* \"#utility.yul\":2736:2740   */\n      0x1f\n        /* \"#utility.yul\":2728:2734   */\n      dup4\n        /* \"#utility.yul\":2724:2741   */\n      add\n        /* \"#utility.yul\":2720:2747   */\n      slt\n        /* \"#utility.yul\":2710:2765   */\n      tag_573\n      jumpi\n        /* \"#utility.yul\":2761:2762   */\n      0x00\n        /* \"#utility.yul\":2758:2759   */\n      dup1\n        /* \"#utility.yul\":2751:2763   */\n      revert\n        /* \"#utility.yul\":2710:2765   */\n    tag_573:\n        /* \"#utility.yul\":2797:2803   */\n      dup2\n        /* \"#utility.yul\":2784:2804   */\n      calldataload\n        /* \"#utility.yul\":2823:2841   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2819:2821   */\n      dup2\n        /* \"#utility.yul\":2816:2842   */\n      gt\n        /* \"#utility.yul\":2813:2865   */\n      iszero\n      tag_575\n      jumpi\n        /* \"#utility.yul\":2845:2863   */\n      tag_575\n      tag_452\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":2889:2944   */\n      tag_576\n        /* \"#utility.yul\":2932:2934   */\n      0x1f\n        /* \"#utility.yul\":2913:2926   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2909:2936   */\n      and\n        /* \"#utility.yul\":2938:2942   */\n      0x20\n        /* \"#utility.yul\":2905:2943   */\n      add\n        /* \"#utility.yul\":2889:2944   */\n      tag_537\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":2969:2971   */\n      dup2\n        /* \"#utility.yul\":2960:2967   */\n      dup2\n        /* \"#utility.yul\":2953:2972   */\n      mstore\n        /* \"#utility.yul\":3015:3018   */\n      dup5\n        /* \"#utility.yul\":3008:3012   */\n      0x20\n        /* \"#utility.yul\":3003:3005   */\n      dup4\n        /* \"#utility.yul\":2995:3001   */\n      dup7\n        /* \"#utility.yul\":2991:3006   */\n      add\n        /* \"#utility.yul\":2987:3013   */\n      add\n        /* \"#utility.yul\":2984:3019   */\n      gt\n        /* \"#utility.yul\":2981:3036   */\n      iszero\n      tag_577\n      jumpi\n        /* \"#utility.yul\":3032:3033   */\n      0x00\n        /* \"#utility.yul\":3029:3030   */\n      dup1\n        /* \"#utility.yul\":3022:3034   */\n      revert\n        /* \"#utility.yul\":2981:3036   */\n    tag_577:\n        /* \"#utility.yul\":3097:3099   */\n      dup2\n        /* \"#utility.yul\":3090:3094   */\n      0x20\n        /* \"#utility.yul\":3082:3088   */\n      dup6\n        /* \"#utility.yul\":3078:3095   */\n      add\n        /* \"#utility.yul\":3071:3075   */\n      0x20\n        /* \"#utility.yul\":3062:3069   */\n      dup4\n        /* \"#utility.yul\":3058:3076   */\n      add\n        /* \"#utility.yul\":3045:3100   */\n      calldatacopy\n        /* \"#utility.yul\":3145:3146   */\n      0x00\n        /* \"#utility.yul\":3120:3136   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":3138:3142   */\n      0x20\n        /* \"#utility.yul\":3116:3143   */\n      add\n        /* \"#utility.yul\":3109:3147   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3124:3131   */\n      swap4\n        /* \"#utility.yul\":2647:3178   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3183:3863   */\n    tag_73:\n        /* \"#utility.yul\":3289:3295   */\n      0x00\n        /* \"#utility.yul\":3297:3303   */\n      dup1\n        /* \"#utility.yul\":3305:3311   */\n      0x00\n        /* \"#utility.yul\":3313:3319   */\n      dup1\n        /* \"#utility.yul\":3366:3369   */\n      0x80\n        /* \"#utility.yul\":3354:3363   */\n      dup6\n        /* \"#utility.yul\":3345:3352   */\n      dup8\n        /* \"#utility.yul\":3341:3364   */\n      sub\n        /* \"#utility.yul\":3337:3370   */\n      slt\n        /* \"#utility.yul\":3334:3387   */\n      iszero\n      tag_579\n      jumpi\n        /* \"#utility.yul\":3383:3384   */\n      0x00\n        /* \"#utility.yul\":3380:3381   */\n      dup1\n        /* \"#utility.yul\":3373:3385   */\n      revert\n        /* \"#utility.yul\":3334:3387   */\n    tag_579:\n        /* \"#utility.yul\":3419:3428   */\n      dup5\n        /* \"#utility.yul\":3406:3429   */\n      calldataload\n        /* \"#utility.yul\":3396:3429   */\n      swap4\n      pop\n        /* \"#utility.yul\":3476:3478   */\n      0x20\n        /* \"#utility.yul\":3465:3474   */\n      dup6\n        /* \"#utility.yul\":3461:3479   */\n      add\n        /* \"#utility.yul\":3448:3480   */\n      calldataload\n        /* \"#utility.yul\":3438:3480   */\n      swap3\n      pop\n        /* \"#utility.yul\":3531:3533   */\n      0x40\n        /* \"#utility.yul\":3520:3529   */\n      dup6\n        /* \"#utility.yul\":3516:3534   */\n      add\n        /* \"#utility.yul\":3503:3535   */\n      calldataload\n        /* \"#utility.yul\":3554:3572   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3595:3597   */\n      dup1\n        /* \"#utility.yul\":3587:3593   */\n      dup3\n        /* \"#utility.yul\":3584:3598   */\n      gt\n        /* \"#utility.yul\":3581:3615   */\n      iszero\n      tag_580\n      jumpi\n        /* \"#utility.yul\":3611:3612   */\n      0x00\n        /* \"#utility.yul\":3608:3609   */\n      dup1\n        /* \"#utility.yul\":3601:3613   */\n      revert\n        /* \"#utility.yul\":3581:3615   */\n    tag_580:\n        /* \"#utility.yul\":3634:3684   */\n      tag_581\n        /* \"#utility.yul\":3676:3683   */\n      dup9\n        /* \"#utility.yul\":3667:3673   */\n      dup4\n        /* \"#utility.yul\":3656:3665   */\n      dup10\n        /* \"#utility.yul\":3652:3674   */\n      add\n        /* \"#utility.yul\":3634:3684   */\n      tag_538\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":3624:3684   */\n      swap4\n      pop\n        /* \"#utility.yul\":3737:3739   */\n      0x60\n        /* \"#utility.yul\":3726:3735   */\n      dup8\n        /* \"#utility.yul\":3722:3740   */\n      add\n        /* \"#utility.yul\":3709:3741   */\n      calldataload\n        /* \"#utility.yul\":3693:3741   */\n      swap2\n      pop\n        /* \"#utility.yul\":3766:3768   */\n      dup1\n        /* \"#utility.yul\":3756:3764   */\n      dup3\n        /* \"#utility.yul\":3753:3769   */\n      gt\n        /* \"#utility.yul\":3750:3786   */\n      iszero\n      tag_582\n      jumpi\n        /* \"#utility.yul\":3782:3783   */\n      0x00\n        /* \"#utility.yul\":3779:3780   */\n      dup1\n        /* \"#utility.yul\":3772:3784   */\n      revert\n        /* \"#utility.yul\":3750:3786   */\n    tag_582:\n      pop\n        /* \"#utility.yul\":3805:3857   */\n      tag_583\n        /* \"#utility.yul\":3849:3856   */\n      dup8\n        /* \"#utility.yul\":3838:3846   */\n      dup3\n        /* \"#utility.yul\":3827:3836   */\n      dup9\n        /* \"#utility.yul\":3823:3847   */\n      add\n        /* \"#utility.yul\":3805:3857   */\n      tag_538\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":3795:3857   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3183:3863   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3868:4190   */\n    tag_77:\n        /* \"#utility.yul\":3937:3943   */\n      0x00\n        /* \"#utility.yul\":3990:3992   */\n      0x20\n        /* \"#utility.yul\":3978:3987   */\n      dup3\n        /* \"#utility.yul\":3969:3976   */\n      dup5\n        /* \"#utility.yul\":3965:3988   */\n      sub\n        /* \"#utility.yul\":3961:3993   */\n      slt\n        /* \"#utility.yul\":3958:4010   */\n      iszero\n      tag_585\n      jumpi\n        /* \"#utility.yul\":4006:4007   */\n      0x00\n        /* \"#utility.yul\":4003:4004   */\n      dup1\n        /* \"#utility.yul\":3996:4008   */\n      revert\n        /* \"#utility.yul\":3958:4010   */\n    tag_585:\n        /* \"#utility.yul\":4046:4055   */\n      dup2\n        /* \"#utility.yul\":4033:4056   */\n      calldataload\n        /* \"#utility.yul\":4079:4097   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4071:4077   */\n      dup2\n        /* \"#utility.yul\":4068:4098   */\n      gt\n        /* \"#utility.yul\":4065:4115   */\n      iszero\n      tag_586\n      jumpi\n        /* \"#utility.yul\":4111:4112   */\n      0x00\n        /* \"#utility.yul\":4108:4109   */\n      dup1\n        /* \"#utility.yul\":4101:4113   */\n      revert\n        /* \"#utility.yul\":4065:4115   */\n    tag_586:\n        /* \"#utility.yul\":4134:4184   */\n      tag_587\n        /* \"#utility.yul\":4176:4183   */\n      dup5\n        /* \"#utility.yul\":4167:4173   */\n      dup3\n        /* \"#utility.yul\":4156:4165   */\n      dup6\n        /* \"#utility.yul\":4152:4174   */\n      add\n        /* \"#utility.yul\":4134:4184   */\n      tag_538\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":4124:4184   */\n      swap5\n        /* \"#utility.yul\":3868:4190   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4195:4368   */\n    tag_539:\n        /* \"#utility.yul\":4263:4283   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4312:4343   */\n      dup2\n      and\n        /* \"#utility.yul\":4302:4344   */\n      dup2\n      eq\n        /* \"#utility.yul\":4292:4362   */\n      tag_589\n      jumpi\n        /* \"#utility.yul\":4358:4359   */\n      0x00\n        /* \"#utility.yul\":4355:4356   */\n      dup1\n        /* \"#utility.yul\":4348:4360   */\n      revert\n        /* \"#utility.yul\":4292:4362   */\n    tag_589:\n        /* \"#utility.yul\":4195:4368   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4373:4627   */\n    tag_82:\n        /* \"#utility.yul\":4441:4447   */\n      0x00\n        /* \"#utility.yul\":4449:4455   */\n      dup1\n        /* \"#utility.yul\":4502:4504   */\n      0x40\n        /* \"#utility.yul\":4490:4499   */\n      dup4\n        /* \"#utility.yul\":4481:4488   */\n      dup6\n        /* \"#utility.yul\":4477:4500   */\n      sub\n        /* \"#utility.yul\":4473:4505   */\n      slt\n        /* \"#utility.yul\":4470:4522   */\n      iszero\n      tag_591\n      jumpi\n        /* \"#utility.yul\":4518:4519   */\n      0x00\n        /* \"#utility.yul\":4515:4516   */\n      dup1\n        /* \"#utility.yul\":4508:4520   */\n      revert\n        /* \"#utility.yul\":4470:4522   */\n    tag_591:\n        /* \"#utility.yul\":4554:4563   */\n      dup3\n        /* \"#utility.yul\":4541:4564   */\n      calldataload\n        /* \"#utility.yul\":4531:4564   */\n      swap2\n      pop\n        /* \"#utility.yul\":4583:4621   */\n      tag_592\n        /* \"#utility.yul\":4617:4619   */\n      0x20\n        /* \"#utility.yul\":4606:4615   */\n      dup5\n        /* \"#utility.yul\":4602:4620   */\n      add\n        /* \"#utility.yul\":4583:4621   */\n      tag_539\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":4573:4621   */\n      swap1\n      pop\n        /* \"#utility.yul\":4373:4627   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5135:6155   */\n    tag_101:\n        /* \"#utility.yul\":5228:5234   */\n      0x00\n        /* \"#utility.yul\":5236:5242   */\n      dup1\n        /* \"#utility.yul\":5289:5291   */\n      0x40\n        /* \"#utility.yul\":5277:5286   */\n      dup4\n        /* \"#utility.yul\":5268:5275   */\n      dup6\n        /* \"#utility.yul\":5264:5287   */\n      sub\n        /* \"#utility.yul\":5260:5292   */\n      slt\n        /* \"#utility.yul\":5257:5309   */\n      iszero\n      tag_595\n      jumpi\n        /* \"#utility.yul\":5305:5306   */\n      0x00\n        /* \"#utility.yul\":5302:5303   */\n      dup1\n        /* \"#utility.yul\":5295:5307   */\n      revert\n        /* \"#utility.yul\":5257:5309   */\n    tag_595:\n        /* \"#utility.yul\":5328:5357   */\n      tag_596\n        /* \"#utility.yul\":5347:5356   */\n      dup4\n        /* \"#utility.yul\":5328:5357   */\n      tag_539\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":5318:5357   */\n      swap2\n      pop\n        /* \"#utility.yul\":5376:5378   */\n      0x20\n        /* \"#utility.yul\":5429:5431   */\n      dup1\n        /* \"#utility.yul\":5418:5427   */\n      dup5\n        /* \"#utility.yul\":5414:5432   */\n      add\n        /* \"#utility.yul\":5401:5433   */\n      calldataload\n        /* \"#utility.yul\":5452:5470   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5493:5495   */\n      dup1\n        /* \"#utility.yul\":5485:5491   */\n      dup3\n        /* \"#utility.yul\":5482:5496   */\n      gt\n        /* \"#utility.yul\":5479:5513   */\n      iszero\n      tag_597\n      jumpi\n        /* \"#utility.yul\":5509:5510   */\n      0x00\n        /* \"#utility.yul\":5506:5507   */\n      dup1\n        /* \"#utility.yul\":5499:5511   */\n      revert\n        /* \"#utility.yul\":5479:5513   */\n    tag_597:\n        /* \"#utility.yul\":5547:5553   */\n      dup2\n        /* \"#utility.yul\":5536:5545   */\n      dup7\n        /* \"#utility.yul\":5532:5554   */\n      add\n        /* \"#utility.yul\":5522:5554   */\n      swap2\n      pop\n        /* \"#utility.yul\":5592:5599   */\n      dup7\n        /* \"#utility.yul\":5585:5589   */\n      0x1f\n        /* \"#utility.yul\":5581:5583   */\n      dup4\n        /* \"#utility.yul\":5577:5590   */\n      add\n        /* \"#utility.yul\":5573:5600   */\n      slt\n        /* \"#utility.yul\":5563:5618   */\n      tag_598\n      jumpi\n        /* \"#utility.yul\":5614:5615   */\n      0x00\n        /* \"#utility.yul\":5611:5612   */\n      dup1\n        /* \"#utility.yul\":5604:5616   */\n      revert\n        /* \"#utility.yul\":5563:5618   */\n    tag_598:\n        /* \"#utility.yul\":5650:5652   */\n      dup2\n        /* \"#utility.yul\":5637:5653   */\n      calldataload\n        /* \"#utility.yul\":5672:5674   */\n      dup2\n        /* \"#utility.yul\":5668:5670   */\n      dup2\n        /* \"#utility.yul\":5665:5675   */\n      gt\n        /* \"#utility.yul\":5662:5698   */\n      iszero\n      tag_600\n      jumpi\n        /* \"#utility.yul\":5678:5696   */\n      tag_600\n      tag_452\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":5724:5726   */\n      dup1\n        /* \"#utility.yul\":5721:5722   */\n      0x05\n        /* \"#utility.yul\":5717:5727   */\n      shl\n        /* \"#utility.yul\":5707:5727   */\n      swap2\n      pop\n        /* \"#utility.yul\":5747:5775   */\n      tag_601\n        /* \"#utility.yul\":5771:5773   */\n      dup5\n        /* \"#utility.yul\":5767:5769   */\n      dup4\n        /* \"#utility.yul\":5763:5774   */\n      add\n        /* \"#utility.yul\":5747:5775   */\n      tag_537\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":5809:5824   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":5879:5890   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":5875:5895   */\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":5840:5852   */\n      dup5\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":5907:5926   */\n      dup10\n      dup5\n      gt\n        /* \"#utility.yul\":5904:5943   */\n      iszero\n      tag_602\n      jumpi\n        /* \"#utility.yul\":5939:5940   */\n      0x00\n        /* \"#utility.yul\":5936:5937   */\n      dup1\n        /* \"#utility.yul\":5929:5941   */\n      revert\n        /* \"#utility.yul\":5904:5943   */\n    tag_602:\n        /* \"#utility.yul\":5963:5974   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":5983:6125   */\n    tag_603:\n        /* \"#utility.yul\":5999:6005   */\n      dup4\n        /* \"#utility.yul\":5994:5997   */\n      dup6\n        /* \"#utility.yul\":5991:6006   */\n      lt\n        /* \"#utility.yul\":5983:6125   */\n      iszero\n      tag_605\n      jumpi\n        /* \"#utility.yul\":6065:6082   */\n      dup5\n      calldataload\n        /* \"#utility.yul\":6053:6083   */\n      dup3\n      mstore\n        /* \"#utility.yul\":6016:6028   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":6103:6115   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":5983:6125   */\n      jump(tag_603)\n    tag_605:\n        /* \"#utility.yul\":6144:6149   */\n      dup1\n        /* \"#utility.yul\":6134:6149   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":5135:6155   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6160:6346   */\n    tag_108:\n        /* \"#utility.yul\":6219:6225   */\n      0x00\n        /* \"#utility.yul\":6272:6274   */\n      0x20\n        /* \"#utility.yul\":6260:6269   */\n      dup3\n        /* \"#utility.yul\":6251:6258   */\n      dup5\n        /* \"#utility.yul\":6247:6270   */\n      sub\n        /* \"#utility.yul\":6243:6275   */\n      slt\n        /* \"#utility.yul\":6240:6292   */\n      iszero\n      tag_607\n      jumpi\n        /* \"#utility.yul\":6288:6289   */\n      0x00\n        /* \"#utility.yul\":6285:6286   */\n      dup1\n        /* \"#utility.yul\":6278:6290   */\n      revert\n        /* \"#utility.yul\":6240:6292   */\n    tag_607:\n        /* \"#utility.yul\":6311:6340   */\n      tag_551\n        /* \"#utility.yul\":6330:6339   */\n      dup3\n        /* \"#utility.yul\":6311:6340   */\n      tag_539\n      jump\t// in\n        /* \"#utility.yul\":6351:6507   */\n    tag_540:\n        /* \"#utility.yul\":6417:6437   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":6477:6481   */\n      0xff\n        /* \"#utility.yul\":6466:6482   */\n      dup2\n      and\n        /* \"#utility.yul\":6456:6483   */\n      dup2\n      eq\n        /* \"#utility.yul\":6446:6501   */\n      tag_589\n      jumpi\n        /* \"#utility.yul\":6497:6498   */\n      0x00\n        /* \"#utility.yul\":6494:6495   */\n      dup1\n        /* \"#utility.yul\":6487:6499   */\n      revert\n        /* \"#utility.yul\":6512:7213   */\n    tag_541:\n        /* \"#utility.yul\":6575:6580   */\n      0x00\n        /* \"#utility.yul\":6623:6627   */\n      0xa0\n        /* \"#utility.yul\":6611:6620   */\n      dup3\n        /* \"#utility.yul\":6606:6609   */\n      dup5\n        /* \"#utility.yul\":6602:6621   */\n      sub\n        /* \"#utility.yul\":6598:6628   */\n      slt\n        /* \"#utility.yul\":6595:6645   */\n      iszero\n      tag_612\n      jumpi\n        /* \"#utility.yul\":6641:6642   */\n      0x00\n        /* \"#utility.yul\":6638:6639   */\n      dup1\n        /* \"#utility.yul\":6631:6643   */\n      revert\n        /* \"#utility.yul\":6595:6645   */\n    tag_612:\n        /* \"#utility.yul\":6674:6676   */\n      0x40\n        /* \"#utility.yul\":6668:6677   */\n      mload\n        /* \"#utility.yul\":6716:6720   */\n      0xa0\n        /* \"#utility.yul\":6708:6714   */\n      dup2\n        /* \"#utility.yul\":6704:6721   */\n      add\n        /* \"#utility.yul\":6787:6793   */\n      dup2\n        /* \"#utility.yul\":6775:6785   */\n      dup2\n        /* \"#utility.yul\":6772:6794   */\n      lt\n        /* \"#utility.yul\":6751:6769   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6739:6749   */\n      dup3\n        /* \"#utility.yul\":6736:6770   */\n      gt\n        /* \"#utility.yul\":6733:6795   */\n      or\n        /* \"#utility.yul\":6730:6818   */\n      iszero\n      tag_614\n      jumpi\n        /* \"#utility.yul\":6798:6816   */\n      tag_614\n      tag_452\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":6834:6836   */\n      0x40\n        /* \"#utility.yul\":6827:6849   */\n      mstore\n        /* \"#utility.yul\":6867:6873   */\n      swap1\n      pop\n      dup1\n        /* \"#utility.yul\":6897:6924   */\n      tag_615\n        /* \"#utility.yul\":6914:6923   */\n      dup4\n        /* \"#utility.yul\":6897:6924   */\n      tag_540\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":6889:6895   */\n      dup2\n        /* \"#utility.yul\":6882:6925   */\n      mstore\n        /* \"#utility.yul\":6958:6994   */\n      tag_616\n        /* \"#utility.yul\":6990:6992   */\n      0x20\n        /* \"#utility.yul\":6979:6988   */\n      dup5\n        /* \"#utility.yul\":6975:6993   */\n      add\n        /* \"#utility.yul\":6958:6994   */\n      tag_540\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":6953:6955   */\n      0x20\n        /* \"#utility.yul\":6945:6951   */\n      dup3\n        /* \"#utility.yul\":6941:6956   */\n      add\n        /* \"#utility.yul\":6934:6995   */\n      mstore\n        /* \"#utility.yul\":7028:7064   */\n      tag_617\n        /* \"#utility.yul\":7060:7062   */\n      0x40\n        /* \"#utility.yul\":7049:7058   */\n      dup5\n        /* \"#utility.yul\":7045:7063   */\n      add\n        /* \"#utility.yul\":7028:7064   */\n      tag_540\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":7023:7025   */\n      0x40\n        /* \"#utility.yul\":7015:7021   */\n      dup3\n        /* \"#utility.yul\":7011:7026   */\n      add\n        /* \"#utility.yul\":7004:7065   */\n      mstore\n        /* \"#utility.yul\":7098:7134   */\n      tag_618\n        /* \"#utility.yul\":7130:7132   */\n      0x60\n        /* \"#utility.yul\":7119:7128   */\n      dup5\n        /* \"#utility.yul\":7115:7133   */\n      add\n        /* \"#utility.yul\":7098:7134   */\n      tag_540\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":7093:7095   */\n      0x60\n        /* \"#utility.yul\":7085:7091   */\n      dup3\n        /* \"#utility.yul\":7081:7096   */\n      add\n        /* \"#utility.yul\":7074:7135   */\n      mstore\n        /* \"#utility.yul\":7169:7206   */\n      tag_619\n        /* \"#utility.yul\":7201:7204   */\n      0x80\n        /* \"#utility.yul\":7190:7199   */\n      dup5\n        /* \"#utility.yul\":7186:7205   */\n      add\n        /* \"#utility.yul\":7169:7206   */\n      tag_540\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":7163:7166   */\n      0x80\n        /* \"#utility.yul\":7155:7161   */\n      dup3\n        /* \"#utility.yul\":7151:7167   */\n      add\n        /* \"#utility.yul\":7144:7207   */\n      mstore\n      pop\n        /* \"#utility.yul\":6512:7213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7218:8032   */\n    tag_117:\n        /* \"#utility.yul\":7367:7373   */\n      0x00\n        /* \"#utility.yul\":7375:7381   */\n      dup1\n        /* \"#utility.yul\":7383:7389   */\n      0x00\n        /* \"#utility.yul\":7391:7397   */\n      dup1\n        /* \"#utility.yul\":7399:7405   */\n      0x00\n        /* \"#utility.yul\":7452:7455   */\n      0x0120\n        /* \"#utility.yul\":7440:7449   */\n      dup7\n        /* \"#utility.yul\":7431:7438   */\n      dup9\n        /* \"#utility.yul\":7427:7450   */\n      sub\n        /* \"#utility.yul\":7423:7456   */\n      slt\n        /* \"#utility.yul\":7420:7473   */\n      iszero\n      tag_621\n      jumpi\n        /* \"#utility.yul\":7469:7470   */\n      0x00\n        /* \"#utility.yul\":7466:7467   */\n      dup1\n        /* \"#utility.yul\":7459:7471   */\n      revert\n        /* \"#utility.yul\":7420:7473   */\n    tag_621:\n        /* \"#utility.yul\":7505:7514   */\n      dup6\n        /* \"#utility.yul\":7492:7515   */\n      calldataload\n        /* \"#utility.yul\":7482:7515   */\n      swap5\n      pop\n        /* \"#utility.yul\":7562:7564   */\n      0x20\n        /* \"#utility.yul\":7551:7560   */\n      dup7\n        /* \"#utility.yul\":7547:7565   */\n      add\n        /* \"#utility.yul\":7534:7566   */\n      calldataload\n        /* \"#utility.yul\":7524:7566   */\n      swap4\n      pop\n        /* \"#utility.yul\":7617:7619   */\n      0x40\n        /* \"#utility.yul\":7606:7615   */\n      dup7\n        /* \"#utility.yul\":7602:7620   */\n      add\n        /* \"#utility.yul\":7589:7621   */\n      calldataload\n        /* \"#utility.yul\":7640:7658   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7681:7683   */\n      dup1\n        /* \"#utility.yul\":7673:7679   */\n      dup3\n        /* \"#utility.yul\":7670:7684   */\n      gt\n        /* \"#utility.yul\":7667:7701   */\n      iszero\n      tag_622\n      jumpi\n        /* \"#utility.yul\":7697:7698   */\n      0x00\n        /* \"#utility.yul\":7694:7695   */\n      dup1\n        /* \"#utility.yul\":7687:7699   */\n      revert\n        /* \"#utility.yul\":7667:7701   */\n    tag_622:\n        /* \"#utility.yul\":7720:7770   */\n      tag_623\n        /* \"#utility.yul\":7762:7769   */\n      dup10\n        /* \"#utility.yul\":7753:7759   */\n      dup4\n        /* \"#utility.yul\":7742:7751   */\n      dup11\n        /* \"#utility.yul\":7738:7760   */\n      add\n        /* \"#utility.yul\":7720:7770   */\n      tag_538\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":7710:7770   */\n      swap5\n      pop\n        /* \"#utility.yul\":7823:7825   */\n      0x60\n        /* \"#utility.yul\":7812:7821   */\n      dup9\n        /* \"#utility.yul\":7808:7826   */\n      add\n        /* \"#utility.yul\":7795:7827   */\n      calldataload\n        /* \"#utility.yul\":7779:7827   */\n      swap2\n      pop\n        /* \"#utility.yul\":7852:7854   */\n      dup1\n        /* \"#utility.yul\":7842:7850   */\n      dup3\n        /* \"#utility.yul\":7839:7855   */\n      gt\n        /* \"#utility.yul\":7836:7872   */\n      iszero\n      tag_624\n      jumpi\n        /* \"#utility.yul\":7868:7869   */\n      0x00\n        /* \"#utility.yul\":7865:7866   */\n      dup1\n        /* \"#utility.yul\":7858:7870   */\n      revert\n        /* \"#utility.yul\":7836:7872   */\n    tag_624:\n      pop\n        /* \"#utility.yul\":7891:7943   */\n      tag_625\n        /* \"#utility.yul\":7935:7942   */\n      dup9\n        /* \"#utility.yul\":7924:7932   */\n      dup3\n        /* \"#utility.yul\":7913:7922   */\n      dup10\n        /* \"#utility.yul\":7909:7933   */\n      add\n        /* \"#utility.yul\":7891:7943   */\n      tag_538\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":7881:7943   */\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":7962:8026   */\n      tag_626\n        /* \"#utility.yul\":8018:8025   */\n      dup8\n        /* \"#utility.yul\":8012:8015   */\n      0x80\n        /* \"#utility.yul\":8001:8010   */\n      dup9\n        /* \"#utility.yul\":7997:8016   */\n      add\n        /* \"#utility.yul\":7962:8026   */\n      tag_541\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":7952:8026   */\n      swap1\n      pop\n        /* \"#utility.yul\":7218:8032   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8037:8427   */\n    tag_154:\n        /* \"#utility.yul\":8115:8121   */\n      0x00\n        /* \"#utility.yul\":8123:8129   */\n      dup1\n        /* \"#utility.yul\":8176:8178   */\n      0x40\n        /* \"#utility.yul\":8164:8173   */\n      dup4\n        /* \"#utility.yul\":8155:8162   */\n      dup6\n        /* \"#utility.yul\":8151:8174   */\n      sub\n        /* \"#utility.yul\":8147:8179   */\n      slt\n        /* \"#utility.yul\":8144:8196   */\n      iszero\n      tag_628\n      jumpi\n        /* \"#utility.yul\":8192:8193   */\n      0x00\n        /* \"#utility.yul\":8189:8190   */\n      dup1\n        /* \"#utility.yul\":8182:8194   */\n      revert\n        /* \"#utility.yul\":8144:8196   */\n    tag_628:\n        /* \"#utility.yul\":8228:8237   */\n      dup3\n        /* \"#utility.yul\":8215:8238   */\n      calldataload\n        /* \"#utility.yul\":8205:8238   */\n      swap2\n      pop\n        /* \"#utility.yul\":8289:8291   */\n      0x20\n        /* \"#utility.yul\":8278:8287   */\n      dup4\n        /* \"#utility.yul\":8274:8292   */\n      add\n        /* \"#utility.yul\":8261:8293   */\n      calldataload\n        /* \"#utility.yul\":8316:8334   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8308:8314   */\n      dup2\n        /* \"#utility.yul\":8305:8335   */\n      gt\n        /* \"#utility.yul\":8302:8352   */\n      iszero\n      tag_629\n      jumpi\n        /* \"#utility.yul\":8348:8349   */\n      0x00\n        /* \"#utility.yul\":8345:8346   */\n      dup1\n        /* \"#utility.yul\":8338:8350   */\n      revert\n        /* \"#utility.yul\":8302:8352   */\n    tag_629:\n        /* \"#utility.yul\":8371:8421   */\n      tag_630\n        /* \"#utility.yul\":8413:8420   */\n      dup6\n        /* \"#utility.yul\":8404:8410   */\n      dup3\n        /* \"#utility.yul\":8393:8402   */\n      dup7\n        /* \"#utility.yul\":8389:8411   */\n      add\n        /* \"#utility.yul\":8371:8421   */\n      tag_538\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":8361:8421   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":8037:8427   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8432:8592   */\n    tag_542:\n        /* \"#utility.yul\":8497:8517   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":8553:8566   */\n      dup1\n      iszero\n        /* \"#utility.yul\":8546:8567   */\n      iszero\n        /* \"#utility.yul\":8536:8568   */\n      dup2\n      eq\n        /* \"#utility.yul\":8526:8586   */\n      tag_589\n      jumpi\n        /* \"#utility.yul\":8582:8583   */\n      0x00\n        /* \"#utility.yul\":8579:8580   */\n      dup1\n        /* \"#utility.yul\":8572:8584   */\n      revert\n        /* \"#utility.yul\":8597:8987   */\n    tag_158:\n        /* \"#utility.yul\":8672:8678   */\n      0x00\n        /* \"#utility.yul\":8680:8686   */\n      dup1\n        /* \"#utility.yul\":8733:8735   */\n      0x40\n        /* \"#utility.yul\":8721:8730   */\n      dup4\n        /* \"#utility.yul\":8712:8719   */\n      dup6\n        /* \"#utility.yul\":8708:8731   */\n      sub\n        /* \"#utility.yul\":8704:8736   */\n      slt\n        /* \"#utility.yul\":8701:8753   */\n      iszero\n      tag_634\n      jumpi\n        /* \"#utility.yul\":8749:8750   */\n      0x00\n        /* \"#utility.yul\":8746:8747   */\n      dup1\n        /* \"#utility.yul\":8739:8751   */\n      revert\n        /* \"#utility.yul\":8701:8753   */\n    tag_634:\n        /* \"#utility.yul\":8789:8798   */\n      dup3\n        /* \"#utility.yul\":8776:8799   */\n      calldataload\n        /* \"#utility.yul\":8822:8840   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8814:8820   */\n      dup2\n        /* \"#utility.yul\":8811:8841   */\n      gt\n        /* \"#utility.yul\":8808:8858   */\n      iszero\n      tag_635\n      jumpi\n        /* \"#utility.yul\":8854:8855   */\n      0x00\n        /* \"#utility.yul\":8851:8852   */\n      dup1\n        /* \"#utility.yul\":8844:8856   */\n      revert\n        /* \"#utility.yul\":8808:8858   */\n    tag_635:\n        /* \"#utility.yul\":8877:8927   */\n      tag_636\n        /* \"#utility.yul\":8919:8926   */\n      dup6\n        /* \"#utility.yul\":8910:8916   */\n      dup3\n        /* \"#utility.yul\":8899:8908   */\n      dup7\n        /* \"#utility.yul\":8895:8917   */\n      add\n        /* \"#utility.yul\":8877:8927   */\n      tag_538\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":8867:8927   */\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":8946:8981   */\n      tag_592\n        /* \"#utility.yul\":8977:8979   */\n      0x20\n        /* \"#utility.yul\":8966:8975   */\n      dup5\n        /* \"#utility.yul\":8962:8980   */\n      add\n        /* \"#utility.yul\":8946:8981   */\n      tag_542\n      jump\t// in\n        /* \"#utility.yul\":9640:9914   */\n    tag_175:\n        /* \"#utility.yul\":9842:9845   */\n      0xa0\n        /* \"#utility.yul\":9827:9846   */\n      dup2\n      add\n        /* \"#utility.yul\":9855:9908   */\n      tag_201\n        /* \"#utility.yul\":9831:9840   */\n      dup3\n        /* \"#utility.yul\":9890:9896   */\n      dup5\n        /* \"#utility.yul\":9355:9359   */\n      0xff\n        /* \"#utility.yul\":9347:9352   */\n      dup2\n        /* \"#utility.yul\":9341:9353   */\n      mload\n        /* \"#utility.yul\":9337:9360   */\n      and\n        /* \"#utility.yul\":9332:9335   */\n      dup3\n        /* \"#utility.yul\":9325:9361   */\n      mstore\n        /* \"#utility.yul\":9422:9426   */\n      0xff\n        /* \"#utility.yul\":9414:9418   */\n      0x20\n        /* \"#utility.yul\":9407:9412   */\n      dup3\n        /* \"#utility.yul\":9403:9419   */\n      add\n        /* \"#utility.yul\":9397:9420   */\n      mload\n        /* \"#utility.yul\":9393:9427   */\n      and\n        /* \"#utility.yul\":9386:9390   */\n      0x20\n        /* \"#utility.yul\":9381:9384   */\n      dup4\n        /* \"#utility.yul\":9377:9391   */\n      add\n        /* \"#utility.yul\":9370:9428   */\n      mstore\n        /* \"#utility.yul\":9489:9493   */\n      0xff\n        /* \"#utility.yul\":9481:9485   */\n      0x40\n        /* \"#utility.yul\":9474:9479   */\n      dup3\n        /* \"#utility.yul\":9470:9486   */\n      add\n        /* \"#utility.yul\":9464:9487   */\n      mload\n        /* \"#utility.yul\":9460:9494   */\n      and\n        /* \"#utility.yul\":9453:9457   */\n      0x40\n        /* \"#utility.yul\":9448:9451   */\n      dup4\n        /* \"#utility.yul\":9444:9458   */\n      add\n        /* \"#utility.yul\":9437:9495   */\n      mstore\n        /* \"#utility.yul\":9556:9560   */\n      0xff\n        /* \"#utility.yul\":9548:9552   */\n      0x60\n        /* \"#utility.yul\":9541:9546   */\n      dup3\n        /* \"#utility.yul\":9537:9553   */\n      add\n        /* \"#utility.yul\":9531:9554   */\n      mload\n        /* \"#utility.yul\":9527:9561   */\n      and\n        /* \"#utility.yul\":9520:9524   */\n      0x60\n        /* \"#utility.yul\":9515:9518   */\n      dup4\n        /* \"#utility.yul\":9511:9525   */\n      add\n        /* \"#utility.yul\":9504:9562   */\n      mstore\n        /* \"#utility.yul\":9623:9627   */\n      0xff\n        /* \"#utility.yul\":9615:9619   */\n      0x80\n        /* \"#utility.yul\":9608:9613   */\n      dup3\n        /* \"#utility.yul\":9604:9620   */\n      add\n        /* \"#utility.yul\":9598:9621   */\n      mload\n        /* \"#utility.yul\":9594:9628   */\n      and\n        /* \"#utility.yul\":9587:9591   */\n      0x80\n        /* \"#utility.yul\":9582:9585   */\n      dup4\n        /* \"#utility.yul\":9578:9592   */\n      add\n        /* \"#utility.yul\":9571:9629   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":9255:9635   */\n      jump\n        /* \"#utility.yul\":9919:10173   */\n    tag_181:\n        /* \"#utility.yul\":9984:9990   */\n      0x00\n        /* \"#utility.yul\":9992:9998   */\n      dup1\n        /* \"#utility.yul\":10045:10047   */\n      0x40\n        /* \"#utility.yul\":10033:10042   */\n      dup4\n        /* \"#utility.yul\":10024:10031   */\n      dup6\n        /* \"#utility.yul\":10020:10043   */\n      sub\n        /* \"#utility.yul\":10016:10048   */\n      slt\n        /* \"#utility.yul\":10013:10065   */\n      iszero\n      tag_643\n      jumpi\n        /* \"#utility.yul\":10061:10062   */\n      0x00\n        /* \"#utility.yul\":10058:10059   */\n      dup1\n        /* \"#utility.yul\":10051:10063   */\n      revert\n        /* \"#utility.yul\":10013:10065   */\n    tag_643:\n        /* \"#utility.yul\":10084:10113   */\n      tag_644\n        /* \"#utility.yul\":10103:10112   */\n      dup4\n        /* \"#utility.yul\":10084:10113   */\n      tag_539\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":10074:10113   */\n      swap2\n      pop\n        /* \"#utility.yul\":10132:10167   */\n      tag_592\n        /* \"#utility.yul\":10163:10165   */\n      0x20\n        /* \"#utility.yul\":10152:10161   */\n      dup5\n        /* \"#utility.yul\":10148:10166   */\n      add\n        /* \"#utility.yul\":10132:10167   */\n      tag_542\n      jump\t// in\n        /* \"#utility.yul\":10178:11261   */\n    tag_187:\n        /* \"#utility.yul\":10363:10365   */\n      0x20\n        /* \"#utility.yul\":10352:10361   */\n      dup2\n        /* \"#utility.yul\":10345:10366   */\n      mstore\n        /* \"#utility.yul\":10408:10414   */\n      dup2\n        /* \"#utility.yul\":10402:10415   */\n      mload\n        /* \"#utility.yul\":10397:10399   */\n      0x20\n        /* \"#utility.yul\":10386:10395   */\n      dup3\n        /* \"#utility.yul\":10382:10400   */\n      add\n        /* \"#utility.yul\":10375:10416   */\n      mstore\n        /* \"#utility.yul\":10470:10472   */\n      0x20\n        /* \"#utility.yul\":10462:10468   */\n      dup3\n        /* \"#utility.yul\":10458:10473   */\n      add\n        /* \"#utility.yul\":10452:10474   */\n      mload\n        /* \"#utility.yul\":10447:10449   */\n      0x40\n        /* \"#utility.yul\":10436:10445   */\n      dup3\n        /* \"#utility.yul\":10432:10450   */\n      add\n        /* \"#utility.yul\":10425:10475   */\n      mstore\n        /* \"#utility.yul\":10326:10330   */\n      0x00\n        /* \"#utility.yul\":10522:10524   */\n      0x40\n        /* \"#utility.yul\":10514:10520   */\n      dup4\n        /* \"#utility.yul\":10510:10525   */\n      add\n        /* \"#utility.yul\":10504:10526   */\n      mload\n        /* \"#utility.yul\":10562:10568   */\n      0x0180\n        /* \"#utility.yul\":10557:10559   */\n      0x60\n        /* \"#utility.yul\":10546:10555   */\n      dup5\n        /* \"#utility.yul\":10542:10560   */\n      add\n        /* \"#utility.yul\":10535:10569   */\n      mstore\n        /* \"#utility.yul\":10592:10644   */\n      tag_647\n        /* \"#utility.yul\":10639:10642   */\n      0x01a0\n        /* \"#utility.yul\":10628:10637   */\n      dup5\n        /* \"#utility.yul\":10624:10643   */\n      add\n        /* \"#utility.yul\":10610:10622   */\n      dup3\n        /* \"#utility.yul\":10592:10644   */\n      tag_536\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":10578:10644   */\n      swap1\n      pop\n        /* \"#utility.yul\":10693:10695   */\n      0x60\n        /* \"#utility.yul\":10685:10691   */\n      dup5\n        /* \"#utility.yul\":10681:10696   */\n      add\n        /* \"#utility.yul\":10675:10697   */\n      mload\n        /* \"#utility.yul\":10766:10768   */\n      0x1f\n        /* \"#utility.yul\":10762:10769   */\n      not\n        /* \"#utility.yul\":10750:10759   */\n      dup5\n        /* \"#utility.yul\":10742:10748   */\n      dup4\n        /* \"#utility.yul\":10738:10760   */\n      sub\n        /* \"#utility.yul\":10734:10770   */\n      add\n        /* \"#utility.yul\":10728:10731   */\n      0x80\n        /* \"#utility.yul\":10717:10726   */\n      dup6\n        /* \"#utility.yul\":10713:10732   */\n      add\n        /* \"#utility.yul\":10706:10771   */\n      mstore\n        /* \"#utility.yul\":10794:10835   */\n      tag_648\n        /* \"#utility.yul\":10828:10834   */\n      dup3\n        /* \"#utility.yul\":10812:10826   */\n      dup3\n        /* \"#utility.yul\":10794:10835   */\n      tag_536\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":10780:10835   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":10890:10893   */\n      0x80\n        /* \"#utility.yul\":10882:10888   */\n      dup5\n        /* \"#utility.yul\":10878:10894   */\n      add\n        /* \"#utility.yul\":10872:10895   */\n      mload\n        /* \"#utility.yul\":10866:10869   */\n      0xa0\n        /* \"#utility.yul\":10855:10864   */\n      dup5\n        /* \"#utility.yul\":10851:10870   */\n      add\n        /* \"#utility.yul\":10844:10896   */\n      mstore\n        /* \"#utility.yul\":10979:10980   */\n      0x01\n        /* \"#utility.yul\":10975:10976   */\n      dup1\n        /* \"#utility.yul\":10970:10973   */\n      0xa0\n        /* \"#utility.yul\":10966:10977   */\n      shl\n        /* \"#utility.yul\":10962:10981   */\n      sub\n        /* \"#utility.yul\":10955:10958   */\n      0xa0\n        /* \"#utility.yul\":10947:10953   */\n      dup6\n        /* \"#utility.yul\":10943:10959   */\n      add\n        /* \"#utility.yul\":10937:10960   */\n      mload\n        /* \"#utility.yul\":10933:10982   */\n      and\n        /* \"#utility.yul\":10927:10930   */\n      0xc0\n        /* \"#utility.yul\":10916:10925   */\n      dup5\n        /* \"#utility.yul\":10912:10931   */\n      add\n        /* \"#utility.yul\":10905:10983   */\n      mstore\n        /* \"#utility.yul\":11032:11035   */\n      0xc0\n        /* \"#utility.yul\":11024:11030   */\n      dup5\n        /* \"#utility.yul\":11020:11036   */\n      add\n        /* \"#utility.yul\":11014:11037   */\n      mload\n        /* \"#utility.yul\":11046:11098   */\n      tag_649\n        /* \"#utility.yul\":11093:11096   */\n      0xe0\n        /* \"#utility.yul\":11082:11091   */\n      dup6\n        /* \"#utility.yul\":11078:11097   */\n      add\n        /* \"#utility.yul\":11062:11076   */\n      dup3\n        /* \"#utility.yul\":375:388   */\n      iszero\n        /* \"#utility.yul\":368:389   */\n      iszero\n        /* \"#utility.yul\":356:390   */\n      swap1\n      mstore\n        /* \"#utility.yul\":305:396   */\n      jump\n        /* \"#utility.yul\":11046:11098   */\n    tag_649:\n      pop\n        /* \"#utility.yul\":11147:11150   */\n      0xe0\n        /* \"#utility.yul\":11135:11151   */\n      dup5\n      add\n        /* \"#utility.yul\":11129:11152   */\n      mload\n        /* \"#utility.yul\":9341:9353   */\n      dup1\n      mload\n        /* \"#utility.yul\":9355:9359   */\n      0xff\n        /* \"#utility.yul\":9337:9360   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":11227:11230   */\n      0x0100\n        /* \"#utility.yul\":11212:11231   */\n      dup7\n      add\n        /* \"#utility.yul\":9325:9361   */\n      mstore\n        /* \"#utility.yul\":9414:9418   */\n      0x20\n        /* \"#utility.yul\":9403:9419   */\n      dup3\n      add\n        /* \"#utility.yul\":9397:9420   */\n      mload\n        /* \"#utility.yul\":9393:9427   */\n      dup2\n      and\n        /* \"#utility.yul\":9377:9391   */\n      0x0120\n      dup7\n      add\n        /* \"#utility.yul\":9370:9428   */\n      mstore\n        /* \"#utility.yul\":9481:9485   */\n      0x40\n        /* \"#utility.yul\":9470:9486   */\n      dup3\n      add\n        /* \"#utility.yul\":9464:9487   */\n      mload\n        /* \"#utility.yul\":9460:9494   */\n      dup2\n      and\n        /* \"#utility.yul\":9444:9458   */\n      0x0140\n      dup7\n      add\n        /* \"#utility.yul\":9437:9495   */\n      mstore\n        /* \"#utility.yul\":9548:9552   */\n      0x60\n        /* \"#utility.yul\":9537:9553   */\n      dup3\n      add\n        /* \"#utility.yul\":9531:9554   */\n      mload\n        /* \"#utility.yul\":9527:9561   */\n      dup2\n      and\n        /* \"#utility.yul\":9511:9525   */\n      0x0160\n      dup7\n      add\n        /* \"#utility.yul\":9504:9562   */\n      mstore\n        /* \"#utility.yul\":9615:9619   */\n      0x80\n        /* \"#utility.yul\":9604:9620   */\n      dup3\n      add\n        /* \"#utility.yul\":9598:9621   */\n      mload\n        /* \"#utility.yul\":9594:9628   */\n      and\n        /* \"#utility.yul\":9578:9592   */\n      0x0180\n      dup6\n      add\n        /* \"#utility.yul\":9571:9629   */\n      mstore\n        /* \"#utility.yul\":11161:11232   */\n      tag_374\n        /* \"#utility.yul\":9255:9635   */\n      jump\n        /* \"#utility.yul\":11266:11898   */\n    tag_194:\n        /* \"#utility.yul\":11437:11439   */\n      0x20\n        /* \"#utility.yul\":11489:11510   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11559:11572   */\n      dup3\n      mload\n        /* \"#utility.yul\":11462:11480   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":11581:11603   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11408:11412   */\n      0x00\n      swap2\n        /* \"#utility.yul\":11437:11439   */\n      swap1\n        /* \"#utility.yul\":11660:11675   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":11634:11636   */\n      0x40\n        /* \"#utility.yul\":11619:11637   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":11408:11412   */\n      dup5\n        /* \"#utility.yul\":11703:11872   */\n    tag_652:\n        /* \"#utility.yul\":11717:11723   */\n      dup2\n        /* \"#utility.yul\":11714:11715   */\n      dup2\n        /* \"#utility.yul\":11711:11724   */\n      lt\n        /* \"#utility.yul\":11703:11872   */\n      iszero\n      tag_654\n      jumpi\n        /* \"#utility.yul\":11778:11791   */\n      dup4\n      mload\n        /* \"#utility.yul\":11766:11792   */\n      dup4\n      mstore\n        /* \"#utility.yul\":11847:11862   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":11812:11824   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":11739:11740   */\n      0x01\n        /* \"#utility.yul\":11732:11741   */\n      add\n        /* \"#utility.yul\":11703:11872   */\n      jump(tag_652)\n    tag_654:\n      pop\n        /* \"#utility.yul\":11889:11892   */\n      swap1\n      swap7\n        /* \"#utility.yul\":11266:11898   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11903:12147   */\n    tag_197:\n        /* \"#utility.yul\":11994:12000   */\n      0x00\n        /* \"#utility.yul\":12047:12050   */\n      0xa0\n        /* \"#utility.yul\":12035:12044   */\n      dup3\n        /* \"#utility.yul\":12026:12033   */\n      dup5\n        /* \"#utility.yul\":12022:12045   */\n      sub\n        /* \"#utility.yul\":12018:12051   */\n      slt\n        /* \"#utility.yul\":12015:12068   */\n      iszero\n      tag_656\n      jumpi\n        /* \"#utility.yul\":12064:12065   */\n      0x00\n        /* \"#utility.yul\":12061:12062   */\n      dup1\n        /* \"#utility.yul\":12054:12066   */\n      revert\n        /* \"#utility.yul\":12015:12068   */\n    tag_656:\n        /* \"#utility.yul\":12087:12141   */\n      tag_551\n        /* \"#utility.yul\":12133:12140   */\n      dup4\n        /* \"#utility.yul\":12122:12131   */\n      dup4\n        /* \"#utility.yul\":12087:12141   */\n      tag_541\n      jump\t// in\n        /* \"#utility.yul\":12152:12495   */\n    tag_206:\n        /* \"#utility.yul\":12354:12356   */\n      0x20\n        /* \"#utility.yul\":12336:12357   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12393:12395   */\n      0x13\n        /* \"#utility.yul\":12373:12391   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12366:12396   */\n      mstore\n      shl(0x6a, 0x125b9d985b1a59081c1c9bdc1bdcd85b081251)\n        /* \"#utility.yul\":12427:12429   */\n      0x40\n        /* \"#utility.yul\":12412:12430   */\n      dup3\n      add\n        /* \"#utility.yul\":12405:12454   */\n      mstore\n        /* \"#utility.yul\":12486:12488   */\n      0x60\n        /* \"#utility.yul\":12471:12489   */\n      add\n      swap1\n        /* \"#utility.yul\":12152:12495   */\n      jump\t// out\n        /* \"#utility.yul\":12500:12880   */\n    tag_209:\n        /* \"#utility.yul\":12579:12580   */\n      0x01\n        /* \"#utility.yul\":12575:12587   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":12622:12634   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":12643:12704   */\n      tag_660\n      jumpi\n        /* \"#utility.yul\":12697:12701   */\n      0x7f\n        /* \"#utility.yul\":12689:12695   */\n      dup3\n        /* \"#utility.yul\":12685:12702   */\n      and\n        /* \"#utility.yul\":12675:12702   */\n      swap2\n      pop\n        /* \"#utility.yul\":12643:12704   */\n    tag_660:\n        /* \"#utility.yul\":12750:12752   */\n      0x20\n        /* \"#utility.yul\":12742:12748   */\n      dup3\n        /* \"#utility.yul\":12739:12753   */\n      lt\n        /* \"#utility.yul\":12719:12737   */\n      dup2\n        /* \"#utility.yul\":12716:12754   */\n      sub\n        /* \"#utility.yul\":12713:12874   */\n      tag_370\n      jumpi\n        /* \"#utility.yul\":12796:12806   */\n      0x4e487b71\n        /* \"#utility.yul\":12791:12794   */\n      0xe0\n        /* \"#utility.yul\":12787:12807   */\n      shl\n        /* \"#utility.yul\":12784:12785   */\n      0x00\n        /* \"#utility.yul\":12777:12808   */\n      mstore\n        /* \"#utility.yul\":12831:12835   */\n      0x22\n        /* \"#utility.yul\":12828:12829   */\n      0x04\n        /* \"#utility.yul\":12821:12836   */\n      mstore\n        /* \"#utility.yul\":12859:12863   */\n      0x24\n        /* \"#utility.yul\":12856:12857   */\n      0x00\n        /* \"#utility.yul\":12849:12864   */\n      revert\n        /* \"#utility.yul\":13582:13926   */\n    tag_233:\n        /* \"#utility.yul\":13784:13786   */\n      0x20\n        /* \"#utility.yul\":13766:13787   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":13823:13825   */\n      0x14\n        /* \"#utility.yul\":13803:13821   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":13796:13826   */\n      mstore\n      shl(0x62, 0x14d8dbdc9948191bd95cc81b9bdd08195e1a5cdd)\n        /* \"#utility.yul\":13857:13859   */\n      0x40\n        /* \"#utility.yul\":13842:13860   */\n      dup3\n      add\n        /* \"#utility.yul\":13835:13885   */\n      mstore\n        /* \"#utility.yul\":13917:13919   */\n      0x60\n        /* \"#utility.yul\":13902:13920   */\n      add\n      swap1\n        /* \"#utility.yul\":13582:13926   */\n      jump\t// out\n        /* \"#utility.yul\":14279:14406   */\n    tag_544:\n        /* \"#utility.yul\":14340:14350   */\n      0x4e487b71\n        /* \"#utility.yul\":14335:14338   */\n      0xe0\n        /* \"#utility.yul\":14331:14351   */\n      shl\n        /* \"#utility.yul\":14328:14329   */\n      0x00\n        /* \"#utility.yul\":14321:14352   */\n      mstore\n        /* \"#utility.yul\":14371:14375   */\n      0x11\n        /* \"#utility.yul\":14368:14369   */\n      0x04\n        /* \"#utility.yul\":14361:14376   */\n      mstore\n        /* \"#utility.yul\":14395:14399   */\n      0x24\n        /* \"#utility.yul\":14392:14393   */\n      0x00\n        /* \"#utility.yul\":14385:14400   */\n      revert\n        /* \"#utility.yul\":14411:14536   */\n    tag_238:\n        /* \"#utility.yul\":14476:14485   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":14497:14507   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":14494:14530   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":14510:14528   */\n      tag_201\n      tag_544\n      jump\t// in\n        /* \"#utility.yul\":15368:15913   */\n    tag_546:\n        /* \"#utility.yul\":15470:15472   */\n      0x1f\n        /* \"#utility.yul\":15465:15468   */\n      dup3\n        /* \"#utility.yul\":15462:15473   */\n      gt\n        /* \"#utility.yul\":15459:15907   */\n      iszero\n      tag_260\n      jumpi\n        /* \"#utility.yul\":15506:15507   */\n      0x00\n        /* \"#utility.yul\":15531:15536   */\n      dup2\n        /* \"#utility.yul\":15527:15529   */\n      dup2\n        /* \"#utility.yul\":15520:15537   */\n      mstore\n        /* \"#utility.yul\":15576:15580   */\n      0x20\n        /* \"#utility.yul\":15572:15574   */\n      dup2\n        /* \"#utility.yul\":15562:15581   */\n      keccak256\n        /* \"#utility.yul\":15646:15648   */\n      0x1f\n        /* \"#utility.yul\":15634:15644   */\n      dup6\n        /* \"#utility.yul\":15630:15649   */\n      add\n        /* \"#utility.yul\":15627:15628   */\n      0x05\n        /* \"#utility.yul\":15623:15650   */\n      shr\n        /* \"#utility.yul\":15617:15621   */\n      dup2\n        /* \"#utility.yul\":15613:15651   */\n      add\n        /* \"#utility.yul\":15682:15686   */\n      0x20\n        /* \"#utility.yul\":15670:15680   */\n      dup7\n        /* \"#utility.yul\":15667:15687   */\n      lt\n        /* \"#utility.yul\":15664:15711   */\n      iszero\n      tag_675\n      jumpi\n      pop\n        /* \"#utility.yul\":15705:15709   */\n      dup1\n        /* \"#utility.yul\":15664:15711   */\n    tag_675:\n        /* \"#utility.yul\":15760:15762   */\n      0x1f\n        /* \"#utility.yul\":15755:15758   */\n      dup6\n        /* \"#utility.yul\":15751:15763   */\n      add\n        /* \"#utility.yul\":15748:15749   */\n      0x05\n        /* \"#utility.yul\":15744:15764   */\n      shr\n        /* \"#utility.yul\":15738:15742   */\n      dup3\n        /* \"#utility.yul\":15734:15765   */\n      add\n        /* \"#utility.yul\":15724:15765   */\n      swap2\n      pop\n        /* \"#utility.yul\":15815:15897   */\n    tag_676:\n        /* \"#utility.yul\":15833:15835   */\n      dup2\n        /* \"#utility.yul\":15826:15831   */\n      dup2\n        /* \"#utility.yul\":15823:15836   */\n      lt\n        /* \"#utility.yul\":15815:15897   */\n      iszero\n      tag_678\n      jumpi\n        /* \"#utility.yul\":15878:15895   */\n      dup3\n      dup2\n      sstore\n        /* \"#utility.yul\":15859:15860   */\n      0x01\n        /* \"#utility.yul\":15848:15861   */\n      add\n        /* \"#utility.yul\":15815:15897   */\n      jump(tag_676)\n    tag_678:\n        /* \"#utility.yul\":15819:15822   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":15368:15913   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16089:17441   */\n    tag_246:\n        /* \"#utility.yul\":16215:16218   */\n      dup2\n        /* \"#utility.yul\":16209:16219   */\n      mload\n        /* \"#utility.yul\":16242:16260   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16234:16240   */\n      dup2\n        /* \"#utility.yul\":16231:16261   */\n      gt\n        /* \"#utility.yul\":16228:16284   */\n      iszero\n      tag_682\n      jumpi\n        /* \"#utility.yul\":16264:16282   */\n      tag_682\n      tag_452\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":16293:16390   */\n      tag_683\n        /* \"#utility.yul\":16383:16389   */\n      dup2\n        /* \"#utility.yul\":16343:16381   */\n      tag_684\n        /* \"#utility.yul\":16375:16379   */\n      dup5\n        /* \"#utility.yul\":16369:16380   */\n      sload\n        /* \"#utility.yul\":16343:16381   */\n      tag_209\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":16337:16341   */\n      dup5\n        /* \"#utility.yul\":16293:16390   */\n      tag_546\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":16445:16449   */\n      0x20\n      dup1\n        /* \"#utility.yul\":16509:16511   */\n      0x1f\n        /* \"#utility.yul\":16498:16512   */\n      dup4\n      gt\n        /* \"#utility.yul\":16526:16527   */\n      0x01\n        /* \"#utility.yul\":16521:17184   */\n      dup2\n      eq\n      tag_686\n      jumpi\n        /* \"#utility.yul\":17228:17229   */\n      0x00\n        /* \"#utility.yul\":17245:17251   */\n      dup5\n        /* \"#utility.yul\":17242:17331   */\n      iszero\n      tag_687\n      jumpi\n      pop\n        /* \"#utility.yul\":17297:17316   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":17291:17317   */\n      mload\n        /* \"#utility.yul\":17242:17331   */\n    tag_687:\n      not(0x00)\n        /* \"#utility.yul\":16046:16047   */\n      0x03\n        /* \"#utility.yul\":16042:16053   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":16038:16062   */\n      shr\n        /* \"#utility.yul\":16034:16063   */\n      not\n        /* \"#utility.yul\":16024:16064   */\n      and\n        /* \"#utility.yul\":16070:16071   */\n      0x01\n        /* \"#utility.yul\":16066:16077   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":16021:16078   */\n      or\n        /* \"#utility.yul\":17344:17425   */\n      dup6\n      sstore\n        /* \"#utility.yul\":16491:17435   */\n      jump(tag_678)\n        /* \"#utility.yul\":16521:17184   */\n    tag_686:\n        /* \"#utility.yul\":15315:15316   */\n      0x00\n        /* \"#utility.yul\":15308:15322   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":15352:15356   */\n      0x20\n        /* \"#utility.yul\":15339:15357   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":16557:16577   */\n      dup7\n      and\n      swap2\n        /* \"#utility.yul\":16675:16911   */\n    tag_690:\n        /* \"#utility.yul\":16689:16696   */\n      dup3\n        /* \"#utility.yul\":16686:16687   */\n      dup2\n        /* \"#utility.yul\":16683:16697   */\n      lt\n        /* \"#utility.yul\":16675:16911   */\n      iszero\n      tag_692\n      jumpi\n        /* \"#utility.yul\":16778:16797   */\n      dup9\n      dup7\n      add\n        /* \"#utility.yul\":16772:16798   */\n      mload\n        /* \"#utility.yul\":16757:16799   */\n      dup3\n      sstore\n        /* \"#utility.yul\":16870:16897   */\n      swap5\n      dup5\n      add\n      swap5\n        /* \"#utility.yul\":16838:16839   */\n      0x01\n        /* \"#utility.yul\":16826:16840   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":16705:16724   */\n      dup5\n      add\n        /* \"#utility.yul\":16675:16911   */\n      jump(tag_690)\n    tag_692:\n        /* \"#utility.yul\":16679:16682   */\n      pop\n        /* \"#utility.yul\":16939:16945   */\n      dup6\n        /* \"#utility.yul\":16930:16937   */\n      dup3\n        /* \"#utility.yul\":16927:16946   */\n      lt\n        /* \"#utility.yul\":16924:17125   */\n      iszero\n      tag_693\n      jumpi\n        /* \"#utility.yul\":17000:17019   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":16994:17020   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":17083:17084   */\n      0x03\n        /* \"#utility.yul\":17079:17093   */\n      dup9\n      swap1\n      shl\n        /* \"#utility.yul\":17095:17098   */\n      0xf8\n        /* \"#utility.yul\":17075:17099   */\n      and\n        /* \"#utility.yul\":17071:17108   */\n      shr\n        /* \"#utility.yul\":17067:17109   */\n      not\n        /* \"#utility.yul\":17052:17110   */\n      and\n        /* \"#utility.yul\":17037:17111   */\n      dup2\n      sstore\n        /* \"#utility.yul\":16924:17125   */\n    tag_693:\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":17171:17172   */\n      0x01\n        /* \"#utility.yul\":17155:17169   */\n      swap1\n      dup2\n      shl\n        /* \"#utility.yul\":17151:17173   */\n      add\n        /* \"#utility.yul\":17138:17174   */\n      swap1\n      sstore\n      pop\n        /* \"#utility.yul\":16089:17441   */\n      jump\t// out\n        /* \"#utility.yul\":17446:17737   */\n    tag_248:\n        /* \"#utility.yul\":17623:17629   */\n      dup3\n        /* \"#utility.yul\":17612:17621   */\n      dup2\n        /* \"#utility.yul\":17605:17630   */\n      mstore\n        /* \"#utility.yul\":17666:17668   */\n      0x40\n        /* \"#utility.yul\":17661:17663   */\n      0x20\n        /* \"#utility.yul\":17650:17659   */\n      dup3\n        /* \"#utility.yul\":17646:17664   */\n      add\n        /* \"#utility.yul\":17639:17669   */\n      mstore\n        /* \"#utility.yul\":17586:17590   */\n      0x00\n        /* \"#utility.yul\":17686:17731   */\n      tag_587\n        /* \"#utility.yul\":17727:17729   */\n      0x40\n        /* \"#utility.yul\":17716:17725   */\n      dup4\n        /* \"#utility.yul\":17712:17730   */\n      add\n        /* \"#utility.yul\":17704:17710   */\n      dup5\n        /* \"#utility.yul\":17686:17731   */\n      tag_536\n      jump\t// in\n        /* \"#utility.yul\":17742:17869   */\n    tag_276:\n        /* \"#utility.yul\":17803:17813   */\n      0x4e487b71\n        /* \"#utility.yul\":17798:17801   */\n      0xe0\n        /* \"#utility.yul\":17794:17814   */\n      shl\n        /* \"#utility.yul\":17791:17792   */\n      0x00\n        /* \"#utility.yul\":17784:17815   */\n      mstore\n        /* \"#utility.yul\":17834:17838   */\n      0x32\n        /* \"#utility.yul\":17831:17832   */\n      0x04\n        /* \"#utility.yul\":17824:17839   */\n      mstore\n        /* \"#utility.yul\":17858:17862   */\n      0x24\n        /* \"#utility.yul\":17855:17856   */\n      0x00\n        /* \"#utility.yul\":17848:17863   */\n      revert\n        /* \"#utility.yul\":17874:18009   */\n    tag_278:\n        /* \"#utility.yul\":17913:17916   */\n      0x00\n        /* \"#utility.yul\":17934:17951   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":17931:17974   */\n      tag_699\n      jumpi\n        /* \"#utility.yul\":17954:17972   */\n      tag_699\n      tag_544\n      jump\t// in\n    tag_699:\n      pop\n        /* \"#utility.yul\":18001:18002   */\n      0x01\n        /* \"#utility.yul\":17990:18003   */\n      add\n      swap1\n        /* \"#utility.yul\":17874:18009   */\n      jump\t// out\n        /* \"#utility.yul\":18370:18659   */\n    tag_309:\n        /* \"#utility.yul\":18501:18504   */\n      0x00\n        /* \"#utility.yul\":18539:18545   */\n      dup3\n        /* \"#utility.yul\":18533:18546   */\n      mload\n        /* \"#utility.yul\":18555:18621   */\n      tag_702\n        /* \"#utility.yul\":18614:18620   */\n      dup2\n        /* \"#utility.yul\":18609:18612   */\n      dup5\n        /* \"#utility.yul\":18602:18606   */\n      0x20\n        /* \"#utility.yul\":18594:18600   */\n      dup8\n        /* \"#utility.yul\":18590:18607   */\n      add\n        /* \"#utility.yul\":18555:18621   */\n      tag_535\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":18637:18653   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":18370:18659   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19715:19940   */\n    tag_324:\n        /* \"#utility.yul\":19819:19823   */\n      0xff\n        /* \"#utility.yul\":19798:19810   */\n      dup2\n      dup2\n      and\n        /* \"#utility.yul\":19812:19824   */\n      dup4\n      dup3\n      and\n        /* \"#utility.yul\":19794:19825   */\n      mul\n        /* \"#utility.yul\":19845:19867   */\n      swap1\n      dup2\n      and\n      swap1\n        /* \"#utility.yul\":19886:19910   */\n      dup2\n      dup2\n      eq\n        /* \"#utility.yul\":19876:19934   */\n      tag_708\n      jumpi\n        /* \"#utility.yul\":19914:19932   */\n      tag_708\n      tag_544\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":19876:19934   */\n      pop\n        /* \"#utility.yul\":19715:19940   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19945:20093   */\n    tag_330:\n        /* \"#utility.yul\":20033:20037   */\n      0xff\n        /* \"#utility.yul\":20012:20024   */\n      dup2\n      dup2\n      and\n        /* \"#utility.yul\":20026:20038   */\n      dup4\n      dup3\n      and\n        /* \"#utility.yul\":20008:20039   */\n      add\n      swap1\n        /* \"#utility.yul\":20051:20064   */\n      dup2\n      gt\n        /* \"#utility.yul\":20048:20087   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":20067:20085   */\n      tag_201\n      tag_544\n      jump\t// in\n        /* \"#utility.yul\":20098:20360   */\n    tag_335:\n        /* \"#utility.yul\":20136:20137   */\n      0x00\n        /* \"#utility.yul\":20170:20174   */\n      0xff\n        /* \"#utility.yul\":20167:20168   */\n      dup4\n        /* \"#utility.yul\":20163:20175   */\n      and\n        /* \"#utility.yul\":20194:20197   */\n      dup1\n        /* \"#utility.yul\":20184:20318   */\n      tag_713\n      jumpi\n        /* \"#utility.yul\":20240:20250   */\n      0x4e487b71\n        /* \"#utility.yul\":20235:20238   */\n      0xe0\n        /* \"#utility.yul\":20231:20251   */\n      shl\n        /* \"#utility.yul\":20228:20229   */\n      0x00\n        /* \"#utility.yul\":20221:20252   */\n      mstore\n        /* \"#utility.yul\":20275:20279   */\n      0x12\n        /* \"#utility.yul\":20272:20273   */\n      0x04\n        /* \"#utility.yul\":20265:20280   */\n      mstore\n        /* \"#utility.yul\":20303:20307   */\n      0x24\n        /* \"#utility.yul\":20300:20301   */\n      0x00\n        /* \"#utility.yul\":20293:20308   */\n      revert\n        /* \"#utility.yul\":20184:20318   */\n    tag_713:\n        /* \"#utility.yul\":20350:20353   */\n      dup1\n        /* \"#utility.yul\":20343:20347   */\n      0xff\n        /* \"#utility.yul\":20340:20341   */\n      dup5\n        /* \"#utility.yul\":20336:20348   */\n      and\n        /* \"#utility.yul\":20332:20354   */\n      div\n        /* \"#utility.yul\":20327:20354   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":20098:20360   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20365:20493   */\n    tag_337:\n        /* \"#utility.yul\":20432:20441   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":20453:20464   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":20450:20487   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":20467:20485   */\n      tag_201\n      tag_544\n      jump\t// in\n        /* \"#utility.yul\":20900:21427   */\n    tag_348:\n        /* \"#utility.yul\":21153:21159   */\n      dup5\n        /* \"#utility.yul\":21142:21151   */\n      dup2\n        /* \"#utility.yul\":21135:21160   */\n      mstore\n        /* \"#utility.yul\":21196:21199   */\n      0x80\n        /* \"#utility.yul\":21191:21193   */\n      0x20\n        /* \"#utility.yul\":21180:21189   */\n      dup3\n        /* \"#utility.yul\":21176:21194   */\n      add\n        /* \"#utility.yul\":21169:21200   */\n      mstore\n        /* \"#utility.yul\":21116:21120   */\n      0x00\n        /* \"#utility.yul\":21223:21269   */\n      tag_719\n        /* \"#utility.yul\":21264:21267   */\n      0x80\n        /* \"#utility.yul\":21253:21262   */\n      dup4\n        /* \"#utility.yul\":21249:21268   */\n      add\n        /* \"#utility.yul\":21241:21247   */\n      dup7\n        /* \"#utility.yul\":21223:21269   */\n      tag_536\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":21317:21326   */\n      dup3\n        /* \"#utility.yul\":21309:21315   */\n      dup2\n        /* \"#utility.yul\":21305:21327   */\n      sub\n        /* \"#utility.yul\":21300:21302   */\n      0x40\n        /* \"#utility.yul\":21289:21298   */\n      dup5\n        /* \"#utility.yul\":21285:21303   */\n      add\n        /* \"#utility.yul\":21278:21328   */\n      mstore\n        /* \"#utility.yul\":21345:21378   */\n      tag_720\n        /* \"#utility.yul\":21371:21377   */\n      dup2\n        /* \"#utility.yul\":21363:21369   */\n      dup7\n        /* \"#utility.yul\":21345:21378   */\n      tag_536\n      jump\t// in\n    tag_720:\n        /* \"#utility.yul\":21337:21378   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":21414:21420   */\n      dup3\n        /* \"#utility.yul\":21409:21411   */\n      0x60\n        /* \"#utility.yul\":21398:21407   */\n      dup4\n        /* \"#utility.yul\":21394:21412   */\n      add\n        /* \"#utility.yul\":21387:21421   */\n      mstore\n        /* \"#utility.yul\":20900:21427   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21776:21912   */\n    tag_394:\n        /* \"#utility.yul\":21815:21818   */\n      0x00\n        /* \"#utility.yul\":21843:21848   */\n      dup2\n        /* \"#utility.yul\":21833:21872   */\n      tag_724\n      jumpi\n        /* \"#utility.yul\":21852:21870   */\n      tag_724\n      tag_544\n      jump\t// in\n    tag_724:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":21888:21906   */\n      add\n      swap1\n        /* \"#utility.yul\":21776:21912   */\n      jump\t// out\n        /* \"#utility.yul\":22571:22872   */\n    tag_405:\n        /* \"#utility.yul\":22742:22744   */\n      0x40\n        /* \"#utility.yul\":22731:22740   */\n      dup2\n        /* \"#utility.yul\":22724:22745   */\n      mstore\n        /* \"#utility.yul\":22705:22709   */\n      0x00\n        /* \"#utility.yul\":22762:22807   */\n      tag_729\n        /* \"#utility.yul\":22803:22805   */\n      0x40\n        /* \"#utility.yul\":22792:22801   */\n      dup4\n        /* \"#utility.yul\":22788:22806   */\n      add\n        /* \"#utility.yul\":22780:22786   */\n      dup6\n        /* \"#utility.yul\":22762:22807   */\n      tag_536\n      jump\t// in\n    tag_729:\n        /* \"#utility.yul\":22754:22807   */\n      swap1\n      pop\n        /* \"#utility.yul\":22857:22863   */\n      dup3\n        /* \"#utility.yul\":22850:22864   */\n      iszero\n        /* \"#utility.yul\":22843:22865   */\n      iszero\n        /* \"#utility.yul\":22838:22840   */\n      0x20\n        /* \"#utility.yul\":22827:22836   */\n      dup4\n        /* \"#utility.yul\":22823:22841   */\n      add\n        /* \"#utility.yul\":22816:22866   */\n      mstore\n        /* \"#utility.yul\":22571:22872   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_a33092ec2ea5e84579a4a7f81a8171c84a984183e655ab76a6ea5c0d5344c7b0 482648e7878e9fa54c0a2f67ffd22d00ebc37cf7a03e060e428d2ab0cd6735cc\n    data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8 a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n\n    auxdata: 0xa26469706673582212202827ecd50a525cd6b10675f9849ddba10548dbeb2e9cd48d3e93b294c561738264736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1482": {
									"entryPoint": null,
									"id": 1482,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_406": {
									"entryPoint": null,
									"id": 406,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_506": {
									"entryPoint": null,
									"id": 506,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_804": {
									"entryPoint": null,
									"id": 804,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_grantRole_257": {
									"entryPoint": 309,
									"id": 257,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_564": {
									"entryPoint": null,
									"id": 564,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_81": {
									"entryPoint": null,
									"id": 81,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_11de9be17dd9710e02579f1d3d096fba221ae653f68d1d6cff1fad0d446c1346__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_stringliteral_c235908f3fc48dcce6e16e1e3337122520ccf4d205e2a9e98b1319347573ff32__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:534:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "206:63:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "223:3:10"
																	},
																	{
																		"hexValue": "4750542d34",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "228:7:10",
																		"type": "",
																		"value": "GPT-4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "216:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "216:20:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "216:20:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "245:18:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "256:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "261:1:10",
																		"type": "",
																		"value": "5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "252:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:11:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "245:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_11de9be17dd9710e02579f1d3d096fba221ae653f68d1d6cff1fad0d446c1346__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "190:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "198:3:10",
														"type": ""
													}
												],
												"src": "14:255:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "466:66:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "483:3:10"
																	},
																	{
																		"hexValue": "436c617564652d33",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "488:10:10",
																		"type": "",
																		"value": "Claude-3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "476:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "476:23:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "476:23:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "508:18:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "519:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "524:1:10",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "515:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "515:11:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "508:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c235908f3fc48dcce6e16e1e3337122520ccf4d205e2a9e98b1319347573ff32__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "450:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "458:3:10",
														"type": ""
													}
												],
												"src": "274:258:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_packed_t_stringliteral_11de9be17dd9710e02579f1d3d096fba221ae653f68d1d6cff1fad0d446c1346__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"GPT-4\")\n        end := add(pos, 5)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c235908f3fc48dcce6e16e1e3337122520ccf4d205e2a9e98b1319347573ff32__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    {\n        mstore(pos, \"Claude-3\")\n        end := add(pos, 8)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506200001f60003362000135565b506001805460ff191681556002556200003a60003362000135565b50620000677fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217753362000135565b50620000947f482648e7878e9fa54c0a2f67ffd22d00ebc37cf7a03e060e428d2ab0cd6735cc3362000135565b506040805160a08101825260198082526020820152601481830152600f606082018190526080909101526006805464ffffffffff1916640f0f14191917905580516411d4150b4d60da1b815260058082018190528251918290036025018220805460ff19908116600190811790925567436c617564652d3360c01b8452600884019290925292519182900360280190912080549091169091179055620001e4565b6000828152602081815260408083206001600160a01b038516845290915281205460ff16620001da576000838152602081815260408083206001600160a01b03861684529091529020805460ff19166001179055620001913390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4506001620001de565b5060005b92915050565b6128d880620001f46000396000f3fe608060405234801561001057600080fd5b506004361061023d5760003560e01c80638456cb591161013b578063bfe42a37116100b8578063d5c1a1e11161007c578063d5c1a1e1146105b7578063ea535940146105ca578063ebdf690f146105ea578063f2bcac3d14610611578063ff8dea011461062657600080fd5b8063bfe42a37146104f7578063c601f7af1461051e578063c772a8a614610533578063cfe85a2f14610584578063d547741f146105a457600080fd5b8063a217fddf116100ff578063a217fddf1461033f578063a91ad18e146104b4578063aca5a8a7146104be578063b8a956d3146104d1578063ba340773146104e457600080fd5b80638456cb591461044c57806391b9f9d81461045457806391d148541461046757806396caac0a1461047a578063a02d72fb1461048d57600080fd5b80633f4ba83a116101c957806361c992a31161018d57806361c992a3146103ce57806368ca78f9146103f15780637092b0bc146104045780637131f0251461041757806375b238fc1461043757600080fd5b80633f4ba83a1461033757806340b892701461033f5780634da89fbd146103475780634fe9d1f5146103b05780635c975abb146103c357600080fd5b80632b116373116102105780632b116373146102c55780632ed49cf7146102da5780632f2ff15d1461030857806336568abe1461031b5780633a1e017f1461032e57600080fd5b806301ffc9a7146102425780630311b82d1461026a578063248a9ca31461028c57806327ff6223146102bd575b600080fd5b610255610250366004611e8f565b610639565b60405190151581526020015b60405180910390f35b61027d610278366004611ec0565b610670565b60405161026193929190611f29565b6102af61029a366004611ec0565b60009081526020819052604090206001015490565b604051908152602001610261565b6102af606481565b6102d86102d336600461200b565b610765565b005b6102556102e8366004612082565b805160208183018101805160058252928201919093012091525460ff1681565b6102d86103163660046120db565b6109f0565b6102d86103293660046120db565b610a1b565b6102af60075481565b6102d8610a53565b6102af600081565b60065461037c9060ff808216916101008104821691620100008204811691630100000081048216916401000000009091041685565b6040805160ff968716815294861660208601529285169284019290925283166060830152909116608082015260a001610261565b6102d86103be366004612107565b610a76565b60015460ff16610255565b6102556103dc3660046121c0565b60046020526000908152604090205460ff1681565b6102556103ff366004612107565b610ac2565b6102d861041236600461227d565b610b1d565b6102af6104253660046121c0565b60086020526000908152604090205481565b6102af60008051602061288383398151915281565b6102d86110b5565b6102d8610462366004612107565b6110d5565b6102556104753660046120db565b611121565b610255610488366004611ec0565b61114a565b6102af7f58223cdfb69946630d837d40b5c366a584f0217ada7fddd8318f2e08603cfa2281565b6102af62278d0081565b6102af6104cc3660046121c0565b611192565b6102d86104df366004612307565b6111fc565b6102d86104f236600461235e565b611336565b6102af7f7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e81565b6102af60008051602061286383398151915281565b61056f6105413660046121c0565b6001600160a01b0316600090815260086020908152604080832054600490925290912054909160ff90911690565b60408051928352901515602083015201610261565b610597610592366004611ec0565b611405565b60405161026191906123a3565b6102d86105b23660046120db565b6114ef565b6102d86105c53660046123eb565b611514565b6105dd6105d8366004611ec0565b61161a565b6040516102619190612415565b6102af7fede9dcdb0ce99dc7cec9c7be9246ad08b37853683ad91569c187b647ddf5e21c81565b6106196118c8565b60405161026191906124e1565b6102d8610634366004612525565b611a2d565b60006001600160e01b03198216637965db0b60e01b148061066a57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006060600083600081116106a05760405162461bcd60e51b815260040161069790612541565b60405180910390fd5b6000858152600360205260409020600181015460058201546002830180549091600160a01b900460ff169082906106d69061256e565b80601f01602080910402602001604051908101604052809291908181526020018280546107029061256e565b801561074f5780601f106107245761010080835404028352916020019161074f565b820191906000526020600020905b81548152906001019060200180831161073257829003601f168201915b5050505050915094509450945050509193909250565b3360009081526004602052604090205460ff166107bc5760405162461bcd60e51b81526020600482015260156024820152744e6f7420617574686f72697a6564206f7261636c6560581b6044820152606401610697565b83600081116107dd5760405162461bcd60e51b815260040161069790612541565b8360648111156108245760405162461bcd60e51b815260206004820152601260248201527153636f7265206f7574206f662072616e676560701b6044820152606401610697565b61082c611b88565b600086815260036020526040902060050154600160a01b900460ff166108645760405162461bcd60e51b8152600401610697906125a2565b6000868152600360205260409020600501546001600160a01b031633146108c35760405162461bcd60e51b81526020600482015260136024820152724e6f74206f726967696e616c206f7261636c6560681b6044820152606401610697565b6000868152600360205260409020600401546108e39062278d00906125e6565b42111561092a5760405162461bcd60e51b8152602060048201526015602482015274155c19185d19481c195c9a5bd908195e1c1a5c9959605a1b6044820152606401610697565b60008351116109745760405162461bcd60e51b8152602060048201526016602482015275155c19185d19481c99585cdbdb881c995c5d5a5c995960521b6044820152606401610697565b6000868152600360205260409020600181018690556002016109968582612647565b5060008681526003602052604090819020426004909101555186907fd3e8dbbe8ff60a1fae1e5f88e71f27270ed38badc7b26e19922ed94fd12f5fe9906109e09088908790612707565b60405180910390a2505050505050565b600082815260208190526040902060010154610a0b81611bd0565b610a158383611bda565b50505050565b6001600160a01b0381163314610a445760405163334bd91960e11b815260040160405180910390fd5b610a4e8282611c6c565b505050565b600080516020612883833981519152610a6b81611bd0565b610a73611cd7565b50565b6000610a8181611bd0565b60005b8251811015610a1557610ab0838281518110610aa257610aa2612720565b6020026020010151856114ef565b80610aba81612736565b915050610a84565b6000805b8251811015610b1357610af2838281518110610ae457610ae4612720565b602002602001015185611121565b15610b0157600191505061066a565b80610b0b81612736565b915050610ac6565b5060009392505050565b3360009081526004602052604090205460ff16610b745760405162461bcd60e51b81526020600482015260156024820152744e6f7420617574686f72697a6564206f7261636c6560581b6044820152606401610697565b8460008111610b955760405162461bcd60e51b815260040161069790612541565b846064811115610bdc5760405162461bcd60e51b815260206004820152601260248201527153636f7265206f7574206f662072616e676560701b6044820152606401610697565b610be4611b88565b610bec611d29565b6000855111610c3d5760405162461bcd60e51b815260206004820152601b60248201527f4a757374696669636174696f6e204950465320726571756972656400000000006044820152606401610697565b600584604051610c4d919061274f565b9081526040519081900360200190205460ff16610ca35760405162461bcd60e51b8152602060048201526014602482015273155b9cdd5c1c1bdc9d1959081052481b5bd9195b60621b6044820152606401610697565b600087815260036020526040902060050154600160a01b900460ff1615610d035760405162461bcd60e51b815260206004820152601460248201527353636f726520616c72656164792065786973747360601b6044820152606401610697565b6064836000015160ff1611158015610d2357506064836020015160ff1611155b8015610d3757506064836040015160ff1611155b8015610d4b57506064836060015160ff1611155b8015610d5f57506064836080015160ff1611155b610dab5760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420627265616b646f776e2073636f72657300000000000000006044820152606401610697565b6006546080840151600091606491610dce91640100000000900460ff169061276b565b6006546060870151610dea916301000000900460ff169061276b565b6006546040880151610e059162010000900460ff169061276b565b6006546020890151610e1f91610100900460ff169061276b565b6006548951610e319160ff169061276b565b610e3b919061278e565b610e45919061278e565b610e4f919061278e565b610e59919061278e565b610e6391906127a7565b60ff169050610e736005826127d7565b8710158015610e8c5750610e888160056125e6565b8711155b610ee25760405162461bcd60e51b815260206004820152602160248201527f53636f726520696e636f6e73697374656e74207769746820627265616b646f776044820152603760f91b6064820152608401610697565b604080516101008101825289815260208082018a81528284018a8152606084018a90524260808501523360a0850152600160c0850181905260e085018a905260008e815260039094529490922083518155905193810193909355519091906002820190610f4f9082612647565b5060608201516003820190610f649082612647565b50608082810151600483015560a083015160058301805460c08601511515600160a01b026001600160a81b03199091166001600160a01b039093169290921791909117905560e090920151805160069092018054602083015160408401516060850151949096015160ff9081166401000000000264ff000000001995821663010000000263ff0000001998831662010000029890981663ffff0000199383166101000261ffff19909516979092169690961792909217161793909317161790556007805490600061103483612736565b909155505033600090815260086020526040812080549161105483612736565b9190505550336001600160a01b0316887f09e8ad66e4736435405704d301d344e9454f286d3feeb2036b1adc6f4900ccbc8989894260405161109994939291906127ea565b60405180910390a3506110ac6001600255565b50505050505050565b6000805160206128838339815191526110cd81611bd0565b610a73611d80565b60006110e081611bd0565b60005b8251811015610a155761110f83828151811061110157611101612720565b6020026020010151856109f0565b8061111981612736565b9150506110e3565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6000816000811161116d5760405162461bcd60e51b815260040161069790612541565b600083815260036020526040902060050154600160a01b900460ff1691505b50919050565b60008061119d6118c8565b90506000805b82518110156111f4576111cf8382815181106111c1576111c1612720565b602002602001015186611121565b156111e257816111de81612736565b9250505b806111ec81612736565b9150506111a3565b509392505050565b600061120781611bd0565b600083815260036020526040902060050154600160a01b900460ff1661123f5760405162461bcd60e51b8152600401610697906125a2565b60008251116112825760405162461bcd60e51b815260206004820152600f60248201526e1499585cdbdb881c995c5d5a5c9959608a1b6044820152606401610697565b600083815260036020526040812081815560018101829055906112a86002830182611e41565b6112b6600383016000611e41565b506000600482018190556005820180546001600160a81b03191690556006909101805464ffffffffff1916905560078054916112f183612827565b9190505550827fd3e8dbbe8ff60a1fae1e5f88e71f27270ed38badc7b26e19922ed94fd12f5fe9600084604051611329929190612707565b60405180910390a2505050565b60008051602061288383398151915261134e81611bd0565b60008351116113975760405162461bcd60e51b815260206004820152601560248201527424b73b30b634b21036b7b232b6103b32b939b4b7b760591b6044820152606401610697565b816005846040516113a8919061274f565b908152604051908190036020018120805492151560ff19909316929092179091557f2e5180543742ece2db44ed70b2619f2bf555a29a7bdead994736174f0d90a9b6906113f8908590859061283e565b60405180910390a1505050565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915281600081116114515760405162461bcd60e51b815260040161069790612541565b600083815260036020526040902060050154600160a01b900460ff166114895760405162461bcd60e51b8152600401610697906125a2565b5050600090815260036020908152604091829020825160a08101845260069091015460ff80821683526101008204811693830193909352620100008104831693820193909352630100000083048216606082015264010000000090920416608082015290565b60008281526020819052604090206001015461150a81611bd0565b610a158383611c6c565b60008051602061288383398151915261152c81611bd0565b6001600160a01b03831661157b5760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206f7261636c65206164647265737360501b6044820152606401610697565b6001600160a01b0383166000908152600460205260409020805460ff191683158015919091179091556115c5576115c0600080516020612863833981519152846109f0565b6115dd565b6115dd600080516020612863833981519152846114ef565b826001600160a01b03167f82a8fb1e779ea45ad427cc612e47087f5386a567e49dce488185e40646fa48d583604051611329911515815260200190565b6116826040805161010081018252600080825260208083018290526060838501819052808401819052608080850184905260a080860185905260c08601859052865190810187528481529283018490529482018390528101829052928301529060e082015290565b81600081116116a35760405162461bcd60e51b815260040161069790612541565b600083815260036020526040902060050154600160a01b900460ff166116db5760405162461bcd60e51b8152600401610697906125a2565b6003600084815260200190815260200160002060405180610100016040529081600082015481526020016001820154815260200160028201805461171e9061256e565b80601f016020809104026020016040519081016040528092919081815260200182805461174a9061256e565b80156117975780601f1061176c57610100808354040283529160200191611797565b820191906000526020600020905b81548152906001019060200180831161177a57829003601f168201915b505050505081526020016003820180546117b09061256e565b80601f01602080910402602001604051908101604052809291908181526020018280546117dc9061256e565b80156118295780601f106117fe57610100808354040283529160200191611829565b820191906000526020600020905b81548152906001019060200180831161180c57829003601f168201915b5050509183525050600482015460208083019190915260058301546001600160a01b03811660408085019190915260ff600160a01b90920482161515606080860191909152815160a0810183526006909601548084168752610100810484169487019490945262010000840483169186019190915263010000008304821690850152640100000000909104166080838101919091520152915050919050565b60408051600680825260e082019092526060916020820160c0803683370190505090506000801b8160008151811061190257611902612720565b6020026020010181815250506000805160206128838339815191528160018151811061193057611930612720565b6020026020010181815250506000805160206128638339815191528160028151811061195e5761195e612720565b6020026020010181815250507fede9dcdb0ce99dc7cec9c7be9246ad08b37853683ad91569c187b647ddf5e21c8160038151811061199e5761199e612720565b6020026020010181815250507f58223cdfb69946630d837d40b5c366a584f0217ada7fddd8318f2e08603cfa22816004815181106119de576119de612720565b6020026020010181815250507f7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e81600581518110611a1e57611a1e612720565b60200260200101818152505090565b600080516020612883833981519152611a4581611bd0565b60808201516060830151604084015160208501518551611a65919061278e565b611a6f919061278e565b611a79919061278e565b611a83919061278e565b60ff16606414611ad55760405162461bcd60e51b815260206004820152601760248201527f57656967687473206d7573742073756d20746f203130300000000000000000006044820152606401610697565b81516006805460208501516040808701516060880151608089015160ff9081166401000000000264ff000000001992821663010000000263ff0000001994831662010000029490941663ffff0000199683166101000261ffff1990981692909916919091179590951793909316959095179490941716179055517f90565f56924446477768885e9b20cf4cb9d2183f2ad4313f3e90f1dcaedcc0ae90611b7c9084906123a3565b60405180910390a15050565b60015460ff1615611bce5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610697565b565b610a738133611dbb565b6000611be68383611121565b611c64576000838152602081815260408083206001600160a01b03861684529091529020805460ff19166001179055611c1c3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a450600161066a565b50600061066a565b6000611c788383611121565b15611c64576000838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a450600161066a565b611cdf611df8565b6001805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6002805403611d7a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610697565b60028055565b611d88611b88565b6001805460ff1916811790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833611d0c565b611dc58282611121565b611df45760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610697565b5050565b60015460ff16611bce5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610697565b508054611e4d9061256e565b6000825580601f10611e5d575050565b601f016020900490600052602060002090810190610a7391905b80821115611e8b5760008155600101611e77565b5090565b600060208284031215611ea157600080fd5b81356001600160e01b031981168114611eb957600080fd5b9392505050565b600060208284031215611ed257600080fd5b5035919050565b60005b83811015611ef4578181015183820152602001611edc565b50506000910152565b60008151808452611f15816020860160208601611ed9565b601f01601f19169290920160200192915050565b838152606060208201526000611f426060830185611efd565b90508215156040830152949350505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611f9357611f93611f54565b604052919050565b600082601f830112611fac57600080fd5b813567ffffffffffffffff811115611fc657611fc6611f54565b611fd9601f8201601f1916602001611f6a565b818152846020838601011115611fee57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561202157600080fd5b8435935060208501359250604085013567ffffffffffffffff8082111561204757600080fd5b61205388838901611f9b565b9350606087013591508082111561206957600080fd5b5061207687828801611f9b565b91505092959194509250565b60006020828403121561209457600080fd5b813567ffffffffffffffff8111156120ab57600080fd5b6120b784828501611f9b565b949350505050565b80356001600160a01b03811681146120d657600080fd5b919050565b600080604083850312156120ee57600080fd5b823591506120fe602084016120bf565b90509250929050565b6000806040838503121561211a57600080fd5b612123836120bf565b915060208084013567ffffffffffffffff8082111561214157600080fd5b818601915086601f83011261215557600080fd5b81358181111561216757612167611f54565b8060051b9150612178848301611f6a565b818152918301840191848101908984111561219257600080fd5b938501935b838510156121b057843582529385019390850190612197565b8096505050505050509250929050565b6000602082840312156121d257600080fd5b611eb9826120bf565b803560ff811681146120d657600080fd5b600060a082840312156121fe57600080fd5b60405160a0810181811067ffffffffffffffff8211171561222157612221611f54565b604052905080612230836121db565b815261223e602084016121db565b602082015261224f604084016121db565b6040820152612260606084016121db565b6060820152612271608084016121db565b60808201525092915050565b6000806000806000610120868803121561229657600080fd5b8535945060208601359350604086013567ffffffffffffffff808211156122bc57600080fd5b6122c889838a01611f9b565b945060608801359150808211156122de57600080fd5b506122eb88828901611f9b565b9250506122fb87608088016121ec565b90509295509295909350565b6000806040838503121561231a57600080fd5b82359150602083013567ffffffffffffffff81111561233857600080fd5b61234485828601611f9b565b9150509250929050565b803580151581146120d657600080fd5b6000806040838503121561237157600080fd5b823567ffffffffffffffff81111561238857600080fd5b61239485828601611f9b565b9250506120fe6020840161234e565b60a0810161066a828460ff815116825260ff602082015116602083015260ff604082015116604083015260ff606082015116606083015260ff60808201511660808301525050565b600080604083850312156123fe57600080fd5b612407836120bf565b91506120fe6020840161234e565b6020815281516020820152602082015160408201526000604083015161018060608401526124476101a0840182611efd565b90506060840151601f198483030160808501526124648282611efd565b915050608084015160a084015260018060a01b0360a08501511660c084015260c084015161249660e085018215159052565b5060e0840151805160ff9081166101008601526020820151811661012086015260408201518116610140860152606082015181166101608601526080820151166101808501526111f4565b6020808252825182820181905260009190848201906040850190845b81811015612519578351835292840192918401916001016124fd565b50909695505050505050565b600060a0828403121561253757600080fd5b611eb983836121ec565b602080825260139082015272125b9d985b1a59081c1c9bdc1bdcd85b081251606a1b604082015260600190565b600181811c9082168061258257607f821691505b60208210810361118c57634e487b7160e01b600052602260045260246000fd5b60208082526014908201527314d8dbdc9948191bd95cc81b9bdd08195e1a5cdd60621b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b8082018082111561066a5761066a6125d0565b601f821115610a4e57600081815260208120601f850160051c810160208610156126205750805b601f850160051c820191505b8181101561263f5782815560010161262c565b505050505050565b815167ffffffffffffffff81111561266157612661611f54565b6126758161266f845461256e565b846125f9565b602080601f8311600181146126aa57600084156126925750858301515b600019600386901b1c1916600185901b17855561263f565b600085815260208120601f198616915b828110156126d9578886015182559484019460019091019084016126ba565b50858210156126f75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8281526040602082015260006120b76040830184611efd565b634e487b7160e01b600052603260045260246000fd5b600060018201612748576127486125d0565b5060010190565b60008251612761818460208701611ed9565b9190910192915050565b60ff8181168382160290811690818114612787576127876125d0565b5092915050565b60ff818116838216019081111561066a5761066a6125d0565b600060ff8316806127c857634e487b7160e01b600052601260045260246000fd5b8060ff84160491505092915050565b8181038181111561066a5761066a6125d0565b8481526080602082015260006128036080830186611efd565b82810360408401526128158186611efd565b91505082606083015295945050505050565b600081612836576128366125d0565b506000190190565b6040815260006128516040830185611efd565b90508215156020830152939250505056fe482648e7878e9fa54c0a2f67ffd22d00ebc37cf7a03e060e428d2ab0cd6735cca49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775a26469706673582212202827ecd50a525cd6b10675f9849ddba10548dbeb2e9cd48d3e93b294c561738264736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x1F PUSH1 0x0 CALLER PUSH3 0x135 JUMP JUMPDEST POP PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH1 0x2 SSTORE PUSH3 0x3A PUSH1 0x0 CALLER PUSH3 0x135 JUMP JUMPDEST POP PUSH3 0x67 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 CALLER PUSH3 0x135 JUMP JUMPDEST POP PUSH3 0x94 PUSH32 0x482648E7878E9FA54C0A2F67FFD22D00EBC37CF7A03E060E428D2AB0CD6735CC CALLER PUSH3 0x135 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x19 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x14 DUP2 DUP4 ADD MSTORE PUSH1 0xF PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 SWAP1 SWAP2 ADD MSTORE PUSH1 0x6 DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND PUSH5 0xF0F141919 OR SWAP1 SSTORE DUP1 MLOAD PUSH5 0x11D4150B4D PUSH1 0xDA SHL DUP2 MSTORE PUSH1 0x5 DUP1 DUP3 ADD DUP2 SWAP1 MSTORE DUP3 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x25 ADD DUP3 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE PUSH8 0x436C617564652D33 PUSH1 0xC0 SHL DUP5 MSTORE PUSH1 0x8 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP3 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x28 ADD SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH3 0x1E4 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH3 0x1DA JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0x191 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH3 0x1DE JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x28D8 DUP1 PUSH3 0x1F4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x23D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x13B JUMPI DUP1 PUSH4 0xBFE42A37 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xD5C1A1E1 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD5C1A1E1 EQ PUSH2 0x5B7 JUMPI DUP1 PUSH4 0xEA535940 EQ PUSH2 0x5CA JUMPI DUP1 PUSH4 0xEBDF690F EQ PUSH2 0x5EA JUMPI DUP1 PUSH4 0xF2BCAC3D EQ PUSH2 0x611 JUMPI DUP1 PUSH4 0xFF8DEA01 EQ PUSH2 0x626 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBFE42A37 EQ PUSH2 0x4F7 JUMPI DUP1 PUSH4 0xC601F7AF EQ PUSH2 0x51E JUMPI DUP1 PUSH4 0xC772A8A6 EQ PUSH2 0x533 JUMPI DUP1 PUSH4 0xCFE85A2F EQ PUSH2 0x584 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x5A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA217FDDF GT PUSH2 0xFF JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0xA91AD18E EQ PUSH2 0x4B4 JUMPI DUP1 PUSH4 0xACA5A8A7 EQ PUSH2 0x4BE JUMPI DUP1 PUSH4 0xB8A956D3 EQ PUSH2 0x4D1 JUMPI DUP1 PUSH4 0xBA340773 EQ PUSH2 0x4E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x44C JUMPI DUP1 PUSH4 0x91B9F9D8 EQ PUSH2 0x454 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x467 JUMPI DUP1 PUSH4 0x96CAAC0A EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0xA02D72FB EQ PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x61C992A3 GT PUSH2 0x18D JUMPI DUP1 PUSH4 0x61C992A3 EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0x68CA78F9 EQ PUSH2 0x3F1 JUMPI DUP1 PUSH4 0x7092B0BC EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0x7131F025 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x40B89270 EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x4DA89FBD EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x4FE9D1F5 EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2B116373 GT PUSH2 0x210 JUMPI DUP1 PUSH4 0x2B116373 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x2ED49CF7 EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0x3A1E017F EQ PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x311B82D EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x27FF6223 EQ PUSH2 0x2BD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x255 PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E8F JUMP JUMPDEST PUSH2 0x639 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27D PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EC0 JUMP JUMPDEST PUSH2 0x670 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x261 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F29 JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x29A CALLDATASIZE PUSH1 0x4 PUSH2 0x1EC0 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x261 JUMP JUMPDEST PUSH2 0x2AF PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x2D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x200B JUMP JUMPDEST PUSH2 0x765 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x255 PUSH2 0x2E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2082 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x5 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x316 CALLDATASIZE PUSH1 0x4 PUSH2 0x20DB JUMP JUMPDEST PUSH2 0x9F0 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x329 CALLDATASIZE PUSH1 0x4 PUSH2 0x20DB JUMP JUMPDEST PUSH2 0xA1B JUMP JUMPDEST PUSH2 0x2AF PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0xA53 JUMP JUMPDEST PUSH2 0x2AF PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x37C SWAP1 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 DUP2 DIV DUP3 AND SWAP2 PUSH3 0x10000 DUP3 DIV DUP2 AND SWAP2 PUSH4 0x1000000 DUP2 DIV DUP3 AND SWAP2 PUSH5 0x100000000 SWAP1 SWAP2 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP7 DUP8 AND DUP2 MSTORE SWAP5 DUP7 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP3 DUP6 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP4 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x261 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x3BE CALLDATASIZE PUSH1 0x4 PUSH2 0x2107 JUMP JUMPDEST PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND PUSH2 0x255 JUMP JUMPDEST PUSH2 0x255 PUSH2 0x3DC CALLDATASIZE PUSH1 0x4 PUSH2 0x21C0 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x255 PUSH2 0x3FF CALLDATASIZE PUSH1 0x4 PUSH2 0x2107 JUMP JUMPDEST PUSH2 0xAC2 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x412 CALLDATASIZE PUSH1 0x4 PUSH2 0x227D JUMP JUMPDEST PUSH2 0xB1D JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x425 CALLDATASIZE PUSH1 0x4 PUSH2 0x21C0 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2AF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2883 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x10B5 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x462 CALLDATASIZE PUSH1 0x4 PUSH2 0x2107 JUMP JUMPDEST PUSH2 0x10D5 JUMP JUMPDEST PUSH2 0x255 PUSH2 0x475 CALLDATASIZE PUSH1 0x4 PUSH2 0x20DB JUMP JUMPDEST PUSH2 0x1121 JUMP JUMPDEST PUSH2 0x255 PUSH2 0x488 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EC0 JUMP JUMPDEST PUSH2 0x114A JUMP JUMPDEST PUSH2 0x2AF PUSH32 0x58223CDFB69946630D837D40B5C366A584F0217ADA7FDDD8318F2E08603CFA22 DUP2 JUMP JUMPDEST PUSH2 0x2AF PUSH3 0x278D00 DUP2 JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x4CC CALLDATASIZE PUSH1 0x4 PUSH2 0x21C0 JUMP JUMPDEST PUSH2 0x1192 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x4DF CALLDATASIZE PUSH1 0x4 PUSH2 0x2307 JUMP JUMPDEST PUSH2 0x11FC JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x4F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x235E JUMP JUMPDEST PUSH2 0x1336 JUMP JUMPDEST PUSH2 0x2AF PUSH32 0x7B8BB8356A3F32F5C111FF23F050D97F08988E0883529EA7BFF3B918887A6E0E DUP2 JUMP JUMPDEST PUSH2 0x2AF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2863 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x56F PUSH2 0x541 CALLDATASIZE PUSH1 0x4 PUSH2 0x21C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x4 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x261 JUMP JUMPDEST PUSH2 0x597 PUSH2 0x592 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EC0 JUMP JUMPDEST PUSH2 0x1405 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x23A3 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x5B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x20DB JUMP JUMPDEST PUSH2 0x14EF JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x5C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x23EB JUMP JUMPDEST PUSH2 0x1514 JUMP JUMPDEST PUSH2 0x5DD PUSH2 0x5D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EC0 JUMP JUMPDEST PUSH2 0x161A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x2415 JUMP JUMPDEST PUSH2 0x2AF PUSH32 0xEDE9DCDB0CE99DC7CEC9C7BE9246AD08B37853683AD91569C187B647DDF5E21C DUP2 JUMP JUMPDEST PUSH2 0x619 PUSH2 0x18C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x24E1 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x634 CALLDATASIZE PUSH1 0x4 PUSH2 0x2525 JUMP JUMPDEST PUSH2 0x1A2D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x66A JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP4 PUSH1 0x0 DUP2 GT PUSH2 0x6A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x697 SWAP1 PUSH2 0x2541 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD SWAP1 SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP3 SWAP1 PUSH2 0x6D6 SWAP1 PUSH2 0x256E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x702 SWAP1 PUSH2 0x256E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x74F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x724 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x74F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x732 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP SWAP5 POP SWAP5 POP SWAP5 POP POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x7BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6F7420617574686F72697A6564206F7261636C65 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x697 JUMP JUMPDEST DUP4 PUSH1 0x0 DUP2 GT PUSH2 0x7DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x697 SWAP1 PUSH2 0x2541 JUMP JUMPDEST DUP4 PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x824 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x53636F7265206F7574206F662072616E6765 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x697 JUMP JUMPDEST PUSH2 0x82C PUSH2 0x1B88 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x864 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x697 SWAP1 PUSH2 0x25A2 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F74206F726967696E616C206F7261636C65 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x697 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0x8E3 SWAP1 PUSH3 0x278D00 SWAP1 PUSH2 0x25E6 JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0x92A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x155C19185D19481C195C9A5BD908195E1C1A5C9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x697 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT PUSH2 0x974 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x155C19185D19481C99585CDBDB881C995C5D5A5C9959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x697 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD DUP7 SWAP1 SSTORE PUSH1 0x2 ADD PUSH2 0x996 DUP6 DUP3 PUSH2 0x2647 JUMP JUMPDEST POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 TIMESTAMP PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE MLOAD DUP7 SWAP1 PUSH32 0xD3E8DBBE8FF60A1FAE1E5F88E71F27270ED38BADC7B26E19922ED94FD12F5FE9 SWAP1 PUSH2 0x9E0 SWAP1 DUP9 SWAP1 DUP8 SWAP1 PUSH2 0x2707 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xA0B DUP2 PUSH2 0x1BD0 JUMP JUMPDEST PUSH2 0xA15 DUP4 DUP4 PUSH2 0x1BDA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0xA44 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA4E DUP3 DUP3 PUSH2 0x1C6C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2883 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xA6B DUP2 PUSH2 0x1BD0 JUMP JUMPDEST PUSH2 0xA73 PUSH2 0x1CD7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA81 DUP2 PUSH2 0x1BD0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xA15 JUMPI PUSH2 0xAB0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xAA2 JUMPI PUSH2 0xAA2 PUSH2 0x2720 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH2 0x14EF JUMP JUMPDEST DUP1 PUSH2 0xABA DUP2 PUSH2 0x2736 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA84 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xB13 JUMPI PUSH2 0xAF2 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xAE4 JUMPI PUSH2 0xAE4 PUSH2 0x2720 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH2 0x1121 JUMP JUMPDEST ISZERO PUSH2 0xB01 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x66A JUMP JUMPDEST DUP1 PUSH2 0xB0B DUP2 PUSH2 0x2736 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAC6 JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB74 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6F7420617574686F72697A6564206F7261636C65 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x697 JUMP JUMPDEST DUP5 PUSH1 0x0 DUP2 GT PUSH2 0xB95 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x697 SWAP1 PUSH2 0x2541 JUMP JUMPDEST DUP5 PUSH1 0x64 DUP2 GT ISZERO PUSH2 0xBDC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x53636F7265206F7574206F662072616E6765 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x697 JUMP JUMPDEST PUSH2 0xBE4 PUSH2 0x1B88 JUMP JUMPDEST PUSH2 0xBEC PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x0 DUP6 MLOAD GT PUSH2 0xC3D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4A757374696669636174696F6E20495046532072657175697265640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x697 JUMP JUMPDEST PUSH1 0x5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xC4D SWAP2 SWAP1 PUSH2 0x274F JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xCA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x155B9CDD5C1C1BDC9D1959081052481B5BD9195B PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x697 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD03 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x53636F726520616C726561647920657869737473 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x697 JUMP JUMPDEST PUSH1 0x64 DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0xFF AND GT ISZERO DUP1 ISZERO PUSH2 0xD23 JUMPI POP PUSH1 0x64 DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0xFF AND GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xD37 JUMPI POP PUSH1 0x64 DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0xFF AND GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xD4B JUMPI POP PUSH1 0x64 DUP4 PUSH1 0x60 ADD MLOAD PUSH1 0xFF AND GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xD5F JUMPI POP PUSH1 0x64 DUP4 PUSH1 0x80 ADD MLOAD PUSH1 0xFF AND GT ISZERO JUMPDEST PUSH2 0xDAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420627265616B646F776E2073636F7265730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x697 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x0 SWAP2 PUSH1 0x64 SWAP2 PUSH2 0xDCE SWAP2 PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND SWAP1 PUSH2 0x276B JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x60 DUP8 ADD MLOAD PUSH2 0xDEA SWAP2 PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND SWAP1 PUSH2 0x276B JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 DUP9 ADD MLOAD PUSH2 0xE05 SWAP2 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND SWAP1 PUSH2 0x276B JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x20 DUP10 ADD MLOAD PUSH2 0xE1F SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND SWAP1 PUSH2 0x276B JUMP JUMPDEST PUSH1 0x6 SLOAD DUP10 MLOAD PUSH2 0xE31 SWAP2 PUSH1 0xFF AND SWAP1 PUSH2 0x276B JUMP JUMPDEST PUSH2 0xE3B SWAP2 SWAP1 PUSH2 0x278E JUMP JUMPDEST PUSH2 0xE45 SWAP2 SWAP1 PUSH2 0x278E JUMP JUMPDEST PUSH2 0xE4F SWAP2 SWAP1 PUSH2 0x278E JUMP JUMPDEST PUSH2 0xE59 SWAP2 SWAP1 PUSH2 0x278E JUMP JUMPDEST PUSH2 0xE63 SWAP2 SWAP1 PUSH2 0x27A7 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH2 0xE73 PUSH1 0x5 DUP3 PUSH2 0x27D7 JUMP JUMPDEST DUP8 LT ISZERO DUP1 ISZERO PUSH2 0xE8C JUMPI POP PUSH2 0xE88 DUP2 PUSH1 0x5 PUSH2 0x25E6 JUMP JUMPDEST DUP8 GT ISZERO JUMPDEST PUSH2 0xEE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53636F726520696E636F6E73697374656E74207769746820627265616B646F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x697 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE DUP10 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP11 DUP2 MSTORE DUP3 DUP5 ADD DUP11 DUP2 MSTORE PUSH1 0x60 DUP5 ADD DUP11 SWAP1 MSTORE TIMESTAMP PUSH1 0x80 DUP6 ADD MSTORE CALLER PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0xE0 DUP6 ADD DUP11 SWAP1 MSTORE PUSH1 0x0 DUP15 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP5 MSTORE SWAP5 SWAP1 SWAP3 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP1 MLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 SSTORE MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0xF4F SWAP1 DUP3 PUSH2 0x2647 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SWAP1 PUSH2 0xF64 SWAP1 DUP3 PUSH2 0x2647 JUMP JUMPDEST POP PUSH1 0x80 DUP3 DUP2 ADD MLOAD PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x5 DUP4 ADD DUP1 SLOAD PUSH1 0xC0 DUP7 ADD MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xE0 SWAP1 SWAP3 ADD MLOAD DUP1 MLOAD PUSH1 0x6 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP6 ADD MLOAD SWAP5 SWAP1 SWAP7 ADD MLOAD PUSH1 0xFF SWAP1 DUP2 AND PUSH5 0x100000000 MUL PUSH5 0xFF00000000 NOT SWAP6 DUP3 AND PUSH4 0x1000000 MUL PUSH4 0xFF000000 NOT SWAP9 DUP4 AND PUSH3 0x10000 MUL SWAP9 SWAP1 SWAP9 AND PUSH4 0xFFFF0000 NOT SWAP4 DUP4 AND PUSH2 0x100 MUL PUSH2 0xFFFF NOT SWAP1 SWAP6 AND SWAP8 SWAP1 SWAP3 AND SWAP7 SWAP1 SWAP7 OR SWAP3 SWAP1 SWAP3 OR AND OR SWAP4 SWAP1 SWAP4 OR AND OR SWAP1 SSTORE PUSH1 0x7 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x1034 DUP4 PUSH2 0x2736 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x1054 DUP4 PUSH2 0x2736 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH32 0x9E8AD66E4736435405704D301D344E9454F286D3FEEB2036B1ADC6F4900CCBC DUP10 DUP10 DUP10 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1099 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x10AC PUSH1 0x1 PUSH1 0x2 SSTORE JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2883 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x10CD DUP2 PUSH2 0x1BD0 JUMP JUMPDEST PUSH2 0xA73 PUSH2 0x1D80 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E0 DUP2 PUSH2 0x1BD0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xA15 JUMPI PUSH2 0x110F DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1101 JUMPI PUSH2 0x1101 PUSH2 0x2720 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH2 0x9F0 JUMP JUMPDEST DUP1 PUSH2 0x1119 DUP2 PUSH2 0x2736 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 GT PUSH2 0x116D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x697 SWAP1 PUSH2 0x2541 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x119D PUSH2 0x18C8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x11F4 JUMPI PUSH2 0x11CF DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x11C1 JUMPI PUSH2 0x11C1 PUSH2 0x2720 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 PUSH2 0x1121 JUMP JUMPDEST ISZERO PUSH2 0x11E2 JUMPI DUP2 PUSH2 0x11DE DUP2 PUSH2 0x2736 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x11EC DUP2 PUSH2 0x2736 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x11A3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1207 DUP2 PUSH2 0x1BD0 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x123F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x697 SWAP1 PUSH2 0x25A2 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT PUSH2 0x1282 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1499585CDBDB881C995C5D5A5C9959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x697 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP3 SWAP1 SSTORE SWAP1 PUSH2 0x12A8 PUSH1 0x2 DUP4 ADD DUP3 PUSH2 0x1E41 JUMP JUMPDEST PUSH2 0x12B6 PUSH1 0x3 DUP4 ADD PUSH1 0x0 PUSH2 0x1E41 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x6 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND SWAP1 SSTORE PUSH1 0x7 DUP1 SLOAD SWAP2 PUSH2 0x12F1 DUP4 PUSH2 0x2827 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP3 PUSH32 0xD3E8DBBE8FF60A1FAE1E5F88E71F27270ED38BADC7B26E19922ED94FD12F5FE9 PUSH1 0x0 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1329 SWAP3 SWAP2 SWAP1 PUSH2 0x2707 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2883 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x134E DUP2 PUSH2 0x1BD0 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT PUSH2 0x1397 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B73B30B634B21036B7B232B6103B32B939B4B7B7 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x697 JUMP JUMPDEST DUP2 PUSH1 0x5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x13A8 SWAP2 SWAP1 PUSH2 0x274F JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP3 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH32 0x2E5180543742ECE2DB44ED70B2619F2BF555A29A7BDEAD994736174F0D90A9B6 SWAP1 PUSH2 0x13F8 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x283E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 PUSH1 0x0 DUP2 GT PUSH2 0x1451 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x697 SWAP1 PUSH2 0x2541 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1489 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x697 SWAP1 PUSH2 0x25A2 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE PUSH1 0x6 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND DUP4 MSTORE PUSH2 0x100 DUP3 DIV DUP2 AND SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH3 0x10000 DUP2 DIV DUP4 AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH4 0x1000000 DUP4 DIV DUP3 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH5 0x100000000 SWAP1 SWAP3 DIV AND PUSH1 0x80 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x150A DUP2 PUSH2 0x1BD0 JUMP JUMPDEST PUSH2 0xA15 DUP4 DUP4 PUSH2 0x1C6C JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2883 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x152C DUP2 PUSH2 0x1BD0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x157B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C6964206F7261636C652061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x697 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 ISZERO DUP1 ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x15C5 JUMPI PUSH2 0x15C0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2863 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x9F0 JUMP JUMPDEST PUSH2 0x15DD JUMP JUMPDEST PUSH2 0x15DD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2863 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x14EF JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x82A8FB1E779EA45AD427CC612E47087F5386A567E49DCE488185E40646FA48D5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1329 SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1682 PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP4 DUP6 ADD DUP2 SWAP1 MSTORE DUP1 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP1 DUP6 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 DUP1 DUP7 ADD DUP6 SWAP1 MSTORE PUSH1 0xC0 DUP7 ADD DUP6 SWAP1 MSTORE DUP7 MLOAD SWAP1 DUP2 ADD DUP8 MSTORE DUP5 DUP2 MSTORE SWAP3 DUP4 ADD DUP5 SWAP1 MSTORE SWAP5 DUP3 ADD DUP4 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE SWAP3 DUP4 ADD MSTORE SWAP1 PUSH1 0xE0 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 GT PUSH2 0x16A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x697 SWAP1 PUSH2 0x2541 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x16DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x697 SWAP1 PUSH2 0x25A2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x171E SWAP1 PUSH2 0x256E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x174A SWAP1 PUSH2 0x256E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1797 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x176C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1797 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x177A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH2 0x17B0 SWAP1 PUSH2 0x256E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x17DC SWAP1 PUSH2 0x256E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1829 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x17FE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1829 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x180C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x40 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP3 DIV DUP3 AND ISZERO ISZERO PUSH1 0x60 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE PUSH1 0x6 SWAP1 SWAP7 ADD SLOAD DUP1 DUP5 AND DUP8 MSTORE PUSH2 0x100 DUP2 DIV DUP5 AND SWAP5 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH3 0x10000 DUP5 DIV DUP4 AND SWAP2 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH4 0x1000000 DUP4 DIV DUP3 AND SWAP1 DUP6 ADD MSTORE PUSH5 0x100000000 SWAP1 SWAP2 DIV AND PUSH1 0x80 DUP4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD MSTORE SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x6 DUP1 DUP3 MSTORE PUSH1 0xE0 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0xC0 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1902 JUMPI PUSH2 0x1902 PUSH2 0x2720 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2883 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1930 JUMPI PUSH2 0x1930 PUSH2 0x2720 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2863 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x195E JUMPI PUSH2 0x195E PUSH2 0x2720 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH32 0xEDE9DCDB0CE99DC7CEC9C7BE9246AD08B37853683AD91569C187B647DDF5E21C DUP2 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x199E JUMPI PUSH2 0x199E PUSH2 0x2720 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH32 0x58223CDFB69946630D837D40B5C366A584F0217ADA7FDDD8318F2E08603CFA22 DUP2 PUSH1 0x4 DUP2 MLOAD DUP2 LT PUSH2 0x19DE JUMPI PUSH2 0x19DE PUSH2 0x2720 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH32 0x7B8BB8356A3F32F5C111FF23F050D97F08988E0883529EA7BFF3B918887A6E0E DUP2 PUSH1 0x5 DUP2 MLOAD DUP2 LT PUSH2 0x1A1E JUMPI PUSH2 0x1A1E PUSH2 0x2720 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2883 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1A45 DUP2 PUSH2 0x1BD0 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x20 DUP6 ADD MLOAD DUP6 MLOAD PUSH2 0x1A65 SWAP2 SWAP1 PUSH2 0x278E JUMP JUMPDEST PUSH2 0x1A6F SWAP2 SWAP1 PUSH2 0x278E JUMP JUMPDEST PUSH2 0x1A79 SWAP2 SWAP1 PUSH2 0x278E JUMP JUMPDEST PUSH2 0x1A83 SWAP2 SWAP1 PUSH2 0x278E JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x64 EQ PUSH2 0x1AD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57656967687473206D7573742073756D20746F20313030000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x697 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x6 DUP1 SLOAD PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x40 DUP1 DUP8 ADD MLOAD PUSH1 0x60 DUP9 ADD MLOAD PUSH1 0x80 DUP10 ADD MLOAD PUSH1 0xFF SWAP1 DUP2 AND PUSH5 0x100000000 MUL PUSH5 0xFF00000000 NOT SWAP3 DUP3 AND PUSH4 0x1000000 MUL PUSH4 0xFF000000 NOT SWAP5 DUP4 AND PUSH3 0x10000 MUL SWAP5 SWAP1 SWAP5 AND PUSH4 0xFFFF0000 NOT SWAP7 DUP4 AND PUSH2 0x100 MUL PUSH2 0xFFFF NOT SWAP1 SWAP9 AND SWAP3 SWAP1 SWAP10 AND SWAP2 SWAP1 SWAP2 OR SWAP6 SWAP1 SWAP6 OR SWAP4 SWAP1 SWAP4 AND SWAP6 SWAP1 SWAP6 OR SWAP5 SWAP1 SWAP5 OR AND OR SWAP1 SSTORE MLOAD PUSH32 0x90565F56924446477768885E9B20CF4CB9D2183F2AD4313F3E90F1DCAEDCC0AE SWAP1 PUSH2 0x1B7C SWAP1 DUP5 SWAP1 PUSH2 0x23A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1BCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x697 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA73 DUP2 CALLER PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BE6 DUP4 DUP4 PUSH2 0x1121 JUMP JUMPDEST PUSH2 0x1C64 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1C1C CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x66A JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x66A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C78 DUP4 DUP4 PUSH2 0x1121 JUMP JUMPDEST ISZERO PUSH2 0x1C64 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x66A JUMP JUMPDEST PUSH2 0x1CDF PUSH2 0x1DF8 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0x1D7A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x697 JUMP JUMPDEST PUSH1 0x2 DUP1 SSTORE JUMP JUMPDEST PUSH2 0x1D88 PUSH2 0x1B88 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH2 0x1D0C JUMP JUMPDEST PUSH2 0x1DC5 DUP3 DUP3 PUSH2 0x1121 JUMP JUMPDEST PUSH2 0x1DF4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x697 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND PUSH2 0x1BCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x697 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x1E4D SWAP1 PUSH2 0x256E JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x1E5D JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xA73 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1E8B JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1E77 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1EB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ED2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EF4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1EDC JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1F15 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1ED9 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1F42 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1EFD JUMP JUMPDEST SWAP1 POP DUP3 ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1F93 JUMPI PUSH2 0x1F93 PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1FAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FC6 JUMPI PUSH2 0x1FC6 PUSH2 0x1F54 JUMP JUMPDEST PUSH2 0x1FD9 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x1F6A JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1FEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2021 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2047 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2053 DUP9 DUP4 DUP10 ADD PUSH2 0x1F9B JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2069 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2076 DUP8 DUP3 DUP9 ADD PUSH2 0x1F9B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2094 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20B7 DUP5 DUP3 DUP6 ADD PUSH2 0x1F9B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x20D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x20FE PUSH1 0x20 DUP5 ADD PUSH2 0x20BF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x211A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2123 DUP4 PUSH2 0x20BF JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP1 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2167 JUMPI PUSH2 0x2167 PUSH2 0x1F54 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL SWAP2 POP PUSH2 0x2178 DUP5 DUP4 ADD PUSH2 0x1F6A JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 DUP4 ADD DUP5 ADD SWAP2 DUP5 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x2192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x21B0 JUMPI DUP5 CALLDATALOAD DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0x2197 JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EB9 DUP3 PUSH2 0x20BF JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x20D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xA0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2221 JUMPI PUSH2 0x2221 PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH2 0x2230 DUP4 PUSH2 0x21DB JUMP JUMPDEST DUP2 MSTORE PUSH2 0x223E PUSH1 0x20 DUP5 ADD PUSH2 0x21DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x224F PUSH1 0x40 DUP5 ADD PUSH2 0x21DB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x2260 PUSH1 0x60 DUP5 ADD PUSH2 0x21DB JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x2271 PUSH1 0x80 DUP5 ADD PUSH2 0x21DB JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x22BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22C8 DUP10 DUP4 DUP11 ADD PUSH2 0x1F9B JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x22DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22EB DUP9 DUP3 DUP10 ADD PUSH2 0x1F9B JUMP JUMPDEST SWAP3 POP POP PUSH2 0x22FB DUP8 PUSH1 0x80 DUP9 ADD PUSH2 0x21EC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x231A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2344 DUP6 DUP3 DUP7 ADD PUSH2 0x1F9B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x20D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2394 DUP6 DUP3 DUP7 ADD PUSH2 0x1F9B JUMP JUMPDEST SWAP3 POP POP PUSH2 0x20FE PUSH1 0x20 DUP5 ADD PUSH2 0x234E JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD PUSH2 0x66A DUP3 DUP5 PUSH1 0xFF DUP2 MLOAD AND DUP3 MSTORE PUSH1 0xFF PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0x40 DUP3 ADD MLOAD AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0x60 DUP3 ADD MLOAD AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0x80 DUP3 ADD MLOAD AND PUSH1 0x80 DUP4 ADD MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2407 DUP4 PUSH2 0x20BF JUMP JUMPDEST SWAP2 POP PUSH2 0x20FE PUSH1 0x20 DUP5 ADD PUSH2 0x234E JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x180 PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x2447 PUSH2 0x1A0 DUP5 ADD DUP3 PUSH2 0x1EFD JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x1F NOT DUP5 DUP4 SUB ADD PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x2464 DUP3 DUP3 PUSH2 0x1EFD JUMP JUMPDEST SWAP2 POP POP PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xA0 DUP6 ADD MLOAD AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xC0 DUP5 ADD MLOAD PUSH2 0x2496 PUSH1 0xE0 DUP6 ADD DUP3 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xE0 DUP5 ADD MLOAD DUP1 MLOAD PUSH1 0xFF SWAP1 DUP2 AND PUSH2 0x100 DUP7 ADD MSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 AND PUSH2 0x120 DUP7 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 AND PUSH2 0x140 DUP7 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 AND PUSH2 0x160 DUP7 ADD MSTORE PUSH1 0x80 DUP3 ADD MLOAD AND PUSH2 0x180 DUP6 ADD MSTORE PUSH2 0x11F4 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2519 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x24FD JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2537 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EB9 DUP4 DUP4 PUSH2 0x21EC JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x125B9D985B1A59081C1C9BDC1BDCD85B081251 PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2582 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x118C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x14D8DBDC9948191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x66A JUMPI PUSH2 0x66A PUSH2 0x25D0 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xA4E JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x2620 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x263F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x262C JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2661 JUMPI PUSH2 0x2661 PUSH2 0x1F54 JUMP JUMPDEST PUSH2 0x2675 DUP2 PUSH2 0x266F DUP5 SLOAD PUSH2 0x256E JUMP JUMPDEST DUP5 PUSH2 0x25F9 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x26AA JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2692 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x263F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x26D9 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x26BA JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x26F7 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x20B7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1EFD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2748 JUMPI PUSH2 0x2748 PUSH2 0x25D0 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2761 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1ED9 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xFF DUP2 DUP2 AND DUP4 DUP3 AND MUL SWAP1 DUP2 AND SWAP1 DUP2 DUP2 EQ PUSH2 0x2787 JUMPI PUSH2 0x2787 PUSH2 0x25D0 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x66A JUMPI PUSH2 0x66A PUSH2 0x25D0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP4 AND DUP1 PUSH2 0x27C8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH1 0xFF DUP5 AND DIV SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x66A JUMPI PUSH2 0x66A PUSH2 0x25D0 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2803 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1EFD JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x2815 DUP2 DUP7 PUSH2 0x1EFD JUMP JUMPDEST SWAP2 POP POP DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2836 JUMPI PUSH2 0x2836 PUSH2 0x25D0 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2851 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1EFD JUMP JUMPDEST SWAP1 POP DUP3 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP INVALID BASEFEE 0x26 BASEFEE 0xE7 DUP8 DUP15 SWAP16 0xA5 0x4C EXP 0x2F PUSH8 0xFFD22D00EBC37CF7 LOG0 RETURNDATACOPY MOD 0xE TIMESTAMP DUP14 0x2A 0xB0 0xCD PUSH8 0x35CCA49807205CE4 0xD3 SSTORE MULMOD 0x2E CREATE2 0xA8 LOG1 DUP16 JUMP 0xE8 SWAP2 EXTCODECOPY DELEGATECALL LOG2 ADD 0xFB 0xE2 DUP8 DUP3 JUMPDEST MULMOD JUMP SWAP4 0xC2 OR PUSH22 0xA26469706673582212202827ECD50A525CD6B10675F9 DUP5 SWAP14 0xDB LOG1 SDIV BASEFEE 0xDB 0xEB 0x2E SWAP13 0xD4 DUP14 RETURNDATACOPY SWAP4 0xB2 SWAP5 0xC5 PUSH2 0x7382 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "410:10378:7:-:0;;;2150:565;;;;;;;;;-1:-1:-1;744:42:9;2241:4:0;775:10:9;744;:42::i;:::-;-1:-1:-1;996:7:2;:15;;-1:-1:-1;;996:15:2;;;1821:7:3;:22;2174:42:7;1006:5:2;2205:10:7;2174;:42::i;:::-;-1:-1:-1;2226:34:7;343:23:9;2249:10:7;2226;:34::i;:::-;-1:-1:-1;2270:38:7;413:27:9;2297:10:7;2270;:38::i;:::-;-1:-1:-1;2391:187:7;;;;;;;;2444:2;2391:187;;;;;;;2505:2;2391:187;;;;2537:2;2391:187;;;;;;;;;;;2374:14;:204;;-1:-1:-1;;2374:204:7;;;;;2633:24;;-1:-1:-1;;;216:20:10;;2633:15:7;252:11:10;;;2633:24:7;;;;;;;;;;;;;:31;;-1:-1:-1;;2633:31:7;;;-1:-1:-1;2633:31:7;;;;;;-1:-1:-1;;;476:23:10;;524:1;515:11;;2674:27:7;;;;;;;;;;;;;;;:34;;;;;;;;;;410:10378;;6155:316:0;6232:4;2930:12;;;;;;;;;;;-1:-1:-1;;;;;2930:29:0;;;;;;;;;;;;6248:217;;6291:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6291:29:0;;;;;;;;;:36;;-1:-1:-1;;6291:36:0;6323:4;6291:36;;;6373:12;735:10:4;;656:96;6373:12:0;-1:-1:-1;;;;;6346:40:0;6364:7;-1:-1:-1;;;;;6346:40:0;6358:4;6346:40;;;;;;;;;;-1:-1:-1;6407:4:0;6400:11;;6248:217;-1:-1:-1;6449:5:0;6248:217;6155:316;;;;:::o;274:258:10:-;410:10378:7;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ADMIN_ROLE_1452": {
									"entryPoint": null,
									"id": 1452,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@AI_ORACLE_ROLE_1457": {
									"entryPoint": null,
									"id": 1457,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_30": {
									"entryPoint": null,
									"id": 30,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DISPUTE_RESOLVER_ROLE_1472": {
									"entryPoint": null,
									"id": 1472,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MAX_SCORE_684": {
									"entryPoint": null,
									"id": 684,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MILESTONE_APPROVER_ROLE_1467": {
									"entryPoint": null,
									"id": 1467,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MIN_SCORE_681": {
									"entryPoint": null,
									"id": 681,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@SCORE_VALIDITY_PERIOD_687": {
									"entryPoint": null,
									"id": 687,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TREASURY_MANAGER_ROLE_1462": {
									"entryPoint": null,
									"id": 1462,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_115": {
									"entryPoint": 7611,
									"id": 115,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_94": {
									"entryPoint": 7120,
									"id": 94,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_257": {
									"entryPoint": 7130,
									"id": 257,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_564": {
									"entryPoint": null,
									"id": 564,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_540": {
									"entryPoint": null,
									"id": 540,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_532": {
									"entryPoint": 7465,
									"id": 532,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pause_470": {
									"entryPoint": 7552,
									"id": 470,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_443": {
									"entryPoint": 7048,
									"id": 443,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_454": {
									"entryPoint": 7672,
									"id": 454,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revokeRole_295": {
									"entryPoint": 7276,
									"id": 295,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_unpause_486": {
									"entryPoint": 7383,
									"id": 486,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@authorizedOracles_671": {
									"entryPoint": null,
									"id": 671,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getAIScore_1106": {
									"entryPoint": 1648,
									"id": 1106,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"@getAllRoles_1686": {
									"entryPoint": 6344,
									"id": 1686,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getDetailedAIScore_1131": {
									"entryPoint": 5658,
									"id": 1131,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getOracleStats_1194": {
									"entryPoint": null,
									"id": 1194,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@getRoleAdmin_129": {
									"entryPoint": null,
									"id": 129,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRoleCount_1632": {
									"entryPoint": 4498,
									"id": 1632,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getScoringBreakdown_1157": {
									"entryPoint": 5125,
									"id": 1157,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantMultipleRoles_1515": {
									"entryPoint": 4309,
									"id": 1515,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@grantRole_148": {
									"entryPoint": 2544,
									"id": 148,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasAIScore_1175": {
									"entryPoint": 4426,
									"id": 1175,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@hasAnyRole_1585": {
									"entryPoint": 2754,
									"id": 1585,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@hasRole_81": {
									"entryPoint": 4385,
									"id": 81,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@oracleScoreCount_693": {
									"entryPoint": null,
									"id": 693,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@pause_1369": {
									"entryPoint": 4277,
									"id": 1369,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_431": {
									"entryPoint": null,
									"id": 431,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeScore_1359": {
									"entryPoint": 4604,
									"id": 1359,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@renounceRole_190": {
									"entryPoint": 2587,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeMultipleRoles_1548": {
									"entryPoint": 2678,
									"id": 1548,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_167": {
									"entryPoint": 5359,
									"id": 167,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@scoringWeights_678": {
									"entryPoint": null,
									"id": 678,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setOracleAuthorization_1241": {
									"entryPoint": 5396,
									"id": 1241,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setSupportedModel_1275": {
									"entryPoint": 4918,
									"id": 1275,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@submitAIScore_980": {
									"entryPoint": 2845,
									"id": 980,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@supportedModels_675": {
									"entryPoint": null,
									"id": 675,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@supportsInterface_605": {
									"entryPoint": null,
									"id": 605,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_63": {
									"entryPoint": 1593,
									"id": 63,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalScoresSubmitted_689": {
									"entryPoint": null,
									"id": 689,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unpause_1379": {
									"entryPoint": 2643,
									"id": 1379,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateAIScore_1074": {
									"entryPoint": 1893,
									"id": 1074,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@updateScoringCriteria_1314": {
									"entryPoint": 6701,
									"id": 1314,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 8383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_bool": {
									"entryPoint": 9038,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 8091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_struct_ScoringBreakdown": {
									"entryPoint": 8684,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8640,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_array$_t_bytes32_$dyn_memory_ptr": {
									"entryPoint": 8455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 9195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 8411,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7823,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 8322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_bool": {
									"entryPoint": 9054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_struct$_ScoringCriteria_$644_memory_ptr": {
									"entryPoint": 9509,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_string_memory_ptr": {
									"entryPoint": 8967,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_string_memory_ptrt_string_memory_ptr": {
									"entryPoint": 8203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256t_uint256t_string_memory_ptrt_string_memory_ptrt_struct$_ScoringBreakdown_$1394_memory_ptr": {
									"entryPoint": 8829,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_uint8": {
									"entryPoint": 8667,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_bool": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_string": {
									"entryPoint": 7933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_struct_ScoringBreakdown": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10063,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 9441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_0_by_1_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_bool__to_t_string_memory_ptr_t_bool__fromStack_reversed": {
									"entryPoint": 10302,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_000e680d12c25df5d1fde0e9487a3490e64ec427f6d963ef2486a46037e13d33__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0febab928e40c46453cf5b5d4970676eff56829a16bec62dc48d209b2deaf8aa__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9537,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_20fced6b954284e1ef5d497b8bc6607c1a209e0dcf4c8b3eed5e618c3c1d88c8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_36814994bee7035561531cc8c4f1f230479c45e6bccc4871cc426851cda156a2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_41166c2cb511fd788913a8ccf76df85866bc3ce3fb64b1c01c1d3d2a216501a6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_63af77bbbc7224208a06ceed8f4ab35deccfa6d50db9fd125a1b296b24befc02__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_63d21e090775948cc310afaf01e8b96f7a91e37be07b5dc6b48ce00b62db1e97__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_698e91f2cf105a34b76ad1f14b4cc68435f9c50341312fde16759560e3c5635e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_809a61880eab24cb5f12ad5fdac924d8282984ac0b80d15a3da59e6265c2820d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a69795945e67f0e5e64fe0dde79a3a480ebe678a88469f6b4d51002796df2777__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b9c71f73b66f3d1246f466c2230b476e959ed0f64c536bfee50d23aa5ba49feb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_befe45b55b0e14ee54aad630250f4a82387142889d62a313e7d018bafe212caf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c7f58c8f44846a2e8ce4b5a63e4a4c560693fa19e08f64bcd465c09c293ca1df__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ce993e7b10fa53e3a225bbeee5af32a4ed7ada86d6a9cad7b2171003c1c4c4d6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb40561e7c3cb6abb9adde29a2dee0b8a1ccdccf090b25897bee188991cd7422__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_AIScoreData_$662_memory_ptr__to_t_struct$_AIScoreData_$662_memory_ptr__fromStack_reversed": {
									"entryPoint": 9237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ScoringBreakdown_$1394_memory_ptr__to_t_struct$_ScoringBreakdown_$1394_memory_ptr__fromStack_reversed": {
									"entryPoint": 9123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_ScoringCriteria_$644_memory_ptr__to_t_struct$_ScoringCriteria_$644_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9991,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_bool__to_t_uint256_t_string_memory_ptr_t_bool__fromStack_reversed": {
									"entryPoint": 7977,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed": {
									"entryPoint": 10218,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8_t_uint8_t_uint8_t_uint8_t_uint8__to_t_uint8_t_uint8_t_uint8_t_uint8_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8042,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9702,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint8": {
									"entryPoint": 10126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint8": {
									"entryPoint": 10151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint8": {
									"entryPoint": 10091,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 10199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 9721,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 9799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7897,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 10279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 9582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 10038,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9680,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 10016,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8020,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:25393:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "83:217:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "129:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "138:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "141:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "125:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:32:10"
															},
															"nodeType": "YulIf",
															"src": "93:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "167:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "158:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "234:3:10",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "239:10:10",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "230:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "230:20:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "219:32:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "209:43:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "202:51:10"
															},
															"nodeType": "YulIf",
															"src": "199:71:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "49:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "60:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "72:6:10",
														"type": ""
													}
												],
												"src": "14:286:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "346:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "363:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "382:5:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "375:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "375:13:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "368:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "368:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "356:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "356:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "356:34:10"
														}
													]
												},
												"name": "abi_encode_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "330:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "337:3:10",
														"type": ""
													}
												],
												"src": "305:91:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "496:92:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "506:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "518:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "529:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "514:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "514:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "506:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "548:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "573:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "566:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "566:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "559:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "559:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "541:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "541:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "541:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "465:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "476:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "487:4:10",
														"type": ""
													}
												],
												"src": "401:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "663:110:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "709:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "718:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "721:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "711:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "711:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "711:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "684:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "693:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "680:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "680:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "705:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "676:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "676:32:10"
															},
															"nodeType": "YulIf",
															"src": "673:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "734:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "757:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "744:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "744:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "734:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "629:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "640:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "652:6:10",
														"type": ""
													}
												],
												"src": "593:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "844:184:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "854:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "863:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "858:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "923:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "948:3:10"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "953:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "944:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "944:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "967:3:10"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "972:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "963:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "963:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "957:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "957:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "937:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "937:39:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "937:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "884:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "887:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "881:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "881:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "895:19:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "897:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "906:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "909:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "902:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "902:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "897:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "877:3:10",
																"statements": []
															},
															"src": "873:113:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1006:3:10"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1011:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1002:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1002:16:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1020:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "995:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "995:27:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "995:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "822:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "827:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "832:6:10",
														"type": ""
													}
												],
												"src": "778:250:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1083:221:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1093:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1113:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1107:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1107:12:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1097:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1135:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1140:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1128:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1128:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1128:19:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1195:5:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1202:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1191:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1191:16:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1213:3:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1218:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1209:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1209:14:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1225:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "1156:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1156:76:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1156:76:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1241:57:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1256:3:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1269:6:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1277:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1265:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1265:15:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1286:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1282:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1282:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1261:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1261:29:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1252:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1252:39:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1293:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1248:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1248:50:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1241:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1060:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1067:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1075:3:10",
														"type": ""
													}
												],
												"src": "1033:271:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1480:201:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1497:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1508:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1490:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1490:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1490:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1535:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1546:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1531:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1551:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1524:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1524:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1524:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1563:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "1589:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1601:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1612:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1597:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1597:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1571:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1571:45:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1563:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1636:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1647:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1632:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1632:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value2",
																						"nodeType": "YulIdentifier",
																						"src": "1666:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1659:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1659:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1652:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1652:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1625:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1625:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1625:50:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_string_memory_ptr_t_bool__to_t_uint256_t_string_memory_ptr_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1433:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1444:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1452:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1460:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1471:4:10",
														"type": ""
													}
												],
												"src": "1309:372:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1756:110:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1802:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1811:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1814:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1804:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1804:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1804:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1777:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1786:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1773:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1773:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1798:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1769:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1769:32:10"
															},
															"nodeType": "YulIf",
															"src": "1766:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1827:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1850:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1837:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1837:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1827:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1722:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1733:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1745:6:10",
														"type": ""
													}
												],
												"src": "1686:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1972:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1982:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1994:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2005:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1990:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1990:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1982:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2024:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2035:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2017:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2017:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2017:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1941:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1952:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1963:4:10",
														"type": ""
													}
												],
												"src": "1871:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2154:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2164:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2176:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2187:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2172:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2172:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2164:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2206:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2217:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2199:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2199:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2199:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2123:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2134:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2145:4:10",
														"type": ""
													}
												],
												"src": "2053:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2267:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2284:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2291:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2296:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2287:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2287:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2277:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2277:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2277:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2324:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2327:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2317:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2317:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2317:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2348:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2351:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2341:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2341:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2341:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2235:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2412:230:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2422:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2438:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2432:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2432:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2422:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2450:58:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2472:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "2488:4:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2494:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2484:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2484:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2503:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2499:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2499:7:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2480:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2480:27:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2468:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2468:40:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2454:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2583:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2585:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2585:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2585:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2526:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2538:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2523:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2523:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2562:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2574:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2559:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2559:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2520:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2520:62:10"
															},
															"nodeType": "YulIf",
															"src": "2517:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2621:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2625:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2614:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2614:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2614:22:10"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2392:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2401:6:10",
														"type": ""
													}
												],
												"src": "2367:275:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2700:478:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2749:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2758:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2761:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2751:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2751:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2751:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2728:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2736:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2724:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2724:17:10"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2743:3:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2720:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2720:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2713:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2713:35:10"
															},
															"nodeType": "YulIf",
															"src": "2710:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2774:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2797:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2784:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2784:20:10"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2778:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2843:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2845:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2845:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2845:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2819:2:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2823:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2816:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2816:26:10"
															},
															"nodeType": "YulIf",
															"src": "2813:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2874:70:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2917:2:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2921:4:10",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2913:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2913:13:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2932:2:10",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2928:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2928:7:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "2909:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2909:27:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2938:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2905:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2905:38:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "2889:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2889:55:10"
															},
															"variables": [
																{
																	"name": "array_1",
																	"nodeType": "YulTypedName",
																	"src": "2878:7:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array_1",
																		"nodeType": "YulIdentifier",
																		"src": "2960:7:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2969:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2953:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2953:19:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2953:19:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3020:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3029:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3032:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3022:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3022:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3022:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2995:6:10"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3003:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2991:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2991:15:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3008:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2987:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2987:26:10"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3015:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2984:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2984:35:10"
															},
															"nodeType": "YulIf",
															"src": "2981:55:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array_1",
																				"nodeType": "YulIdentifier",
																				"src": "3062:7:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3071:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3058:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3058:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3082:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3090:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3078:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3078:17:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3097:2:10"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3045:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3045:55:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3045:55:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array_1",
																						"nodeType": "YulIdentifier",
																						"src": "3124:7:10"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3133:2:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3120:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3120:16:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3138:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3116:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3116:27:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3145:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3109:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3109:38:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3109:38:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3156:16:10",
															"value": {
																"name": "array_1",
																"nodeType": "YulIdentifier",
																"src": "3165:7:10"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3156:5:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2674:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2682:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2690:5:10",
														"type": ""
													}
												],
												"src": "2647:531:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3324:539:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3371:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3380:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3383:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3373:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3373:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3373:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3345:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3354:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3341:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3341:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3366:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3337:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3337:33:10"
															},
															"nodeType": "YulIf",
															"src": "3334:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3396:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3419:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3406:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3406:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3396:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3438:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3465:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3476:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3461:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3461:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3448:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3448:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3438:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3489:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3520:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3531:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3516:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3516:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3503:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3503:32:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3493:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3544:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3554:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3548:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3599:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3608:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3611:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3601:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3601:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3601:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3587:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3595:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3584:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3584:14:10"
															},
															"nodeType": "YulIf",
															"src": "3581:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3624:60:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3656:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3667:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3652:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3652:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3676:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "3634:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3634:50:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3624:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3693:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3726:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3737:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3722:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3722:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3709:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3709:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "3697:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3770:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3779:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3782:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3772:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3772:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3772:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "3756:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3766:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3753:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3753:16:10"
															},
															"nodeType": "YulIf",
															"src": "3750:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3795:62:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3827:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "3838:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3823:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3823:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3849:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "3805:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3805:52:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "3795:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_string_memory_ptrt_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3266:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3277:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3289:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3297:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3305:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3313:6:10",
														"type": ""
													}
												],
												"src": "3183:680:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3948:242:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3994:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4003:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4006:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3996:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3996:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3996:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3969:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3978:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3965:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3965:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3990:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3961:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3961:32:10"
															},
															"nodeType": "YulIf",
															"src": "3958:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4019:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4046:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4033:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4033:23:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4023:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4099:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4108:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4111:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4101:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4101:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4101:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4071:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4079:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4068:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4068:30:10"
															},
															"nodeType": "YulIf",
															"src": "4065:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4124:60:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4156:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4167:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4152:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4152:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4176:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "4134:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4134:50:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4124:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3914:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3925:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3937:6:10",
														"type": ""
													}
												],
												"src": "3868:322:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4244:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4254:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4276:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4263:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4263:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4254:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4346:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4355:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4358:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4348:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4348:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4348:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4305:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4316:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4331:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4336:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "4327:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4327:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4340:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4323:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4323:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "4312:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4312:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4302:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4302:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4295:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4295:50:10"
															},
															"nodeType": "YulIf",
															"src": "4292:70:10"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4223:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4234:5:10",
														"type": ""
													}
												],
												"src": "4195:173:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4460:167:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4506:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4515:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4518:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4508:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4508:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4508:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4481:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4490:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4477:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4477:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4502:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4473:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4473:32:10"
															},
															"nodeType": "YulIf",
															"src": "4470:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4531:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4554:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4541:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4541:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4531:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4573:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4606:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4617:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4602:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4602:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4583:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4583:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4573:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4418:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4429:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4441:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4449:6:10",
														"type": ""
													}
												],
												"src": "4373:254:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4825:305:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4835:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4847:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4858:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4843:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4843:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4835:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4878:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4893:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4901:4:10",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4889:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4889:17:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4871:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4871:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4871:36:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4927:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4938:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4923:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4923:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4947:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4955:4:10",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4943:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4943:17:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4916:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4916:45:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4916:45:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4981:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4992:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4977:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4977:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "5001:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5009:4:10",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4997:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4997:17:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4970:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4970:45:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4970:45:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5035:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5046:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5031:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5031:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "5055:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5063:4:10",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5051:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5051:17:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5024:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5024:45:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5024:45:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5089:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5100:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5085:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5085:19:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nodeType": "YulIdentifier",
																				"src": "5110:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5118:4:10",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5106:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5106:17:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5078:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5078:46:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5078:46:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8_t_uint8_t_uint8_t_uint8_t_uint8__to_t_uint8_t_uint8_t_uint8_t_uint8_t_uint8__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4762:9:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4773:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4781:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4789:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4797:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4805:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4816:4:10",
														"type": ""
													}
												],
												"src": "4632:498:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5247:908:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5293:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5302:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5305:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5295:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5295:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5295:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5268:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5277:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5264:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5264:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5289:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5260:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5260:32:10"
															},
															"nodeType": "YulIf",
															"src": "5257:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5318:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5347:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5328:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5328:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5318:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5366:12:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5376:2:10",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5370:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5387:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5418:9:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5429:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5414:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5414:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5401:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5401:32:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5391:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5442:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5452:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "5446:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5497:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5506:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5509:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5499:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5499:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5499:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5485:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5493:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5482:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5482:14:10"
															},
															"nodeType": "YulIf",
															"src": "5479:34:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5522:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5536:9:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5547:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5532:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5532:22:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "5526:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5602:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5611:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5614:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5604:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5604:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5604:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "5581:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5585:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5577:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5577:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5592:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5573:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5573:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5566:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5566:35:10"
															},
															"nodeType": "YulIf",
															"src": "5563:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5627:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5650:2:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5637:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5637:16:10"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "5631:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5676:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5678:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5678:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5678:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5668:2:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5672:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5665:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5665:10:10"
															},
															"nodeType": "YulIf",
															"src": "5662:36:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5707:20:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5721:1:10",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5724:2:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5717:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5717:10:10"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "5711:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5736:39:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "5767:2:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5771:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5763:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5763:11:10"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "5747:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5747:28:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "5740:3:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5784:16:10",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "5797:3:10"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "5788:5:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "5816:3:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5821:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5809:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5809:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5809:15:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5833:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "5844:3:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5849:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5840:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5840:12:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "5833:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5861:34:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "5883:2:10"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "5887:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5879:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5879:11:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5892:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5875:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5875:20:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "5865:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5927:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5936:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5939:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5929:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5929:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5929:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5910:6:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5918:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5907:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5907:19:10"
															},
															"nodeType": "YulIf",
															"src": "5904:39:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5952:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5967:2:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5971:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5963:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5963:11:10"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "5956:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6039:86:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6060:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "6078:3:10"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "6065:12:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6065:17:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6053:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6053:30:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6053:30:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6096:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6107:3:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6112:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6103:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6103:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6096:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5994:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5999:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5991:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "5991:15:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6007:23:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6009:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "6020:3:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6025:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6016:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6016:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6009:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5987:3:10",
																"statements": []
															},
															"src": "5983:142:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6134:15:10",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "6144:5:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6134:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_bytes32_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5205:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5216:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5228:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5236:6:10",
														"type": ""
													}
												],
												"src": "5135:1020:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6230:116:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6276:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6285:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6288:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6278:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6278:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6278:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6251:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6260:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6247:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6247:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6272:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6243:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6243:32:10"
															},
															"nodeType": "YulIf",
															"src": "6240:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6301:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6330:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6311:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6311:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6301:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6196:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6207:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6219:6:10",
														"type": ""
													}
												],
												"src": "6160:186:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6398:109:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6408:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6430:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6417:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6417:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6408:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6485:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6494:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6497:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6487:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6487:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6487:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6459:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6470:5:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6477:4:10",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "6466:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6466:16:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6456:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6456:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6449:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6449:35:10"
															},
															"nodeType": "YulIf",
															"src": "6446:55:10"
														}
													]
												},
												"name": "abi_decode_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6377:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6388:5:10",
														"type": ""
													}
												],
												"src": "6351:156:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6585:628:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6629:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6638:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6641:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6631:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6631:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6631:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "6606:3:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6611:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6602:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6602:19:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6623:4:10",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6598:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6598:30:10"
															},
															"nodeType": "YulIf",
															"src": "6595:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6654:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6674:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6668:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6668:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "6658:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6686:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6708:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6716:4:10",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6704:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6704:17:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "6690:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6796:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6798:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6798:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6798:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6739:10:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6751:18:10",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6736:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6736:34:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6775:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6787:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6772:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6772:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6733:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6733:62:10"
															},
															"nodeType": "YulIf",
															"src": "6730:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6834:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "6838:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6827:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6827:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6827:22:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6858:15:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "6867:6:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6858:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6889:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6914:9:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "6897:16:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6897:27:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6882:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6882:43:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6882:43:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6945:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6953:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6941:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6941:15:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6979:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6990:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6975:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6975:18:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "6958:16:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6958:36:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6934:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "6934:61:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6934:61:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7015:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7023:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7011:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7011:15:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7049:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7060:2:10",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7045:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7045:18:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "7028:16:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7028:36:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7004:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7004:61:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7004:61:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7085:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7093:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7081:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7081:15:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7119:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7130:2:10",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7115:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7115:18:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "7098:16:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7098:36:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7074:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7074:61:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7074:61:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7155:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7163:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7151:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7151:16:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "7190:9:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7201:3:10",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7186:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7186:19:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_uint8",
																			"nodeType": "YulIdentifier",
																			"src": "7169:16:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7169:37:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7144:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7144:63:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7144:63:10"
														}
													]
												},
												"name": "abi_decode_struct_ScoringBreakdown",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6556:9:10",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6567:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6575:5:10",
														"type": ""
													}
												],
												"src": "6512:701:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7410:622:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7457:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7466:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7469:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7459:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7459:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7459:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7431:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7440:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7427:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7427:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7452:3:10",
																		"type": "",
																		"value": "288"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7423:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7423:33:10"
															},
															"nodeType": "YulIf",
															"src": "7420:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7482:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7505:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7492:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7492:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7482:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7524:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7551:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7562:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7547:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7547:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7534:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7534:32:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7524:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7575:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7606:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7617:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7602:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7602:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7589:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7589:32:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "7579:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7630:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7640:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7634:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7685:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7694:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7697:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7687:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7687:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7687:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7673:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7681:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7670:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7670:14:10"
															},
															"nodeType": "YulIf",
															"src": "7667:34:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7710:60:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7742:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7753:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7738:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7738:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7762:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "7720:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7720:50:10"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "7710:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7779:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7812:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7823:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7808:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7808:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7795:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7795:32:10"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "7783:8:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7856:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7865:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7868:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7858:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7858:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7858:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "7842:8:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7852:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7839:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7839:16:10"
															},
															"nodeType": "YulIf",
															"src": "7836:36:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7881:62:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7913:9:10"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "7924:8:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7909:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7909:24:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7935:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "7891:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7891:52:10"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "7881:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7952:74:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8001:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8012:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7997:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7997:19:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8018:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_struct_ScoringBreakdown",
																	"nodeType": "YulIdentifier",
																	"src": "7962:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "7962:64:10"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "7952:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_string_memory_ptrt_string_memory_ptrt_struct$_ScoringBreakdown_$1394_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7344:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7355:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7367:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7375:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7383:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7391:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7399:6:10",
														"type": ""
													}
												],
												"src": "7218:814:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8134:293:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8180:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8189:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8192:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8182:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8182:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8182:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8155:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8164:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8151:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8151:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8176:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8147:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8147:32:10"
															},
															"nodeType": "YulIf",
															"src": "8144:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8205:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8228:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8215:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8215:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8205:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8247:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8278:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8289:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8274:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8274:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8261:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8261:32:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "8251:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8336:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8345:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8348:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8338:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8338:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8338:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8308:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8316:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8305:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8305:30:10"
															},
															"nodeType": "YulIf",
															"src": "8302:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8361:60:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8393:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8404:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8389:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8389:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8413:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "8371:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8371:50:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "8361:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8092:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8103:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8115:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8123:6:10",
														"type": ""
													}
												],
												"src": "8037:390:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8478:114:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8488:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8510:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8497:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8497:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "8488:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8570:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8579:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8582:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8572:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8572:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8572:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8539:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "8560:5:10"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "8553:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8553:13:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8546:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8546:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8536:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8536:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8529:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8529:40:10"
															},
															"nodeType": "YulIf",
															"src": "8526:60:10"
														}
													]
												},
												"name": "abi_decode_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8457:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8468:5:10",
														"type": ""
													}
												],
												"src": "8432:160:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8691:296:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8737:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8746:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8749:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8739:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8739:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8712:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8721:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8708:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8708:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8733:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8704:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8704:32:10"
															},
															"nodeType": "YulIf",
															"src": "8701:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8762:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8789:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8776:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8776:23:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "8766:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8842:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8851:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8854:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8844:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8844:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8844:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8814:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8822:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8811:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8811:30:10"
															},
															"nodeType": "YulIf",
															"src": "8808:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8867:60:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8899:9:10"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8910:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8895:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8895:22:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8919:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nodeType": "YulIdentifier",
																	"src": "8877:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8877:50:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8867:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8936:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8966:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8977:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8962:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8962:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nodeType": "YulIdentifier",
																	"src": "8946:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "8946:35:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "8936:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8649:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8660:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8672:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8680:6:10",
														"type": ""
													}
												],
												"src": "8597:390:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9115:135:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9125:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9137:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9148:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9133:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9133:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9125:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9167:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9178:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9160:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9160:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9160:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9205:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9216:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9201:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9201:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "9235:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9228:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9228:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "9221:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9221:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9194:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9194:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9194:50:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9076:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9087:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9095:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9106:4:10",
														"type": ""
													}
												],
												"src": "8992:258:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9315:320:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9332:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9347:5:10"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "9341:5:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9341:12:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9355:4:10",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9337:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9337:23:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9325:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9325:36:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9325:36:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "9381:3:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9386:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9377:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9377:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "9407:5:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9414:4:10",
																								"type": "",
																								"value": "0x20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "9403:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9403:16:10"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "9397:5:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9397:23:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9422:4:10",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9393:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9393:34:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9370:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9370:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9370:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "9448:3:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9453:4:10",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9444:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9444:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "9474:5:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9481:4:10",
																								"type": "",
																								"value": "0x40"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "9470:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9470:16:10"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "9464:5:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9464:23:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9489:4:10",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9460:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9460:34:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9437:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9437:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9437:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "9515:3:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9520:4:10",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9511:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9511:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "9541:5:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9548:4:10",
																								"type": "",
																								"value": "0x60"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "9537:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9537:16:10"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "9531:5:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9531:23:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9556:4:10",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9527:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9527:34:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9504:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9504:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9504:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "9582:3:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9587:4:10",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9578:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9578:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "9608:5:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9615:4:10",
																								"type": "",
																								"value": "0x80"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "9604:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9604:16:10"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "9598:5:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9598:23:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9623:4:10",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9594:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9594:34:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9571:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9571:58:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9571:58:10"
														}
													]
												},
												"name": "abi_encode_struct_ScoringBreakdown",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9299:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9306:3:10",
														"type": ""
													}
												],
												"src": "9255:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9809:105:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9819:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9831:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9842:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9827:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9827:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9819:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9890:6:10"
																	},
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9898:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_ScoringBreakdown",
																	"nodeType": "YulIdentifier",
																	"src": "9855:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "9855:53:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9855:53:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ScoringBreakdown_$1394_memory_ptr__to_t_struct$_ScoringBreakdown_$1394_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9778:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9789:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9800:4:10",
														"type": ""
													}
												],
												"src": "9640:274:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10003:170:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10049:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10058:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10061:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10051:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10051:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10051:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10024:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10033:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10020:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10020:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10045:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10016:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10016:32:10"
															},
															"nodeType": "YulIf",
															"src": "10013:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10074:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10103:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "10084:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10084:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "10074:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10122:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10152:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10163:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10148:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10148:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bool",
																	"nodeType": "YulIdentifier",
																	"src": "10132:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10132:35:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "10122:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9961:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9972:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9984:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9992:6:10",
														"type": ""
													}
												],
												"src": "9919:254:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10335:926:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10352:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10363:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10345:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10345:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10345:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10386:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10397:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10382:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10382:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10408:6:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "10402:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10402:13:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10375:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10375:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10375:41:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10436:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10447:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10432:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10432:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "10462:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10470:2:10",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10458:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10458:15:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "10452:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10452:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10425:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10425:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10425:50:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10484:42:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10514:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10522:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10510:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10510:15:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10504:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10504:22:10"
															},
															"variables": [
																{
																	"name": "memberValue0",
																	"nodeType": "YulTypedName",
																	"src": "10488:12:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10546:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10557:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10542:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10542:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10562:6:10",
																		"type": "",
																		"value": "0x0180"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10535:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10535:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10535:34:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10578:66:10",
															"value": {
																"arguments": [
																	{
																		"name": "memberValue0",
																		"nodeType": "YulIdentifier",
																		"src": "10610:12:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10628:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10639:3:10",
																				"type": "",
																				"value": "416"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10624:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10624:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "10592:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10592:52:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "10582:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10653:44:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10685:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10693:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10681:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10681:15:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10675:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10675:22:10"
															},
															"variables": [
																{
																	"name": "memberValue0_1",
																	"nodeType": "YulTypedName",
																	"src": "10657:14:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10717:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10728:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10713:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10713:19:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "tail_1",
																						"nodeType": "YulIdentifier",
																						"src": "10742:6:10"
																					},
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10750:9:10"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "10738:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10738:22:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10766:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "10762:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10762:7:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10734:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10734:36:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10706:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10706:65:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10706:65:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10780:55:10",
															"value": {
																"arguments": [
																	{
																		"name": "memberValue0_1",
																		"nodeType": "YulIdentifier",
																		"src": "10812:14:10"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "10828:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "10794:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10794:41:10"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "10784:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10855:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10866:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10851:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10851:19:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "10882:6:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10890:3:10",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10878:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10878:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "10872:5:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10872:23:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10844:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10844:52:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10844:52:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10916:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10927:3:10",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10912:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10912:19:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value0",
																								"nodeType": "YulIdentifier",
																								"src": "10947:6:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10955:3:10",
																								"type": "",
																								"value": "160"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "10943:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10943:16:10"
																					}
																				],
																				"functionName": {
																					"name": "mload",
																					"nodeType": "YulIdentifier",
																					"src": "10937:5:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10937:23:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10970:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10975:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "10966:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10966:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10979:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "10962:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10962:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10933:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10933:49:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10905:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "10905:78:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10905:78:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10992:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11024:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11032:3:10",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11020:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11020:16:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11014:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11014:23:10"
															},
															"variables": [
																{
																	"name": "memberValue0_2",
																	"nodeType": "YulTypedName",
																	"src": "10996:14:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_2",
																		"nodeType": "YulIdentifier",
																		"src": "11062:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11082:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11093:3:10",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11078:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11078:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bool",
																	"nodeType": "YulIdentifier",
																	"src": "11046:15:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11046:52:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11046:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11107:45:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11139:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11147:3:10",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11135:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11135:16:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11129:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11129:23:10"
															},
															"variables": [
																{
																	"name": "memberValue0_3",
																	"nodeType": "YulTypedName",
																	"src": "11111:14:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_3",
																		"nodeType": "YulIdentifier",
																		"src": "11196:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11216:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11227:3:10",
																				"type": "",
																				"value": "256"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11212:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11212:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_ScoringBreakdown",
																	"nodeType": "YulIdentifier",
																	"src": "11161:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11161:71:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11161:71:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11241:14:10",
															"value": {
																"name": "tail_2",
																"nodeType": "YulIdentifier",
																"src": "11249:6:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11241:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_AIScoreData_$662_memory_ptr__to_t_struct$_AIScoreData_$662_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10304:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10315:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10326:4:10",
														"type": ""
													}
												],
												"src": "10178:1083:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11417:481:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11427:12:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11437:2:10",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "11431:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11448:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11466:9:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "11477:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11462:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11462:18:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "11452:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11496:9:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "11507:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11489:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11489:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11489:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11519:17:10",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "11530:6:10"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "11523:3:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11545:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11565:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11559:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11559:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11549:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "11588:6:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11596:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11581:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11581:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11581:22:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11612:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11623:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11634:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11619:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11619:18:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11612:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11646:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11664:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "11672:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11660:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11660:15:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "11650:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11684:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11693:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "11688:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11752:120:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "11773:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "11784:6:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "11778:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11778:13:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11766:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11766:26:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11766:26:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11805:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "11816:3:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "11821:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11812:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11812:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "11805:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "11837:25:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "11851:6:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "11859:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11847:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11847:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11837:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11714:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11717:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11711:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "11711:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "11725:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11727:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "11736:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11739:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "11732:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11732:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "11727:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "11707:3:10",
																"statements": []
															},
															"src": "11703:169:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11881:11:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "11889:3:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11881:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11386:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11397:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11408:4:10",
														"type": ""
													}
												],
												"src": "11266:632:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12005:142:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12052:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12061:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12064:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12054:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12054:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12054:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12026:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12035:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12022:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12022:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12047:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12018:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12018:33:10"
															},
															"nodeType": "YulIf",
															"src": "12015:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12077:64:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12122:9:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "12133:7:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_struct_ScoringBreakdown",
																	"nodeType": "YulIdentifier",
																	"src": "12087:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12087:54:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "12077:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_ScoringCriteria_$644_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11971:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11982:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11994:6:10",
														"type": ""
													}
												],
												"src": "11903:244:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12326:169:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12343:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12354:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12336:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12336:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12336:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12377:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12388:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12373:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12373:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12393:2:10",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12366:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12366:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12366:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12416:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12427:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12412:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12412:18:10"
																	},
																	{
																		"hexValue": "496e76616c69642070726f706f73616c204944",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12432:21:10",
																		"type": "",
																		"value": "Invalid proposal ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12405:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12405:49:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12405:49:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12463:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12475:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12486:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12471:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12471:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12463:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0febab928e40c46453cf5b5d4970676eff56829a16bec62dc48d209b2deaf8aa__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12303:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12317:4:10",
														"type": ""
													}
												],
												"src": "12152:343:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12555:325:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12565:22:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12579:1:10",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12582:4:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "12575:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12575:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "12565:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12596:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "12626:4:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12632:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "12622:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12622:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "12600:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12673:31:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12675:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "12689:6:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12697:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "12685:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12685:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12675:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "12653:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12646:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12646:26:10"
															},
															"nodeType": "YulIf",
															"src": "12643:61:10"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12763:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12784:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "12791:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "12796:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "12787:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12787:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12777:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12777:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12777:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12828:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12831:4:10",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12821:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12821:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12821:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12856:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12859:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12849:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12849:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12849:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "12719:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "12742:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12750:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "12739:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12739:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12716:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "12716:38:10"
															},
															"nodeType": "YulIf",
															"src": "12713:161:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "12535:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "12544:6:10",
														"type": ""
													}
												],
												"src": "12500:380:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13059:171:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13076:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13087:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13069:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13069:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13069:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13110:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13121:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13106:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13106:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13126:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13099:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13099:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13099:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13149:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13160:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13145:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13145:18:10"
																	},
																	{
																		"hexValue": "4e6f7420617574686f72697a6564206f7261636c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13165:23:10",
																		"type": "",
																		"value": "Not authorized oracle"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13138:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13138:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13138:51:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13198:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13210:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13221:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13206:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13206:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13198:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_36814994bee7035561531cc8c4f1f230479c45e6bccc4871cc426851cda156a2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13036:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13050:4:10",
														"type": ""
													}
												],
												"src": "12885:345:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13409:168:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13426:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13437:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13419:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13419:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13419:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13460:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13471:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13456:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13456:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13476:2:10",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13449:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13449:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13449:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13499:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13510:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13495:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13495:18:10"
																	},
																	{
																		"hexValue": "53636f7265206f7574206f662072616e6765",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13515:20:10",
																		"type": "",
																		"value": "Score out of range"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13488:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13488:48:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13488:48:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13545:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13557:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13568:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13553:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13553:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13545:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_63af77bbbc7224208a06ceed8f4ab35deccfa6d50db9fd125a1b296b24befc02__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13386:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13400:4:10",
														"type": ""
													}
												],
												"src": "13235:342:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13756:170:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13773:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13784:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13766:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13766:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13766:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13807:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13818:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13803:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13803:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13823:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13796:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13796:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13796:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13846:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13857:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13842:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13842:18:10"
																	},
																	{
																		"hexValue": "53636f726520646f6573206e6f74206578697374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13862:22:10",
																		"type": "",
																		"value": "Score does not exist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13835:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13835:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13835:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13894:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13906:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13917:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13902:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "13902:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13894:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a69795945e67f0e5e64fe0dde79a3a480ebe678a88469f6b4d51002796df2777__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13733:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13747:4:10",
														"type": ""
													}
												],
												"src": "13582:344:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14105:169:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14122:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14133:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14115:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14115:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14115:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14156:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14167:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14152:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14152:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14172:2:10",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14145:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14145:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14145:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14195:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14206:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14191:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14191:18:10"
																	},
																	{
																		"hexValue": "4e6f74206f726967696e616c206f7261636c65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14211:21:10",
																		"type": "",
																		"value": "Not original oracle"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14184:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14184:49:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14184:49:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14242:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14254:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14265:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14250:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14250:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14242:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_41166c2cb511fd788913a8ccf76df85866bc3ce3fb64b1c01c1d3d2a216501a6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14082:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14096:4:10",
														"type": ""
													}
												],
												"src": "13931:343:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14311:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14328:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14335:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14340:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14331:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14331:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14321:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14321:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14321:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14368:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14371:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14361:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14361:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14361:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14392:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14395:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14385:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14385:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14385:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "14279:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14459:77:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14469:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14480:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14483:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14476:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14476:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "14469:3:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14508:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14510:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14510:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14510:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14500:1:10"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "14503:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14497:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14497:10:10"
															},
															"nodeType": "YulIf",
															"src": "14494:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14442:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14445:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "14451:3:10",
														"type": ""
													}
												],
												"src": "14411:125:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14715:171:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14732:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14743:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14725:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14725:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14725:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14766:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14777:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14762:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14762:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14782:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14755:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14755:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14755:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14805:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14816:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14801:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14801:18:10"
																	},
																	{
																		"hexValue": "55706461746520706572696f642065787069726564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14821:23:10",
																		"type": "",
																		"value": "Update period expired"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14794:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14794:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14794:51:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14854:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14866:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14877:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14862:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "14862:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14854:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_698e91f2cf105a34b76ad1f14b4cc68435f9c50341312fde16759560e3c5635e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14692:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14706:4:10",
														"type": ""
													}
												],
												"src": "14541:345:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15065:172:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15082:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15093:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15075:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15075:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15075:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15116:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15127:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15112:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15112:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15132:2:10",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15105:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15105:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15105:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15155:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15166:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15151:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15151:18:10"
																	},
																	{
																		"hexValue": "55706461746520726561736f6e207265717569726564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15171:24:10",
																		"type": "",
																		"value": "Update reason required"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15144:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15144:52:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15144:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15205:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15217:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15228:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15213:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15213:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15205:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b9c71f73b66f3d1246f466c2230b476e959ed0f64c536bfee50d23aa5ba49feb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15042:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15056:4:10",
														"type": ""
													}
												],
												"src": "14891:346:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15298:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15315:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "15318:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15308:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15308:14:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15308:14:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15331:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15349:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15352:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "15339:9:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15339:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "15331:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "15281:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "15289:4:10",
														"type": ""
													}
												],
												"src": "15242:121:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15449:464:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15482:425:10",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "15496:11:10",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "15506:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "15500:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "15527:2:10"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "15531:5:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "15520:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15520:17:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15520:17:10"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "15550:31:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "15572:2:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15576:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "15562:9:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15562:19:10"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "15554:4:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "15594:57:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "15617:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "15627:1:10",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "15634:10:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "15646:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "15630:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "15630:19:10"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "15623:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15623:27:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "15613:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15613:38:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "15598:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "15688:23:10",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "15690:19:10",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "15705:4:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "15690:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "15670:10:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "15682:4:10",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "15667:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15667:20:10"
																		},
																		"nodeType": "YulIf",
																		"src": "15664:47:10"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "15724:41:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "15738:4:10"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "15748:1:10",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "15755:3:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "15760:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "15751:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "15751:12:10"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "15744:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15744:20:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "15734:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15734:31:10"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "15728:2:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "15778:24:10",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "15791:11:10"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "15782:5:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "15876:21:10",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "15885:5:10"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "15892:2:10"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "15878:6:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15878:17:10"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "15878:17:10"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "15826:5:10"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "15833:2:10"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "15823:2:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15823:13:10"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "15837:26:10",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "15839:22:10",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "15852:5:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15859:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "15848:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15848:13:10"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "15839:5:10"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "15819:3:10",
																			"statements": []
																		},
																		"src": "15815:82:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "15465:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15470:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15462:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "15462:11:10"
															},
															"nodeType": "YulIf",
															"src": "15459:448:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "15421:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "15428:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "15433:10:10",
														"type": ""
													}
												],
												"src": "15368:545:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16003:81:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16013:65:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "16028:4:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "16046:1:10",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "16049:3:10"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "16042:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "16042:11:10"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "16059:1:10",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "16055:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "16055:6:10"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "16038:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16038:24:10"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "16034:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16034:29:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16024:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16024:40:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16070:1:10",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "16073:3:10"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "16066:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16066:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "16021:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16021:57:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "16013:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "15980:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "15986:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "15994:4:10",
														"type": ""
													}
												],
												"src": "15918:166:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16185:1256:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16195:24:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "16215:3:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "16209:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16209:10:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "16199:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16262:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "16264:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16264:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16264:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "16234:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16242:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16231:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16231:30:10"
															},
															"nodeType": "YulIf",
															"src": "16228:56:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "16337:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "16375:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "16369:5:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16369:11:10"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "16343:25:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16343:38:10"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "16383:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "16293:43:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16293:97:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16293:97:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16399:18:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "16416:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "16403:9:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16426:23:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "16445:4:10",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "16430:11:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16458:24:10",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "16471:11:10"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "16458:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "16528:656:10",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "16542:35:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "16561:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "16573:2:10",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "16569:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "16569:7:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "16557:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16557:20:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "16546:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "16590:49:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "16634:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "16604:29:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16604:35:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "16594:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "16652:10:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16661:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "16656:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "16739:172:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "16764:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "16782:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "16787:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "16778:3:10"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "16778:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "16772:5:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "16772:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "16757:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "16757:42:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "16757:42:10"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "16816:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "16830:6:10"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "16838:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "16826:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "16826:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "16816:6:10"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "16857:40:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "16874:9:10"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "16885:11:10"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "16870:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "16870:27:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "16857:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "16686:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "16689:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "16683:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16683:14:10"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "16698:28:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "16700:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "16709:1:10"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "16712:11:10"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "16705:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "16705:19:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "16700:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "16679:3:10",
																					"statements": []
																				},
																				"src": "16675:236:10"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "16959:166:10",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "16977:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "17004:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "17009:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "17000:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "17000:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "16994:5:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "16994:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "16981:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "17044:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "17056:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "17083:1:10",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "17086:6:10"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "17079:3:10"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "17079:14:10"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "17095:3:10",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "17075:3:10"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "17075:24:10"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "17105:1:10",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "17101:3:10"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "17101:6:10"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "17071:3:10"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "17071:37:10"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "17067:3:10"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "17067:42:10"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "17052:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "17052:58:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "17037:6:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "17037:74:10"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "17037:74:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "16930:7:10"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "16939:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "16927:2:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "16927:19:10"
																				},
																				"nodeType": "YulIf",
																				"src": "16924:201:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "17145:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "17159:1:10",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "17162:6:10"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "17155:3:10"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "17155:14:10"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "17171:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "17151:3:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "17151:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "17138:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17138:36:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "17138:36:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "16521:663:10",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16526:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "17201:234:10",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "17215:14:10",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17228:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "17219:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "17264:67:10",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "17282:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "17301:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "17306:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "17297:3:10"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "17297:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "17291:5:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "17291:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "17282:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "17245:6:10"
																				},
																				"nodeType": "YulIf",
																				"src": "17242:89:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "17351:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "17410:5:10"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "17417:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "17357:52:10"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "17357:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "17344:6:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17344:81:10"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "17344:81:10"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "17193:242:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "16501:6:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16509:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16498:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "16498:14:10"
															},
															"nodeType": "YulSwitch",
															"src": "16491:944:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "16170:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "16176:3:10",
														"type": ""
													}
												],
												"src": "16089:1352:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17595:142:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17612:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17623:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17605:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17605:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17605:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17650:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17661:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17646:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17646:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17666:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17639:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17639:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17639:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17678:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17704:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17716:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17727:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17712:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17712:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "17686:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17686:45:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17678:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17556:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17567:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17575:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17586:4:10",
														"type": ""
													}
												],
												"src": "17446:291:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17774:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17791:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17798:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17803:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "17794:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17794:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17784:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17784:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17784:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17831:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17834:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17824:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17824:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17824:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17855:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17858:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "17848:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17848:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17848:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "17742:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17921:88:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17952:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "17954:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17954:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17954:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17937:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17948:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "17944:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17944:6:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "17934:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17934:17:10"
															},
															"nodeType": "YulIf",
															"src": "17931:43:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17983:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "17994:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18001:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17990:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "17990:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "17983:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17903:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "17913:3:10",
														"type": ""
													}
												],
												"src": "17874:135:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18188:177:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18205:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18216:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18198:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18198:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18198:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18239:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18250:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18235:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18235:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18255:2:10",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18228:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18228:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18228:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18278:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18289:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18274:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18274:18:10"
																	},
																	{
																		"hexValue": "4a757374696669636174696f6e2049504653207265717569726564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18294:29:10",
																		"type": "",
																		"value": "Justification IPFS required"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18267:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18267:57:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18267:57:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18333:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18345:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18356:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18341:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18341:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18333:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb40561e7c3cb6abb9adde29a2dee0b8a1ccdccf090b25897bee188991cd7422__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18165:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18179:4:10",
														"type": ""
													}
												],
												"src": "18014:351:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18509:150:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18519:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18539:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18533:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18533:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "18523:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "18594:6:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18602:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18590:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18590:17:10"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18609:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18614:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "18555:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18555:66:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18555:66:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18630:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18641:3:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "18646:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18637:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18637:16:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18630:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18485:3:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18490:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18501:3:10",
														"type": ""
													}
												],
												"src": "18370:289:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18838:170:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18855:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18866:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18848:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18848:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18848:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18889:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18900:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18885:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18885:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18905:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18878:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18878:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18878:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18928:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18939:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18924:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18924:18:10"
																	},
																	{
																		"hexValue": "556e737570706f72746564204149206d6f64656c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18944:22:10",
																		"type": "",
																		"value": "Unsupported AI model"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18917:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18917:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18917:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18976:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18988:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18999:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18984:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "18984:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18976:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_63d21e090775948cc310afaf01e8b96f7a91e37be07b5dc6b48ce00b62db1e97__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18815:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18829:4:10",
														"type": ""
													}
												],
												"src": "18664:344:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19187:170:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19204:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19215:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19197:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19197:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19197:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19238:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19249:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19234:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19234:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19254:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19227:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19227:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19227:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19277:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19288:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19273:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19273:18:10"
																	},
																	{
																		"hexValue": "53636f726520616c726561647920657869737473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19293:22:10",
																		"type": "",
																		"value": "Score already exists"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19266:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19266:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19266:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19325:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19337:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19348:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19333:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19333:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19325:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_20fced6b954284e1ef5d497b8bc6607c1a209e0dcf4c8b3eed5e618c3c1d88c8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19164:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19178:4:10",
														"type": ""
													}
												],
												"src": "19013:344:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19536:174:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19553:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19564:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19546:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19546:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19546:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19587:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19598:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19583:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19583:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19603:2:10",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19576:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19576:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19576:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19626:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19637:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19622:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19622:18:10"
																	},
																	{
																		"hexValue": "496e76616c696420627265616b646f776e2073636f726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19642:26:10",
																		"type": "",
																		"value": "Invalid breakdown scores"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19615:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19615:54:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19615:54:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19678:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19690:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19701:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19686:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19686:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19678:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_befe45b55b0e14ee54aad630250f4a82387142889d62a313e7d018bafe212caf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19513:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19527:4:10",
														"type": ""
													}
												],
												"src": "19362:348:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19765:175:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19775:50:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "19802:1:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19805:4:10",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "19798:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19798:12:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "19816:1:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19819:4:10",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "19812:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19812:12:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "19794:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19794:31:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "19779:11:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "19834:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "19849:11:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19862:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "19845:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19845:22:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "19834:7:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19912:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "19914:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19914:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19914:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "product",
																				"nodeType": "YulIdentifier",
																				"src": "19889:7:10"
																			},
																			{
																				"name": "product_raw",
																				"nodeType": "YulIdentifier",
																				"src": "19898:11:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "19886:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19886:24:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "19879:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "19879:32:10"
															},
															"nodeType": "YulIf",
															"src": "19876:58:10"
														}
													]
												},
												"name": "checked_mul_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19744:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19747:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "19753:7:10",
														"type": ""
													}
												],
												"src": "19715:225:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19991:102:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20001:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "20016:1:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20019:4:10",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "20012:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20012:12:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "20030:1:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20033:4:10",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "20026:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20026:12:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20008:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20008:31:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "20001:3:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20065:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20067:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20067:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20067:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "20054:3:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20059:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "20051:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20051:13:10"
															},
															"nodeType": "YulIf",
															"src": "20048:39:10"
														}
													]
												},
												"name": "checked_add_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "19974:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "19977:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "19983:3:10",
														"type": ""
													}
												],
												"src": "19945:148:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20142:218:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "20152:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20167:1:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20170:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "20163:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20163:12:10"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nodeType": "YulTypedName",
																	"src": "20156:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20207:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20228:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "20235:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "20240:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "20231:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20231:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "20221:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20221:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20221:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20272:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20275:4:10",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "20265:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20265:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20265:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20300:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "20303:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "20293:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20293:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20293:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "20194:3:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "20187:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20187:11:10"
															},
															"nodeType": "YulIf",
															"src": "20184:134:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20327:27:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "20340:1:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20343:4:10",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "20336:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20336:12:10"
																	},
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "20350:3:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "20332:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20332:22:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "20327:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "20127:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "20130:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "20136:1:10",
														"type": ""
													}
												],
												"src": "20098:262:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20414:79:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20424:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20436:1:10"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20439:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "20432:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20432:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "20424:4:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20465:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20467:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20467:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20467:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "20456:4:10"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20462:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "20453:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20453:11:10"
															},
															"nodeType": "YulIf",
															"src": "20450:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "20396:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "20399:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "20405:4:10",
														"type": ""
													}
												],
												"src": "20365:128:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20672:223:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20689:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20700:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20682:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20682:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20682:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20723:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20734:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20719:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20719:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20739:2:10",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20712:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20712:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20712:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20762:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20773:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20758:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20758:18:10"
																	},
																	{
																		"hexValue": "53636f726520696e636f6e73697374656e74207769746820627265616b646f77",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20778:34:10",
																		"type": "",
																		"value": "Score inconsistent with breakdow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20751:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20751:62:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20751:62:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20833:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20844:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20829:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20829:18:10"
																	},
																	{
																		"hexValue": "6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20849:3:10",
																		"type": "",
																		"value": "n"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20822:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20822:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20822:31:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20862:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20874:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20885:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20870:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "20870:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20862:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ce993e7b10fa53e3a225bbeee5af32a4ed7ada86d6a9cad7b2171003c1c4c4d6__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20649:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20663:4:10",
														"type": ""
													}
												],
												"src": "20498:397:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21125:302:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21142:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "21153:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21135:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21135:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21135:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21180:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21191:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21176:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21176:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21196:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21169:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21169:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21169:31:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21209:60:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "21241:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21253:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21264:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21249:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21249:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "21223:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21223:46:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "21213:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21289:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21300:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21285:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21285:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "21309:6:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21317:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21305:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21305:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21278:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21278:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21278:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21337:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "21363:6:10"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "21371:6:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "21345:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21345:33:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21337:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21398:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21409:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21394:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21394:18:10"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "21414:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21387:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21387:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21387:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21070:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "21081:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "21089:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "21097:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21105:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21116:4:10",
														"type": ""
													}
												],
												"src": "20900:527:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21606:165:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21623:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21634:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21616:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21616:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21616:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21657:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21668:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21653:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21653:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21673:2:10",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21646:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21646:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21646:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21696:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21707:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21692:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21692:18:10"
																	},
																	{
																		"hexValue": "526561736f6e207265717569726564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21712:17:10",
																		"type": "",
																		"value": "Reason required"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21685:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21685:45:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21685:45:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21739:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21751:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21762:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21747:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21747:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21739:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_000e680d12c25df5d1fde0e9487a3490e64ec427f6d963ef2486a46037e13d33__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21583:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21597:4:10",
														"type": ""
													}
												],
												"src": "21432:339:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21823:89:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21850:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "21852:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21852:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21852:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21843:5:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "21836:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21836:13:10"
															},
															"nodeType": "YulIf",
															"src": "21833:39:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21881:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21892:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21903:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "21899:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21899:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21888:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "21888:18:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "21881:3:10"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21805:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "21815:3:10",
														"type": ""
													}
												],
												"src": "21776:136:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22074:142:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22091:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22102:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22084:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22084:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22084:25:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22129:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22140:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22125:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22125:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22145:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22118:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22118:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22118:30:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22157:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "22183:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22195:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22206:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22191:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22191:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "22165:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22165:45:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22157:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_0_by_1_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22035:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "22046:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22054:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22065:4:10",
														"type": ""
													}
												],
												"src": "21917:299:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22395:171:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22412:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22423:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22405:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22405:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22405:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22446:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22457:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22442:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22442:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22462:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22435:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22435:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22435:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22485:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22496:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22481:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22481:18:10"
																	},
																	{
																		"hexValue": "496e76616c6964206d6f64656c2076657273696f6e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22501:23:10",
																		"type": "",
																		"value": "Invalid model version"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22474:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22474:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22474:51:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22534:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22546:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22557:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22542:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22542:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22534:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_809a61880eab24cb5f12ad5fdac924d8282984ac0b80d15a3da59e6265c2820d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22372:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22386:4:10",
														"type": ""
													}
												],
												"src": "22221:345:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22714:158:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22731:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22742:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22724:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22724:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22724:21:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22754:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22780:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22792:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22803:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22788:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22788:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "22762:17:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22762:45:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22754:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22827:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22838:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22823:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22823:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "22857:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "22850:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22850:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "22843:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22843:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22816:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "22816:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22816:50:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_bool__to_t_string_memory_ptr_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22675:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "22686:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22694:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22705:4:10",
														"type": ""
													}
												],
												"src": "22571:301:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23051:172:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23068:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23079:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23061:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23061:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23061:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23102:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23113:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23098:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23098:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23118:2:10",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23091:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23091:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23091:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23141:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23152:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23137:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23137:18:10"
																	},
																	{
																		"hexValue": "496e76616c6964206f7261636c652061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23157:24:10",
																		"type": "",
																		"value": "Invalid oracle address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23130:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23130:52:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23130:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23191:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23203:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23214:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23199:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23199:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23191:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23028:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23042:4:10",
														"type": ""
													}
												],
												"src": "22877:346:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23402:173:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23419:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23430:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23412:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23412:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23412:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23453:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23464:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23449:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23449:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23469:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23442:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23442:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23442:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23492:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23503:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23488:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23488:18:10"
																	},
																	{
																		"hexValue": "57656967687473206d7573742073756d20746f20313030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "23508:25:10",
																		"type": "",
																		"value": "Weights must sum to 100"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23481:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23481:53:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23481:53:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23543:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23555:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23566:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23551:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23551:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23543:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c7f58c8f44846a2e8ce4b5a63e4a4c560693fa19e08f64bcd465c09c293ca1df__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23379:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23393:4:10",
														"type": ""
													}
												],
												"src": "23228:347:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23745:105:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23755:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23767:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23778:3:10",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23763:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23763:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23755:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23826:6:10"
																	},
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23834:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_struct_ScoringBreakdown",
																	"nodeType": "YulIdentifier",
																	"src": "23791:34:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "23791:53:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23791:53:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_ScoringCriteria_$644_memory_ptr__to_t_struct$_ScoringCriteria_$644_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23714:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23725:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23736:4:10",
														"type": ""
													}
												],
												"src": "23580:270:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24029:166:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24046:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24057:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24039:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24039:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24039:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24080:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24091:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24076:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24076:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24096:2:10",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24069:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24069:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24069:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24119:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24130:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24115:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24115:18:10"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24135:18:10",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24108:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24108:46:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24108:46:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24163:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24175:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24186:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24171:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24171:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24163:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24006:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24020:4:10",
														"type": ""
													}
												],
												"src": "23855:340:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24301:102:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24311:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24323:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24334:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24319:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24319:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24311:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24353:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "24368:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "24384:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "24389:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "24380:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "24380:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "24393:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "24376:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24376:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "24364:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24364:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24346:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24346:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24346:51:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24270:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "24281:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24292:4:10",
														"type": ""
													}
												],
												"src": "24200:203:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24582:181:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24599:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24610:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24592:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24592:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24592:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24633:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24644:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24629:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24629:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24649:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24622:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24622:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24622:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24672:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24683:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24668:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24668:18:10"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24688:33:10",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24661:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24661:61:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24661:61:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24731:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24743:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24754:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24739:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24739:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24731:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24559:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24573:4:10",
														"type": ""
													}
												],
												"src": "24408:355:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24897:145:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24907:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24919:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24930:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24915:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24915:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24907:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24949:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "24964:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "24980:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "24985:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "24976:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "24976:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "24989:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "24972:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24972:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "24960:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24960:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24942:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "24942:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24942:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25013:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25024:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25009:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25009:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "25029:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25002:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25002:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25002:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24858:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "24869:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "24877:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24888:4:10",
														"type": ""
													}
												],
												"src": "24768:274:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25221:170:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25238:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25249:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25231:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25231:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25231:21:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25272:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25283:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25268:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25268:18:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25288:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25261:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25261:30:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25261:30:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25311:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25322:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25307:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25307:18:10"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25327:22:10",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25300:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25300:50:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25300:50:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25359:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25371:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25382:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25367:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "25367:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25359:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25198:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25212:4:10",
														"type": ""
													}
												],
												"src": "25047:344:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_bool(value, pos)\n    {\n        mstore(pos, iszero(iszero(value)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_bool__to_t_uint256_t_string_memory_ptr_t_bool__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 96)\n        tail := abi_encode_string(value1, add(headStart, 96))\n        mstore(add(headStart, 64), iszero(iszero(value2)))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_string(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint8_t_uint8_t_uint8_t_uint8_t_uint8__to_t_uint8_t_uint8_t_uint8_t_uint8_t_uint8__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, and(value0, 0xff))\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), and(value2, 0xff))\n        mstore(add(headStart, 96), and(value3, 0xff))\n        mstore(add(headStart, 128), and(value4, 0xff))\n    }\n    function abi_decode_tuple_t_addresst_array$_t_bytes32_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let _1 := 32\n        let offset := calldataload(add(headStart, _1))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let dst := allocate_memory(add(_5, _1))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _1)\n        }\n        value1 := dst_1\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_struct_ScoringBreakdown(headStart, end) -> value\n    {\n        if slt(sub(end, headStart), 0xa0) { revert(0, 0) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0xa0)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        value := memPtr\n        mstore(memPtr, abi_decode_uint8(headStart))\n        mstore(add(memPtr, 32), abi_decode_uint8(add(headStart, 32)))\n        mstore(add(memPtr, 64), abi_decode_uint8(add(headStart, 64)))\n        mstore(add(memPtr, 96), abi_decode_uint8(add(headStart, 96)))\n        mstore(add(memPtr, 128), abi_decode_uint8(add(headStart, 128)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_string_memory_ptrt_string_memory_ptrt_struct$_ScoringBreakdown_$1394_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 288) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        value4 := abi_decode_struct_ScoringBreakdown(add(headStart, 128), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_bool(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        value1 := abi_decode_bool(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_encode_struct_ScoringBreakdown(value, pos)\n    {\n        mstore(pos, and(mload(value), 0xff))\n        mstore(add(pos, 0x20), and(mload(add(value, 0x20)), 0xff))\n        mstore(add(pos, 0x40), and(mload(add(value, 0x40)), 0xff))\n        mstore(add(pos, 0x60), and(mload(add(value, 0x60)), 0xff))\n        mstore(add(pos, 0x80), and(mload(add(value, 0x80)), 0xff))\n    }\n    function abi_encode_tuple_t_struct$_ScoringBreakdown_$1394_memory_ptr__to_t_struct$_ScoringBreakdown_$1394_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        abi_encode_struct_ScoringBreakdown(value0, headStart)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_bool(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_struct$_AIScoreData_$662_memory_ptr__to_t_struct$_AIScoreData_$662_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), mload(value0))\n        mstore(add(headStart, 64), mload(add(value0, 32)))\n        let memberValue0 := mload(add(value0, 64))\n        mstore(add(headStart, 96), 0x0180)\n        let tail_1 := abi_encode_string(memberValue0, add(headStart, 416))\n        let memberValue0_1 := mload(add(value0, 96))\n        mstore(add(headStart, 128), add(sub(tail_1, headStart), not(31)))\n        let tail_2 := abi_encode_string(memberValue0_1, tail_1)\n        mstore(add(headStart, 160), mload(add(value0, 128)))\n        mstore(add(headStart, 192), and(mload(add(value0, 160)), sub(shl(160, 1), 1)))\n        let memberValue0_2 := mload(add(value0, 192))\n        abi_encode_bool(memberValue0_2, add(headStart, 224))\n        let memberValue0_3 := mload(add(value0, 224))\n        abi_encode_struct_ScoringBreakdown(memberValue0_3, add(headStart, 256))\n        tail := tail_2\n    }\n    function abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function abi_decode_tuple_t_struct$_ScoringCriteria_$644_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_struct_ScoringBreakdown(headStart, dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_0febab928e40c46453cf5b5d4970676eff56829a16bec62dc48d209b2deaf8aa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Invalid proposal ID\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_36814994bee7035561531cc8c4f1f230479c45e6bccc4871cc426851cda156a2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Not authorized oracle\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_63af77bbbc7224208a06ceed8f4ab35deccfa6d50db9fd125a1b296b24befc02__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Score out of range\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a69795945e67f0e5e64fe0dde79a3a480ebe678a88469f6b4d51002796df2777__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Score does not exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_41166c2cb511fd788913a8ccf76df85866bc3ce3fb64b1c01c1d3d2a216501a6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Not original oracle\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_698e91f2cf105a34b76ad1f14b4cc68435f9c50341312fde16759560e3c5635e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Update period expired\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b9c71f73b66f3d1246f466c2230b476e959ed0f64c536bfee50d23aa5ba49feb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Update reason required\")\n        tail := add(headStart, 96)\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_string(value1, add(headStart, 64))\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_fb40561e7c3cb6abb9adde29a2dee0b8a1ccdccf090b25897bee188991cd7422__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Justification IPFS required\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_63d21e090775948cc310afaf01e8b96f7a91e37be07b5dc6b48ce00b62db1e97__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Unsupported AI model\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_20fced6b954284e1ef5d497b8bc6607c1a209e0dcf4c8b3eed5e618c3c1d88c8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Score already exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_befe45b55b0e14ee54aad630250f4a82387142889d62a313e7d018bafe212caf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Invalid breakdown scores\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint8(x, y) -> product\n    {\n        let product_raw := mul(and(x, 0xff), and(y, 0xff))\n        product := and(product_raw, 0xff)\n        if iszero(eq(product, product_raw)) { panic_error_0x11() }\n    }\n    function checked_add_t_uint8(x, y) -> sum\n    {\n        sum := add(and(x, 0xff), and(y, 0xff))\n        if gt(sum, 0xff) { panic_error_0x11() }\n    }\n    function checked_div_t_uint8(x, y) -> r\n    {\n        let y_1 := and(y, 0xff)\n        if iszero(y_1)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(and(x, 0xff), y_1)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_ce993e7b10fa53e3a225bbeee5af32a4ed7ada86d6a9cad7b2171003c1c4c4d6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Score inconsistent with breakdow\")\n        mstore(add(headStart, 96), \"n\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 128)\n        let tail_1 := abi_encode_string(value1, add(headStart, 128))\n        mstore(add(headStart, 64), sub(tail_1, headStart))\n        tail := abi_encode_string(value2, tail_1)\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_000e680d12c25df5d1fde0e9487a3490e64ec427f6d963ef2486a46037e13d33__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Reason required\")\n        tail := add(headStart, 96)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_rational_0_by_1_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_string(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_809a61880eab24cb5f12ad5fdac924d8282984ac0b80d15a3da59e6265c2820d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid model version\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_bool__to_t_string_memory_ptr_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_string(value0, add(headStart, 64))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_encode_tuple_t_stringliteral_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Invalid oracle address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c7f58c8f44846a2e8ce4b5a63e4a4c560693fa19e08f64bcd465c09c293ca1df__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Weights must sum to 100\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_struct$_ScoringCriteria_$644_memory_ptr__to_t_struct$_ScoringCriteria_$644_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        abi_encode_struct_ScoringBreakdown(value0, headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061023d5760003560e01c80638456cb591161013b578063bfe42a37116100b8578063d5c1a1e11161007c578063d5c1a1e1146105b7578063ea535940146105ca578063ebdf690f146105ea578063f2bcac3d14610611578063ff8dea011461062657600080fd5b8063bfe42a37146104f7578063c601f7af1461051e578063c772a8a614610533578063cfe85a2f14610584578063d547741f146105a457600080fd5b8063a217fddf116100ff578063a217fddf1461033f578063a91ad18e146104b4578063aca5a8a7146104be578063b8a956d3146104d1578063ba340773146104e457600080fd5b80638456cb591461044c57806391b9f9d81461045457806391d148541461046757806396caac0a1461047a578063a02d72fb1461048d57600080fd5b80633f4ba83a116101c957806361c992a31161018d57806361c992a3146103ce57806368ca78f9146103f15780637092b0bc146104045780637131f0251461041757806375b238fc1461043757600080fd5b80633f4ba83a1461033757806340b892701461033f5780634da89fbd146103475780634fe9d1f5146103b05780635c975abb146103c357600080fd5b80632b116373116102105780632b116373146102c55780632ed49cf7146102da5780632f2ff15d1461030857806336568abe1461031b5780633a1e017f1461032e57600080fd5b806301ffc9a7146102425780630311b82d1461026a578063248a9ca31461028c57806327ff6223146102bd575b600080fd5b610255610250366004611e8f565b610639565b60405190151581526020015b60405180910390f35b61027d610278366004611ec0565b610670565b60405161026193929190611f29565b6102af61029a366004611ec0565b60009081526020819052604090206001015490565b604051908152602001610261565b6102af606481565b6102d86102d336600461200b565b610765565b005b6102556102e8366004612082565b805160208183018101805160058252928201919093012091525460ff1681565b6102d86103163660046120db565b6109f0565b6102d86103293660046120db565b610a1b565b6102af60075481565b6102d8610a53565b6102af600081565b60065461037c9060ff808216916101008104821691620100008204811691630100000081048216916401000000009091041685565b6040805160ff968716815294861660208601529285169284019290925283166060830152909116608082015260a001610261565b6102d86103be366004612107565b610a76565b60015460ff16610255565b6102556103dc3660046121c0565b60046020526000908152604090205460ff1681565b6102556103ff366004612107565b610ac2565b6102d861041236600461227d565b610b1d565b6102af6104253660046121c0565b60086020526000908152604090205481565b6102af60008051602061288383398151915281565b6102d86110b5565b6102d8610462366004612107565b6110d5565b6102556104753660046120db565b611121565b610255610488366004611ec0565b61114a565b6102af7f58223cdfb69946630d837d40b5c366a584f0217ada7fddd8318f2e08603cfa2281565b6102af62278d0081565b6102af6104cc3660046121c0565b611192565b6102d86104df366004612307565b6111fc565b6102d86104f236600461235e565b611336565b6102af7f7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e81565b6102af60008051602061286383398151915281565b61056f6105413660046121c0565b6001600160a01b0316600090815260086020908152604080832054600490925290912054909160ff90911690565b60408051928352901515602083015201610261565b610597610592366004611ec0565b611405565b60405161026191906123a3565b6102d86105b23660046120db565b6114ef565b6102d86105c53660046123eb565b611514565b6105dd6105d8366004611ec0565b61161a565b6040516102619190612415565b6102af7fede9dcdb0ce99dc7cec9c7be9246ad08b37853683ad91569c187b647ddf5e21c81565b6106196118c8565b60405161026191906124e1565b6102d8610634366004612525565b611a2d565b60006001600160e01b03198216637965db0b60e01b148061066a57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60006060600083600081116106a05760405162461bcd60e51b815260040161069790612541565b60405180910390fd5b6000858152600360205260409020600181015460058201546002830180549091600160a01b900460ff169082906106d69061256e565b80601f01602080910402602001604051908101604052809291908181526020018280546107029061256e565b801561074f5780601f106107245761010080835404028352916020019161074f565b820191906000526020600020905b81548152906001019060200180831161073257829003601f168201915b5050505050915094509450945050509193909250565b3360009081526004602052604090205460ff166107bc5760405162461bcd60e51b81526020600482015260156024820152744e6f7420617574686f72697a6564206f7261636c6560581b6044820152606401610697565b83600081116107dd5760405162461bcd60e51b815260040161069790612541565b8360648111156108245760405162461bcd60e51b815260206004820152601260248201527153636f7265206f7574206f662072616e676560701b6044820152606401610697565b61082c611b88565b600086815260036020526040902060050154600160a01b900460ff166108645760405162461bcd60e51b8152600401610697906125a2565b6000868152600360205260409020600501546001600160a01b031633146108c35760405162461bcd60e51b81526020600482015260136024820152724e6f74206f726967696e616c206f7261636c6560681b6044820152606401610697565b6000868152600360205260409020600401546108e39062278d00906125e6565b42111561092a5760405162461bcd60e51b8152602060048201526015602482015274155c19185d19481c195c9a5bd908195e1c1a5c9959605a1b6044820152606401610697565b60008351116109745760405162461bcd60e51b8152602060048201526016602482015275155c19185d19481c99585cdbdb881c995c5d5a5c995960521b6044820152606401610697565b6000868152600360205260409020600181018690556002016109968582612647565b5060008681526003602052604090819020426004909101555186907fd3e8dbbe8ff60a1fae1e5f88e71f27270ed38badc7b26e19922ed94fd12f5fe9906109e09088908790612707565b60405180910390a2505050505050565b600082815260208190526040902060010154610a0b81611bd0565b610a158383611bda565b50505050565b6001600160a01b0381163314610a445760405163334bd91960e11b815260040160405180910390fd5b610a4e8282611c6c565b505050565b600080516020612883833981519152610a6b81611bd0565b610a73611cd7565b50565b6000610a8181611bd0565b60005b8251811015610a1557610ab0838281518110610aa257610aa2612720565b6020026020010151856114ef565b80610aba81612736565b915050610a84565b6000805b8251811015610b1357610af2838281518110610ae457610ae4612720565b602002602001015185611121565b15610b0157600191505061066a565b80610b0b81612736565b915050610ac6565b5060009392505050565b3360009081526004602052604090205460ff16610b745760405162461bcd60e51b81526020600482015260156024820152744e6f7420617574686f72697a6564206f7261636c6560581b6044820152606401610697565b8460008111610b955760405162461bcd60e51b815260040161069790612541565b846064811115610bdc5760405162461bcd60e51b815260206004820152601260248201527153636f7265206f7574206f662072616e676560701b6044820152606401610697565b610be4611b88565b610bec611d29565b6000855111610c3d5760405162461bcd60e51b815260206004820152601b60248201527f4a757374696669636174696f6e204950465320726571756972656400000000006044820152606401610697565b600584604051610c4d919061274f565b9081526040519081900360200190205460ff16610ca35760405162461bcd60e51b8152602060048201526014602482015273155b9cdd5c1c1bdc9d1959081052481b5bd9195b60621b6044820152606401610697565b600087815260036020526040902060050154600160a01b900460ff1615610d035760405162461bcd60e51b815260206004820152601460248201527353636f726520616c72656164792065786973747360601b6044820152606401610697565b6064836000015160ff1611158015610d2357506064836020015160ff1611155b8015610d3757506064836040015160ff1611155b8015610d4b57506064836060015160ff1611155b8015610d5f57506064836080015160ff1611155b610dab5760405162461bcd60e51b815260206004820152601860248201527f496e76616c696420627265616b646f776e2073636f72657300000000000000006044820152606401610697565b6006546080840151600091606491610dce91640100000000900460ff169061276b565b6006546060870151610dea916301000000900460ff169061276b565b6006546040880151610e059162010000900460ff169061276b565b6006546020890151610e1f91610100900460ff169061276b565b6006548951610e319160ff169061276b565b610e3b919061278e565b610e45919061278e565b610e4f919061278e565b610e59919061278e565b610e6391906127a7565b60ff169050610e736005826127d7565b8710158015610e8c5750610e888160056125e6565b8711155b610ee25760405162461bcd60e51b815260206004820152602160248201527f53636f726520696e636f6e73697374656e74207769746820627265616b646f776044820152603760f91b6064820152608401610697565b604080516101008101825289815260208082018a81528284018a8152606084018a90524260808501523360a0850152600160c0850181905260e085018a905260008e815260039094529490922083518155905193810193909355519091906002820190610f4f9082612647565b5060608201516003820190610f649082612647565b50608082810151600483015560a083015160058301805460c08601511515600160a01b026001600160a81b03199091166001600160a01b039093169290921791909117905560e090920151805160069092018054602083015160408401516060850151949096015160ff9081166401000000000264ff000000001995821663010000000263ff0000001998831662010000029890981663ffff0000199383166101000261ffff19909516979092169690961792909217161793909317161790556007805490600061103483612736565b909155505033600090815260086020526040812080549161105483612736565b9190505550336001600160a01b0316887f09e8ad66e4736435405704d301d344e9454f286d3feeb2036b1adc6f4900ccbc8989894260405161109994939291906127ea565b60405180910390a3506110ac6001600255565b50505050505050565b6000805160206128838339815191526110cd81611bd0565b610a73611d80565b60006110e081611bd0565b60005b8251811015610a155761110f83828151811061110157611101612720565b6020026020010151856109f0565b8061111981612736565b9150506110e3565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6000816000811161116d5760405162461bcd60e51b815260040161069790612541565b600083815260036020526040902060050154600160a01b900460ff1691505b50919050565b60008061119d6118c8565b90506000805b82518110156111f4576111cf8382815181106111c1576111c1612720565b602002602001015186611121565b156111e257816111de81612736565b9250505b806111ec81612736565b9150506111a3565b509392505050565b600061120781611bd0565b600083815260036020526040902060050154600160a01b900460ff1661123f5760405162461bcd60e51b8152600401610697906125a2565b60008251116112825760405162461bcd60e51b815260206004820152600f60248201526e1499585cdbdb881c995c5d5a5c9959608a1b6044820152606401610697565b600083815260036020526040812081815560018101829055906112a86002830182611e41565b6112b6600383016000611e41565b506000600482018190556005820180546001600160a81b03191690556006909101805464ffffffffff1916905560078054916112f183612827565b9190505550827fd3e8dbbe8ff60a1fae1e5f88e71f27270ed38badc7b26e19922ed94fd12f5fe9600084604051611329929190612707565b60405180910390a2505050565b60008051602061288383398151915261134e81611bd0565b60008351116113975760405162461bcd60e51b815260206004820152601560248201527424b73b30b634b21036b7b232b6103b32b939b4b7b760591b6044820152606401610697565b816005846040516113a8919061274f565b908152604051908190036020018120805492151560ff19909316929092179091557f2e5180543742ece2db44ed70b2619f2bf555a29a7bdead994736174f0d90a9b6906113f8908590859061283e565b60405180910390a1505050565b6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915281600081116114515760405162461bcd60e51b815260040161069790612541565b600083815260036020526040902060050154600160a01b900460ff166114895760405162461bcd60e51b8152600401610697906125a2565b5050600090815260036020908152604091829020825160a08101845260069091015460ff80821683526101008204811693830193909352620100008104831693820193909352630100000083048216606082015264010000000090920416608082015290565b60008281526020819052604090206001015461150a81611bd0565b610a158383611c6c565b60008051602061288383398151915261152c81611bd0565b6001600160a01b03831661157b5760405162461bcd60e51b8152602060048201526016602482015275496e76616c6964206f7261636c65206164647265737360501b6044820152606401610697565b6001600160a01b0383166000908152600460205260409020805460ff191683158015919091179091556115c5576115c0600080516020612863833981519152846109f0565b6115dd565b6115dd600080516020612863833981519152846114ef565b826001600160a01b03167f82a8fb1e779ea45ad427cc612e47087f5386a567e49dce488185e40646fa48d583604051611329911515815260200190565b6116826040805161010081018252600080825260208083018290526060838501819052808401819052608080850184905260a080860185905260c08601859052865190810187528481529283018490529482018390528101829052928301529060e082015290565b81600081116116a35760405162461bcd60e51b815260040161069790612541565b600083815260036020526040902060050154600160a01b900460ff166116db5760405162461bcd60e51b8152600401610697906125a2565b6003600084815260200190815260200160002060405180610100016040529081600082015481526020016001820154815260200160028201805461171e9061256e565b80601f016020809104026020016040519081016040528092919081815260200182805461174a9061256e565b80156117975780601f1061176c57610100808354040283529160200191611797565b820191906000526020600020905b81548152906001019060200180831161177a57829003601f168201915b505050505081526020016003820180546117b09061256e565b80601f01602080910402602001604051908101604052809291908181526020018280546117dc9061256e565b80156118295780601f106117fe57610100808354040283529160200191611829565b820191906000526020600020905b81548152906001019060200180831161180c57829003601f168201915b5050509183525050600482015460208083019190915260058301546001600160a01b03811660408085019190915260ff600160a01b90920482161515606080860191909152815160a0810183526006909601548084168752610100810484169487019490945262010000840483169186019190915263010000008304821690850152640100000000909104166080838101919091520152915050919050565b60408051600680825260e082019092526060916020820160c0803683370190505090506000801b8160008151811061190257611902612720565b6020026020010181815250506000805160206128838339815191528160018151811061193057611930612720565b6020026020010181815250506000805160206128638339815191528160028151811061195e5761195e612720565b6020026020010181815250507fede9dcdb0ce99dc7cec9c7be9246ad08b37853683ad91569c187b647ddf5e21c8160038151811061199e5761199e612720565b6020026020010181815250507f58223cdfb69946630d837d40b5c366a584f0217ada7fddd8318f2e08603cfa22816004815181106119de576119de612720565b6020026020010181815250507f7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e81600581518110611a1e57611a1e612720565b60200260200101818152505090565b600080516020612883833981519152611a4581611bd0565b60808201516060830151604084015160208501518551611a65919061278e565b611a6f919061278e565b611a79919061278e565b611a83919061278e565b60ff16606414611ad55760405162461bcd60e51b815260206004820152601760248201527f57656967687473206d7573742073756d20746f203130300000000000000000006044820152606401610697565b81516006805460208501516040808701516060880151608089015160ff9081166401000000000264ff000000001992821663010000000263ff0000001994831662010000029490941663ffff0000199683166101000261ffff1990981692909916919091179590951793909316959095179490941716179055517f90565f56924446477768885e9b20cf4cb9d2183f2ad4313f3e90f1dcaedcc0ae90611b7c9084906123a3565b60405180910390a15050565b60015460ff1615611bce5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610697565b565b610a738133611dbb565b6000611be68383611121565b611c64576000838152602081815260408083206001600160a01b03861684529091529020805460ff19166001179055611c1c3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a450600161066a565b50600061066a565b6000611c788383611121565b15611c64576000838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a450600161066a565b611cdf611df8565b6001805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6002805403611d7a5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610697565b60028055565b611d88611b88565b6001805460ff1916811790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833611d0c565b611dc58282611121565b611df45760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610697565b5050565b60015460ff16611bce5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610697565b508054611e4d9061256e565b6000825580601f10611e5d575050565b601f016020900490600052602060002090810190610a7391905b80821115611e8b5760008155600101611e77565b5090565b600060208284031215611ea157600080fd5b81356001600160e01b031981168114611eb957600080fd5b9392505050565b600060208284031215611ed257600080fd5b5035919050565b60005b83811015611ef4578181015183820152602001611edc565b50506000910152565b60008151808452611f15816020860160208601611ed9565b601f01601f19169290920160200192915050565b838152606060208201526000611f426060830185611efd565b90508215156040830152949350505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611f9357611f93611f54565b604052919050565b600082601f830112611fac57600080fd5b813567ffffffffffffffff811115611fc657611fc6611f54565b611fd9601f8201601f1916602001611f6a565b818152846020838601011115611fee57600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561202157600080fd5b8435935060208501359250604085013567ffffffffffffffff8082111561204757600080fd5b61205388838901611f9b565b9350606087013591508082111561206957600080fd5b5061207687828801611f9b565b91505092959194509250565b60006020828403121561209457600080fd5b813567ffffffffffffffff8111156120ab57600080fd5b6120b784828501611f9b565b949350505050565b80356001600160a01b03811681146120d657600080fd5b919050565b600080604083850312156120ee57600080fd5b823591506120fe602084016120bf565b90509250929050565b6000806040838503121561211a57600080fd5b612123836120bf565b915060208084013567ffffffffffffffff8082111561214157600080fd5b818601915086601f83011261215557600080fd5b81358181111561216757612167611f54565b8060051b9150612178848301611f6a565b818152918301840191848101908984111561219257600080fd5b938501935b838510156121b057843582529385019390850190612197565b8096505050505050509250929050565b6000602082840312156121d257600080fd5b611eb9826120bf565b803560ff811681146120d657600080fd5b600060a082840312156121fe57600080fd5b60405160a0810181811067ffffffffffffffff8211171561222157612221611f54565b604052905080612230836121db565b815261223e602084016121db565b602082015261224f604084016121db565b6040820152612260606084016121db565b6060820152612271608084016121db565b60808201525092915050565b6000806000806000610120868803121561229657600080fd5b8535945060208601359350604086013567ffffffffffffffff808211156122bc57600080fd5b6122c889838a01611f9b565b945060608801359150808211156122de57600080fd5b506122eb88828901611f9b565b9250506122fb87608088016121ec565b90509295509295909350565b6000806040838503121561231a57600080fd5b82359150602083013567ffffffffffffffff81111561233857600080fd5b61234485828601611f9b565b9150509250929050565b803580151581146120d657600080fd5b6000806040838503121561237157600080fd5b823567ffffffffffffffff81111561238857600080fd5b61239485828601611f9b565b9250506120fe6020840161234e565b60a0810161066a828460ff815116825260ff602082015116602083015260ff604082015116604083015260ff606082015116606083015260ff60808201511660808301525050565b600080604083850312156123fe57600080fd5b612407836120bf565b91506120fe6020840161234e565b6020815281516020820152602082015160408201526000604083015161018060608401526124476101a0840182611efd565b90506060840151601f198483030160808501526124648282611efd565b915050608084015160a084015260018060a01b0360a08501511660c084015260c084015161249660e085018215159052565b5060e0840151805160ff9081166101008601526020820151811661012086015260408201518116610140860152606082015181166101608601526080820151166101808501526111f4565b6020808252825182820181905260009190848201906040850190845b81811015612519578351835292840192918401916001016124fd565b50909695505050505050565b600060a0828403121561253757600080fd5b611eb983836121ec565b602080825260139082015272125b9d985b1a59081c1c9bdc1bdcd85b081251606a1b604082015260600190565b600181811c9082168061258257607f821691505b60208210810361118c57634e487b7160e01b600052602260045260246000fd5b60208082526014908201527314d8dbdc9948191bd95cc81b9bdd08195e1a5cdd60621b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b8082018082111561066a5761066a6125d0565b601f821115610a4e57600081815260208120601f850160051c810160208610156126205750805b601f850160051c820191505b8181101561263f5782815560010161262c565b505050505050565b815167ffffffffffffffff81111561266157612661611f54565b6126758161266f845461256e565b846125f9565b602080601f8311600181146126aa57600084156126925750858301515b600019600386901b1c1916600185901b17855561263f565b600085815260208120601f198616915b828110156126d9578886015182559484019460019091019084016126ba565b50858210156126f75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b8281526040602082015260006120b76040830184611efd565b634e487b7160e01b600052603260045260246000fd5b600060018201612748576127486125d0565b5060010190565b60008251612761818460208701611ed9565b9190910192915050565b60ff8181168382160290811690818114612787576127876125d0565b5092915050565b60ff818116838216019081111561066a5761066a6125d0565b600060ff8316806127c857634e487b7160e01b600052601260045260246000fd5b8060ff84160491505092915050565b8181038181111561066a5761066a6125d0565b8481526080602082015260006128036080830186611efd565b82810360408401526128158186611efd565b91505082606083015295945050505050565b600081612836576128366125d0565b506000190190565b6040815260006128516040830185611efd565b90508215156020830152939250505056fe482648e7878e9fa54c0a2f67ffd22d00ebc37cf7a03e060e428d2ab0cd6735cca49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775a26469706673582212202827ecd50a525cd6b10675f9849ddba10548dbeb2e9cd48d3e93b294c561738264736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x23D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x13B JUMPI DUP1 PUSH4 0xBFE42A37 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xD5C1A1E1 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD5C1A1E1 EQ PUSH2 0x5B7 JUMPI DUP1 PUSH4 0xEA535940 EQ PUSH2 0x5CA JUMPI DUP1 PUSH4 0xEBDF690F EQ PUSH2 0x5EA JUMPI DUP1 PUSH4 0xF2BCAC3D EQ PUSH2 0x611 JUMPI DUP1 PUSH4 0xFF8DEA01 EQ PUSH2 0x626 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBFE42A37 EQ PUSH2 0x4F7 JUMPI DUP1 PUSH4 0xC601F7AF EQ PUSH2 0x51E JUMPI DUP1 PUSH4 0xC772A8A6 EQ PUSH2 0x533 JUMPI DUP1 PUSH4 0xCFE85A2F EQ PUSH2 0x584 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x5A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA217FDDF GT PUSH2 0xFF JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0xA91AD18E EQ PUSH2 0x4B4 JUMPI DUP1 PUSH4 0xACA5A8A7 EQ PUSH2 0x4BE JUMPI DUP1 PUSH4 0xB8A956D3 EQ PUSH2 0x4D1 JUMPI DUP1 PUSH4 0xBA340773 EQ PUSH2 0x4E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x44C JUMPI DUP1 PUSH4 0x91B9F9D8 EQ PUSH2 0x454 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x467 JUMPI DUP1 PUSH4 0x96CAAC0A EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0xA02D72FB EQ PUSH2 0x48D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A GT PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x61C992A3 GT PUSH2 0x18D JUMPI DUP1 PUSH4 0x61C992A3 EQ PUSH2 0x3CE JUMPI DUP1 PUSH4 0x68CA78F9 EQ PUSH2 0x3F1 JUMPI DUP1 PUSH4 0x7092B0BC EQ PUSH2 0x404 JUMPI DUP1 PUSH4 0x7131F025 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0x40B89270 EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x4DA89FBD EQ PUSH2 0x347 JUMPI DUP1 PUSH4 0x4FE9D1F5 EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2B116373 GT PUSH2 0x210 JUMPI DUP1 PUSH4 0x2B116373 EQ PUSH2 0x2C5 JUMPI DUP1 PUSH4 0x2ED49CF7 EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x31B JUMPI DUP1 PUSH4 0x3A1E017F EQ PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x311B82D EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x28C JUMPI DUP1 PUSH4 0x27FF6223 EQ PUSH2 0x2BD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x255 PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E8F JUMP JUMPDEST PUSH2 0x639 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27D PUSH2 0x278 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EC0 JUMP JUMPDEST PUSH2 0x670 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x261 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F29 JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x29A CALLDATASIZE PUSH1 0x4 PUSH2 0x1EC0 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x261 JUMP JUMPDEST PUSH2 0x2AF PUSH1 0x64 DUP2 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x2D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x200B JUMP JUMPDEST PUSH2 0x765 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x255 PUSH2 0x2E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2082 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x5 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x316 CALLDATASIZE PUSH1 0x4 PUSH2 0x20DB JUMP JUMPDEST PUSH2 0x9F0 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x329 CALLDATASIZE PUSH1 0x4 PUSH2 0x20DB JUMP JUMPDEST PUSH2 0xA1B JUMP JUMPDEST PUSH2 0x2AF PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0xA53 JUMP JUMPDEST PUSH2 0x2AF PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH2 0x37C SWAP1 PUSH1 0xFF DUP1 DUP3 AND SWAP2 PUSH2 0x100 DUP2 DIV DUP3 AND SWAP2 PUSH3 0x10000 DUP3 DIV DUP2 AND SWAP2 PUSH4 0x1000000 DUP2 DIV DUP3 AND SWAP2 PUSH5 0x100000000 SWAP1 SWAP2 DIV AND DUP6 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP7 DUP8 AND DUP2 MSTORE SWAP5 DUP7 AND PUSH1 0x20 DUP7 ADD MSTORE SWAP3 DUP6 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP4 AND PUSH1 0x60 DUP4 ADD MSTORE SWAP1 SWAP2 AND PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0x261 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x3BE CALLDATASIZE PUSH1 0x4 PUSH2 0x2107 JUMP JUMPDEST PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND PUSH2 0x255 JUMP JUMPDEST PUSH2 0x255 PUSH2 0x3DC CALLDATASIZE PUSH1 0x4 PUSH2 0x21C0 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x255 PUSH2 0x3FF CALLDATASIZE PUSH1 0x4 PUSH2 0x2107 JUMP JUMPDEST PUSH2 0xAC2 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x412 CALLDATASIZE PUSH1 0x4 PUSH2 0x227D JUMP JUMPDEST PUSH2 0xB1D JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x425 CALLDATASIZE PUSH1 0x4 PUSH2 0x21C0 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2AF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2883 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x10B5 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x462 CALLDATASIZE PUSH1 0x4 PUSH2 0x2107 JUMP JUMPDEST PUSH2 0x10D5 JUMP JUMPDEST PUSH2 0x255 PUSH2 0x475 CALLDATASIZE PUSH1 0x4 PUSH2 0x20DB JUMP JUMPDEST PUSH2 0x1121 JUMP JUMPDEST PUSH2 0x255 PUSH2 0x488 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EC0 JUMP JUMPDEST PUSH2 0x114A JUMP JUMPDEST PUSH2 0x2AF PUSH32 0x58223CDFB69946630D837D40B5C366A584F0217ADA7FDDD8318F2E08603CFA22 DUP2 JUMP JUMPDEST PUSH2 0x2AF PUSH3 0x278D00 DUP2 JUMP JUMPDEST PUSH2 0x2AF PUSH2 0x4CC CALLDATASIZE PUSH1 0x4 PUSH2 0x21C0 JUMP JUMPDEST PUSH2 0x1192 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x4DF CALLDATASIZE PUSH1 0x4 PUSH2 0x2307 JUMP JUMPDEST PUSH2 0x11FC JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x4F2 CALLDATASIZE PUSH1 0x4 PUSH2 0x235E JUMP JUMPDEST PUSH2 0x1336 JUMP JUMPDEST PUSH2 0x2AF PUSH32 0x7B8BB8356A3F32F5C111FF23F050D97F08988E0883529EA7BFF3B918887A6E0E DUP2 JUMP JUMPDEST PUSH2 0x2AF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2863 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x56F PUSH2 0x541 CALLDATASIZE PUSH1 0x4 PUSH2 0x21C0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x4 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH1 0xFF SWAP1 SWAP2 AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x261 JUMP JUMPDEST PUSH2 0x597 PUSH2 0x592 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EC0 JUMP JUMPDEST PUSH2 0x1405 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x23A3 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x5B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x20DB JUMP JUMPDEST PUSH2 0x14EF JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x5C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x23EB JUMP JUMPDEST PUSH2 0x1514 JUMP JUMPDEST PUSH2 0x5DD PUSH2 0x5D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EC0 JUMP JUMPDEST PUSH2 0x161A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x2415 JUMP JUMPDEST PUSH2 0x2AF PUSH32 0xEDE9DCDB0CE99DC7CEC9C7BE9246AD08B37853683AD91569C187B647DDF5E21C DUP2 JUMP JUMPDEST PUSH2 0x619 PUSH2 0x18C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x24E1 JUMP JUMPDEST PUSH2 0x2D8 PUSH2 0x634 CALLDATASIZE PUSH1 0x4 PUSH2 0x2525 JUMP JUMPDEST PUSH2 0x1A2D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x66A JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP4 PUSH1 0x0 DUP2 GT PUSH2 0x6A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x697 SWAP1 PUSH2 0x2541 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x5 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD SWAP1 SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP3 SWAP1 PUSH2 0x6D6 SWAP1 PUSH2 0x256E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x702 SWAP1 PUSH2 0x256E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x74F JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x724 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x74F JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x732 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP SWAP5 POP SWAP5 POP SWAP5 POP POP POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x7BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6F7420617574686F72697A6564206F7261636C65 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x697 JUMP JUMPDEST DUP4 PUSH1 0x0 DUP2 GT PUSH2 0x7DD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x697 SWAP1 PUSH2 0x2541 JUMP JUMPDEST DUP4 PUSH1 0x64 DUP2 GT ISZERO PUSH2 0x824 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x53636F7265206F7574206F662072616E6765 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x697 JUMP JUMPDEST PUSH2 0x82C PUSH2 0x1B88 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x864 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x697 SWAP1 PUSH2 0x25A2 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x8C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x4E6F74206F726967696E616C206F7261636C65 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x697 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH2 0x8E3 SWAP1 PUSH3 0x278D00 SWAP1 PUSH2 0x25E6 JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0x92A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x155C19185D19481C195C9A5BD908195E1C1A5C9959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x697 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT PUSH2 0x974 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x155C19185D19481C99585CDBDB881C995C5D5A5C9959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x697 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD DUP7 SWAP1 SSTORE PUSH1 0x2 ADD PUSH2 0x996 DUP6 DUP3 PUSH2 0x2647 JUMP JUMPDEST POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 TIMESTAMP PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE MLOAD DUP7 SWAP1 PUSH32 0xD3E8DBBE8FF60A1FAE1E5F88E71F27270ED38BADC7B26E19922ED94FD12F5FE9 SWAP1 PUSH2 0x9E0 SWAP1 DUP9 SWAP1 DUP8 SWAP1 PUSH2 0x2707 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xA0B DUP2 PUSH2 0x1BD0 JUMP JUMPDEST PUSH2 0xA15 DUP4 DUP4 PUSH2 0x1BDA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0xA44 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA4E DUP3 DUP3 PUSH2 0x1C6C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2883 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xA6B DUP2 PUSH2 0x1BD0 JUMP JUMPDEST PUSH2 0xA73 PUSH2 0x1CD7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA81 DUP2 PUSH2 0x1BD0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xA15 JUMPI PUSH2 0xAB0 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xAA2 JUMPI PUSH2 0xAA2 PUSH2 0x2720 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH2 0x14EF JUMP JUMPDEST DUP1 PUSH2 0xABA DUP2 PUSH2 0x2736 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA84 JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xB13 JUMPI PUSH2 0xAF2 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xAE4 JUMPI PUSH2 0xAE4 PUSH2 0x2720 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH2 0x1121 JUMP JUMPDEST ISZERO PUSH2 0xB01 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x66A JUMP JUMPDEST DUP1 PUSH2 0xB0B DUP2 PUSH2 0x2736 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xAC6 JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB74 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x4E6F7420617574686F72697A6564206F7261636C65 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x697 JUMP JUMPDEST DUP5 PUSH1 0x0 DUP2 GT PUSH2 0xB95 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x697 SWAP1 PUSH2 0x2541 JUMP JUMPDEST DUP5 PUSH1 0x64 DUP2 GT ISZERO PUSH2 0xBDC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x53636F7265206F7574206F662072616E6765 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x697 JUMP JUMPDEST PUSH2 0xBE4 PUSH2 0x1B88 JUMP JUMPDEST PUSH2 0xBEC PUSH2 0x1D29 JUMP JUMPDEST PUSH1 0x0 DUP6 MLOAD GT PUSH2 0xC3D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4A757374696669636174696F6E20495046532072657175697265640000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x697 JUMP JUMPDEST PUSH1 0x5 DUP5 PUSH1 0x40 MLOAD PUSH2 0xC4D SWAP2 SWAP1 PUSH2 0x274F JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xCA3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x155B9CDD5C1C1BDC9D1959081052481B5BD9195B PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x697 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD03 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x53636F726520616C726561647920657869737473 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x697 JUMP JUMPDEST PUSH1 0x64 DUP4 PUSH1 0x0 ADD MLOAD PUSH1 0xFF AND GT ISZERO DUP1 ISZERO PUSH2 0xD23 JUMPI POP PUSH1 0x64 DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0xFF AND GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xD37 JUMPI POP PUSH1 0x64 DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0xFF AND GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xD4B JUMPI POP PUSH1 0x64 DUP4 PUSH1 0x60 ADD MLOAD PUSH1 0xFF AND GT ISZERO JUMPDEST DUP1 ISZERO PUSH2 0xD5F JUMPI POP PUSH1 0x64 DUP4 PUSH1 0x80 ADD MLOAD PUSH1 0xFF AND GT ISZERO JUMPDEST PUSH2 0xDAB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420627265616B646F776E2073636F7265730000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x697 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x0 SWAP2 PUSH1 0x64 SWAP2 PUSH2 0xDCE SWAP2 PUSH5 0x100000000 SWAP1 DIV PUSH1 0xFF AND SWAP1 PUSH2 0x276B JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x60 DUP8 ADD MLOAD PUSH2 0xDEA SWAP2 PUSH4 0x1000000 SWAP1 DIV PUSH1 0xFF AND SWAP1 PUSH2 0x276B JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x40 DUP9 ADD MLOAD PUSH2 0xE05 SWAP2 PUSH3 0x10000 SWAP1 DIV PUSH1 0xFF AND SWAP1 PUSH2 0x276B JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x20 DUP10 ADD MLOAD PUSH2 0xE1F SWAP2 PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND SWAP1 PUSH2 0x276B JUMP JUMPDEST PUSH1 0x6 SLOAD DUP10 MLOAD PUSH2 0xE31 SWAP2 PUSH1 0xFF AND SWAP1 PUSH2 0x276B JUMP JUMPDEST PUSH2 0xE3B SWAP2 SWAP1 PUSH2 0x278E JUMP JUMPDEST PUSH2 0xE45 SWAP2 SWAP1 PUSH2 0x278E JUMP JUMPDEST PUSH2 0xE4F SWAP2 SWAP1 PUSH2 0x278E JUMP JUMPDEST PUSH2 0xE59 SWAP2 SWAP1 PUSH2 0x278E JUMP JUMPDEST PUSH2 0xE63 SWAP2 SWAP1 PUSH2 0x27A7 JUMP JUMPDEST PUSH1 0xFF AND SWAP1 POP PUSH2 0xE73 PUSH1 0x5 DUP3 PUSH2 0x27D7 JUMP JUMPDEST DUP8 LT ISZERO DUP1 ISZERO PUSH2 0xE8C JUMPI POP PUSH2 0xE88 DUP2 PUSH1 0x5 PUSH2 0x25E6 JUMP JUMPDEST DUP8 GT ISZERO JUMPDEST PUSH2 0xEE2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53636F726520696E636F6E73697374656E74207769746820627265616B646F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x37 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x697 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE DUP10 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP11 DUP2 MSTORE DUP3 DUP5 ADD DUP11 DUP2 MSTORE PUSH1 0x60 DUP5 ADD DUP11 SWAP1 MSTORE TIMESTAMP PUSH1 0x80 DUP6 ADD MSTORE CALLER PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0xC0 DUP6 ADD DUP2 SWAP1 MSTORE PUSH1 0xE0 DUP6 ADD DUP11 SWAP1 MSTORE PUSH1 0x0 DUP15 DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP5 MSTORE SWAP5 SWAP1 SWAP3 KECCAK256 DUP4 MLOAD DUP2 SSTORE SWAP1 MLOAD SWAP4 DUP2 ADD SWAP4 SWAP1 SWAP4 SSTORE MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x2 DUP3 ADD SWAP1 PUSH2 0xF4F SWAP1 DUP3 PUSH2 0x2647 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD SWAP1 PUSH2 0xF64 SWAP1 DUP3 PUSH2 0x2647 JUMP JUMPDEST POP PUSH1 0x80 DUP3 DUP2 ADD MLOAD PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x5 DUP4 ADD DUP1 SLOAD PUSH1 0xC0 DUP7 ADD MLOAD ISZERO ISZERO PUSH1 0x1 PUSH1 0xA0 SHL MUL PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xE0 SWAP1 SWAP3 ADD MLOAD DUP1 MLOAD PUSH1 0x6 SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP6 ADD MLOAD SWAP5 SWAP1 SWAP7 ADD MLOAD PUSH1 0xFF SWAP1 DUP2 AND PUSH5 0x100000000 MUL PUSH5 0xFF00000000 NOT SWAP6 DUP3 AND PUSH4 0x1000000 MUL PUSH4 0xFF000000 NOT SWAP9 DUP4 AND PUSH3 0x10000 MUL SWAP9 SWAP1 SWAP9 AND PUSH4 0xFFFF0000 NOT SWAP4 DUP4 AND PUSH2 0x100 MUL PUSH2 0xFFFF NOT SWAP1 SWAP6 AND SWAP8 SWAP1 SWAP3 AND SWAP7 SWAP1 SWAP7 OR SWAP3 SWAP1 SWAP3 OR AND OR SWAP4 SWAP1 SWAP4 OR AND OR SWAP1 SSTORE PUSH1 0x7 DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x1034 DUP4 PUSH2 0x2736 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x1054 DUP4 PUSH2 0x2736 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH32 0x9E8AD66E4736435405704D301D344E9454F286D3FEEB2036B1ADC6F4900CCBC DUP10 DUP10 DUP10 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1099 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x27EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x10AC PUSH1 0x1 PUSH1 0x2 SSTORE JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2883 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x10CD DUP2 PUSH2 0x1BD0 JUMP JUMPDEST PUSH2 0xA73 PUSH2 0x1D80 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E0 DUP2 PUSH2 0x1BD0 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xA15 JUMPI PUSH2 0x110F DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1101 JUMPI PUSH2 0x1101 PUSH2 0x2720 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH2 0x9F0 JUMP JUMPDEST DUP1 PUSH2 0x1119 DUP2 PUSH2 0x2736 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x10E3 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 DUP2 GT PUSH2 0x116D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x697 SWAP1 PUSH2 0x2541 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x119D PUSH2 0x18C8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x11F4 JUMPI PUSH2 0x11CF DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x11C1 JUMPI PUSH2 0x11C1 PUSH2 0x2720 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 PUSH2 0x1121 JUMP JUMPDEST ISZERO PUSH2 0x11E2 JUMPI DUP2 PUSH2 0x11DE DUP2 PUSH2 0x2736 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x11EC DUP2 PUSH2 0x2736 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x11A3 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1207 DUP2 PUSH2 0x1BD0 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x123F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x697 SWAP1 PUSH2 0x25A2 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT PUSH2 0x1282 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1499585CDBDB881C995C5D5A5C9959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x697 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP3 SWAP1 SSTORE SWAP1 PUSH2 0x12A8 PUSH1 0x2 DUP4 ADD DUP3 PUSH2 0x1E41 JUMP JUMPDEST PUSH2 0x12B6 PUSH1 0x3 DUP4 ADD PUSH1 0x0 PUSH2 0x1E41 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 SSTORE PUSH1 0x5 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x6 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH5 0xFFFFFFFFFF NOT AND SWAP1 SSTORE PUSH1 0x7 DUP1 SLOAD SWAP2 PUSH2 0x12F1 DUP4 PUSH2 0x2827 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP3 PUSH32 0xD3E8DBBE8FF60A1FAE1E5F88E71F27270ED38BADC7B26E19922ED94FD12F5FE9 PUSH1 0x0 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1329 SWAP3 SWAP2 SWAP1 PUSH2 0x2707 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2883 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x134E DUP2 PUSH2 0x1BD0 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD GT PUSH2 0x1397 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x24B73B30B634B21036B7B232B6103B32B939B4B7B7 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x697 JUMP JUMPDEST DUP2 PUSH1 0x5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x13A8 SWAP2 SWAP1 PUSH2 0x274F JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 DUP1 SLOAD SWAP3 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH32 0x2E5180543742ECE2DB44ED70B2619F2BF555A29A7BDEAD994736174F0D90A9B6 SWAP1 PUSH2 0x13F8 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x283E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 PUSH1 0x0 DUP2 GT PUSH2 0x1451 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x697 SWAP1 PUSH2 0x2541 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1489 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x697 SWAP1 PUSH2 0x25A2 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0xA0 DUP2 ADD DUP5 MSTORE PUSH1 0x6 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND DUP4 MSTORE PUSH2 0x100 DUP3 DIV DUP2 AND SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH3 0x10000 DUP2 DIV DUP4 AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH4 0x1000000 DUP4 DIV DUP3 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH5 0x100000000 SWAP1 SWAP3 DIV AND PUSH1 0x80 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x150A DUP2 PUSH2 0x1BD0 JUMP JUMPDEST PUSH2 0xA15 DUP4 DUP4 PUSH2 0x1C6C JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2883 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x152C DUP2 PUSH2 0x1BD0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x157B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x496E76616C6964206F7261636C652061646472657373 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x697 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP4 ISZERO DUP1 ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH2 0x15C5 JUMPI PUSH2 0x15C0 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2863 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x9F0 JUMP JUMPDEST PUSH2 0x15DD JUMP JUMPDEST PUSH2 0x15DD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2863 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH2 0x14EF JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x82A8FB1E779EA45AD427CC612E47087F5386A567E49DCE488185E40646FA48D5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1329 SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1682 PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP4 DUP6 ADD DUP2 SWAP1 MSTORE DUP1 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP1 DUP6 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 DUP1 DUP7 ADD DUP6 SWAP1 MSTORE PUSH1 0xC0 DUP7 ADD DUP6 SWAP1 MSTORE DUP7 MLOAD SWAP1 DUP2 ADD DUP8 MSTORE DUP5 DUP2 MSTORE SWAP3 DUP4 ADD DUP5 SWAP1 MSTORE SWAP5 DUP3 ADD DUP4 SWAP1 MSTORE DUP2 ADD DUP3 SWAP1 MSTORE SWAP3 DUP4 ADD MSTORE SWAP1 PUSH1 0xE0 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 DUP2 GT PUSH2 0x16A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x697 SWAP1 PUSH2 0x2541 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x16DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x697 SWAP1 PUSH2 0x25A2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x171E SWAP1 PUSH2 0x256E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x174A SWAP1 PUSH2 0x256E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1797 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x176C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1797 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x177A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH2 0x17B0 SWAP1 PUSH2 0x256E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x17DC SWAP1 PUSH2 0x256E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1829 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x17FE JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1829 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x180C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x5 DUP4 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x40 DUP1 DUP6 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xFF PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP3 DIV DUP3 AND ISZERO ISZERO PUSH1 0x60 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD PUSH1 0xA0 DUP2 ADD DUP4 MSTORE PUSH1 0x6 SWAP1 SWAP7 ADD SLOAD DUP1 DUP5 AND DUP8 MSTORE PUSH2 0x100 DUP2 DIV DUP5 AND SWAP5 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH3 0x10000 DUP5 DIV DUP4 AND SWAP2 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH4 0x1000000 DUP4 DIV DUP3 AND SWAP1 DUP6 ADD MSTORE PUSH5 0x100000000 SWAP1 SWAP2 DIV AND PUSH1 0x80 DUP4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD MSTORE SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x6 DUP1 DUP3 MSTORE PUSH1 0xE0 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0xC0 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1902 JUMPI PUSH2 0x1902 PUSH2 0x2720 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2883 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1930 JUMPI PUSH2 0x1930 PUSH2 0x2720 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2863 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x195E JUMPI PUSH2 0x195E PUSH2 0x2720 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH32 0xEDE9DCDB0CE99DC7CEC9C7BE9246AD08B37853683AD91569C187B647DDF5E21C DUP2 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x199E JUMPI PUSH2 0x199E PUSH2 0x2720 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH32 0x58223CDFB69946630D837D40B5C366A584F0217ADA7FDDD8318F2E08603CFA22 DUP2 PUSH1 0x4 DUP2 MLOAD DUP2 LT PUSH2 0x19DE JUMPI PUSH2 0x19DE PUSH2 0x2720 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH32 0x7B8BB8356A3F32F5C111FF23F050D97F08988E0883529EA7BFF3B918887A6E0E DUP2 PUSH1 0x5 DUP2 MLOAD DUP2 LT PUSH2 0x1A1E JUMPI PUSH2 0x1A1E PUSH2 0x2720 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2883 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1A45 DUP2 PUSH2 0x1BD0 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x20 DUP6 ADD MLOAD DUP6 MLOAD PUSH2 0x1A65 SWAP2 SWAP1 PUSH2 0x278E JUMP JUMPDEST PUSH2 0x1A6F SWAP2 SWAP1 PUSH2 0x278E JUMP JUMPDEST PUSH2 0x1A79 SWAP2 SWAP1 PUSH2 0x278E JUMP JUMPDEST PUSH2 0x1A83 SWAP2 SWAP1 PUSH2 0x278E JUMP JUMPDEST PUSH1 0xFF AND PUSH1 0x64 EQ PUSH2 0x1AD5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x57656967687473206D7573742073756D20746F20313030000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x697 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x6 DUP1 SLOAD PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x40 DUP1 DUP8 ADD MLOAD PUSH1 0x60 DUP9 ADD MLOAD PUSH1 0x80 DUP10 ADD MLOAD PUSH1 0xFF SWAP1 DUP2 AND PUSH5 0x100000000 MUL PUSH5 0xFF00000000 NOT SWAP3 DUP3 AND PUSH4 0x1000000 MUL PUSH4 0xFF000000 NOT SWAP5 DUP4 AND PUSH3 0x10000 MUL SWAP5 SWAP1 SWAP5 AND PUSH4 0xFFFF0000 NOT SWAP7 DUP4 AND PUSH2 0x100 MUL PUSH2 0xFFFF NOT SWAP1 SWAP9 AND SWAP3 SWAP1 SWAP10 AND SWAP2 SWAP1 SWAP2 OR SWAP6 SWAP1 SWAP6 OR SWAP4 SWAP1 SWAP4 AND SWAP6 SWAP1 SWAP6 OR SWAP5 SWAP1 SWAP5 OR AND OR SWAP1 SSTORE MLOAD PUSH32 0x90565F56924446477768885E9B20CF4CB9D2183F2AD4313F3E90F1DCAEDCC0AE SWAP1 PUSH2 0x1B7C SWAP1 DUP5 SWAP1 PUSH2 0x23A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1BCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x697 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xA73 DUP2 CALLER PUSH2 0x1DBB JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BE6 DUP4 DUP4 PUSH2 0x1121 JUMP JUMPDEST PUSH2 0x1C64 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1C1C CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x66A JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x66A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C78 DUP4 DUP4 PUSH2 0x1121 JUMP JUMPDEST ISZERO PUSH2 0x1C64 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x66A JUMP JUMPDEST PUSH2 0x1CDF PUSH2 0x1DF8 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0x1D7A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x697 JUMP JUMPDEST PUSH1 0x2 DUP1 SSTORE JUMP JUMPDEST PUSH2 0x1D88 PUSH2 0x1B88 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH2 0x1D0C JUMP JUMPDEST PUSH2 0x1DC5 DUP3 DUP3 PUSH2 0x1121 JUMP JUMPDEST PUSH2 0x1DF4 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x697 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0xFF AND PUSH2 0x1BCE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x697 JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x1E4D SWAP1 PUSH2 0x256E JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x1E5D JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0xA73 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1E8B JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1E77 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1EB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ED2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1EF4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1EDC JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1F15 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1ED9 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x1F42 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1EFD JUMP JUMPDEST SWAP1 POP DUP3 ISZERO ISZERO PUSH1 0x40 DUP4 ADD MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1F93 JUMPI PUSH2 0x1F93 PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1FAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FC6 JUMPI PUSH2 0x1FC6 PUSH2 0x1F54 JUMP JUMPDEST PUSH2 0x1FD9 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x1F6A JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x1FEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2021 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2047 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2053 DUP9 DUP4 DUP10 ADD PUSH2 0x1F9B JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2069 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2076 DUP8 DUP3 DUP9 ADD PUSH2 0x1F9B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2094 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20B7 DUP5 DUP3 DUP6 ADD PUSH2 0x1F9B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x20D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x20FE PUSH1 0x20 DUP5 ADD PUSH2 0x20BF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x211A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2123 DUP4 PUSH2 0x20BF JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP1 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2167 JUMPI PUSH2 0x2167 PUSH2 0x1F54 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL SWAP2 POP PUSH2 0x2178 DUP5 DUP4 ADD PUSH2 0x1F6A JUMP JUMPDEST DUP2 DUP2 MSTORE SWAP2 DUP4 ADD DUP5 ADD SWAP2 DUP5 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x2192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x21B0 JUMPI DUP5 CALLDATALOAD DUP3 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP1 DUP6 ADD SWAP1 PUSH2 0x2197 JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EB9 DUP3 PUSH2 0x20BF JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x20D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xA0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2221 JUMPI PUSH2 0x2221 PUSH2 0x1F54 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP1 POP DUP1 PUSH2 0x2230 DUP4 PUSH2 0x21DB JUMP JUMPDEST DUP2 MSTORE PUSH2 0x223E PUSH1 0x20 DUP5 ADD PUSH2 0x21DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x224F PUSH1 0x40 DUP5 ADD PUSH2 0x21DB JUMP JUMPDEST PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x2260 PUSH1 0x60 DUP5 ADD PUSH2 0x21DB JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x2271 PUSH1 0x80 DUP5 ADD PUSH2 0x21DB JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2296 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x22BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22C8 DUP10 DUP4 DUP11 ADD PUSH2 0x1F9B JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x22DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x22EB DUP9 DUP3 DUP10 ADD PUSH2 0x1F9B JUMP JUMPDEST SWAP3 POP POP PUSH2 0x22FB DUP8 PUSH1 0x80 DUP9 ADD PUSH2 0x21EC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x231A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2338 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2344 DUP6 DUP3 DUP7 ADD PUSH2 0x1F9B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x20D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2388 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2394 DUP6 DUP3 DUP7 ADD PUSH2 0x1F9B JUMP JUMPDEST SWAP3 POP POP PUSH2 0x20FE PUSH1 0x20 DUP5 ADD PUSH2 0x234E JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD PUSH2 0x66A DUP3 DUP5 PUSH1 0xFF DUP2 MLOAD AND DUP3 MSTORE PUSH1 0xFF PUSH1 0x20 DUP3 ADD MLOAD AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0x40 DUP3 ADD MLOAD AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0x60 DUP3 ADD MLOAD AND PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0xFF PUSH1 0x80 DUP3 ADD MLOAD AND PUSH1 0x80 DUP4 ADD MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2407 DUP4 PUSH2 0x20BF JUMP JUMPDEST SWAP2 POP PUSH2 0x20FE PUSH1 0x20 DUP5 ADD PUSH2 0x234E JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x180 PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x2447 PUSH2 0x1A0 DUP5 ADD DUP3 PUSH2 0x1EFD JUMP JUMPDEST SWAP1 POP PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x1F NOT DUP5 DUP4 SUB ADD PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x2464 DUP3 DUP3 PUSH2 0x1EFD JUMP JUMPDEST SWAP2 POP POP PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0xA0 DUP6 ADD MLOAD AND PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xC0 DUP5 ADD MLOAD PUSH2 0x2496 PUSH1 0xE0 DUP6 ADD DUP3 ISZERO ISZERO SWAP1 MSTORE JUMP JUMPDEST POP PUSH1 0xE0 DUP5 ADD MLOAD DUP1 MLOAD PUSH1 0xFF SWAP1 DUP2 AND PUSH2 0x100 DUP7 ADD MSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 AND PUSH2 0x120 DUP7 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 AND PUSH2 0x140 DUP7 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 AND PUSH2 0x160 DUP7 ADD MSTORE PUSH1 0x80 DUP3 ADD MLOAD AND PUSH2 0x180 DUP6 ADD MSTORE PUSH2 0x11F4 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2519 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x24FD JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2537 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1EB9 DUP4 DUP4 PUSH2 0x21EC JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x125B9D985B1A59081C1C9BDC1BDCD85B081251 PUSH1 0x6A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2582 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x118C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x14D8DBDC9948191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x66A JUMPI PUSH2 0x66A PUSH2 0x25D0 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xA4E JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x2620 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x263F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x262C JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2661 JUMPI PUSH2 0x2661 PUSH2 0x1F54 JUMP JUMPDEST PUSH2 0x2675 DUP2 PUSH2 0x266F DUP5 SLOAD PUSH2 0x256E JUMP JUMPDEST DUP5 PUSH2 0x25F9 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x26AA JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2692 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x263F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x26D9 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x26BA JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x26F7 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x20B7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1EFD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2748 JUMPI PUSH2 0x2748 PUSH2 0x25D0 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x2761 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1ED9 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xFF DUP2 DUP2 AND DUP4 DUP3 AND MUL SWAP1 DUP2 AND SWAP1 DUP2 DUP2 EQ PUSH2 0x2787 JUMPI PUSH2 0x2787 PUSH2 0x25D0 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x66A JUMPI PUSH2 0x66A PUSH2 0x25D0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP4 AND DUP1 PUSH2 0x27C8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 PUSH1 0xFF DUP5 AND DIV SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x66A JUMPI PUSH2 0x66A PUSH2 0x25D0 JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2803 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x1EFD JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x2815 DUP2 DUP7 PUSH2 0x1EFD JUMP JUMPDEST SWAP2 POP POP DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2836 JUMPI PUSH2 0x2836 PUSH2 0x25D0 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2851 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1EFD JUMP JUMPDEST SWAP1 POP DUP3 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP INVALID BASEFEE 0x26 BASEFEE 0xE7 DUP8 DUP15 SWAP16 0xA5 0x4C EXP 0x2F PUSH8 0xFFD22D00EBC37CF7 LOG0 RETURNDATACOPY MOD 0xE TIMESTAMP DUP14 0x2A 0xB0 0xCD PUSH8 0x35CCA49807205CE4 0xD3 SSTORE MULMOD 0x2E CREATE2 0xA8 LOG1 DUP16 JUMP 0xE8 SWAP2 EXTCODECOPY DELEGATECALL LOG2 ADD 0xFB 0xE2 DUP8 DUP3 JUMPDEST MULMOD JUMP SWAP4 0xC2 OR PUSH22 0xA26469706673582212202827ECD50A525CD6B10675F9 DUP5 SWAP14 0xDB LOG1 SDIV BASEFEE 0xDB 0xEB 0x2E SWAP13 0xD4 DUP14 RETURNDATACOPY SWAP4 0xB2 SWAP5 0xC5 PUSH2 0x7382 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "410:10378:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2541:202:0;;;;;;:::i;:::-;;:::i;:::-;;;566:14:10;;559:22;541:41;;529:2;514:18;2541:202:0;;;;;;;;6593:344:7;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;3786:120:0:-;;;;;;:::i;:::-;3851:7;3877:12;;;;;;;;;;:22;;;;3786:120;;;;2017:25:10;;;2005:2;1990:18;3786:120:0;1871:177:10;1260:39:7;;1296:3;1260:39;;5461:888;;;;;;:::i;:::-;;:::i;:::-;;1117:46;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4202:136:0;;;;;;:::i;:::-;;:::i;5304:245::-;;;;;;:::i;:::-;;:::i;1367:35:7:-;;;;;;10710:76;;;:::i;1217:37::-;;1253:1;1217:37;;1174;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4901:4:10;4889:17;;;4871:36;;4943:17;;;4938:2;4923:18;;4916:45;4997:17;;;4977:18;;;4970:45;;;;5051:17;;5046:2;5031:18;;5024:45;5106:17;;;5100:3;5085:19;;5078:46;4858:3;4843:19;1174:37:7;4632:498:10;1352:221:9;;;;;;:::i;:::-;;:::i;1615:84:2:-;1685:7;;;;1615:84;;1062:49:7;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1816:271:9;;;;;;:::i;:::-;;:::i;3054:2121:7:-;;;;;;:::i;:::-;;:::i;1408:51::-;;;;;;:::i;:::-;;;;;;;;;;;;;;306:60:9;;-1:-1:-1;;;;;;;;;;;306:60:9;;10632:72:7;;;:::i;960:219:9:-;;;;;;:::i;:::-;;:::i;2830:136:0:-;;;;;;:::i;:::-;;:::i;7901:164:7:-;;;;;;:::i;:::-;;:::i;534:86:9:-;;584:36;534:86;;1305:55:7;;1353:7;1305:55;;2250:360:9;;;;;;:::i;:::-;;:::i;10249:377:7:-;;;;;;:::i;:::-;;:::i;9209:287::-;;;;;;:::i;:::-;;:::i;626:82:9:-;;674:34;626:82;;372:68;;-1:-1:-1;;;;;;;;;;;372:68:9;;8277:179:7;;;;;;:::i;:::-;-1:-1:-1;;;;;8397:24:7;8340:18;8397:24;;;:16;:24;;;;;;;;;8423:17;:25;;;;;;;8397:24;;8423:25;;;;;8277:179;;;;;9160:25:10;;;9228:14;;9221:22;9216:2;9201:18;;9194:50;9133:18;8277:179:7;8992:258:10;7484:259:7;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4618:138:0:-;;;;;;:::i;:::-;;:::i;8611:432:7:-;;;;;;:::i;:::-;;:::i;7087:233::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;446:82:9:-;;494:34;446:82;;2723:364;;;:::i;:::-;;;;;;;:::i;9609:482:7:-;;;;;;:::i;:::-;;:::i;2541:202:0:-;2626:4;-1:-1:-1;;;;;;2649:47:0;;-1:-1:-1;;;2649:47:0;;:87;;-1:-1:-1;;;;;;;;;;829:40:5;;;2700:36:0;2642:94;2541:202;-1:-1:-1;;2541:202:0:o;6593:344:7:-;6702:13;6725:27;6762:11;6672:10;2101:1;2088:10;:14;2080:46;;;;-1:-1:-1;;;2080:46:7;;;;;;;:::i;:::-;;;;;;;;;6790:29:::1;6822:20:::0;;;:8:::1;:20;::::0;;;;6860:22:::1;::::0;::::1;::::0;6913:16:::1;::::0;::::1;::::0;6884:27:::1;::::0;::::1;6852:78:::0;;6884:27;;-1:-1:-1;;;6913:16:7;::::1;;;::::0;6884:27;;6852:78:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6593:344:::0;;;;;;:::o;5461:888::-;1820:10;1802:29;;;;:17;:29;;;;;;;;1794:63;;;;-1:-1:-1;;;1794:63:7;;13087:2:10;1794:63:7;;;13069:21:10;13126:2;13106:18;;;13099:30;-1:-1:-1;;;13145:18:10;;;13138:51;13206:18;;1794:63:7;12885:345:10;1794:63:7;5664:10:::1;2101:1;2088:10;:14;2080:46;;;;-1:-1:-1::0;;;2080:46:7::1;;;;;;;:::i;:::-;5687:8:::0;1296:3:::2;1956:5;:18;;1926:71;;;::::0;-1:-1:-1;;;1926:71:7;;13437:2:10;1926:71:7::2;::::0;::::2;13419:21:10::0;13476:2;13456:18;;;13449:30;-1:-1:-1;;;13495:18:10;;;13488:48;13553:18;;1926:71:7::2;13235:342:10::0;1926:71:7::2;1239:19:2::3;:17;:19::i;:::-;5729:20:7::4;::::0;;;:8:::4;:20;::::0;;;;:27:::4;;::::0;-1:-1:-1;;;5729:27:7;::::4;;;5721:60;;;;-1:-1:-1::0;;;5721:60:7::4;;;;;;;:::i;:::-;5799:20;::::0;;;:8:::4;:20;::::0;;;;:27:::4;;::::0;-1:-1:-1;;;;;5799:27:7::4;5830:10;5799:41;5791:73;;;::::0;-1:-1:-1;;;5791:73:7;;14133:2:10;5791:73:7::4;::::0;::::4;14115:21:10::0;14172:2;14152:18;;;14145:30;-1:-1:-1;;;14191:18:10;;;14184:49;14250:18;;5791:73:7::4;13931:343:10::0;5791:73:7::4;5914:20;::::0;;;:8:::4;:20;::::0;;;;:30:::4;;::::0;:54:::4;::::0;1353:7:::4;::::0;5914:54:::4;:::i;:::-;5895:15;:73;;5874:141;;;::::0;-1:-1:-1;;;5874:141:7;;14743:2:10;5874:141:7::4;::::0;::::4;14725:21:10::0;14782:2;14762:18;;;14755:30;-1:-1:-1;;;14801:18:10;;;14794:51;14862:18;;5874:141:7::4;14541:345:10::0;5874:141:7::4;6056:1;6039:6;6033:20;:24;6025:59;;;::::0;-1:-1:-1;;;6025:59:7;;15093:2:10;6025:59:7::4;::::0;::::4;15075:21:10::0;15132:2;15112:18;;;15105:30;-1:-1:-1;;;15151:18:10;;;15144:52;15213:18;;6025:59:7::4;14891:346:10::0;6025:59:7::4;6103:20;::::0;;;:8:::4;:20;::::0;;;;:33:::4;::::0;::::4;:44:::0;;;6157:38:::4;;:61;6198:20:::0;6157:38;:61:::4;:::i;:::-;-1:-1:-1::0;6228:20:7::4;::::0;;;:8:::4;:20;::::0;;;;;;6261:15:::4;6228:30;::::0;;::::4;:48:::0;6300:42;6237:10;;6300:42:::4;::::0;::::4;::::0;6325:8;;6335:6;;6300:42:::4;:::i;:::-;;;;;;;;2136:1:::2;1867::::1;5461:888:::0;;;;:::o;4202:136:0:-;3851:7;3877:12;;;;;;;;;;:22;;;2473:16;2484:4;2473:10;:16::i;:::-;4306:25:::1;4317:4;4323:7;4306:10;:25::i;:::-;;4202:136:::0;;;:::o;5304:245::-;-1:-1:-1;;;;;5397:34:0;;735:10:4;5397:34:0;5393:102;;5454:30;;-1:-1:-1;;;5454:30:0;;;;;;;;;;;5393:102;5505:37;5517:4;5523:18;5505:11;:37::i;:::-;;5304:245;;:::o;10710:76:7:-;-1:-1:-1;;;;;;;;;;;2473:16:0;2484:4;2473:10;:16::i;:::-;10769:10:7::1;:8;:10::i;:::-;10710:76:::0;:::o;1352:221:9:-;2241:4:0;2473:16;2241:4;2473:10;:16::i;:::-;1475:9:9::1;1470:97;1494:5;:12;1490:1;:16;1470:97;;;1527:29;1538:5;1544:1;1538:8;;;;;;;;:::i;:::-;;;;;;;1548:7;1527:10;:29::i;:::-;1508:3:::0;::::1;::::0;::::1;:::i;:::-;;;;1470:97;;1816:271:::0;1900:4;;1916:143;1940:5;:12;1936:1;:16;1916:143;;;1977:26;1985:5;1991:1;1985:8;;;;;;;;:::i;:::-;;;;;;;1995:7;1977;:26::i;:::-;1973:76;;;2030:4;2023:11;;;;;1973:76;1954:3;;;;:::i;:::-;;;;1916:143;;;-1:-1:-1;2075:5:9;;1816:271;-1:-1:-1;;;1816:271:9:o;3054:2121:7:-;1820:10;1802:29;;;;:17;:29;;;;;;;;1794:63;;;;-1:-1:-1;;;1794:63:7;;13087:2:10;1794:63:7;;;13069:21:10;13126:2;13106:18;;;13099:30;-1:-1:-1;;;13145:18:10;;;13138:51;13206:18;;1794:63:7;12885:345:10;1794:63:7;3316:10:::1;2101:1;2088:10;:14;2080:46;;;;-1:-1:-1::0;;;2080:46:7::1;;;;;;;:::i;:::-;3339:12:::0;1296:3:::2;1956:5;:18;;1926:71;;;::::0;-1:-1:-1;;;1926:71:7;;13437:2:10;1926:71:7::2;::::0;::::2;13419:21:10::0;13476:2;13456:18;;;13449:30;-1:-1:-1;;;13495:18:10;;;13488:48;13553:18;;1926:71:7::2;13235:342:10::0;1926:71:7::2;1239:19:2::3;:17;:19::i;:::-;2261:21:3::4;:19;:21::i;:::-;3432:1:7::5;3404:17;3398:31;:35;3390:75;;;::::0;-1:-1:-1;;;3390:75:7;;18216:2:10;3390:75:7::5;::::0;::::5;18198:21:10::0;18255:2;18235:18;;;18228:30;18294:29;18274:18;;;18267:57;18341:18;;3390:75:7::5;18014:351:10::0;3390:75:7::5;3483:15;3499:12;3483:29;;;;;;:::i;:::-;::::0;;;::::5;::::0;;;;;::::5;::::0;;;;::::5;;3475:62;;;::::0;-1:-1:-1;;;3475:62:7;;18866:2:10;3475:62:7::5;::::0;::::5;18848:21:10::0;18905:2;18885:18;;;18878:30;-1:-1:-1;;;18924:18:10;;;18917:50;18984:18;;3475:62:7::5;18664:344:10::0;3475:62:7::5;3556:20;::::0;;;:8:::5;:20;::::0;;;;:27:::5;;::::0;-1:-1:-1;;;3556:27:7;::::5;;;3555:28;3547:61;;;::::0;-1:-1:-1;;;3547:61:7;;19215:2:10;3547:61:7::5;::::0;::::5;19197:21:10::0;19254:2;19234:18;;;19227:30;-1:-1:-1;;;19273:18:10;;;19266:50;19333:18;;3547:61:7::5;19013:344:10::0;3547:61:7::5;3713:3;3685:9;:24;;;:31;;;;:80;;;;;3762:3;3732:9;:26;;;:33;;;;3685:80;:122;;;;;3804:3;3781:9;:19;;;:26;;;;3685:122;:164;;;;;3846:3;3823:9;:19;;;:26;;;;3685:164;:212;;;;;3894:3;3865:9;:25;;;:32;;;;3685:212;3664:283;;;::::0;-1:-1:-1;;;3664:283:7;;19564:2:10;3664:283:7::5;::::0;::::5;19546:21:10::0;19603:2;19583:18;;;19576:30;19642:26;19622:18;;;19615:54;19686:18;;3664:283:7::5;19362:348:10::0;3664:283:7::5;4315:14;:25:::0;4287::::5;::::0;::::5;::::0;3958:23:::5;::::0;4354:3:::5;::::0;4287:53:::5;::::0;4315:25;;::::5;;;::::0;4287:53:::5;:::i;:::-;4241:14;:29:::0;4219:19:::5;::::0;::::5;::::0;:51:::5;::::0;4241:29;;::::5;;;::::0;4219:51:::5;:::i;:::-;4173:14;:29:::0;4151:19:::5;::::0;::::5;::::0;:51:::5;::::0;4173:29;;::::5;;;::::0;4151:51:::5;:::i;:::-;4108:14;:26:::0;4079::::5;::::0;::::5;::::0;:55:::5;::::0;4108:26:::5;::::0;::::5;;;::::0;4079:55:::5;:::i;:::-;4026:14;:36:::0;3999:24;;:63:::5;::::0;4026:36:::5;;::::0;3999:63:::5;:::i;:::-;3998:137;;;;:::i;:::-;:205;;;;:::i;:::-;:273;;;;:::i;:::-;:343;;;;:::i;:::-;3984:373;;;;:::i;:::-;3958:399;;::::0;-1:-1:-1;4405:19:7::5;4423:1;3958:399:::0;4405:19:::5;:::i;:::-;4389:12;:35;;:74;;;;-1:-1:-1::0;4444:19:7::5;:15:::0;4462:1:::5;4444:19;:::i;:::-;4428:12;:35;;4389:74;4368:154;;;::::0;-1:-1:-1;;;4368:154:7;;20700:2:10;4368:154:7::5;::::0;::::5;20682:21:10::0;20739:2;20719:18;;;20712:30;20778:34;20758:18;;;20751:62;-1:-1:-1;;;20829:18:10;;;20822:31;20870:19;;4368:154:7::5;20498:397:10::0;4368:154:7::5;4556:321;::::0;;::::5;::::0;::::5;::::0;;;;;::::5;::::0;;::::5;::::0;;;;;;;;;;;;;;;4759:15:::5;4556:321:::0;;;;4796:10:::5;4556:321:::0;;;;4828:4:::5;4556:321:::0;;;;;;;;;;;;-1:-1:-1;4533:20:7;;;:8:::5;:20:::0;;;;;;;:344;;;;;;;;::::5;::::0;;;;;4556:321;;4533:20;:344:::5;::::0;::::5;::::0;::::5;::::0;;::::5;:::i;:::-;-1:-1:-1::0;4533:344:7::5;::::0;::::5;::::0;::::5;::::0;::::5;::::0;::::5;::::0;;::::5;:::i;:::-;-1:-1:-1::0;4533:344:7::5;::::0;;::::5;::::0;::::5;::::0;::::5;::::0;::::5;::::0;::::5;::::0;::::5;::::0;::::5;::::0;;::::5;::::0;::::5;::::0;::::5;;-1:-1:-1::0;;;4533:344:7::5;-1:-1:-1::0;;;;;;4533:344:7;;;-1:-1:-1;;;;;4533:344:7;;::::5;::::0;;;;;;;::::5;::::0;;::::5;::::0;;::::5;::::0;;;::::5;::::0;;::::5;::::0;;::::5;::::0;::::5;::::0;::::5;::::0;::::5;::::0;::::5;::::0;::::5;::::0;;;;::::5;::::0;::::5;::::0;;::::5;::::0;::::5;-1:-1:-1::0;;4533:344:7;;::::5;::::0;::::5;-1:-1:-1::0;;4533:344:7;;::::5;::::0;::::5;::::0;;;;-1:-1:-1;;4533:344:7;;::::5;;;-1:-1:-1::0;;4533:344:7;;;;;;::::5;::::0;;;;;;;::::5;::::0;;;;;::::5;;;::::0;;4896:20:::5;:22:::0;;;4533:344:::5;4896:22;::::0;::::5;:::i;:::-;::::0;;;-1:-1:-1;;4945:10:7::5;4928:28;::::0;;;:16:::5;:28;::::0;;;;:30;;;::::5;::::0;::::5;:::i;:::-;;;;;;5119:10;-1:-1:-1::0;;;;;4982:186:7::5;5012:10;4982:186;5036:12;5062:17;5093:12;5143:15;4982:186;;;;;;;;;:::i;:::-;;;;;;;;3380:1795;2303:20:3::4;1716:1:::0;2809:7;:22;2629:209;2303:20:::4;2136:1:7::2;1867::::1;3054:2121:::0;;;;;:::o;10632:72::-;-1:-1:-1;;;;;;;;;;;2473:16:0;2484:4;2473:10;:16::i;:::-;10689:8:7::1;:6;:8::i;960:219:9:-:0;2241:4:0;2473:16;2241:4;2473:10;:16::i;:::-;1082:9:9::1;1077:96;1101:5;:12;1097:1;:16;1077:96;;;1134:28;1144:5;1150:1;1144:8;;;;;;;;:::i;:::-;;;;;;;1154:7;1134:9;:28::i;:::-;1115:3:::0;::::1;::::0;::::1;:::i;:::-;;;;1077:96;;2830:136:0::0;2907:4;2930:12;;;;;;;;;;;-1:-1:-1;;;;;2930:29:0;;;;;;;;;;;;;;;2830:136::o;7901:164:7:-;8001:11;7980:10;2101:1;2088:10;:14;2080:46;;;;-1:-1:-1;;;2080:46:7;;;;;;;:::i;:::-;8031:20:::1;::::0;;;:8:::1;:20;::::0;;;;:27:::1;;::::0;-1:-1:-1;;;8031:27:7;::::1;;;::::0;-1:-1:-1;2136:1:7::1;7901:164:::0;;;;:::o;2250:360:9:-;2312:17;2341:25;2369:13;:11;:13::i;:::-;2341:41;;2392:13;2433:9;2428:145;2452:8;:15;2448:1;:19;2428:145;;;2492:29;2500:8;2509:1;2500:11;;;;;;;;:::i;:::-;;;;;;;2513:7;2492;:29::i;:::-;2488:75;;;2541:7;;;;:::i;:::-;;;;2488:75;2469:3;;;;:::i;:::-;;;;2428:145;;;-1:-1:-1;2598:5:9;2250:360;-1:-1:-1;;;2250:360:9:o;10249:377:7:-;2241:4:0;2473:16;2241:4;2473:10;:16::i;:::-;10368:20:7::1;::::0;;;:8:::1;:20;::::0;;;;:27:::1;;::::0;-1:-1:-1;;;10368:27:7;::::1;;;10360:60;;;;-1:-1:-1::0;;;10360:60:7::1;;;;;;;:::i;:::-;10461:1;10444:6;10438:20;:24;10430:52;;;::::0;-1:-1:-1;;;10430:52:7;;21634:2:10;10430:52:7::1;::::0;::::1;21616:21:10::0;21673:2;21653:18;;;21646:30;-1:-1:-1;;;21692:18:10;;;21685:45;21747:18;;10430:52:7::1;21432:339:10::0;10430:52:7::1;10508:20;::::0;;;:8:::1;:20;::::0;;;;10501:27;;;::::1;::::0;::::1;::::0;;;10508:20;10501:27:::1;;::::0;::::1;10508:20:::0;10501:27:::1;:::i;:::-;;;::::0;::::1;;;:::i;:::-;-1:-1:-1::0;10501:27:7::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;;10501:27:7;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;10501:27:7;;;10538:20:::1;:22:::0;;;::::1;::::0;::::1;:::i;:::-;;;;;;10597:10;10584:35;10609:1;10612:6;10584:35;;;;;;;:::i;:::-;;;;;;;;10249:377:::0;;;:::o;9209:287::-;-1:-1:-1;;;;;;;;;;;2473:16:0;2484:4;2473:10;:16::i;:::-;9357:1:7::1;9334:12;9328:26;:30;9320:64;;;::::0;-1:-1:-1;;;9320:64:7;;22423:2:10;9320:64:7::1;::::0;::::1;22405:21:10::0;22462:2;22442:18;;;22435:30;-1:-1:-1;;;22481:18:10;;;22474:51;22542:18;;9320:64:7::1;22221:345:10::0;9320:64:7::1;9426:9;9394:15;9410:12;9394:29;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:41;;;::::1;;-1:-1:-1::0;;9394:41:7;;::::1;::::0;;;::::1;::::0;;;9450:39:::1;::::0;::::1;::::0;9465:12;;9479:9;;9450:39:::1;:::i;:::-;;;;;;;;9209:287:::0;;;:::o;7484:259::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7563:10:7;2101:1;2088:10;:14;2080:46;;;;-1:-1:-1;;;2080:46:7;;;;;;;:::i;:::-;7637:20:::1;::::0;;;:8:::1;:20;::::0;;;;:27:::1;;::::0;-1:-1:-1;;;7637:27:7;::::1;;;7629:60;;;;-1:-1:-1::0;;;7629:60:7::1;;;;;;;:::i;:::-;-1:-1:-1::0;;7706:20:7::1;::::0;;;:8:::1;:20;::::0;;;;;;;;7699:37;;::::1;::::0;::::1;::::0;;7706:30:::1;::::0;;::::1;7699:37:::0;::::1;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;;;;;;;::::1;::::0;::::1;::::0;;;;;;;::::1;;::::0;;;;;7484:259::o;4618:138:0:-;3851:7;3877:12;;;;;;;;;;:22;;;2473:16;2484:4;2473:10;:16::i;:::-;4723:26:::1;4735:4;4741:7;4723:11;:26::i;8611:432:7:-:0;-1:-1:-1;;;;;;;;;;;2473:16:0;2484:4;2473:10;:16::i;:::-;-1:-1:-1;;;;;8724:20:7;::::1;8716:55;;;::::0;-1:-1:-1;;;8716:55:7;;23079:2:10;8716:55:7::1;::::0;::::1;23061:21:10::0;23118:2;23098:18;;;23091:30;-1:-1:-1;;;23137:18:10;;;23130:52;23199:18;;8716:55:7::1;22877:346:10::0;8716:55:7::1;-1:-1:-1::0;;;;;8781:25:7;::::1;;::::0;;;:17:::1;:25;::::0;;;;:38;;-1:-1:-1;;8781:38:7::1;::::0;::::1;::::0;::::1;::::0;;;::::1;::::0;;;8838:139:::1;;8868:33;-1:-1:-1::0;;;;;;;;;;;8894:6:7::1;8868:9;:33::i;:::-;8838:139;;;8932:34;-1:-1:-1::0;;;;;;;;;;;8959:6:7::1;8932:10;:34::i;:::-;9017:6;-1:-1:-1::0;;;;;9000:36:7::1;;9025:10;9000:36;;;;566:14:10::0;559:22;541:41;;529:2;514:18;;401:187;7087:233:7;7186:18;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7186:18:7;7165:10;2101:1;2088:10;:14;2080:46;;;;-1:-1:-1;;;2080:46:7;;;;;;;:::i;:::-;7224:20:::1;::::0;;;:8:::1;:20;::::0;;;;:27:::1;;::::0;-1:-1:-1;;;7224:27:7;::::1;;;7216:60;;;;-1:-1:-1::0;;;7216:60:7::1;;;;;;;:::i;:::-;7293:8;:20;7302:10;7293:20;;;;;;;;;;;7286:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;7286:27:7;;;-1:-1:-1;;7286:27:7::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;::::1;::::0;-1:-1:-1;;;;;7286:27:7;::::1;::::0;;;;;;;;::::1;-1:-1:-1::0;;;7286:27:7;;::::1;::::0;::::1;;;::::0;;;;;;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;;;;;;;;::::1;::::0;::::1;::::0;;;;;;;::::1;;::::0;;;;;;;;;;;-1:-1:-1;7087:233:7;;;;:::o;2723:364:9:-;2809:16;;;2823:1;2809:16;;;;;;;;;2767:22;;2809:16;;;;;;;;;;-1:-1:-1;2809:16:9;2801:24;;2241:4:0;2846:18:9;;2835:5;2841:1;2835:8;;;;;;;;:::i;:::-;;;;;;:29;;;;;-1:-1:-1;;;;;;;;;;;2874:5:9;2880:1;2874:8;;;;;;;;:::i;:::-;;;;;;:21;;;;;-1:-1:-1;;;;;;;;;;;2905:5:9;2911:1;2905:8;;;;;;;;:::i;:::-;;;;;;:25;;;;;494:34;2940:5;2946:1;2940:8;;;;;;;;:::i;:::-;;;;;;:32;;;;;584:36;2982:5;2988:1;2982:8;;;;;;;;:::i;:::-;;;;;;:34;;;;;674;3026:5;3032:1;3026:8;;;;;;;;:::i;:::-;;;;;;:32;;;;;2723:364;:::o;9609:482:7:-;-1:-1:-1;;;;;;;;;;;2473:16:0;2484:4;2473:10;:16::i;:::-;9909:22:7::1;::::0;::::1;::::0;9867:26:::1;::::0;::::1;::::0;9825::::1;::::0;::::1;::::0;9786:23:::1;::::0;::::1;::::0;9737:33;;:72:::1;::::0;9786:23;9737:72:::1;:::i;:::-;:114;;;;:::i;:::-;:156;;;;:::i;:::-;:194;;;;:::i;:::-;:201;;9935:3;9737:201;9716:271;;;::::0;-1:-1:-1;;;9716:271:7;;23430:2:10;9716:271:7::1;::::0;::::1;23412:21:10::0;23469:2;23449:18;;;23442:30;23508:25;23488:18;;;23481:53;23551:18;;9716:271:7::1;23228:347:10::0;9716:271:7::1;10006:28:::0;;:14:::1;:28:::0;;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;-1:-1:-1::0;;10006:28:7;;::::1;::::0;::::1;-1:-1:-1::0;;10006:28:7;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;10006:28:7;;::::1;;;-1:-1:-1::0;;10006:28:7;;;;;;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;;;;::::1;;;::::0;;10049:35;::::1;::::0;::::1;::::0;10023:11;;10049:35:::1;:::i;:::-;;;;;;;;9609:482:::0;;:::o;1767:106:2:-;1685:7;;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:2;;24057:2:10;1828:38:2;;;24039:21:10;24096:2;24076:18;;;24069:30;-1:-1:-1;;;24115:18:10;;;24108:46;24171:18;;1828:38:2;23855:340:10;1828:38:2;1767:106::o;3175:103:0:-;3241:30;3252:4;735:10:4;3241::0;:30::i;6155:316::-;6232:4;6253:22;6261:4;6267:7;6253;:22::i;:::-;6248:217;;6291:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6291:29:0;;;;;;;;;:36;;-1:-1:-1;;6291:36:0;6323:4;6291:36;;;6373:12;735:10:4;;656:96;6373:12:0;-1:-1:-1;;;;;6346:40:0;6364:7;-1:-1:-1;;;;;6346:40:0;6358:4;6346:40;;;;;;;;;;-1:-1:-1;6407:4:0;6400:11;;6248:217;-1:-1:-1;6449:5:0;6442:12;;6708:317;6786:4;6806:22;6814:4;6820:7;6806;:22::i;:::-;6802:217;;;6876:5;6844:12;;;;;;;;;;;-1:-1:-1;;;;;6844:29:0;;;;;;;;;;:37;;-1:-1:-1;;6844:37:0;;;6900:40;735:10:4;;6844:12:0;;6900:40;;6876:5;6900:40;-1:-1:-1;6961:4:0;6954:11;;2433:117:2;1486:16;:14;:16::i;:::-;2491:7:::1;:15:::0;;-1:-1:-1;;2491:15:2::1;::::0;;2521:22:::1;735:10:4::0;2530:12:2::1;2521:22;::::0;-1:-1:-1;;;;;24364:32:10;;;24346:51;;24334:2;24319:18;2521:22:2::1;;;;;;;2433:117::o:0;2336:287:3:-;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:3;;24610:2:10;2460:63:3;;;24592:21:10;24649:2;24629:18;;;24622:30;24688:33;24668:18;;;24661:61;24739:18;;2460:63:3;24408:355:10;2460:63:3;1759:1;2598:18;;2336:287::o;2186:115:2:-;1239:19;:17;:19::i;:::-;2255:4:::1;2245:14:::0;;-1:-1:-1;;2245:14:2::1;::::0;::::1;::::0;;2274:20:::1;735:10:4::0;2281:12:2::1;656:96:4::0;3408:197:0;3496:22;3504:4;3510:7;3496;:22::i;:::-;3491:108;;3541:47;;-1:-1:-1;;;3541:47:0;;-1:-1:-1;;;;;24960:32:10;;3541:47:0;;;24942:51:10;25009:18;;;25002:34;;;24915:18;;3541:47:0;24768:274:10;3491:108:0;3408:197;;:::o;1945:106:2:-;1685:7;;;;2003:41;;;;-1:-1:-1;;;2003:41:2;;25249:2:10;2003:41:2;;;25231:21:10;25288:2;25268:18;;;25261:30;-1:-1:-1;;;25307:18:10;;;25300:50;25367:18;;2003:41:2;25047:344:10;-1:-1:-1;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:286:10:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:10;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:10:o;593:180::-;652:6;705:2;693:9;684:7;680:23;676:32;673:52;;;721:1;718;711:12;673:52;-1:-1:-1;744:23:10;;593:180;-1:-1:-1;593:180:10:o;778:250::-;863:1;873:113;887:6;884:1;881:13;873:113;;;963:11;;;957:18;944:11;;;937:39;909:2;902:10;873:113;;;-1:-1:-1;;1020:1:10;1002:16;;995:27;778:250::o;1033:271::-;1075:3;1113:5;1107:12;1140:6;1135:3;1128:19;1156:76;1225:6;1218:4;1213:3;1209:14;1202:4;1195:5;1191:16;1156:76;:::i;:::-;1286:2;1265:15;-1:-1:-1;;1261:29:10;1252:39;;;;1293:4;1248:50;;1033:271;-1:-1:-1;;1033:271:10:o;1309:372::-;1508:6;1497:9;1490:25;1551:2;1546;1535:9;1531:18;1524:30;1471:4;1571:45;1612:2;1601:9;1597:18;1589:6;1571:45;:::i;:::-;1563:53;;1666:6;1659:14;1652:22;1647:2;1636:9;1632:18;1625:50;1309:372;;;;;;:::o;2235:127::-;2296:10;2291:3;2287:20;2284:1;2277:31;2327:4;2324:1;2317:15;2351:4;2348:1;2341:15;2367:275;2438:2;2432:9;2503:2;2484:13;;-1:-1:-1;;2480:27:10;2468:40;;2538:18;2523:34;;2559:22;;;2520:62;2517:88;;;2585:18;;:::i;:::-;2621:2;2614:22;2367:275;;-1:-1:-1;2367:275:10:o;2647:531::-;2690:5;2743:3;2736:4;2728:6;2724:17;2720:27;2710:55;;2761:1;2758;2751:12;2710:55;2797:6;2784:20;2823:18;2819:2;2816:26;2813:52;;;2845:18;;:::i;:::-;2889:55;2932:2;2913:13;;-1:-1:-1;;2909:27:10;2938:4;2905:38;2889:55;:::i;:::-;2969:2;2960:7;2953:19;3015:3;3008:4;3003:2;2995:6;2991:15;2987:26;2984:35;2981:55;;;3032:1;3029;3022:12;2981:55;3097:2;3090:4;3082:6;3078:17;3071:4;3062:7;3058:18;3045:55;3145:1;3120:16;;;3138:4;3116:27;3109:38;;;;3124:7;2647:531;-1:-1:-1;;;2647:531:10:o;3183:680::-;3289:6;3297;3305;3313;3366:3;3354:9;3345:7;3341:23;3337:33;3334:53;;;3383:1;3380;3373:12;3334:53;3419:9;3406:23;3396:33;;3476:2;3465:9;3461:18;3448:32;3438:42;;3531:2;3520:9;3516:18;3503:32;3554:18;3595:2;3587:6;3584:14;3581:34;;;3611:1;3608;3601:12;3581:34;3634:50;3676:7;3667:6;3656:9;3652:22;3634:50;:::i;:::-;3624:60;;3737:2;3726:9;3722:18;3709:32;3693:48;;3766:2;3756:8;3753:16;3750:36;;;3782:1;3779;3772:12;3750:36;;3805:52;3849:7;3838:8;3827:9;3823:24;3805:52;:::i;:::-;3795:62;;;3183:680;;;;;;;:::o;3868:322::-;3937:6;3990:2;3978:9;3969:7;3965:23;3961:32;3958:52;;;4006:1;4003;3996:12;3958:52;4046:9;4033:23;4079:18;4071:6;4068:30;4065:50;;;4111:1;4108;4101:12;4065:50;4134;4176:7;4167:6;4156:9;4152:22;4134:50;:::i;:::-;4124:60;3868:322;-1:-1:-1;;;;3868:322:10:o;4195:173::-;4263:20;;-1:-1:-1;;;;;4312:31:10;;4302:42;;4292:70;;4358:1;4355;4348:12;4292:70;4195:173;;;:::o;4373:254::-;4441:6;4449;4502:2;4490:9;4481:7;4477:23;4473:32;4470:52;;;4518:1;4515;4508:12;4470:52;4554:9;4541:23;4531:33;;4583:38;4617:2;4606:9;4602:18;4583:38;:::i;:::-;4573:48;;4373:254;;;;;:::o;5135:1020::-;5228:6;5236;5289:2;5277:9;5268:7;5264:23;5260:32;5257:52;;;5305:1;5302;5295:12;5257:52;5328:29;5347:9;5328:29;:::i;:::-;5318:39;;5376:2;5429;5418:9;5414:18;5401:32;5452:18;5493:2;5485:6;5482:14;5479:34;;;5509:1;5506;5499:12;5479:34;5547:6;5536:9;5532:22;5522:32;;5592:7;5585:4;5581:2;5577:13;5573:27;5563:55;;5614:1;5611;5604:12;5563:55;5650:2;5637:16;5672:2;5668;5665:10;5662:36;;;5678:18;;:::i;:::-;5724:2;5721:1;5717:10;5707:20;;5747:28;5771:2;5767;5763:11;5747:28;:::i;:::-;5809:15;;;5879:11;;;5875:20;;;5840:12;;;;5907:19;;;5904:39;;;5939:1;5936;5929:12;5904:39;5963:11;;;;5983:142;5999:6;5994:3;5991:15;5983:142;;;6065:17;;6053:30;;6016:12;;;;6103;;;;5983:142;;;6144:5;6134:15;;;;;;;;5135:1020;;;;;:::o;6160:186::-;6219:6;6272:2;6260:9;6251:7;6247:23;6243:32;6240:52;;;6288:1;6285;6278:12;6240:52;6311:29;6330:9;6311:29;:::i;6351:156::-;6417:20;;6477:4;6466:16;;6456:27;;6446:55;;6497:1;6494;6487:12;6512:701;6575:5;6623:4;6611:9;6606:3;6602:19;6598:30;6595:50;;;6641:1;6638;6631:12;6595:50;6674:2;6668:9;6716:4;6708:6;6704:17;6787:6;6775:10;6772:22;6751:18;6739:10;6736:34;6733:62;6730:88;;;6798:18;;:::i;:::-;6834:2;6827:22;6867:6;-1:-1:-1;6867:6:10;6897:27;6914:9;6897:27;:::i;:::-;6889:6;6882:43;6958:36;6990:2;6979:9;6975:18;6958:36;:::i;:::-;6953:2;6945:6;6941:15;6934:61;7028:36;7060:2;7049:9;7045:18;7028:36;:::i;:::-;7023:2;7015:6;7011:15;7004:61;7098:36;7130:2;7119:9;7115:18;7098:36;:::i;:::-;7093:2;7085:6;7081:15;7074:61;7169:37;7201:3;7190:9;7186:19;7169:37;:::i;:::-;7163:3;7155:6;7151:16;7144:63;;6512:701;;;;:::o;7218:814::-;7367:6;7375;7383;7391;7399;7452:3;7440:9;7431:7;7427:23;7423:33;7420:53;;;7469:1;7466;7459:12;7420:53;7505:9;7492:23;7482:33;;7562:2;7551:9;7547:18;7534:32;7524:42;;7617:2;7606:9;7602:18;7589:32;7640:18;7681:2;7673:6;7670:14;7667:34;;;7697:1;7694;7687:12;7667:34;7720:50;7762:7;7753:6;7742:9;7738:22;7720:50;:::i;:::-;7710:60;;7823:2;7812:9;7808:18;7795:32;7779:48;;7852:2;7842:8;7839:16;7836:36;;;7868:1;7865;7858:12;7836:36;;7891:52;7935:7;7924:8;7913:9;7909:24;7891:52;:::i;:::-;7881:62;;;7962:64;8018:7;8012:3;8001:9;7997:19;7962:64;:::i;:::-;7952:74;;7218:814;;;;;;;;:::o;8037:390::-;8115:6;8123;8176:2;8164:9;8155:7;8151:23;8147:32;8144:52;;;8192:1;8189;8182:12;8144:52;8228:9;8215:23;8205:33;;8289:2;8278:9;8274:18;8261:32;8316:18;8308:6;8305:30;8302:50;;;8348:1;8345;8338:12;8302:50;8371;8413:7;8404:6;8393:9;8389:22;8371:50;:::i;:::-;8361:60;;;8037:390;;;;;:::o;8432:160::-;8497:20;;8553:13;;8546:21;8536:32;;8526:60;;8582:1;8579;8572:12;8597:390;8672:6;8680;8733:2;8721:9;8712:7;8708:23;8704:32;8701:52;;;8749:1;8746;8739:12;8701:52;8789:9;8776:23;8822:18;8814:6;8811:30;8808:50;;;8854:1;8851;8844:12;8808:50;8877;8919:7;8910:6;8899:9;8895:22;8877:50;:::i;:::-;8867:60;;;8946:35;8977:2;8966:9;8962:18;8946:35;:::i;9640:274::-;9842:3;9827:19;;9855:53;9831:9;9890:6;9355:4;9347:5;9341:12;9337:23;9332:3;9325:36;9422:4;9414;9407:5;9403:16;9397:23;9393:34;9386:4;9381:3;9377:14;9370:58;9489:4;9481;9474:5;9470:16;9464:23;9460:34;9453:4;9448:3;9444:14;9437:58;9556:4;9548;9541:5;9537:16;9531:23;9527:34;9520:4;9515:3;9511:14;9504:58;9623:4;9615;9608:5;9604:16;9598:23;9594:34;9587:4;9582:3;9578:14;9571:58;;;9255:380;9919:254;9984:6;9992;10045:2;10033:9;10024:7;10020:23;10016:32;10013:52;;;10061:1;10058;10051:12;10013:52;10084:29;10103:9;10084:29;:::i;:::-;10074:39;;10132:35;10163:2;10152:9;10148:18;10132:35;:::i;10178:1083::-;10363:2;10352:9;10345:21;10408:6;10402:13;10397:2;10386:9;10382:18;10375:41;10470:2;10462:6;10458:15;10452:22;10447:2;10436:9;10432:18;10425:50;10326:4;10522:2;10514:6;10510:15;10504:22;10562:6;10557:2;10546:9;10542:18;10535:34;10592:52;10639:3;10628:9;10624:19;10610:12;10592:52;:::i;:::-;10578:66;;10693:2;10685:6;10681:15;10675:22;10766:2;10762:7;10750:9;10742:6;10738:22;10734:36;10728:3;10717:9;10713:19;10706:65;10794:41;10828:6;10812:14;10794:41;:::i;:::-;10780:55;;;10890:3;10882:6;10878:16;10872:23;10866:3;10855:9;10851:19;10844:52;10979:1;10975;10970:3;10966:11;10962:19;10955:3;10947:6;10943:16;10937:23;10933:49;10927:3;10916:9;10912:19;10905:78;11032:3;11024:6;11020:16;11014:23;11046:52;11093:3;11082:9;11078:19;11062:14;375:13;368:21;356:34;;305:91;11046:52;-1:-1:-1;11147:3:10;11135:16;;11129:23;9341:12;;9355:4;9337:23;;;11227:3;11212:19;;9325:36;9414:4;9403:16;;9397:23;9393:34;;9377:14;;;9370:58;9481:4;9470:16;;9464:23;9460:34;;9444:14;;;9437:58;9548:4;9537:16;;9531:23;9527:34;;9511:14;;;9504:58;9615:4;9604:16;;9598:23;9594:34;9578:14;;;9571:58;11161:71;9255:380;11266:632;11437:2;11489:21;;;11559:13;;11462:18;;;11581:22;;;11408:4;;11437:2;11660:15;;;;11634:2;11619:18;;;11408:4;11703:169;11717:6;11714:1;11711:13;11703:169;;;11778:13;;11766:26;;11847:15;;;;11812:12;;;;11739:1;11732:9;11703:169;;;-1:-1:-1;11889:3:10;;11266:632;-1:-1:-1;;;;;;11266:632:10:o;11903:244::-;11994:6;12047:3;12035:9;12026:7;12022:23;12018:33;12015:53;;;12064:1;12061;12054:12;12015:53;12087:54;12133:7;12122:9;12087:54;:::i;12152:343::-;12354:2;12336:21;;;12393:2;12373:18;;;12366:30;-1:-1:-1;;;12427:2:10;12412:18;;12405:49;12486:2;12471:18;;12152:343::o;12500:380::-;12579:1;12575:12;;;;12622;;;12643:61;;12697:4;12689:6;12685:17;12675:27;;12643:61;12750:2;12742:6;12739:14;12719:18;12716:38;12713:161;;12796:10;12791:3;12787:20;12784:1;12777:31;12831:4;12828:1;12821:15;12859:4;12856:1;12849:15;13582:344;13784:2;13766:21;;;13823:2;13803:18;;;13796:30;-1:-1:-1;;;13857:2:10;13842:18;;13835:50;13917:2;13902:18;;13582:344::o;14279:127::-;14340:10;14335:3;14331:20;14328:1;14321:31;14371:4;14368:1;14361:15;14395:4;14392:1;14385:15;14411:125;14476:9;;;14497:10;;;14494:36;;;14510:18;;:::i;15368:545::-;15470:2;15465:3;15462:11;15459:448;;;15506:1;15531:5;15527:2;15520:17;15576:4;15572:2;15562:19;15646:2;15634:10;15630:19;15627:1;15623:27;15617:4;15613:38;15682:4;15670:10;15667:20;15664:47;;;-1:-1:-1;15705:4:10;15664:47;15760:2;15755:3;15751:12;15748:1;15744:20;15738:4;15734:31;15724:41;;15815:82;15833:2;15826:5;15823:13;15815:82;;;15878:17;;;15859:1;15848:13;15815:82;;;15819:3;;;15368:545;;;:::o;16089:1352::-;16215:3;16209:10;16242:18;16234:6;16231:30;16228:56;;;16264:18;;:::i;:::-;16293:97;16383:6;16343:38;16375:4;16369:11;16343:38;:::i;:::-;16337:4;16293:97;:::i;:::-;16445:4;;16509:2;16498:14;;16526:1;16521:663;;;;17228:1;17245:6;17242:89;;;-1:-1:-1;17297:19:10;;;17291:26;17242:89;-1:-1:-1;;16046:1:10;16042:11;;;16038:24;16034:29;16024:40;16070:1;16066:11;;;16021:57;17344:81;;16491:944;;16521:663;15315:1;15308:14;;;15352:4;15339:18;;-1:-1:-1;;16557:20:10;;;16675:236;16689:7;16686:1;16683:14;16675:236;;;16778:19;;;16772:26;16757:42;;16870:27;;;;16838:1;16826:14;;;;16705:19;;16675:236;;;16679:3;16939:6;16930:7;16927:19;16924:201;;;17000:19;;;16994:26;-1:-1:-1;;17083:1:10;17079:14;;;17095:3;17075:24;17071:37;17067:42;17052:58;17037:74;;16924:201;-1:-1:-1;;;;;17171:1:10;17155:14;;;17151:22;17138:36;;-1:-1:-1;16089:1352:10:o;17446:291::-;17623:6;17612:9;17605:25;17666:2;17661;17650:9;17646:18;17639:30;17586:4;17686:45;17727:2;17716:9;17712:18;17704:6;17686:45;:::i;17742:127::-;17803:10;17798:3;17794:20;17791:1;17784:31;17834:4;17831:1;17824:15;17858:4;17855:1;17848:15;17874:135;17913:3;17934:17;;;17931:43;;17954:18;;:::i;:::-;-1:-1:-1;18001:1:10;17990:13;;17874:135::o;18370:289::-;18501:3;18539:6;18533:13;18555:66;18614:6;18609:3;18602:4;18594:6;18590:17;18555:66;:::i;:::-;18637:16;;;;;18370:289;-1:-1:-1;;18370:289:10:o;19715:225::-;19819:4;19798:12;;;19812;;;19794:31;19845:22;;;;19886:24;;;19876:58;;19914:18;;:::i;:::-;19876:58;19715:225;;;;:::o;19945:148::-;20033:4;20012:12;;;20026;;;20008:31;;20051:13;;20048:39;;;20067:18;;:::i;20098:262::-;20136:1;20170:4;20167:1;20163:12;20194:3;20184:134;;20240:10;20235:3;20231:20;20228:1;20221:31;20275:4;20272:1;20265:15;20303:4;20300:1;20293:15;20184:134;20350:3;20343:4;20340:1;20336:12;20332:22;20327:27;;;20098:262;;;;:::o;20365:128::-;20432:9;;;20453:11;;;20450:37;;;20467:18;;:::i;20900:527::-;21153:6;21142:9;21135:25;21196:3;21191:2;21180:9;21176:18;21169:31;21116:4;21223:46;21264:3;21253:9;21249:19;21241:6;21223:46;:::i;:::-;21317:9;21309:6;21305:22;21300:2;21289:9;21285:18;21278:50;21345:33;21371:6;21363;21345:33;:::i;:::-;21337:41;;;21414:6;21409:2;21398:9;21394:18;21387:34;20900:527;;;;;;;:::o;21776:136::-;21815:3;21843:5;21833:39;;21852:18;;:::i;:::-;-1:-1:-1;;;21888:18:10;;21776:136::o;22571:301::-;22742:2;22731:9;22724:21;22705:4;22762:45;22803:2;22792:9;22788:18;22780:6;22762:45;:::i;:::-;22754:53;;22857:6;22850:14;22843:22;22838:2;22827:9;22823:18;22816:50;22571:301;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2091200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ADMIN_ROLE()": "infinite",
								"AI_ORACLE_ROLE()": "infinite",
								"DEFAULT_ADMIN_ROLE()": "240",
								"DISPUTE_RESOLVER_ROLE()": "240",
								"MAX_SCORE()": "308",
								"MILESTONE_APPROVER_ROLE()": "329",
								"MIN_SCORE()": "263",
								"SCORE_VALIDITY_PERIOD()": "262",
								"TREASURY_MANAGER_ROLE()": "283",
								"authorizedOracles(address)": "2565",
								"getAIScore(uint256)": "infinite",
								"getAllRoles()": "infinite",
								"getDetailedAIScore(uint256)": "infinite",
								"getOracleStats(address)": "4837",
								"getRoleAdmin(bytes32)": "2538",
								"getRoleCount(address)": "infinite",
								"getScoringBreakdown(uint256)": "5335",
								"grantMultipleRoles(address,bytes32[])": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasAIScore(uint256)": "2628",
								"hasAnyRole(address,bytes32[])": "infinite",
								"hasRole(bytes32,address)": "2741",
								"oracleScoreCount(address)": "2630",
								"pause()": "infinite",
								"paused()": "2427",
								"removeScore(uint256,string)": "infinite",
								"renounceRole(bytes32,address)": "29135",
								"revokeMultipleRoles(address,bytes32[])": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"scoringWeights()": "2594",
								"setOracleAuthorization(address,bool)": "infinite",
								"setSupportedModel(string,bool)": "infinite",
								"submitAIScore(uint256,uint256,string,string,(uint8,uint8,uint8,uint8,uint8))": "infinite",
								"supportedModels(string)": "infinite",
								"supportsInterface(bytes4)": "473",
								"totalScoresSubmitted()": "2429",
								"unpause()": "infinite",
								"updateAIScore(uint256,uint256,string,string)": "infinite",
								"updateScoringCriteria((uint8,uint8,uint8,uint8,uint8))": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 410,
									"end": 10788,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 410,
									"end": 10788,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 410,
									"end": 10788,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2150,
									"end": 2715,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 2150,
									"end": 2715,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2150,
									"end": 2715,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 2150,
									"end": 2715,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2150,
									"end": 2715,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 2150,
									"end": 2715,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 2150,
									"end": 2715,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2150,
									"end": 2715,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 2150,
									"end": 2715,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 2150,
									"end": 2715,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 744,
									"end": 786,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 2241,
									"end": 2245,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 775,
									"end": 785,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 744,
									"end": 754,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "8"
								},
								{
									"begin": 744,
									"end": 786,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 744,
									"end": 786,
									"name": "tag",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 744,
									"end": 786,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 3,
									"value": "2"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 2174,
									"end": 2216,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 1006,
									"end": 1011,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2205,
									"end": 2215,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 2174,
									"end": 2184,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 2174,
									"end": 2216,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2174,
									"end": 2216,
									"name": "tag",
									"source": 7,
									"value": "12"
								},
								{
									"begin": 2174,
									"end": 2216,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2226,
									"end": 2260,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 343,
									"end": 366,
									"name": "PUSH",
									"source": 9,
									"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
								},
								{
									"begin": 2249,
									"end": 2259,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 2226,
									"end": 2236,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 2226,
									"end": 2260,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2226,
									"end": 2260,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 2226,
									"end": 2260,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2270,
									"end": 2308,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 413,
									"end": 440,
									"name": "PUSH",
									"source": 9,
									"value": "482648E7878E9FA54C0A2F67FFD22D00EBC37CF7A03E060E428D2AB0CD6735CC"
								},
								{
									"begin": 2297,
									"end": 2307,
									"name": "CALLER",
									"source": 7
								},
								{
									"begin": 2270,
									"end": 2280,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 2270,
									"end": 2308,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 2270,
									"end": 2308,
									"name": "tag",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 2270,
									"end": 2308,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2391,
									"end": 2578,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 2391,
									"end": 2578,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2391,
									"end": 2578,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2391,
									"end": 2578,
									"name": "PUSH",
									"source": 7,
									"value": "A0"
								},
								{
									"begin": 2391,
									"end": 2578,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2391,
									"end": 2578,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2391,
									"end": 2578,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2391,
									"end": 2578,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2444,
									"end": 2446,
									"name": "PUSH",
									"source": 7,
									"value": "19"
								},
								{
									"begin": 2391,
									"end": 2578,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2391,
									"end": 2578,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2391,
									"end": 2578,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2391,
									"end": 2578,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 2391,
									"end": 2578,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2391,
									"end": 2578,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2391,
									"end": 2578,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2505,
									"end": 2507,
									"name": "PUSH",
									"source": 7,
									"value": "14"
								},
								{
									"begin": 2391,
									"end": 2578,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2391,
									"end": 2578,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 2391,
									"end": 2578,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2391,
									"end": 2578,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2537,
									"end": 2539,
									"name": "PUSH",
									"source": 7,
									"value": "F"
								},
								{
									"begin": 2391,
									"end": 2578,
									"name": "PUSH",
									"source": 7,
									"value": "60"
								},
								{
									"begin": 2391,
									"end": 2578,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2391,
									"end": 2578,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2391,
									"end": 2578,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2391,
									"end": 2578,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2391,
									"end": 2578,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2391,
									"end": 2578,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 2391,
									"end": 2578,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2391,
									"end": 2578,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2391,
									"end": 2578,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2391,
									"end": 2578,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2374,
									"end": 2388,
									"name": "PUSH",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 2374,
									"end": 2578,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2374,
									"end": 2578,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FFFFFFFFFF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2374,
									"end": 2578,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2374,
									"end": 2578,
									"name": "PUSH",
									"source": 7,
									"value": "F0F141919"
								},
								{
									"begin": 2374,
									"end": 2578,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2374,
									"end": 2578,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2374,
									"end": 2578,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2633,
									"end": 2657,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2633,
									"end": 2657,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "11D4150B4D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "DA"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 216,
									"end": 236,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 216,
									"end": 236,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2633,
									"end": 2648,
									"name": "PUSH",
									"source": 7,
									"value": "5"
								},
								{
									"begin": 252,
									"end": 263,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 252,
									"end": 263,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 252,
									"end": 263,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2633,
									"end": 2657,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2633,
									"end": 2657,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2633,
									"end": 2657,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2633,
									"end": 2657,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2633,
									"end": 2657,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2633,
									"end": 2657,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2633,
									"end": 2657,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2633,
									"end": 2657,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2633,
									"end": 2657,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2633,
									"end": 2657,
									"name": "PUSH",
									"source": 7,
									"value": "25"
								},
								{
									"begin": 2633,
									"end": 2657,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2633,
									"end": 2657,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2633,
									"end": 2657,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 2633,
									"end": 2664,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2633,
									"end": 2664,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2633,
									"end": 2664,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2633,
									"end": 2664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2633,
									"end": 2664,
									"name": "AND",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2633,
									"end": 2664,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2633,
									"end": 2664,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 2633,
									"end": 2664,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2633,
									"end": 2664,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2633,
									"end": 2664,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2633,
									"end": 2664,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "436C617564652D33"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "C0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 476,
									"end": 499,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 476,
									"end": 499,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 524,
									"end": 525,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 515,
									"end": 526,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 515,
									"end": 526,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2674,
									"end": 2701,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2674,
									"end": 2701,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2674,
									"end": 2701,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2674,
									"end": 2701,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 2674,
									"end": 2701,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 2674,
									"end": 2701,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 2674,
									"end": 2701,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2674,
									"end": 2701,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 2674,
									"end": 2701,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2674,
									"end": 2701,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 2674,
									"end": 2701,
									"name": "PUSH",
									"source": 7,
									"value": "28"
								},
								{
									"begin": 2674,
									"end": 2701,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 2674,
									"end": 2701,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2674,
									"end": 2701,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2674,
									"end": 2701,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 2674,
									"end": 2708,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 2674,
									"end": 2708,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 2674,
									"end": 2708,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2674,
									"end": 2708,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2674,
									"end": 2708,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2674,
									"end": 2708,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2674,
									"end": 2708,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2674,
									"end": 2708,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 2674,
									"end": 2708,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 2674,
									"end": 2708,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 410,
									"end": 10788,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "29"
								},
								{
									"begin": 410,
									"end": 10788,
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6232,
									"end": 6236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6297,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6323,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 735,
									"end": 745,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6364,
									"end": 6371,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6358,
									"end": 6362,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6407,
									"end": 6411,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6449,
									"end": 6454,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 274,
									"end": 532,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 274,
									"end": 532,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 410,
									"end": 10788,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 410,
									"end": 10788,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 410,
									"end": 10788,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 410,
									"end": 10788,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 410,
									"end": 10788,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 410,
									"end": 10788,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 410,
									"end": 10788,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202827ecd50a525cd6b10675f9849ddba10548dbeb2e9cd48d3e93b294c561738264736f6c63430008140033",
									".code": [
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "8456CB59"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "BFE42A37"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "D5C1A1E1"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "D5C1A1E1"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "EA535940"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "EBDF690F"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "39"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "F2BCAC3D"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "FF8DEA01"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "BFE42A37"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "C601F7AF"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "33"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "C772A8A6"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "CFE85A2F"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "D547741F"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "tag",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "A217FDDF"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "A217FDDF"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "A91AD18E"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "ACA5A8A7"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "29"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "B8A956D3"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "BA340773"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "8456CB59"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "91B9F9D8"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "91D14854"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "96CAAC0A"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "A02D72FB"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "3F4BA83A"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "61C992A3"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "61C992A3"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "68CA78F9"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "7092B0BC"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "7131F025"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "75B238FC"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "3F4BA83A"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "40B89270"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "4DA89FBD"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "4FE9D1F5"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "5C975ABB"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "2B116373"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "2B116373"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "2ED49CF7"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "2F2FF15D"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "36568ABE"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "3A1E017F"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "1FFC9A7"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "311B82D"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "248A9CA3"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "27FF6223"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 410,
											"end": 10788,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 566,
											"end": 580,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 566,
											"end": 580,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 559,
											"end": 581,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 541,
											"end": 582,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 541,
											"end": 582,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 529,
											"end": 531,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 514,
											"end": 532,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6937,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6593,
											"end": 6937,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6593,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 6593,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 6593,
											"end": 6937,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 6593,
											"end": 6937,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6593,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 6593,
											"end": 6937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6593,
											"end": 6937,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 6593,
											"end": 6937,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6593,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 6593,
											"end": 6937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6593,
											"end": 6937,
											"name": "tag",
											"source": 7,
											"value": "55"
										},
										{
											"begin": 6593,
											"end": 6937,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6593,
											"end": 6937,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6593,
											"end": 6937,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6593,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 6593,
											"end": 6937,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6593,
											"end": 6937,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6593,
											"end": 6937,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6593,
											"end": 6937,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6593,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6593,
											"end": 6937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2017,
											"end": 2042,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2042,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2017,
											"end": 2042,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2005,
											"end": 2007,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1990,
											"end": 2008,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1871,
											"end": 2048,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1260,
											"end": 1299,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1260,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1296,
											"end": 1299,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1260,
											"end": 1299,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1260,
											"end": 1299,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5461,
											"end": 6349,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 5461,
											"end": 6349,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5461,
											"end": 6349,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 5461,
											"end": 6349,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 5461,
											"end": 6349,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 5461,
											"end": 6349,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5461,
											"end": 6349,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "73"
										},
										{
											"begin": 5461,
											"end": 6349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5461,
											"end": 6349,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 5461,
											"end": 6349,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5461,
											"end": 6349,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 5461,
											"end": 6349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5461,
											"end": 6349,
											"name": "tag",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 5461,
											"end": 6349,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5461,
											"end": 6349,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1163,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1117,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 1117,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1117,
											"end": 1163,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1163,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1117,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 1117,
											"end": 1163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1163,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 1117,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1163,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1163,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1163,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1117,
											"end": 1163,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1163,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1163,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1163,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1163,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1163,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1163,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1163,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 1117,
											"end": 1163,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1163,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1163,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1163,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1163,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1163,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1163,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1163,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1163,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1163,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1163,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1163,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1163,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1163,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1117,
											"end": 1163,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1163,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1117,
											"end": 1163,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1367,
											"end": 1402,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 1367,
											"end": 1402,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1402,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1367,
											"end": 1402,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 1367,
											"end": 1402,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1402,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1367,
											"end": 1402,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10710,
											"end": 10786,
											"name": "tag",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 10710,
											"end": 10786,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10710,
											"end": 10786,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 10710,
											"end": 10786,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 10710,
											"end": 10786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1217,
											"end": 1254,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 1217,
											"end": 1254,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1217,
											"end": 1254,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1253,
											"end": 1254,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1217,
											"end": 1254,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1217,
											"end": 1254,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "PUSH",
											"source": 7,
											"value": "10000"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "PUSH",
											"source": 7,
											"value": "1000000"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "PUSH",
											"source": 7,
											"value": "100000000"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "tag",
											"source": 7,
											"value": "95"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4901,
											"end": 4905,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4889,
											"end": 4906,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 4889,
											"end": 4906,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4889,
											"end": 4906,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4871,
											"end": 4907,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4871,
											"end": 4907,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4943,
											"end": 4960,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 4943,
											"end": 4960,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4943,
											"end": 4960,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4938,
											"end": 4940,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4923,
											"end": 4941,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4916,
											"end": 4961,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4997,
											"end": 5014,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4997,
											"end": 5014,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4997,
											"end": 5014,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4977,
											"end": 4995,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4977,
											"end": 4995,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4977,
											"end": 4995,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4970,
											"end": 5015,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4970,
											"end": 5015,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4970,
											"end": 5015,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4970,
											"end": 5015,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5051,
											"end": 5068,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5051,
											"end": 5068,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5046,
											"end": 5048,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 5031,
											"end": 5049,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5031,
											"end": 5049,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5024,
											"end": 5069,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5106,
											"end": 5123,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5106,
											"end": 5123,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5106,
											"end": 5123,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5100,
											"end": 5103,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 5085,
											"end": 5104,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5085,
											"end": 5104,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5078,
											"end": 5124,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4858,
											"end": 4861,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 4843,
											"end": 4862,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1174,
											"end": 1211,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 4632,
											"end": 5130,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1352,
											"end": 1573,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 1352,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 1352,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1352,
											"end": 1573,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1573,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1352,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 1352,
											"end": 1573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1573,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1352,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 1352,
											"end": 1573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1062,
											"end": 1111,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 1062,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 1062,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 1062,
											"end": 1111,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1111,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1062,
											"end": 1111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 1062,
											"end": 1111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1111,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 1062,
											"end": 1111,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1111,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1062,
											"end": 1111,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1062,
											"end": 1111,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1111,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1062,
											"end": 1111,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1111,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1111,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1111,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1062,
											"end": 1111,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1111,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1111,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1111,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1062,
											"end": 1111,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1111,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1111,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 1816,
											"end": 2087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 1816,
											"end": 2087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 5175,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 3054,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3054,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 3054,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 3054,
											"end": 5175,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 3054,
											"end": 5175,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3054,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "117"
										},
										{
											"begin": 3054,
											"end": 5175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3054,
											"end": 5175,
											"name": "tag",
											"source": 7,
											"value": "116"
										},
										{
											"begin": 3054,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3054,
											"end": 5175,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 3054,
											"end": 5175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1459,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1408,
											"end": 1459,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1459,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1408,
											"end": 1459,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 1408,
											"end": 1459,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1459,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1408,
											"end": 1459,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 1408,
											"end": 1459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1459,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 1408,
											"end": 1459,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1459,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1408,
											"end": 1459,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1408,
											"end": 1459,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1459,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1408,
											"end": 1459,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1459,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1459,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1459,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1408,
											"end": 1459,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1459,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1459,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1459,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1408,
											"end": 1459,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 306,
											"end": 366,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 306,
											"end": 366,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 306,
											"end": 366,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 306,
											"end": 366,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 306,
											"end": 366,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10632,
											"end": 10704,
											"name": "tag",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 10632,
											"end": 10704,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10632,
											"end": 10704,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 10632,
											"end": 10704,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 10632,
											"end": 10704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 960,
											"end": 1179,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 960,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 960,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 960,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 960,
											"end": 1179,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 960,
											"end": 1179,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 960,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 960,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 960,
											"end": 1179,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 960,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 960,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 960,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7901,
											"end": 8065,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 7901,
											"end": 8065,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 8065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 7901,
											"end": 8065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 7901,
											"end": 8065,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 8065,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7901,
											"end": 8065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 7901,
											"end": 8065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 8065,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 7901,
											"end": 8065,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 8065,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 7901,
											"end": 8065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 534,
											"end": 620,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 534,
											"end": 620,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 534,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 584,
											"end": 620,
											"name": "PUSH",
											"source": 9,
											"value": "58223CDFB69946630D837D40B5C366A584F0217ADA7FDDD8318F2E08603CFA22"
										},
										{
											"begin": 534,
											"end": 620,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 534,
											"end": 620,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1305,
											"end": 1360,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 1305,
											"end": 1360,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1305,
											"end": 1360,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "61"
										},
										{
											"begin": 1353,
											"end": 1360,
											"name": "PUSH",
											"source": 7,
											"value": "278D00"
										},
										{
											"begin": 1305,
											"end": 1360,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1305,
											"end": 1360,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2250,
											"end": 2610,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 2250,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2250,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 2250,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 2250,
											"end": 2610,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2250,
											"end": 2610,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2250,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 2250,
											"end": 2610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2250,
											"end": 2610,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 2250,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2250,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 2250,
											"end": 2610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10249,
											"end": 10626,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 10249,
											"end": 10626,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10249,
											"end": 10626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 10249,
											"end": 10626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 10249,
											"end": 10626,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 10249,
											"end": 10626,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10249,
											"end": 10626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 10249,
											"end": 10626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10249,
											"end": 10626,
											"name": "tag",
											"source": 7,
											"value": "153"
										},
										{
											"begin": 10249,
											"end": 10626,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10249,
											"end": 10626,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 10249,
											"end": 10626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9209,
											"end": 9496,
											"name": "tag",
											"source": 7,
											"value": "31"
										},
										{
											"begin": 9209,
											"end": 9496,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9209,
											"end": 9496,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 9209,
											"end": 9496,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 9209,
											"end": 9496,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9209,
											"end": 9496,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9209,
											"end": 9496,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 9209,
											"end": 9496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9209,
											"end": 9496,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 9209,
											"end": 9496,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9209,
											"end": 9496,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 9209,
											"end": 9496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 626,
											"end": 708,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 626,
											"end": 708,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 626,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 674,
											"end": 708,
											"name": "PUSH",
											"source": 9,
											"value": "7B8BB8356A3F32F5C111FF23F050D97F08988E0883529EA7BFF3B918887A6E0E"
										},
										{
											"begin": 626,
											"end": 708,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 626,
											"end": 708,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 372,
											"end": 440,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 372,
											"end": 440,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 372,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "A33092EC2EA5E84579A4A7F81A8171C84A984183E655AB76A6EA5C0D5344C7B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 372,
											"end": 440,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 372,
											"end": 440,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8277,
											"end": 8456,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 8277,
											"end": 8456,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8277,
											"end": 8456,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 8277,
											"end": 8456,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 8277,
											"end": 8456,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8277,
											"end": 8456,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8277,
											"end": 8456,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 8277,
											"end": 8456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8277,
											"end": 8456,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 8277,
											"end": 8456,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8397,
											"end": 8421,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8340,
											"end": 8358,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8397,
											"end": 8421,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8397,
											"end": 8421,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8397,
											"end": 8421,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8397,
											"end": 8413,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 8397,
											"end": 8421,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8397,
											"end": 8421,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8397,
											"end": 8421,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8397,
											"end": 8421,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8397,
											"end": 8421,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8397,
											"end": 8421,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8397,
											"end": 8421,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8397,
											"end": 8421,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8397,
											"end": 8421,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8423,
											"end": 8440,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8423,
											"end": 8448,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8423,
											"end": 8448,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8423,
											"end": 8448,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8423,
											"end": 8448,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8423,
											"end": 8448,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8423,
											"end": 8448,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8423,
											"end": 8448,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 8397,
											"end": 8421,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8397,
											"end": 8421,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8423,
											"end": 8448,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 8423,
											"end": 8448,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8423,
											"end": 8448,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8423,
											"end": 8448,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8423,
											"end": 8448,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8277,
											"end": 8456,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8277,
											"end": 8456,
											"name": "tag",
											"source": 7,
											"value": "166"
										},
										{
											"begin": 8277,
											"end": 8456,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8277,
											"end": 8456,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8277,
											"end": 8456,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8277,
											"end": 8456,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9160,
											"end": 9185,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9160,
											"end": 9185,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9160,
											"end": 9185,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9228,
											"end": 9242,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9228,
											"end": 9242,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9221,
											"end": 9243,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9216,
											"end": 9218,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9194,
											"end": 9244,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9133,
											"end": 9151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8277,
											"end": 8456,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 8992,
											"end": 9250,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7484,
											"end": 7743,
											"name": "tag",
											"source": 7,
											"value": "35"
										},
										{
											"begin": 7484,
											"end": 7743,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7484,
											"end": 7743,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 7484,
											"end": 7743,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 7484,
											"end": 7743,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 7484,
											"end": 7743,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7484,
											"end": 7743,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 7484,
											"end": 7743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7484,
											"end": 7743,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 7484,
											"end": 7743,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7484,
											"end": 7743,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 7484,
											"end": 7743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7484,
											"end": 7743,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 7484,
											"end": 7743,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7484,
											"end": 7743,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7484,
											"end": 7743,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7484,
											"end": 7743,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 7484,
											"end": 7743,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7484,
											"end": 7743,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7484,
											"end": 7743,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 7484,
											"end": 7743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8611,
											"end": 9043,
											"name": "tag",
											"source": 7,
											"value": "37"
										},
										{
											"begin": 8611,
											"end": 9043,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8611,
											"end": 9043,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 8611,
											"end": 9043,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 8611,
											"end": 9043,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 8611,
											"end": 9043,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8611,
											"end": 9043,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "181"
										},
										{
											"begin": 8611,
											"end": 9043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8611,
											"end": 9043,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 8611,
											"end": 9043,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8611,
											"end": 9043,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 8611,
											"end": 9043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7087,
											"end": 7320,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 7087,
											"end": 7320,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7087,
											"end": 7320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 7087,
											"end": 7320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 7087,
											"end": 7320,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 7087,
											"end": 7320,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7087,
											"end": 7320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 7087,
											"end": 7320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7087,
											"end": 7320,
											"name": "tag",
											"source": 7,
											"value": "184"
										},
										{
											"begin": 7087,
											"end": 7320,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7087,
											"end": 7320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 7087,
											"end": 7320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7087,
											"end": 7320,
											"name": "tag",
											"source": 7,
											"value": "183"
										},
										{
											"begin": 7087,
											"end": 7320,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7087,
											"end": 7320,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7087,
											"end": 7320,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7087,
											"end": 7320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "53"
										},
										{
											"begin": 7087,
											"end": 7320,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7087,
											"end": 7320,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7087,
											"end": 7320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "187"
										},
										{
											"begin": 7087,
											"end": 7320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 446,
											"end": 528,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 446,
											"end": 528,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 446,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 494,
											"end": 528,
											"name": "PUSH",
											"source": 9,
											"value": "EDE9DCDB0CE99DC7CEC9C7BE9246AD08B37853683AD91569C187B647DDF5E21C"
										},
										{
											"begin": 446,
											"end": 528,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 446,
											"end": 528,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 2723,
											"end": 3087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "tag",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 2723,
											"end": 3087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9609,
											"end": 10091,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 9609,
											"end": 10091,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9609,
											"end": 10091,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "71"
										},
										{
											"begin": 9609,
											"end": 10091,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 9609,
											"end": 10091,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 9609,
											"end": 10091,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9609,
											"end": 10091,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "197"
										},
										{
											"begin": 9609,
											"end": 10091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9609,
											"end": 10091,
											"name": "tag",
											"source": 7,
											"value": "196"
										},
										{
											"begin": 9609,
											"end": 10091,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9609,
											"end": 10091,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 9609,
											"end": 10091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 829,
											"end": 869,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 829,
											"end": 869,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 829,
											"end": 869,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2642,
											"end": 2736,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6593,
											"end": 6937,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 6593,
											"end": 6937,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6702,
											"end": 6715,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6725,
											"end": 6752,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6762,
											"end": 6773,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6672,
											"end": 6682,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2101,
											"end": 2102,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2088,
											"end": 2098,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2088,
											"end": 2102,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 2080,
											"end": 2126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "tag",
											"source": 7,
											"value": "204"
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6790,
											"end": 6819,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6822,
											"end": 6842,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6822,
											"end": 6842,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6822,
											"end": 6842,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6822,
											"end": 6830,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 6822,
											"end": 6842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6822,
											"end": 6842,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6822,
											"end": 6842,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6822,
											"end": 6842,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6822,
											"end": 6842,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6860,
											"end": 6882,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6860,
											"end": 6882,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6860,
											"end": 6882,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6860,
											"end": 6882,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6913,
											"end": 6929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 6913,
											"end": 6929,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6913,
											"end": 6929,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6913,
											"end": 6929,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6884,
											"end": 6911,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6884,
											"end": 6911,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6884,
											"end": 6911,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6884,
											"end": 6911,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6884,
											"end": 6911,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6913,
											"end": 6929,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6913,
											"end": 6929,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6913,
											"end": 6929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 6913,
											"end": 6929,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6913,
											"end": 6929,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6884,
											"end": 6911,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6884,
											"end": 6911,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 6852,
											"end": 6930,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 6852,
											"end": 6930,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "208"
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 6852,
											"end": 6930,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "211"
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6852,
											"end": 6930,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6593,
											"end": 6937,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6593,
											"end": 6937,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6593,
											"end": 6937,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6593,
											"end": 6937,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6593,
											"end": 6937,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6593,
											"end": 6937,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6593,
											"end": 6937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5461,
											"end": 6349,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 5461,
											"end": 6349,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1820,
											"end": 1830,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1802,
											"end": 1831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1802,
											"end": 1831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1802,
											"end": 1831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1802,
											"end": 1831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1802,
											"end": 1819,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1802,
											"end": 1831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1802,
											"end": 1831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1802,
											"end": 1831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1802,
											"end": 1831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1802,
											"end": 1831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1802,
											"end": 1831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1802,
											"end": 1831,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1802,
											"end": 1831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1794,
											"end": 1857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 1794,
											"end": 1857,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1794,
											"end": 1857,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1794,
											"end": 1857,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1794,
											"end": 1857,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1794,
											"end": 1857,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13087,
											"end": 13089,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1794,
											"end": 1857,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1794,
											"end": 1857,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1794,
											"end": 1857,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13069,
											"end": 13090,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13126,
											"end": 13128,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 13106,
											"end": 13124,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13106,
											"end": 13124,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13106,
											"end": 13124,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13099,
											"end": 13129,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F7420617574686F72697A6564206F7261636C65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13145,
											"end": 13163,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13145,
											"end": 13163,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13145,
											"end": 13163,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13138,
											"end": 13189,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13206,
											"end": 13224,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 13206,
											"end": 13224,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1794,
											"end": 1857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 12885,
											"end": 13230,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1794,
											"end": 1857,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 1794,
											"end": 1857,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5664,
											"end": 5674,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2101,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2088,
											"end": 2098,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2088,
											"end": 2102,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 2080,
											"end": 2126,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2080,
											"end": 2126,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2080,
											"end": 2126,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2080,
											"end": 2126,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 2080,
											"end": 2126,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 2080,
											"end": 2126,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 2080,
											"end": 2126,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5687,
											"end": 5695,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1296,
											"end": 1299,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1956,
											"end": 1961,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1956,
											"end": 1974,
											"modifierDepth": 2,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1956,
											"end": 1974,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1926,
											"end": 1997,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 1926,
											"end": 1997,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1926,
											"end": 1997,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 1997,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1926,
											"end": 1997,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1926,
											"end": 1997,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13437,
											"end": 13439,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1926,
											"end": 1997,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1926,
											"end": 1997,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1926,
											"end": 1997,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13419,
											"end": 13440,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13476,
											"end": 13478,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 13456,
											"end": 13474,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13456,
											"end": 13474,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13456,
											"end": 13474,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13449,
											"end": 13479,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "53636F7265206F7574206F662072616E6765"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13495,
											"end": 13513,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13495,
											"end": 13513,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13495,
											"end": 13513,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13488,
											"end": 13536,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13553,
											"end": 13571,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 13553,
											"end": 13571,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1997,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 13235,
											"end": 13577,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1997,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "224"
										},
										{
											"begin": 1926,
											"end": 1997,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 1239,
											"end": 1256,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 3,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5729,
											"end": 5749,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5729,
											"end": 5749,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5729,
											"end": 5749,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5729,
											"end": 5749,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5729,
											"end": 5737,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5729,
											"end": 5749,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5729,
											"end": 5749,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5729,
											"end": 5749,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5729,
											"end": 5749,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5729,
											"end": 5749,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5729,
											"end": 5756,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5729,
											"end": 5756,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5729,
											"end": 5756,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5729,
											"end": 5756,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5729,
											"end": 5756,
											"modifierDepth": 4,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5729,
											"end": 5756,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 5729,
											"end": 5756,
											"modifierDepth": 4,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5721,
											"end": 5781,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 5721,
											"end": 5781,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5721,
											"end": 5781,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5721,
											"end": 5781,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5721,
											"end": 5781,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5721,
											"end": 5781,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5721,
											"end": 5781,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5721,
											"end": 5781,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5721,
											"end": 5781,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 5721,
											"end": 5781,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5721,
											"end": 5781,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 5721,
											"end": 5781,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5721,
											"end": 5781,
											"modifierDepth": 4,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 5721,
											"end": 5781,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5819,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5819,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5819,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5819,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5807,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5799,
											"end": 5819,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5819,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5819,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5799,
											"end": 5819,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5819,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5826,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5799,
											"end": 5826,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5826,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5799,
											"end": 5826,
											"modifierDepth": 4,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5830,
											"end": 5840,
											"modifierDepth": 4,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 5799,
											"end": 5840,
											"modifierDepth": 4,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5791,
											"end": 5864,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 5791,
											"end": 5864,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5791,
											"end": 5864,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5791,
											"end": 5864,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5791,
											"end": 5864,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5791,
											"end": 5864,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14133,
											"end": 14135,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5791,
											"end": 5864,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5791,
											"end": 5864,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5791,
											"end": 5864,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14115,
											"end": 14136,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14172,
											"end": 14174,
											"name": "PUSH",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 14152,
											"end": 14170,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14152,
											"end": 14170,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14152,
											"end": 14170,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14145,
											"end": 14175,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F74206F726967696E616C206F7261636C65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14191,
											"end": 14209,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 14191,
											"end": 14209,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14191,
											"end": 14209,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14184,
											"end": 14233,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14250,
											"end": 14268,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 14250,
											"end": 14268,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5791,
											"end": 5864,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 13931,
											"end": 14274,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5791,
											"end": 5864,
											"modifierDepth": 4,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 5791,
											"end": 5864,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5914,
											"end": 5934,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5914,
											"end": 5934,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5914,
											"end": 5934,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5914,
											"end": 5934,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5914,
											"end": 5922,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 5914,
											"end": 5934,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5914,
											"end": 5934,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5914,
											"end": 5934,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5914,
											"end": 5934,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5914,
											"end": 5934,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5914,
											"end": 5944,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5914,
											"end": 5944,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5914,
											"end": 5944,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5914,
											"end": 5968,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 5914,
											"end": 5968,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1353,
											"end": 1360,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 7,
											"value": "278D00"
										},
										{
											"begin": 1353,
											"end": 1360,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5914,
											"end": 5968,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 5914,
											"end": 5968,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5914,
											"end": 5968,
											"modifierDepth": 4,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 5914,
											"end": 5968,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5895,
											"end": 5910,
											"modifierDepth": 4,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 5895,
											"end": 5968,
											"modifierDepth": 4,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5895,
											"end": 5968,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5874,
											"end": 6015,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 5874,
											"end": 6015,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5874,
											"end": 6015,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5874,
											"end": 6015,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5874,
											"end": 6015,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5874,
											"end": 6015,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14743,
											"end": 14745,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5874,
											"end": 6015,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5874,
											"end": 6015,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5874,
											"end": 6015,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14725,
											"end": 14746,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14782,
											"end": 14784,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 14762,
											"end": 14780,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14762,
											"end": 14780,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14762,
											"end": 14780,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14755,
											"end": 14785,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "155C19185D19481C195C9A5BD908195E1C1A5C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14801,
											"end": 14819,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 14801,
											"end": 14819,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14801,
											"end": 14819,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14794,
											"end": 14845,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14862,
											"end": 14880,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 14862,
											"end": 14880,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5874,
											"end": 6015,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 14541,
											"end": 14886,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5874,
											"end": 6015,
											"modifierDepth": 4,
											"name": "tag",
											"source": 7,
											"value": "239"
										},
										{
											"begin": 5874,
											"end": 6015,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6056,
											"end": 6057,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6039,
											"end": 6045,
											"modifierDepth": 4,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6053,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6033,
											"end": 6057,
											"modifierDepth": 4,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 6025,
											"end": 6084,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 6025,
											"end": 6084,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6025,
											"end": 6084,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6025,
											"end": 6084,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6025,
											"end": 6084,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6025,
											"end": 6084,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 15093,
											"end": 15095,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6025,
											"end": 6084,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6025,
											"end": 6084,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6025,
											"end": 6084,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 15075,
											"end": 15096,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15132,
											"end": 15134,
											"name": "PUSH",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 15112,
											"end": 15130,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15112,
											"end": 15130,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15112,
											"end": 15130,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15105,
											"end": 15135,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "155C19185D19481C99585CDBDB881C995C5D5A5C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15151,
											"end": 15169,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 15151,
											"end": 15169,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15151,
											"end": 15169,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15144,
											"end": 15196,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15213,
											"end": 15231,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 15213,
											"end": 15231,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6025,
											"end": 6084,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 14891,
											"end": 15237,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6025,
											"end": 6084,
											"modifierDepth": 4,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 6025,
											"end": 6084,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6103,
											"end": 6123,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6103,
											"end": 6123,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6103,
											"end": 6123,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6103,
											"end": 6123,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6103,
											"end": 6111,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 6103,
											"end": 6123,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6103,
											"end": 6123,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6103,
											"end": 6123,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6103,
											"end": 6123,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6103,
											"end": 6123,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6103,
											"end": 6136,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6103,
											"end": 6136,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6103,
											"end": 6136,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6103,
											"end": 6147,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6103,
											"end": 6147,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6103,
											"end": 6147,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6157,
											"end": 6195,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 6157,
											"end": 6195,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6157,
											"end": 6218,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 6198,
											"end": 6218,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6157,
											"end": 6195,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6157,
											"end": 6218,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 6157,
											"end": 6218,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6157,
											"end": 6218,
											"modifierDepth": 4,
											"name": "tag",
											"source": 7,
											"value": "245"
										},
										{
											"begin": 6157,
											"end": 6218,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6228,
											"end": 6248,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6228,
											"end": 6248,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6228,
											"end": 6248,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6228,
											"end": 6248,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6228,
											"end": 6236,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 6228,
											"end": 6248,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6228,
											"end": 6248,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6228,
											"end": 6248,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6228,
											"end": 6248,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6228,
											"end": 6248,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6228,
											"end": 6248,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6228,
											"end": 6248,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 6261,
											"end": 6276,
											"modifierDepth": 4,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 6228,
											"end": 6258,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6228,
											"end": 6258,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6228,
											"end": 6258,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6228,
											"end": 6258,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6228,
											"end": 6276,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 6300,
											"end": 6342,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6237,
											"end": 6247,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6237,
											"end": 6247,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6300,
											"end": 6342,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 7,
											"value": "D3E8DBBE8FF60A1FAE1E5F88E71F27270ED38BADC7B26E19922ED94FD12F5FE9"
										},
										{
											"begin": 6300,
											"end": 6342,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6300,
											"end": 6342,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 6300,
											"end": 6342,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6325,
											"end": 6333,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 6325,
											"end": 6333,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6335,
											"end": 6341,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 6335,
											"end": 6341,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6300,
											"end": 6342,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 6300,
											"end": 6342,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6300,
											"end": 6342,
											"modifierDepth": 4,
											"name": "tag",
											"source": 7,
											"value": "247"
										},
										{
											"begin": 6300,
											"end": 6342,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6300,
											"end": 6342,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6300,
											"end": 6342,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6300,
											"end": 6342,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6300,
											"end": 6342,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6300,
											"end": 6342,
											"modifierDepth": 4,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6300,
											"end": 6342,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6300,
											"end": 6342,
											"modifierDepth": 4,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 2136,
											"end": 2137,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1868,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5461,
											"end": 6349,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5461,
											"end": 6349,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5461,
											"end": 6349,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5461,
											"end": 6349,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5461,
											"end": 6349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 4317,
											"end": 4321,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4330,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4316,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 4306,
											"end": 4331,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "334BD919"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 5517,
											"end": 5521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 5505,
											"end": 5542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10710,
											"end": 10786,
											"name": "tag",
											"source": 7,
											"value": "91"
										},
										{
											"begin": 10710,
											"end": 10786,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10769,
											"end": 10779,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 10769,
											"end": 10777,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 10769,
											"end": 10779,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10769,
											"end": 10779,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 10769,
											"end": 10779,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10710,
											"end": 10786,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10710,
											"end": 10786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1352,
											"end": 1573,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 1352,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1470,
											"end": 1567,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 1470,
											"end": 1567,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1494,
											"end": 1499,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1494,
											"end": 1506,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1490,
											"end": 1491,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1490,
											"end": 1506,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1470,
											"end": 1567,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1470,
											"end": 1567,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 1470,
											"end": 1567,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1556,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 1538,
											"end": 1543,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1544,
											"end": 1545,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 1538,
											"end": 1546,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1548,
											"end": 1555,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1537,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 1527,
											"end": 1556,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1556,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 1527,
											"end": 1556,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1508,
											"end": 1511,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1508,
											"end": 1511,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 1508,
											"end": 1511,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1508,
											"end": 1511,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 1508,
											"end": 1511,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1508,
											"end": 1511,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 1508,
											"end": 1511,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1508,
											"end": 1511,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1508,
											"end": 1511,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1508,
											"end": 1511,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1470,
											"end": 1567,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 1470,
											"end": 1567,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1900,
											"end": 1904,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 1904,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1916,
											"end": 2059,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 1916,
											"end": 2059,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1945,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1952,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1936,
											"end": 1937,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1936,
											"end": 1952,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1916,
											"end": 2059,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1916,
											"end": 2059,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 1916,
											"end": 2059,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 1985,
											"end": 1990,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1991,
											"end": 1992,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 1985,
											"end": 1993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "tag",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2002,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 1977,
											"end": 2003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2003,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 1977,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1973,
											"end": 2049,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1973,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 1973,
											"end": 2049,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2034,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2023,
											"end": 2034,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2034,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2034,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 2023,
											"end": 2034,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1973,
											"end": 2049,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 1973,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 1954,
											"end": 1957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1916,
											"end": 2059,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 1916,
											"end": 2059,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1916,
											"end": 2059,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 1916,
											"end": 2059,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2075,
											"end": 2080,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2075,
											"end": 2080,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1816,
											"end": 2087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 5175,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 3054,
											"end": 5175,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1820,
											"end": 1830,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1802,
											"end": 1831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1802,
											"end": 1831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1802,
											"end": 1831,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1802,
											"end": 1831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1802,
											"end": 1819,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1802,
											"end": 1831,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1802,
											"end": 1831,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1802,
											"end": 1831,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1802,
											"end": 1831,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1802,
											"end": 1831,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1802,
											"end": 1831,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1802,
											"end": 1831,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1802,
											"end": 1831,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1794,
											"end": 1857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 1794,
											"end": 1857,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1794,
											"end": 1857,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1794,
											"end": 1857,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1794,
											"end": 1857,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1794,
											"end": 1857,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13087,
											"end": 13089,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1794,
											"end": 1857,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1794,
											"end": 1857,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1794,
											"end": 1857,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13069,
											"end": 13090,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13126,
											"end": 13128,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 13106,
											"end": 13124,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13106,
											"end": 13124,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13106,
											"end": 13124,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13099,
											"end": 13129,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F7420617574686F72697A6564206F7261636C65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13145,
											"end": 13163,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13145,
											"end": 13163,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13145,
											"end": 13163,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13138,
											"end": 13189,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13206,
											"end": 13224,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 13206,
											"end": 13224,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1794,
											"end": 1857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 12885,
											"end": 13230,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1794,
											"end": 1857,
											"name": "tag",
											"source": 7,
											"value": "290"
										},
										{
											"begin": 1794,
											"end": 1857,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3316,
											"end": 3326,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2101,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2088,
											"end": 2098,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2088,
											"end": 2102,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 2080,
											"end": 2126,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2080,
											"end": 2126,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2080,
											"end": 2126,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2080,
											"end": 2126,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 2080,
											"end": 2126,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 2080,
											"end": 2126,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "293"
										},
										{
											"begin": 2080,
											"end": 2126,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3339,
											"end": 3351,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1296,
											"end": 1299,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 1956,
											"end": 1961,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1956,
											"end": 1974,
											"modifierDepth": 2,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1956,
											"end": 1974,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1926,
											"end": 1997,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 1926,
											"end": 1997,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1926,
											"end": 1997,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 1997,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1926,
											"end": 1997,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1926,
											"end": 1997,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13437,
											"end": 13439,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1926,
											"end": 1997,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1926,
											"end": 1997,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1926,
											"end": 1997,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13419,
											"end": 13440,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13476,
											"end": 13478,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 13456,
											"end": 13474,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13456,
											"end": 13474,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13456,
											"end": 13474,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13449,
											"end": 13479,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "53636F7265206F7574206F662072616E6765"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13495,
											"end": 13513,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 13495,
											"end": 13513,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13495,
											"end": 13513,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13488,
											"end": 13536,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13553,
											"end": 13571,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 13553,
											"end": 13571,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1997,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 13235,
											"end": 13577,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1926,
											"end": 1997,
											"modifierDepth": 2,
											"name": "tag",
											"source": 7,
											"value": "297"
										},
										{
											"begin": 1926,
											"end": 1997,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 1239,
											"end": 1256,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 3,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 4,
											"name": "tag",
											"source": 3,
											"value": "302"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3432,
											"end": 3433,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3404,
											"end": 3421,
											"modifierDepth": 5,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3398,
											"end": 3429,
											"modifierDepth": 5,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3398,
											"end": 3433,
											"modifierDepth": 5,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3465,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 3390,
											"end": 3465,
											"modifierDepth": 5,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3465,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3390,
											"end": 3465,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3390,
											"end": 3465,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3465,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18216,
											"end": 18218,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3465,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3390,
											"end": 3465,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3390,
											"end": 3465,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18198,
											"end": 18219,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18255,
											"end": 18257,
											"name": "PUSH",
											"source": 10,
											"value": "1B"
										},
										{
											"begin": 18235,
											"end": 18253,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 18235,
											"end": 18253,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18235,
											"end": 18253,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18228,
											"end": 18258,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18294,
											"end": 18323,
											"name": "PUSH",
											"source": 10,
											"value": "4A757374696669636174696F6E20495046532072657175697265640000000000"
										},
										{
											"begin": 18274,
											"end": 18292,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 18274,
											"end": 18292,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18274,
											"end": 18292,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18267,
											"end": 18324,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18341,
											"end": 18359,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 18341,
											"end": 18359,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3390,
											"end": 3465,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 18014,
											"end": 18365,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3390,
											"end": 3465,
											"modifierDepth": 5,
											"name": "tag",
											"source": 7,
											"value": "305"
										},
										{
											"begin": 3390,
											"end": 3465,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3483,
											"end": 3498,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3499,
											"end": 3511,
											"modifierDepth": 5,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3483,
											"end": 3512,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3483,
											"end": 3512,
											"modifierDepth": 5,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3483,
											"end": 3512,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 3483,
											"end": 3512,
											"modifierDepth": 5,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3483,
											"end": 3512,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3483,
											"end": 3512,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 3483,
											"end": 3512,
											"jumpType": "[in]",
											"modifierDepth": 5,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3483,
											"end": 3512,
											"modifierDepth": 5,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 3483,
											"end": 3512,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3483,
											"end": 3512,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3483,
											"end": 3512,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3483,
											"end": 3512,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3483,
											"end": 3512,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3483,
											"end": 3512,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3483,
											"end": 3512,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3483,
											"end": 3512,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3483,
											"end": 3512,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3483,
											"end": 3512,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3483,
											"end": 3512,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3483,
											"end": 3512,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3483,
											"end": 3512,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3483,
											"end": 3512,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3483,
											"end": 3512,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3483,
											"end": 3512,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3483,
											"end": 3512,
											"modifierDepth": 5,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3537,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 3475,
											"end": 3537,
											"modifierDepth": 5,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3537,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3475,
											"end": 3537,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3475,
											"end": 3537,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3537,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 18866,
											"end": 18868,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3475,
											"end": 3537,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3475,
											"end": 3537,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3475,
											"end": 3537,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 18848,
											"end": 18869,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18905,
											"end": 18907,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 18885,
											"end": 18903,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 18885,
											"end": 18903,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18885,
											"end": 18903,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18878,
											"end": 18908,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "155B9CDD5C1C1BDC9D1959081052481B5BD9195B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18924,
											"end": 18942,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 18924,
											"end": 18942,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18924,
											"end": 18942,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18917,
											"end": 18967,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18984,
											"end": 19002,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 18984,
											"end": 19002,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3475,
											"end": 3537,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 18664,
											"end": 19008,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3475,
											"end": 3537,
											"modifierDepth": 5,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 3475,
											"end": 3537,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3576,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3556,
											"end": 3576,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3576,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3576,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3564,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 3556,
											"end": 3576,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3556,
											"end": 3576,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3576,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3556,
											"end": 3576,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3576,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3583,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3556,
											"end": 3583,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3583,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3556,
											"end": 3583,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3583,
											"modifierDepth": 5,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 3556,
											"end": 3583,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3556,
											"end": 3583,
											"modifierDepth": 5,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3555,
											"end": 3583,
											"modifierDepth": 5,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3547,
											"end": 3608,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 3547,
											"end": 3608,
											"modifierDepth": 5,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3547,
											"end": 3608,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3547,
											"end": 3608,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3547,
											"end": 3608,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3547,
											"end": 3608,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19215,
											"end": 19217,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3547,
											"end": 3608,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3547,
											"end": 3608,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3547,
											"end": 3608,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19197,
											"end": 19218,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19254,
											"end": 19256,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 19234,
											"end": 19252,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 19234,
											"end": 19252,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19234,
											"end": 19252,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19227,
											"end": 19257,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "53636F726520616C726561647920657869737473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19273,
											"end": 19291,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 19273,
											"end": 19291,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19273,
											"end": 19291,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19266,
											"end": 19316,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19333,
											"end": 19351,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 19333,
											"end": 19351,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3547,
											"end": 3608,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 19013,
											"end": 19357,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3547,
											"end": 3608,
											"modifierDepth": 5,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 3547,
											"end": 3608,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3713,
											"end": 3716,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3685,
											"end": 3694,
											"modifierDepth": 5,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3709,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3685,
											"end": 3709,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3709,
											"modifierDepth": 5,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3716,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3685,
											"end": 3716,
											"modifierDepth": 5,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3716,
											"modifierDepth": 5,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3716,
											"modifierDepth": 5,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3765,
											"modifierDepth": 5,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3765,
											"modifierDepth": 5,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3765,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 3685,
											"end": 3765,
											"modifierDepth": 5,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3765,
											"modifierDepth": 5,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3762,
											"end": 3765,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3732,
											"end": 3741,
											"modifierDepth": 5,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3732,
											"end": 3758,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3732,
											"end": 3758,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3732,
											"end": 3758,
											"modifierDepth": 5,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3732,
											"end": 3765,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3732,
											"end": 3765,
											"modifierDepth": 5,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3732,
											"end": 3765,
											"modifierDepth": 5,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3732,
											"end": 3765,
											"modifierDepth": 5,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3765,
											"modifierDepth": 5,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 3685,
											"end": 3765,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3807,
											"modifierDepth": 5,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3807,
											"modifierDepth": 5,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3807,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 3685,
											"end": 3807,
											"modifierDepth": 5,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3807,
											"modifierDepth": 5,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3804,
											"end": 3807,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3781,
											"end": 3790,
											"modifierDepth": 5,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3781,
											"end": 3800,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3781,
											"end": 3800,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3781,
											"end": 3800,
											"modifierDepth": 5,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3781,
											"end": 3807,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3781,
											"end": 3807,
											"modifierDepth": 5,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3781,
											"end": 3807,
											"modifierDepth": 5,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3781,
											"end": 3807,
											"modifierDepth": 5,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3807,
											"modifierDepth": 5,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 3685,
											"end": 3807,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3849,
											"modifierDepth": 5,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3849,
											"modifierDepth": 5,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3849,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 3685,
											"end": 3849,
											"modifierDepth": 5,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3849,
											"modifierDepth": 5,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3846,
											"end": 3849,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3823,
											"end": 3832,
											"modifierDepth": 5,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3823,
											"end": 3842,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3823,
											"end": 3842,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3823,
											"end": 3842,
											"modifierDepth": 5,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3823,
											"end": 3849,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3823,
											"end": 3849,
											"modifierDepth": 5,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3823,
											"end": 3849,
											"modifierDepth": 5,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3823,
											"end": 3849,
											"modifierDepth": 5,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3849,
											"modifierDepth": 5,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 3685,
											"end": 3849,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3897,
											"modifierDepth": 5,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3897,
											"modifierDepth": 5,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3897,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 3685,
											"end": 3897,
											"modifierDepth": 5,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3897,
											"modifierDepth": 5,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3894,
											"end": 3897,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3865,
											"end": 3874,
											"modifierDepth": 5,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3865,
											"end": 3890,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 3865,
											"end": 3890,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3865,
											"end": 3890,
											"modifierDepth": 5,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 5,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 5,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 3865,
											"end": 3897,
											"modifierDepth": 5,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3685,
											"end": 3897,
											"modifierDepth": 5,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 3685,
											"end": 3897,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3664,
											"end": 3947,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 3664,
											"end": 3947,
											"modifierDepth": 5,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3664,
											"end": 3947,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3664,
											"end": 3947,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3664,
											"end": 3947,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3664,
											"end": 3947,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 19564,
											"end": 19566,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3664,
											"end": 3947,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3664,
											"end": 3947,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3664,
											"end": 3947,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 19546,
											"end": 19567,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19603,
											"end": 19605,
											"name": "PUSH",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 19583,
											"end": 19601,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 19583,
											"end": 19601,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19583,
											"end": 19601,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19576,
											"end": 19606,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19642,
											"end": 19668,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C696420627265616B646F776E2073636F7265730000000000000000"
										},
										{
											"begin": 19622,
											"end": 19640,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 19622,
											"end": 19640,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19622,
											"end": 19640,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19615,
											"end": 19669,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19686,
											"end": 19704,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 19686,
											"end": 19704,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3664,
											"end": 3947,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 19362,
											"end": 19710,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3664,
											"end": 3947,
											"modifierDepth": 5,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 3664,
											"end": 3947,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4315,
											"end": 4329,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 4315,
											"end": 4340,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4287,
											"end": 4312,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4287,
											"end": 4312,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4287,
											"end": 4312,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4287,
											"end": 4312,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3958,
											"end": 3981,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3958,
											"end": 3981,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4354,
											"end": 4357,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4354,
											"end": 4357,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4287,
											"end": 4340,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 4287,
											"end": 4340,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4315,
											"end": 4340,
											"name": "PUSH",
											"source": 7,
											"value": "100000000"
										},
										{
											"begin": 4315,
											"end": 4340,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4315,
											"end": 4340,
											"modifierDepth": 5,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4315,
											"end": 4340,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4315,
											"end": 4340,
											"modifierDepth": 5,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4315,
											"end": 4340,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4287,
											"end": 4340,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 4287,
											"end": 4340,
											"jumpType": "[in]",
											"modifierDepth": 5,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4287,
											"end": 4340,
											"modifierDepth": 5,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 4287,
											"end": 4340,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4241,
											"end": 4255,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 4241,
											"end": 4270,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4219,
											"end": 4238,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4219,
											"end": 4238,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4219,
											"end": 4238,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4219,
											"end": 4238,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4219,
											"end": 4270,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 4219,
											"end": 4270,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4241,
											"end": 4270,
											"name": "PUSH",
											"source": 7,
											"value": "1000000"
										},
										{
											"begin": 4241,
											"end": 4270,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4241,
											"end": 4270,
											"modifierDepth": 5,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4241,
											"end": 4270,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4241,
											"end": 4270,
											"modifierDepth": 5,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4241,
											"end": 4270,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4219,
											"end": 4270,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 4219,
											"end": 4270,
											"jumpType": "[in]",
											"modifierDepth": 5,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4219,
											"end": 4270,
											"modifierDepth": 5,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 4219,
											"end": 4270,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4173,
											"end": 4187,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 4173,
											"end": 4202,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4151,
											"end": 4170,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4151,
											"end": 4170,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 4151,
											"end": 4170,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4151,
											"end": 4170,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4151,
											"end": 4202,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 4151,
											"end": 4202,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4173,
											"end": 4202,
											"name": "PUSH",
											"source": 7,
											"value": "10000"
										},
										{
											"begin": 4173,
											"end": 4202,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4173,
											"end": 4202,
											"modifierDepth": 5,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4173,
											"end": 4202,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4173,
											"end": 4202,
											"modifierDepth": 5,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4173,
											"end": 4202,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4151,
											"end": 4202,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 4151,
											"end": 4202,
											"jumpType": "[in]",
											"modifierDepth": 5,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4151,
											"end": 4202,
											"modifierDepth": 5,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 4151,
											"end": 4202,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4108,
											"end": 4122,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 4108,
											"end": 4134,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4079,
											"end": 4105,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4079,
											"end": 4105,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 4079,
											"end": 4105,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4079,
											"end": 4105,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4079,
											"end": 4134,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 4079,
											"end": 4134,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4108,
											"end": 4134,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4108,
											"end": 4134,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4108,
											"end": 4134,
											"modifierDepth": 5,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 4108,
											"end": 4134,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4108,
											"end": 4134,
											"modifierDepth": 5,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4108,
											"end": 4134,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4079,
											"end": 4134,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 4079,
											"end": 4134,
											"jumpType": "[in]",
											"modifierDepth": 5,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4079,
											"end": 4134,
											"modifierDepth": 5,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 4079,
											"end": 4134,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4040,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 4026,
											"end": 4062,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3999,
											"end": 4023,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 3999,
											"end": 4023,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3999,
											"end": 4062,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 3999,
											"end": 4062,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4062,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4026,
											"end": 4062,
											"modifierDepth": 5,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4026,
											"end": 4062,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3999,
											"end": 4062,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 3999,
											"end": 4062,
											"jumpType": "[in]",
											"modifierDepth": 5,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3999,
											"end": 4062,
											"modifierDepth": 5,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 3999,
											"end": 4062,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4135,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 3998,
											"end": 4135,
											"modifierDepth": 5,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4135,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4135,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 3998,
											"end": 4135,
											"jumpType": "[in]",
											"modifierDepth": 5,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4135,
											"modifierDepth": 5,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 3998,
											"end": 4135,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4203,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 3998,
											"end": 4203,
											"modifierDepth": 5,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4203,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4203,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 3998,
											"end": 4203,
											"jumpType": "[in]",
											"modifierDepth": 5,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4203,
											"modifierDepth": 5,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 3998,
											"end": 4203,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4271,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 3998,
											"end": 4271,
											"modifierDepth": 5,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4271,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4271,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 3998,
											"end": 4271,
											"jumpType": "[in]",
											"modifierDepth": 5,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4271,
											"modifierDepth": 5,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 3998,
											"end": 4271,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4341,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 3998,
											"end": 4341,
											"modifierDepth": 5,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4341,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4341,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 3998,
											"end": 4341,
											"jumpType": "[in]",
											"modifierDepth": 5,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3998,
											"end": 4341,
											"modifierDepth": 5,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 3998,
											"end": 4341,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4357,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 3984,
											"end": 4357,
											"modifierDepth": 5,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4357,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4357,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 3984,
											"end": 4357,
											"jumpType": "[in]",
											"modifierDepth": 5,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 4357,
											"modifierDepth": 5,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 3984,
											"end": 4357,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3958,
											"end": 4357,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 3958,
											"end": 4357,
											"modifierDepth": 5,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3958,
											"end": 4357,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4405,
											"end": 4424,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 4423,
											"end": 4424,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 3958,
											"end": 4357,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4405,
											"end": 4424,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 4405,
											"end": 4424,
											"jumpType": "[in]",
											"modifierDepth": 5,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4405,
											"end": 4424,
											"modifierDepth": 5,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 4405,
											"end": 4424,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4389,
											"end": 4401,
											"modifierDepth": 5,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4389,
											"end": 4424,
											"modifierDepth": 5,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 4389,
											"end": 4424,
											"modifierDepth": 5,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4389,
											"end": 4463,
											"modifierDepth": 5,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4389,
											"end": 4463,
											"modifierDepth": 5,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4389,
											"end": 4463,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 4389,
											"end": 4463,
											"modifierDepth": 5,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4444,
											"end": 4463,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 4444,
											"end": 4459,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4462,
											"end": 4463,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4444,
											"end": 4463,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 4444,
											"end": 4463,
											"jumpType": "[in]",
											"modifierDepth": 5,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4444,
											"end": 4463,
											"modifierDepth": 5,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 4444,
											"end": 4463,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4428,
											"end": 4440,
											"modifierDepth": 5,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 4428,
											"end": 4463,
											"modifierDepth": 5,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4428,
											"end": 4463,
											"modifierDepth": 5,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4389,
											"end": 4463,
											"modifierDepth": 5,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 4389,
											"end": 4463,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4368,
											"end": 4522,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 4368,
											"end": 4522,
											"modifierDepth": 5,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4368,
											"end": 4522,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4368,
											"end": 4522,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4368,
											"end": 4522,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4368,
											"end": 4522,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 20700,
											"end": 20702,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4368,
											"end": 4522,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4368,
											"end": 4522,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4368,
											"end": 4522,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 20682,
											"end": 20703,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20739,
											"end": 20741,
											"name": "PUSH",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 20719,
											"end": 20737,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 20719,
											"end": 20737,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20719,
											"end": 20737,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20712,
											"end": 20742,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20778,
											"end": 20812,
											"name": "PUSH",
											"source": 10,
											"value": "53636F726520696E636F6E73697374656E74207769746820627265616B646F77"
										},
										{
											"begin": 20758,
											"end": 20776,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 20758,
											"end": 20776,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20758,
											"end": 20776,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20751,
											"end": 20813,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "37"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20829,
											"end": 20847,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 20829,
											"end": 20847,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20829,
											"end": 20847,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20822,
											"end": 20853,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20870,
											"end": 20889,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 20870,
											"end": 20889,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4368,
											"end": 4522,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 20498,
											"end": 20895,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4368,
											"end": 4522,
											"modifierDepth": 5,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 4368,
											"end": 4522,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4759,
											"end": 4774,
											"modifierDepth": 5,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4796,
											"end": 4806,
											"modifierDepth": 5,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4828,
											"end": 4832,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4533,
											"end": 4553,
											"name": "DUP15",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4553,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4553,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4541,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4533,
											"end": 4553,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4553,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4553,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4553,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4553,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4553,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4553,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4556,
											"end": 4877,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4553,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 4533,
											"end": 4877,
											"jumpType": "[in]",
											"modifierDepth": 5,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "tag",
											"source": 7,
											"value": "343"
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "246"
										},
										{
											"begin": 4533,
											"end": 4877,
											"jumpType": "[in]",
											"modifierDepth": 5,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "tag",
											"source": 7,
											"value": "344"
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "PUSH",
											"source": 7,
											"value": "100000000"
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "PUSH",
											"source": 7,
											"value": "1000000"
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "PUSH",
											"source": 7,
											"value": "10000"
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFF0000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4896,
											"end": 4916,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4896,
											"end": 4918,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4896,
											"end": 4918,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4896,
											"end": 4918,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4533,
											"end": 4877,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4896,
											"end": 4918,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 4896,
											"end": 4918,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4896,
											"end": 4918,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 4896,
											"end": 4918,
											"jumpType": "[in]",
											"modifierDepth": 5,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4896,
											"end": 4918,
											"modifierDepth": 5,
											"name": "tag",
											"source": 7,
											"value": "345"
										},
										{
											"begin": 4896,
											"end": 4918,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4896,
											"end": 4918,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4896,
											"end": 4918,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4896,
											"end": 4918,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4945,
											"end": 4955,
											"modifierDepth": 5,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4928,
											"end": 4956,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4928,
											"end": 4956,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4928,
											"end": 4956,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4928,
											"end": 4956,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4928,
											"end": 4944,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 4928,
											"end": 4956,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4928,
											"end": 4956,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4928,
											"end": 4956,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4928,
											"end": 4956,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4928,
											"end": 4956,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 4928,
											"end": 4958,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4928,
											"end": 4958,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 4928,
											"end": 4958,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4928,
											"end": 4958,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 4928,
											"end": 4958,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4928,
											"end": 4958,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 4928,
											"end": 4958,
											"jumpType": "[in]",
											"modifierDepth": 5,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4928,
											"end": 4958,
											"modifierDepth": 5,
											"name": "tag",
											"source": 7,
											"value": "346"
										},
										{
											"begin": 4928,
											"end": 4958,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4928,
											"end": 4958,
											"modifierDepth": 5,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4928,
											"end": 4958,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4928,
											"end": 4958,
											"modifierDepth": 5,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4928,
											"end": 4958,
											"modifierDepth": 5,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4928,
											"end": 4958,
											"modifierDepth": 5,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5119,
											"end": 5129,
											"modifierDepth": 5,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4982,
											"end": 5168,
											"modifierDepth": 5,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5012,
											"end": 5022,
											"modifierDepth": 5,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 4982,
											"end": 5168,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "9E8AD66E4736435405704D301D344E9454F286D3FEEB2036B1ADC6F4900CCBC"
										},
										{
											"begin": 5036,
											"end": 5048,
											"modifierDepth": 5,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 5062,
											"end": 5079,
											"modifierDepth": 5,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 5093,
											"end": 5105,
											"modifierDepth": 5,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 5143,
											"end": 5158,
											"modifierDepth": 5,
											"name": "TIMESTAMP",
											"source": 7
										},
										{
											"begin": 4982,
											"end": 5168,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4982,
											"end": 5168,
											"modifierDepth": 5,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4982,
											"end": 5168,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 4982,
											"end": 5168,
											"modifierDepth": 5,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 4982,
											"end": 5168,
											"modifierDepth": 5,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4982,
											"end": 5168,
											"modifierDepth": 5,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4982,
											"end": 5168,
											"modifierDepth": 5,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4982,
											"end": 5168,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4982,
											"end": 5168,
											"modifierDepth": 5,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "348"
										},
										{
											"begin": 4982,
											"end": 5168,
											"jumpType": "[in]",
											"modifierDepth": 5,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4982,
											"end": 5168,
											"modifierDepth": 5,
											"name": "tag",
											"source": 7,
											"value": "347"
										},
										{
											"begin": 4982,
											"end": 5168,
											"modifierDepth": 5,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4982,
											"end": 5168,
											"modifierDepth": 5,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4982,
											"end": 5168,
											"modifierDepth": 5,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4982,
											"end": 5168,
											"modifierDepth": 5,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4982,
											"end": 5168,
											"modifierDepth": 5,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4982,
											"end": 5168,
											"modifierDepth": 5,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4982,
											"end": 5168,
											"modifierDepth": 5,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4982,
											"end": 5168,
											"modifierDepth": 5,
											"name": "LOG3",
											"source": 7
										},
										{
											"begin": 3380,
											"end": 5175,
											"modifierDepth": 5,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 4,
											"name": "tag",
											"source": 3,
											"value": "349"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2136,
											"end": 2137,
											"modifierDepth": 2,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1867,
											"end": 1868,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3054,
											"end": 5175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3054,
											"end": 5175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3054,
											"end": 5175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3054,
											"end": 5175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3054,
											"end": 5175,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3054,
											"end": 5175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10632,
											"end": 10704,
											"name": "tag",
											"source": 7,
											"value": "127"
										},
										{
											"begin": 10632,
											"end": 10704,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10689,
											"end": 10697,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "265"
										},
										{
											"begin": 10689,
											"end": 10695,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "355"
										},
										{
											"begin": 10689,
											"end": 10697,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 960,
											"end": 1179,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 960,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1173,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 1077,
											"end": 1173,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1106,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1113,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1098,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1113,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1173,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1173,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 1077,
											"end": 1173,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1134,
											"end": 1162,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 1144,
											"end": 1149,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1151,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 1144,
											"end": 1152,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1154,
											"end": 1161,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1134,
											"end": 1143,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 1134,
											"end": 1162,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1134,
											"end": 1162,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "362"
										},
										{
											"begin": 1134,
											"end": 1162,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1115,
											"end": 1118,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1115,
											"end": 1118,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 1115,
											"end": 1118,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1115,
											"end": 1118,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 1115,
											"end": 1118,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1115,
											"end": 1118,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 1115,
											"end": 1118,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1115,
											"end": 1118,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1115,
											"end": 1118,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1115,
											"end": 1118,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1173,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "359"
										},
										{
											"begin": 1077,
											"end": 1173,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2911,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7901,
											"end": 8065,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 7901,
											"end": 8065,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8001,
											"end": 8012,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7980,
											"end": 7990,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2101,
											"end": 2102,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2088,
											"end": 2098,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2088,
											"end": 2102,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 2080,
											"end": 2126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "tag",
											"source": 7,
											"value": "368"
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8031,
											"end": 8051,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8031,
											"end": 8051,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8031,
											"end": 8051,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8031,
											"end": 8051,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8031,
											"end": 8039,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 8031,
											"end": 8051,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8031,
											"end": 8051,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8031,
											"end": 8051,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8031,
											"end": 8051,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8031,
											"end": 8051,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8031,
											"end": 8058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 8031,
											"end": 8058,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8031,
											"end": 8058,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8031,
											"end": 8058,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8031,
											"end": 8058,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 8031,
											"end": 8058,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 8031,
											"end": 8058,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8031,
											"end": 8058,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2136,
											"end": 2137,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "370"
										},
										{
											"begin": 2136,
											"end": 2137,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 8065,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 8065,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 8065,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 8065,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7901,
											"end": 8065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2250,
											"end": 2610,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 2250,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2312,
											"end": 2329,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2341,
											"end": 2366,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 2369,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 2369,
											"end": 2382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2341,
											"end": 2382,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2341,
											"end": 2382,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2392,
											"end": 2405,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2433,
											"end": 2442,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2428,
											"end": 2573,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 2428,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2452,
											"end": 2460,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2452,
											"end": 2467,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2448,
											"end": 2449,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2448,
											"end": 2467,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2428,
											"end": 2573,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2428,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 2428,
											"end": 2573,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2492,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 2500,
											"end": 2508,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2509,
											"end": 2510,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 2500,
											"end": 2511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2513,
											"end": 2520,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2492,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 2492,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2492,
											"end": 2521,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 2492,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2488,
											"end": 2563,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2488,
											"end": 2563,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 2488,
											"end": 2563,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 2541,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2488,
											"end": 2563,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 2488,
											"end": 2563,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2472,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 2469,
											"end": 2472,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 2469,
											"end": 2472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2472,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 2469,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2472,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2472,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2472,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2428,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 2428,
											"end": 2573,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2428,
											"end": 2573,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 2428,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2598,
											"end": 2603,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2250,
											"end": 2610,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2250,
											"end": 2610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10249,
											"end": 10626,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 10249,
											"end": 10626,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "383"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10368,
											"end": 10388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10368,
											"end": 10388,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10368,
											"end": 10388,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10368,
											"end": 10388,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10368,
											"end": 10376,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 10368,
											"end": 10388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10368,
											"end": 10388,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10368,
											"end": 10388,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10368,
											"end": 10388,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10368,
											"end": 10388,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 10368,
											"end": 10395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 10368,
											"end": 10395,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10368,
											"end": 10395,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10368,
											"end": 10395,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10368,
											"end": 10395,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 10368,
											"end": 10395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 10368,
											"end": 10395,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10360,
											"end": 10420,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 10360,
											"end": 10420,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10360,
											"end": 10420,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10360,
											"end": 10420,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10360,
											"end": 10420,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10360,
											"end": 10420,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10360,
											"end": 10420,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10360,
											"end": 10420,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10360,
											"end": 10420,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 10360,
											"end": 10420,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10360,
											"end": 10420,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 10360,
											"end": 10420,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10360,
											"end": 10420,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 10360,
											"end": 10420,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10461,
											"end": 10462,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10444,
											"end": 10450,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10438,
											"end": 10458,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10438,
											"end": 10462,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 10430,
											"end": 10482,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 10430,
											"end": 10482,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10430,
											"end": 10482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10430,
											"end": 10482,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10430,
											"end": 10482,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10430,
											"end": 10482,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 21634,
											"end": 21636,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10430,
											"end": 10482,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10430,
											"end": 10482,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10430,
											"end": 10482,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 21616,
											"end": 21637,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21673,
											"end": 21675,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 21653,
											"end": 21671,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 21653,
											"end": 21671,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21653,
											"end": 21671,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21646,
											"end": 21676,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1499585CDBDB881C995C5D5A5C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21692,
											"end": 21710,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 21692,
											"end": 21710,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21692,
											"end": 21710,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21685,
											"end": 21730,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21747,
											"end": 21765,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 21747,
											"end": 21765,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10430,
											"end": 10482,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 21432,
											"end": 21771,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10430,
											"end": 10482,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 10430,
											"end": 10482,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10508,
											"end": 10528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10508,
											"end": 10528,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10508,
											"end": 10528,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10508,
											"end": 10528,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10508,
											"end": 10516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 10508,
											"end": 10528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10508,
											"end": 10528,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10508,
											"end": 10528,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10508,
											"end": 10528,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10508,
											"end": 10528,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10528,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10528,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10528,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 10501,
											"end": 10528,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10528,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10528,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10528,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 10508,
											"end": 10528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10528,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 10501,
											"end": 10528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 10501,
											"end": 10528,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10528,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10508,
											"end": 10528,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10528,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 10501,
											"end": 10528,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10528,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 10501,
											"end": 10528,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10528,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 10501,
											"end": 10528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 10501,
											"end": 10528,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10528,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10501,
											"end": 10528,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 10501,
											"end": 10528,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10528,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 10501,
											"end": 10528,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10501,
											"end": 10528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10501,
											"end": 10528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10501,
											"end": 10528,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10528,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10528,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10528,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 10501,
											"end": 10528,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10528,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10528,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10528,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10501,
											"end": 10528,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10528,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10528,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 10501,
											"end": 10528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10528,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10528,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10528,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10528,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10501,
											"end": 10528,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10528,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 10538,
											"end": 10558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 10538,
											"end": 10560,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10538,
											"end": 10560,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10538,
											"end": 10560,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10538,
											"end": 10560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 10538,
											"end": 10560,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10538,
											"end": 10560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 10538,
											"end": 10560,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10538,
											"end": 10560,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 10538,
											"end": 10560,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10538,
											"end": 10560,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10538,
											"end": 10560,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10538,
											"end": 10560,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10538,
											"end": 10560,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 10538,
											"end": 10560,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10597,
											"end": 10607,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10584,
											"end": 10619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "D3E8DBBE8FF60A1FAE1E5F88E71F27270ED38BADC7B26E19922ED94FD12F5FE9"
										},
										{
											"begin": 10609,
											"end": 10610,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10612,
											"end": 10618,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10584,
											"end": 10619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10584,
											"end": 10619,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10584,
											"end": 10619,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 10584,
											"end": 10619,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10584,
											"end": 10619,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10584,
											"end": 10619,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10584,
											"end": 10619,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 10584,
											"end": 10619,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10584,
											"end": 10619,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 10584,
											"end": 10619,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10584,
											"end": 10619,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10584,
											"end": 10619,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10584,
											"end": 10619,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10584,
											"end": 10619,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10584,
											"end": 10619,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10584,
											"end": 10619,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10584,
											"end": 10619,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 7
										},
										{
											"begin": 10249,
											"end": 10626,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10249,
											"end": 10626,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10249,
											"end": 10626,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10249,
											"end": 10626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9209,
											"end": 9496,
											"name": "tag",
											"source": 7,
											"value": "159"
										},
										{
											"begin": 9209,
											"end": 9496,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9357,
											"end": 9358,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9334,
											"end": 9346,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9328,
											"end": 9354,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9328,
											"end": 9358,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9320,
											"end": 9384,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 9320,
											"end": 9384,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9320,
											"end": 9384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9320,
											"end": 9384,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9320,
											"end": 9384,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9320,
											"end": 9384,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 22423,
											"end": 22425,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9320,
											"end": 9384,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9320,
											"end": 9384,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9320,
											"end": 9384,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 22405,
											"end": 22426,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22462,
											"end": 22464,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 22442,
											"end": 22460,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 22442,
											"end": 22460,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22442,
											"end": 22460,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22435,
											"end": 22465,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "24B73B30B634B21036B7B232B6103B32B939B4B7B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "59"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 22481,
											"end": 22499,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 22481,
											"end": 22499,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22481,
											"end": 22499,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22474,
											"end": 22525,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22542,
											"end": 22560,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 22542,
											"end": 22560,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9320,
											"end": 9384,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 22221,
											"end": 22566,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9320,
											"end": 9384,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 9320,
											"end": 9384,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9426,
											"end": 9435,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9409,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 9410,
											"end": 9422,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9394,
											"end": 9423,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9423,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 9394,
											"end": 9423,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9423,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9423,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 9394,
											"end": 9423,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9423,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 9394,
											"end": 9423,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9423,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9423,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9423,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9394,
											"end": 9423,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9423,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9423,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9423,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9423,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9423,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9394,
											"end": 9423,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9423,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9423,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9435,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9435,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9435,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9435,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9435,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 9394,
											"end": 9435,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9435,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9435,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9435,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9435,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9435,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9435,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9435,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9435,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9394,
											"end": 9435,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 9450,
											"end": 9489,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2E5180543742ECE2DB44ED70B2619F2BF555A29A7BDEAD994736174F0D90A9B6"
										},
										{
											"begin": 9450,
											"end": 9489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9450,
											"end": 9489,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 9450,
											"end": 9489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9465,
											"end": 9477,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9465,
											"end": 9477,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9479,
											"end": 9488,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9479,
											"end": 9488,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9450,
											"end": 9489,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 9450,
											"end": 9489,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9450,
											"end": 9489,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 9450,
											"end": 9489,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9450,
											"end": 9489,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9450,
											"end": 9489,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9450,
											"end": 9489,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9450,
											"end": 9489,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9450,
											"end": 9489,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9450,
											"end": 9489,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9450,
											"end": 9489,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 9209,
											"end": 9496,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9209,
											"end": 9496,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9209,
											"end": 9496,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9209,
											"end": 9496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7484,
											"end": 7743,
											"name": "tag",
											"source": 7,
											"value": "173"
										},
										{
											"begin": 7484,
											"end": 7743,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7563,
											"end": 7573,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2101,
											"end": 2102,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2088,
											"end": 2098,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2088,
											"end": 2102,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 2080,
											"end": 2126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7637,
											"end": 7657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7637,
											"end": 7657,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7637,
											"end": 7657,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7637,
											"end": 7657,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7637,
											"end": 7645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7637,
											"end": 7657,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7637,
											"end": 7657,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7637,
											"end": 7657,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7637,
											"end": 7657,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7637,
											"end": 7657,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7637,
											"end": 7664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 7637,
											"end": 7664,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7637,
											"end": 7664,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7637,
											"end": 7664,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7637,
											"end": 7664,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7637,
											"end": 7664,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 7637,
											"end": 7664,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7629,
											"end": 7689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 7629,
											"end": 7689,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7629,
											"end": 7689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7629,
											"end": 7689,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7629,
											"end": 7689,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7629,
											"end": 7689,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7629,
											"end": 7689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7629,
											"end": 7689,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7629,
											"end": 7689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 7629,
											"end": 7689,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7629,
											"end": 7689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 7629,
											"end": 7689,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7629,
											"end": 7689,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 7629,
											"end": 7689,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7706,
											"end": 7726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7706,
											"end": 7726,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7706,
											"end": 7726,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7706,
											"end": 7726,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7706,
											"end": 7714,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7706,
											"end": 7726,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7706,
											"end": 7726,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7706,
											"end": 7726,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7706,
											"end": 7726,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7706,
											"end": 7726,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7706,
											"end": 7726,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7706,
											"end": 7726,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7706,
											"end": 7726,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7706,
											"end": 7726,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7706,
											"end": 7736,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 7706,
											"end": 7736,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7706,
											"end": 7736,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7706,
											"end": 7736,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "PUSH",
											"source": 7,
											"value": "10000"
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "PUSH",
											"source": 7,
											"value": "1000000"
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "PUSH",
											"source": 7,
											"value": "100000000"
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7699,
											"end": 7736,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7484,
											"end": 7743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "417"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 4735,
											"end": 4739,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4741,
											"end": 4748,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 4723,
											"end": 4749,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8611,
											"end": 9043,
											"name": "tag",
											"source": 7,
											"value": "182"
										},
										{
											"begin": 8611,
											"end": 9043,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8724,
											"end": 8744,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8724,
											"end": 8744,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8716,
											"end": 8771,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 8716,
											"end": 8771,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8716,
											"end": 8771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8716,
											"end": 8771,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8716,
											"end": 8771,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8716,
											"end": 8771,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 23079,
											"end": 23081,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8716,
											"end": 8771,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8716,
											"end": 8771,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8716,
											"end": 8771,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23061,
											"end": 23082,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23118,
											"end": 23120,
											"name": "PUSH",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 23098,
											"end": 23116,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 23098,
											"end": 23116,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23098,
											"end": 23116,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23091,
											"end": 23121,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C6964206F7261636C652061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23137,
											"end": 23155,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 23137,
											"end": 23155,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23137,
											"end": 23155,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23130,
											"end": 23182,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23199,
											"end": 23217,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 23199,
											"end": 23217,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8716,
											"end": 8771,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 22877,
											"end": 23223,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8716,
											"end": 8771,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 8716,
											"end": 8771,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8781,
											"end": 8806,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8781,
											"end": 8806,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8781,
											"end": 8806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8781,
											"end": 8806,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8781,
											"end": 8806,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8781,
											"end": 8806,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8781,
											"end": 8798,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8781,
											"end": 8806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8781,
											"end": 8806,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8781,
											"end": 8806,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8781,
											"end": 8806,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8781,
											"end": 8806,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 8781,
											"end": 8819,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8781,
											"end": 8819,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8781,
											"end": 8819,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8781,
											"end": 8819,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8781,
											"end": 8819,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8781,
											"end": 8819,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8781,
											"end": 8819,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8781,
											"end": 8819,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8781,
											"end": 8819,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8781,
											"end": 8819,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8781,
											"end": 8819,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 8781,
											"end": 8819,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8781,
											"end": 8819,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8781,
											"end": 8819,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 8838,
											"end": 8977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 8838,
											"end": 8977,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8868,
											"end": 8901,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "427"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "A33092EC2EA5E84579A4A7F81A8171C84A984183E655AB76A6EA5C0D5344C7B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8894,
											"end": 8900,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8868,
											"end": 8877,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "83"
										},
										{
											"begin": 8868,
											"end": 8901,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8868,
											"end": 8901,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 8868,
											"end": 8901,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8838,
											"end": 8977,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 8838,
											"end": 8977,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8838,
											"end": 8977,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 8838,
											"end": 8977,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8932,
											"end": 8966,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "429"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "A33092EC2EA5E84579A4A7F81A8171C84A984183E655AB76A6EA5C0D5344C7B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8959,
											"end": 8965,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8932,
											"end": 8942,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 8932,
											"end": 8966,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8932,
											"end": 8966,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 8932,
											"end": 8966,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9017,
											"end": 9023,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9000,
											"end": 9036,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9000,
											"end": 9036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "82A8FB1E779EA45AD427CC612E47087F5386A567E49DCE488185E40646FA48D5"
										},
										{
											"begin": 9025,
											"end": 9035,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9000,
											"end": 9036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9000,
											"end": 9036,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9000,
											"end": 9036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 9000,
											"end": 9036,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 566,
											"end": 580,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 559,
											"end": 581,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 541,
											"end": 582,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 541,
											"end": 582,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 529,
											"end": 531,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 514,
											"end": 532,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 514,
											"end": 532,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 401,
											"end": 588,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7087,
											"end": 7320,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 7087,
											"end": 7320,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7186,
											"end": 7204,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "431"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "80"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP6",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP7",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP8",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP5",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7186,
											"end": 7204,
											"name": "tag",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 7186,
											"end": 7204,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7165,
											"end": 7175,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2101,
											"end": 2102,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2088,
											"end": 2098,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2088,
											"end": 2102,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 2080,
											"end": 2126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "tag",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 2080,
											"end": 2126,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7224,
											"end": 7244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7224,
											"end": 7244,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7224,
											"end": 7244,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7224,
											"end": 7244,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7224,
											"end": 7232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7224,
											"end": 7244,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7224,
											"end": 7244,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7224,
											"end": 7244,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7224,
											"end": 7244,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7224,
											"end": 7244,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7224,
											"end": 7251,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 7224,
											"end": 7251,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7224,
											"end": 7251,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7224,
											"end": 7251,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7224,
											"end": 7251,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7224,
											"end": 7251,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 7224,
											"end": 7251,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7216,
											"end": 7276,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 7216,
											"end": 7276,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7216,
											"end": 7276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7216,
											"end": 7276,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7216,
											"end": 7276,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7216,
											"end": 7276,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7216,
											"end": 7276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7216,
											"end": 7276,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7216,
											"end": 7276,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 7216,
											"end": 7276,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7216,
											"end": 7276,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "233"
										},
										{
											"begin": 7216,
											"end": 7276,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7216,
											"end": 7276,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 7216,
											"end": 7276,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7293,
											"end": 7301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7293,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7302,
											"end": 7312,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7293,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7293,
											"end": 7313,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7293,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7293,
											"end": 7313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7293,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7293,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7293,
											"end": 7313,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7293,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7293,
											"end": 7313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7293,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7293,
											"end": 7313,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 7286,
											"end": 7313,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 7286,
											"end": 7313,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "440"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 7286,
											"end": 7313,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 7286,
											"end": 7313,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "PUSH",
											"source": 7,
											"value": "10000"
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "PUSH",
											"source": 7,
											"value": "1000000"
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "PUSH",
											"source": 7,
											"value": "100000000"
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7286,
											"end": 7313,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7087,
											"end": 7320,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7087,
											"end": 7320,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7087,
											"end": 7320,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7087,
											"end": 7320,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7087,
											"end": 7320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2824,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2767,
											"end": 2789,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2767,
											"end": 2789,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2801,
											"end": 2825,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2801,
											"end": 2825,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2846,
											"end": 2864,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 2864,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2840,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2841,
											"end": 2842,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 2835,
											"end": 2843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "tag",
											"source": 9,
											"value": "455"
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2864,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2864,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2864,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2864,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2864,
											"name": "POP",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2874,
											"end": 2879,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2880,
											"end": 2881,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 2874,
											"end": 2882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "tag",
											"source": 9,
											"value": "457"
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2895,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2895,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2895,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2895,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2895,
											"name": "POP",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "A33092EC2EA5E84579A4A7F81A8171C84A984183E655AB76A6EA5C0D5344C7B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2905,
											"end": 2910,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2911,
											"end": 2912,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 2905,
											"end": 2913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "tag",
											"source": 9,
											"value": "459"
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2930,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2930,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2930,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2930,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2930,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 494,
											"end": 528,
											"name": "PUSH",
											"source": 9,
											"value": "EDE9DCDB0CE99DC7CEC9C7BE9246AD08B37853683AD91569C187B647DDF5E21C"
										},
										{
											"begin": 2940,
											"end": 2945,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2946,
											"end": 2947,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 2940,
											"end": 2948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "tag",
											"source": 9,
											"value": "461"
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 2972,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 2972,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 2972,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 2972,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 2972,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 584,
											"end": 620,
											"name": "PUSH",
											"source": 9,
											"value": "58223CDFB69946630D837D40B5C366A584F0217ADA7FDDD8318F2E08603CFA22"
										},
										{
											"begin": 2982,
											"end": 2987,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 2989,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 2982,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "tag",
											"source": 9,
											"value": "463"
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3016,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3016,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3016,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3016,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3016,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 674,
											"end": 708,
											"name": "PUSH",
											"source": 9,
											"value": "7B8BB8356A3F32F5C111FF23F050D97F08988E0883529EA7BFF3B918887A6E0E"
										},
										{
											"begin": 3026,
											"end": 3031,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3032,
											"end": 3033,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 3026,
											"end": 3034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "tag",
											"source": 9,
											"value": "465"
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3058,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3058,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3058,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3058,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3058,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2723,
											"end": 3087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9609,
											"end": 10091,
											"name": "tag",
											"source": 7,
											"value": "198"
										},
										{
											"begin": 9609,
											"end": 10091,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "467"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9909,
											"end": 9931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 9909,
											"end": 9931,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9909,
											"end": 9931,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9909,
											"end": 9931,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9867,
											"end": 9893,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 9867,
											"end": 9893,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9867,
											"end": 9893,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9867,
											"end": 9893,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9825,
											"end": 9851,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9825,
											"end": 9851,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9825,
											"end": 9851,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9825,
											"end": 9851,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9786,
											"end": 9809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9786,
											"end": 9809,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9786,
											"end": 9809,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9786,
											"end": 9809,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9737,
											"end": 9770,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9737,
											"end": 9770,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9737,
											"end": 9809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 9737,
											"end": 9809,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9786,
											"end": 9809,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9737,
											"end": 9809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 9737,
											"end": 9809,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9737,
											"end": 9809,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 9737,
											"end": 9809,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9737,
											"end": 9851,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 9737,
											"end": 9851,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9737,
											"end": 9851,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9737,
											"end": 9851,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 9737,
											"end": 9851,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9737,
											"end": 9851,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 9737,
											"end": 9851,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9737,
											"end": 9893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 9737,
											"end": 9893,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9737,
											"end": 9893,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9737,
											"end": 9893,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 9737,
											"end": 9893,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9737,
											"end": 9893,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 9737,
											"end": 9893,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9737,
											"end": 9931,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 9737,
											"end": 9931,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9737,
											"end": 9931,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9737,
											"end": 9931,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 9737,
											"end": 9931,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9737,
											"end": 9931,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 9737,
											"end": 9931,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9737,
											"end": 9938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 9737,
											"end": 9938,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 9935,
											"end": 9938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 9737,
											"end": 9938,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 9716,
											"end": 9987,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 9716,
											"end": 9987,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9716,
											"end": 9987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9716,
											"end": 9987,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9716,
											"end": 9987,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9716,
											"end": 9987,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 23430,
											"end": 23432,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9716,
											"end": 9987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9716,
											"end": 9987,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9716,
											"end": 9987,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 23412,
											"end": 23433,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23469,
											"end": 23471,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 23449,
											"end": 23467,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 23449,
											"end": 23467,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23449,
											"end": 23467,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23442,
											"end": 23472,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23508,
											"end": 23533,
											"name": "PUSH",
											"source": 10,
											"value": "57656967687473206D7573742073756D20746F20313030000000000000000000"
										},
										{
											"begin": 23488,
											"end": 23506,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 23488,
											"end": 23506,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23488,
											"end": 23506,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23481,
											"end": 23534,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23551,
											"end": 23569,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 23551,
											"end": 23569,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9716,
											"end": 9987,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 23228,
											"end": 23575,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9716,
											"end": 9987,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 9716,
											"end": 9987,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10020,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "PUSH",
											"source": 7,
											"value": "100000000"
										},
										{
											"begin": 10006,
											"end": 10034,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF00000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "PUSH",
											"source": 7,
											"value": "1000000"
										},
										{
											"begin": 10006,
											"end": 10034,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF000000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "PUSH",
											"source": 7,
											"value": "10000"
										},
										{
											"begin": 10006,
											"end": 10034,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFF0000"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 10006,
											"end": 10034,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "SWAP10",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10006,
											"end": 10034,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 10049,
											"end": 10084,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10049,
											"end": 10084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "90565F56924446477768885E9B20CF4CB9D2183F2AD4313F3E90F1DCAEDCC0AE"
										},
										{
											"begin": 10049,
											"end": 10084,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10049,
											"end": 10084,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 10049,
											"end": 10084,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10023,
											"end": 10034,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 10023,
											"end": 10034,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10049,
											"end": 10084,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "175"
										},
										{
											"begin": 10049,
											"end": 10084,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10049,
											"end": 10084,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 10049,
											"end": 10084,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10049,
											"end": 10084,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10049,
											"end": 10084,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 10049,
											"end": 10084,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 10049,
											"end": 10084,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10049,
											"end": 10084,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10049,
											"end": 10084,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10049,
											"end": 10084,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 9609,
											"end": 10091,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9609,
											"end": 10091,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9609,
											"end": 10091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "481"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 24057,
											"end": 24059,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 24039,
											"end": 24060,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24096,
											"end": 24098,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 24076,
											"end": 24094,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 24076,
											"end": 24094,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24076,
											"end": 24094,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24069,
											"end": 24099,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 24115,
											"end": 24133,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 24115,
											"end": 24133,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24115,
											"end": 24133,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24108,
											"end": 24154,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24171,
											"end": 24189,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 24171,
											"end": 24189,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 23855,
											"end": 24195,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 2,
											"value": "481"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1767,
											"end": 1873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 3252,
											"end": 3256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 3241,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6232,
											"end": 6236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "489"
										},
										{
											"begin": 6261,
											"end": 6265,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6267,
											"end": 6274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6253,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6253,
											"end": 6275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "tag",
											"source": 0,
											"value": "489"
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "490"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6297,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6323,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "tag",
											"source": 0,
											"value": "491"
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6364,
											"end": 6371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6358,
											"end": 6362,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6407,
											"end": 6411,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "tag",
											"source": 0,
											"value": "490"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6449,
											"end": 6454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6786,
											"end": 6790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "495"
										},
										{
											"begin": 6814,
											"end": 6818,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 6827,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 6806,
											"end": 6828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "tag",
											"source": 0,
											"value": "495"
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "490"
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6876,
											"end": 6881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6876,
											"end": 6881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6961,
											"end": 6965,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "500"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "501"
										},
										{
											"begin": 1486,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 2,
											"value": "500"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2491,
											"end": 2506,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "503"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24364,
											"end": 24396,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24364,
											"end": 24396,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24364,
											"end": 24396,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 24346,
											"end": 24397,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24346,
											"end": 24397,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24334,
											"end": 24336,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24319,
											"end": 24337,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 3,
											"value": "303"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "507"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 24610,
											"end": 24612,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 24592,
											"end": 24613,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24649,
											"end": 24651,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 24629,
											"end": 24647,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 24629,
											"end": 24647,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24629,
											"end": 24647,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24622,
											"end": 24652,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24688,
											"end": 24721,
											"name": "PUSH",
											"source": 10,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 24668,
											"end": 24686,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 24668,
											"end": 24686,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24668,
											"end": 24686,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24661,
											"end": 24722,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24739,
											"end": 24757,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 24739,
											"end": 24757,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "205"
										},
										{
											"begin": 24408,
											"end": 24763,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 3,
											"value": "507"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 2,
											"value": "355"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "512"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 2,
											"value": "512"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2255,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "503"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "tag",
											"source": 0,
											"value": "487"
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "517"
										},
										{
											"begin": 3504,
											"end": 3508,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3517,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3496,
											"end": 3518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "tag",
											"source": 0,
											"value": "517"
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2517D3F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24960,
											"end": 24992,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24960,
											"end": 24992,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24942,
											"end": 24993,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 25009,
											"end": 25027,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 25009,
											"end": 25027,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25009,
											"end": 25027,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25002,
											"end": 25036,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25002,
											"end": 25036,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25002,
											"end": 25036,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24915,
											"end": 24933,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 24915,
											"end": 24933,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 24768,
											"end": 25042,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "tag",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 2,
											"value": "501"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "481"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 25249,
											"end": 25251,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 25231,
											"end": 25252,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 25288,
											"end": 25290,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 25268,
											"end": 25286,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 25268,
											"end": 25286,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25268,
											"end": 25286,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25261,
											"end": 25291,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25307,
											"end": 25325,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 25307,
											"end": 25325,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25307,
											"end": 25325,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25300,
											"end": 25350,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 25367,
											"end": 25385,
											"name": "PUSH",
											"source": 10,
											"value": "64"
										},
										{
											"begin": 25367,
											"end": 25385,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 25047,
											"end": 25391,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "391"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "526"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "209"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "526"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "528"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "528"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DIV",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "265"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "532"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "533"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "532"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "533"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "550"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 10,
											"value": "550"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 167,
											"end": 190,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 219,
											"end": 251,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 219,
											"end": 251,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 209,
											"end": 252,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 209,
											"end": 252,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 199,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 199,
											"end": 270,
											"name": "tag",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 593,
											"end": 773,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 593,
											"end": 773,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 652,
											"end": 658,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 705,
											"end": 707,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 693,
											"end": 702,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 684,
											"end": 691,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 680,
											"end": 703,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 676,
											"end": 708,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 673,
											"end": 725,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 673,
											"end": 725,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 673,
											"end": 725,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 721,
											"end": 722,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 718,
											"end": 719,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 711,
											"end": 723,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 673,
											"end": 725,
											"name": "tag",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 673,
											"end": 725,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 744,
											"end": 767,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 744,
											"end": 767,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 593,
											"end": 773,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 593,
											"end": 773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 778,
											"end": 1028,
											"name": "tag",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 778,
											"end": 1028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 863,
											"end": 864,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 873,
											"end": 986,
											"name": "tag",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 873,
											"end": 986,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 887,
											"end": 893,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 884,
											"end": 885,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 881,
											"end": 894,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 873,
											"end": 986,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 873,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 873,
											"end": 986,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 963,
											"end": 974,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 963,
											"end": 974,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 963,
											"end": 974,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 957,
											"end": 975,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 944,
											"end": 955,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 944,
											"end": 955,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 944,
											"end": 955,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 937,
											"end": 976,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 909,
											"end": 911,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 902,
											"end": 912,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 873,
											"end": 986,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 873,
											"end": 986,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 873,
											"end": 986,
											"name": "tag",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 873,
											"end": 986,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1020,
											"end": 1021,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1002,
											"end": 1018,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1002,
											"end": 1018,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 778,
											"end": 1028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 1304,
											"name": "tag",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 1033,
											"end": 1304,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1075,
											"end": 1078,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1113,
											"end": 1118,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1107,
											"end": 1119,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1140,
											"end": 1146,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1135,
											"end": 1138,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1128,
											"end": 1147,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 1225,
											"end": 1231,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1218,
											"end": 1222,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1213,
											"end": 1216,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1209,
											"end": 1223,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1202,
											"end": 1206,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1195,
											"end": 1200,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1191,
											"end": 1207,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 1156,
											"end": 1232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1156,
											"end": 1232,
											"name": "tag",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 1156,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1286,
											"end": 1288,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1265,
											"end": 1280,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1261,
											"end": 1290,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1291,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1291,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1291,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1291,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1293,
											"end": 1297,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1248,
											"end": 1298,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1248,
											"end": 1298,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1033,
											"end": 1304,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1033,
											"end": 1304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1309,
											"end": 1681,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1309,
											"end": 1681,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1508,
											"end": 1514,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1497,
											"end": 1506,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1490,
											"end": 1515,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1551,
											"end": 1553,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1546,
											"end": 1548,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1535,
											"end": 1544,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1549,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1524,
											"end": 1554,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1471,
											"end": 1475,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1571,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 1612,
											"end": 1614,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1601,
											"end": 1610,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1597,
											"end": 1615,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1589,
											"end": 1595,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1571,
											"end": 1616,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 1571,
											"end": 1616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1571,
											"end": 1616,
											"name": "tag",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 1571,
											"end": 1616,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1563,
											"end": 1616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1666,
											"end": 1672,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1659,
											"end": 1673,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1652,
											"end": 1674,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1647,
											"end": 1649,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1636,
											"end": 1645,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1632,
											"end": 1650,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1625,
											"end": 1675,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1309,
											"end": 1681,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 1309,
											"end": 1681,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1309,
											"end": 1681,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1309,
											"end": 1681,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1309,
											"end": 1681,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1309,
											"end": 1681,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1309,
											"end": 1681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2235,
											"end": 2362,
											"name": "tag",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 2235,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2296,
											"end": 2306,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 2291,
											"end": 2294,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 2287,
											"end": 2307,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2284,
											"end": 2285,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2277,
											"end": 2308,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2327,
											"end": 2331,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 2324,
											"end": 2325,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2332,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2351,
											"end": 2355,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 2348,
											"end": 2349,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2341,
											"end": 2356,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2642,
											"name": "tag",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 2367,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2438,
											"end": 2440,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2432,
											"end": 2441,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2503,
											"end": 2505,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2484,
											"end": 2497,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2484,
											"end": 2497,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2480,
											"end": 2507,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2468,
											"end": 2508,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2538,
											"end": 2556,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2523,
											"end": 2557,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2523,
											"end": 2557,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2581,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2581,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2559,
											"end": 2581,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 2582,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 2517,
											"end": 2605,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2517,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 2517,
											"end": 2605,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 2585,
											"end": 2603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "tag",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 2585,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2621,
											"end": 2623,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2614,
											"end": 2636,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2642,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2367,
											"end": 2642,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2367,
											"end": 2642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2647,
											"end": 3178,
											"name": "tag",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 2647,
											"end": 3178,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2690,
											"end": 2695,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2743,
											"end": 2746,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2736,
											"end": 2740,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2728,
											"end": 2734,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2724,
											"end": 2741,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2720,
											"end": 2747,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2765,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 2710,
											"end": 2765,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2761,
											"end": 2762,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2758,
											"end": 2759,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2751,
											"end": 2763,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2765,
											"name": "tag",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 2710,
											"end": 2765,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2797,
											"end": 2803,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2784,
											"end": 2804,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2823,
											"end": 2841,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2819,
											"end": 2821,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2816,
											"end": 2842,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2813,
											"end": 2865,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2813,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "575"
										},
										{
											"begin": 2813,
											"end": 2865,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2845,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "575"
										},
										{
											"begin": 2845,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 2845,
											"end": 2863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2845,
											"end": 2863,
											"name": "tag",
											"source": 10,
											"value": "575"
										},
										{
											"begin": 2845,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2889,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "576"
										},
										{
											"begin": 2932,
											"end": 2934,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2913,
											"end": 2926,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2913,
											"end": 2926,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2909,
											"end": 2936,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2938,
											"end": 2942,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2905,
											"end": 2943,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2889,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 2889,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2889,
											"end": 2944,
											"name": "tag",
											"source": 10,
											"value": "576"
										},
										{
											"begin": 2889,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2969,
											"end": 2971,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2960,
											"end": 2967,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2953,
											"end": 2972,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3015,
											"end": 3018,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3008,
											"end": 3012,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3003,
											"end": 3005,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2995,
											"end": 3001,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2991,
											"end": 3006,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2987,
											"end": 3013,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2984,
											"end": 3019,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2981,
											"end": 3036,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2981,
											"end": 3036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "577"
										},
										{
											"begin": 2981,
											"end": 3036,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3032,
											"end": 3033,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3029,
											"end": 3030,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3022,
											"end": 3034,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2981,
											"end": 3036,
											"name": "tag",
											"source": 10,
											"value": "577"
										},
										{
											"begin": 2981,
											"end": 3036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3097,
											"end": 3099,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3094,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3082,
											"end": 3088,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3078,
											"end": 3095,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3075,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3062,
											"end": 3069,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3058,
											"end": 3076,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3045,
											"end": 3100,
											"name": "CALLDATACOPY",
											"source": 10
										},
										{
											"begin": 3145,
											"end": 3146,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3120,
											"end": 3136,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3120,
											"end": 3136,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3120,
											"end": 3136,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3138,
											"end": 3142,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3116,
											"end": 3143,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3147,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3147,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3147,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3109,
											"end": 3147,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3124,
											"end": 3131,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2647,
											"end": 3178,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2647,
											"end": 3178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3183,
											"end": 3863,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 3183,
											"end": 3863,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3289,
											"end": 3295,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3297,
											"end": 3303,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3305,
											"end": 3311,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3313,
											"end": 3319,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3366,
											"end": 3369,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3354,
											"end": 3363,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3352,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3341,
											"end": 3364,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3337,
											"end": 3370,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3334,
											"end": 3387,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3334,
											"end": 3387,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "579"
										},
										{
											"begin": 3334,
											"end": 3387,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3383,
											"end": 3384,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3380,
											"end": 3381,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3373,
											"end": 3385,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3334,
											"end": 3387,
											"name": "tag",
											"source": 10,
											"value": "579"
										},
										{
											"begin": 3334,
											"end": 3387,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3406,
											"end": 3429,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3396,
											"end": 3429,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3396,
											"end": 3429,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3476,
											"end": 3478,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3465,
											"end": 3474,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3461,
											"end": 3479,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3448,
											"end": 3480,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3438,
											"end": 3480,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3438,
											"end": 3480,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3531,
											"end": 3533,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3520,
											"end": 3529,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3516,
											"end": 3534,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3503,
											"end": 3535,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3554,
											"end": 3572,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3595,
											"end": 3597,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3587,
											"end": 3593,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3584,
											"end": 3598,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3581,
											"end": 3615,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3581,
											"end": 3615,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 3581,
											"end": 3615,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3611,
											"end": 3612,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3608,
											"end": 3609,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3601,
											"end": 3613,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3581,
											"end": 3615,
											"name": "tag",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 3581,
											"end": 3615,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3634,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "581"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3667,
											"end": 3673,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3656,
											"end": 3665,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 3652,
											"end": 3674,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3634,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 3634,
											"end": 3684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3634,
											"end": 3684,
											"name": "tag",
											"source": 10,
											"value": "581"
										},
										{
											"begin": 3634,
											"end": 3684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3624,
											"end": 3684,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3624,
											"end": 3684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3737,
											"end": 3739,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3726,
											"end": 3735,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3722,
											"end": 3740,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3709,
											"end": 3741,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3693,
											"end": 3741,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3693,
											"end": 3741,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3766,
											"end": 3768,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3756,
											"end": 3764,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3753,
											"end": 3769,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3750,
											"end": 3786,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3750,
											"end": 3786,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "582"
										},
										{
											"begin": 3750,
											"end": 3786,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3782,
											"end": 3783,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3779,
											"end": 3780,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3784,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3750,
											"end": 3786,
											"name": "tag",
											"source": 10,
											"value": "582"
										},
										{
											"begin": 3750,
											"end": 3786,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3750,
											"end": 3786,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3805,
											"end": 3857,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "583"
										},
										{
											"begin": 3849,
											"end": 3856,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 3838,
											"end": 3846,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3827,
											"end": 3836,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 3823,
											"end": 3847,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3805,
											"end": 3857,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 3805,
											"end": 3857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3805,
											"end": 3857,
											"name": "tag",
											"source": 10,
											"value": "583"
										},
										{
											"begin": 3805,
											"end": 3857,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3795,
											"end": 3857,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3795,
											"end": 3857,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3795,
											"end": 3857,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3183,
											"end": 3863,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3183,
											"end": 3863,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 3183,
											"end": 3863,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3183,
											"end": 3863,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3183,
											"end": 3863,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3183,
											"end": 3863,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3183,
											"end": 3863,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3183,
											"end": 3863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3868,
											"end": 4190,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 3868,
											"end": 4190,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3937,
											"end": 3943,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3990,
											"end": 3992,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3978,
											"end": 3987,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3969,
											"end": 3976,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3965,
											"end": 3988,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3961,
											"end": 3993,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3958,
											"end": 4010,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3958,
											"end": 4010,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "585"
										},
										{
											"begin": 3958,
											"end": 4010,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4006,
											"end": 4007,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4003,
											"end": 4004,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3996,
											"end": 4008,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3958,
											"end": 4010,
											"name": "tag",
											"source": 10,
											"value": "585"
										},
										{
											"begin": 3958,
											"end": 4010,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4046,
											"end": 4055,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4056,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4079,
											"end": 4097,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4071,
											"end": 4077,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4068,
											"end": 4098,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4115,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "586"
										},
										{
											"begin": 4065,
											"end": 4115,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4111,
											"end": 4112,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4108,
											"end": 4109,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4101,
											"end": 4113,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4065,
											"end": 4115,
											"name": "tag",
											"source": 10,
											"value": "586"
										},
										{
											"begin": 4065,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4134,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 4176,
											"end": 4183,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4167,
											"end": 4173,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4156,
											"end": 4165,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4174,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4134,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 4134,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4134,
											"end": 4184,
											"name": "tag",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 4134,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4124,
											"end": 4184,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 3868,
											"end": 4190,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3868,
											"end": 4190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4195,
											"end": 4368,
											"name": "tag",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 4195,
											"end": 4368,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4263,
											"end": 4283,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4312,
											"end": 4343,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4312,
											"end": 4343,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4302,
											"end": 4344,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4302,
											"end": 4344,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4292,
											"end": 4362,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "589"
										},
										{
											"begin": 4292,
											"end": 4362,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4358,
											"end": 4359,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4355,
											"end": 4356,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4348,
											"end": 4360,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4292,
											"end": 4362,
											"name": "tag",
											"source": 10,
											"value": "589"
										},
										{
											"begin": 4292,
											"end": 4362,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4195,
											"end": 4368,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4195,
											"end": 4368,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4195,
											"end": 4368,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4195,
											"end": 4368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4373,
											"end": 4627,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 4373,
											"end": 4627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4441,
											"end": 4447,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4449,
											"end": 4455,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4502,
											"end": 4504,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4490,
											"end": 4499,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4481,
											"end": 4488,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4477,
											"end": 4500,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4473,
											"end": 4505,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4470,
											"end": 4522,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4470,
											"end": 4522,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "591"
										},
										{
											"begin": 4470,
											"end": 4522,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4518,
											"end": 4519,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4515,
											"end": 4516,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4508,
											"end": 4520,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4470,
											"end": 4522,
											"name": "tag",
											"source": 10,
											"value": "591"
										},
										{
											"begin": 4470,
											"end": 4522,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4554,
											"end": 4563,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4541,
											"end": 4564,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4531,
											"end": 4564,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4531,
											"end": 4564,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4583,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 4617,
											"end": 4619,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4606,
											"end": 4615,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4602,
											"end": 4620,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4583,
											"end": 4621,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 4583,
											"end": 4621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4583,
											"end": 4621,
											"name": "tag",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 4583,
											"end": 4621,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4573,
											"end": 4621,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4573,
											"end": 4621,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4373,
											"end": 4627,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4373,
											"end": 4627,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4373,
											"end": 4627,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4373,
											"end": 4627,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4373,
											"end": 4627,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4373,
											"end": 4627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5135,
											"end": 6155,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 5135,
											"end": 6155,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5228,
											"end": 5234,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5236,
											"end": 5242,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5289,
											"end": 5291,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5277,
											"end": 5286,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5268,
											"end": 5275,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5264,
											"end": 5287,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5260,
											"end": 5292,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5257,
											"end": 5309,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5257,
											"end": 5309,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "595"
										},
										{
											"begin": 5257,
											"end": 5309,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5305,
											"end": 5306,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5302,
											"end": 5303,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5295,
											"end": 5307,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5257,
											"end": 5309,
											"name": "tag",
											"source": 10,
											"value": "595"
										},
										{
											"begin": 5257,
											"end": 5309,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5328,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "596"
										},
										{
											"begin": 5347,
											"end": 5356,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5328,
											"end": 5357,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 5328,
											"end": 5357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5328,
											"end": 5357,
											"name": "tag",
											"source": 10,
											"value": "596"
										},
										{
											"begin": 5328,
											"end": 5357,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5318,
											"end": 5357,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5318,
											"end": 5357,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5376,
											"end": 5378,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5429,
											"end": 5431,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5418,
											"end": 5427,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5414,
											"end": 5432,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5401,
											"end": 5433,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5452,
											"end": 5470,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5493,
											"end": 5495,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5485,
											"end": 5491,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5482,
											"end": 5496,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5479,
											"end": 5513,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5479,
											"end": 5513,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "597"
										},
										{
											"begin": 5479,
											"end": 5513,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5509,
											"end": 5510,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5506,
											"end": 5507,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5499,
											"end": 5511,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5479,
											"end": 5513,
											"name": "tag",
											"source": 10,
											"value": "597"
										},
										{
											"begin": 5479,
											"end": 5513,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5547,
											"end": 5553,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5536,
											"end": 5545,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5532,
											"end": 5554,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5522,
											"end": 5554,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5522,
											"end": 5554,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5592,
											"end": 5599,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5585,
											"end": 5589,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 5581,
											"end": 5583,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5577,
											"end": 5590,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5573,
											"end": 5600,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5563,
											"end": 5618,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "598"
										},
										{
											"begin": 5563,
											"end": 5618,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5614,
											"end": 5615,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5611,
											"end": 5612,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5604,
											"end": 5616,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5563,
											"end": 5618,
											"name": "tag",
											"source": 10,
											"value": "598"
										},
										{
											"begin": 5563,
											"end": 5618,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5650,
											"end": 5652,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5637,
											"end": 5653,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5672,
											"end": 5674,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5670,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5665,
											"end": 5675,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5662,
											"end": 5698,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5662,
											"end": 5698,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "600"
										},
										{
											"begin": 5662,
											"end": 5698,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5678,
											"end": 5696,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "600"
										},
										{
											"begin": 5678,
											"end": 5696,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 5678,
											"end": 5696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5678,
											"end": 5696,
											"name": "tag",
											"source": 10,
											"value": "600"
										},
										{
											"begin": 5678,
											"end": 5696,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5724,
											"end": 5726,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5721,
											"end": 5722,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 5717,
											"end": 5727,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 5707,
											"end": 5727,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5707,
											"end": 5727,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5747,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "601"
										},
										{
											"begin": 5771,
											"end": 5773,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5767,
											"end": 5769,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5763,
											"end": 5774,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5747,
											"end": 5775,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 5747,
											"end": 5775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5747,
											"end": 5775,
											"name": "tag",
											"source": 10,
											"value": "601"
										},
										{
											"begin": 5747,
											"end": 5775,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5809,
											"end": 5824,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5809,
											"end": 5824,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5809,
											"end": 5824,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5879,
											"end": 5890,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5879,
											"end": 5890,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5879,
											"end": 5890,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5875,
											"end": 5895,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5875,
											"end": 5895,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5875,
											"end": 5895,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5840,
											"end": 5852,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5840,
											"end": 5852,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5840,
											"end": 5852,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5840,
											"end": 5852,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5907,
											"end": 5926,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 5907,
											"end": 5926,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5907,
											"end": 5926,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 5904,
											"end": 5943,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5904,
											"end": 5943,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "602"
										},
										{
											"begin": 5904,
											"end": 5943,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5939,
											"end": 5940,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5936,
											"end": 5937,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5929,
											"end": 5941,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5904,
											"end": 5943,
											"name": "tag",
											"source": 10,
											"value": "602"
										},
										{
											"begin": 5904,
											"end": 5943,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5963,
											"end": 5974,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5963,
											"end": 5974,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5963,
											"end": 5974,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5963,
											"end": 5974,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5983,
											"end": 6125,
											"name": "tag",
											"source": 10,
											"value": "603"
										},
										{
											"begin": 5983,
											"end": 6125,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5999,
											"end": 6005,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5994,
											"end": 5997,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5991,
											"end": 6006,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5983,
											"end": 6125,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5983,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "605"
										},
										{
											"begin": 5983,
											"end": 6125,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6065,
											"end": 6082,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6065,
											"end": 6082,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6053,
											"end": 6083,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6053,
											"end": 6083,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6016,
											"end": 6028,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6016,
											"end": 6028,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6016,
											"end": 6028,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6016,
											"end": 6028,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6115,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6115,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6115,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6103,
											"end": 6115,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5983,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "603"
										},
										{
											"begin": 5983,
											"end": 6125,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5983,
											"end": 6125,
											"name": "tag",
											"source": 10,
											"value": "605"
										},
										{
											"begin": 5983,
											"end": 6125,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6144,
											"end": 6149,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6134,
											"end": 6149,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 6134,
											"end": 6149,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6134,
											"end": 6149,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6134,
											"end": 6149,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6134,
											"end": 6149,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6134,
											"end": 6149,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6134,
											"end": 6149,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6134,
											"end": 6149,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5135,
											"end": 6155,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5135,
											"end": 6155,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5135,
											"end": 6155,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5135,
											"end": 6155,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5135,
											"end": 6155,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5135,
											"end": 6155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6160,
											"end": 6346,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 6160,
											"end": 6346,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6219,
											"end": 6225,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6272,
											"end": 6274,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6260,
											"end": 6269,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6251,
											"end": 6258,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6247,
											"end": 6270,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6243,
											"end": 6275,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6240,
											"end": 6292,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6240,
											"end": 6292,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "607"
										},
										{
											"begin": 6240,
											"end": 6292,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6288,
											"end": 6289,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6285,
											"end": 6286,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6278,
											"end": 6290,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6240,
											"end": 6292,
											"name": "tag",
											"source": 10,
											"value": "607"
										},
										{
											"begin": 6240,
											"end": 6292,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6311,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 6330,
											"end": 6339,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6311,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 6311,
											"end": 6340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6351,
											"end": 6507,
											"name": "tag",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 6351,
											"end": 6507,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6417,
											"end": 6437,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6417,
											"end": 6437,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6477,
											"end": 6481,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 6466,
											"end": 6482,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6466,
											"end": 6482,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 6456,
											"end": 6483,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6456,
											"end": 6483,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 6446,
											"end": 6501,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "589"
										},
										{
											"begin": 6446,
											"end": 6501,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6497,
											"end": 6498,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6494,
											"end": 6495,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6487,
											"end": 6499,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6512,
											"end": 7213,
											"name": "tag",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 6512,
											"end": 7213,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6575,
											"end": 6580,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6623,
											"end": 6627,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 6611,
											"end": 6620,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6606,
											"end": 6609,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6602,
											"end": 6621,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6598,
											"end": 6628,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6595,
											"end": 6645,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6595,
											"end": 6645,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "612"
										},
										{
											"begin": 6595,
											"end": 6645,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6641,
											"end": 6642,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6638,
											"end": 6639,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6631,
											"end": 6643,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6595,
											"end": 6645,
											"name": "tag",
											"source": 10,
											"value": "612"
										},
										{
											"begin": 6595,
											"end": 6645,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6674,
											"end": 6676,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6668,
											"end": 6677,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6716,
											"end": 6720,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 6708,
											"end": 6714,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6704,
											"end": 6721,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6787,
											"end": 6793,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6775,
											"end": 6785,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6772,
											"end": 6794,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 6751,
											"end": 6769,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6739,
											"end": 6749,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6736,
											"end": 6770,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 6733,
											"end": 6795,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 6730,
											"end": 6818,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6730,
											"end": 6818,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "614"
										},
										{
											"begin": 6730,
											"end": 6818,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6798,
											"end": 6816,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "614"
										},
										{
											"begin": 6798,
											"end": 6816,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 6798,
											"end": 6816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6798,
											"end": 6816,
											"name": "tag",
											"source": 10,
											"value": "614"
										},
										{
											"begin": 6798,
											"end": 6816,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6834,
											"end": 6836,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6827,
											"end": 6849,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6867,
											"end": 6873,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6867,
											"end": 6873,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6897,
											"end": 6924,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "615"
										},
										{
											"begin": 6914,
											"end": 6923,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6897,
											"end": 6924,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 6897,
											"end": 6924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6897,
											"end": 6924,
											"name": "tag",
											"source": 10,
											"value": "615"
										},
										{
											"begin": 6897,
											"end": 6924,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6889,
											"end": 6895,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6882,
											"end": 6925,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6958,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "616"
										},
										{
											"begin": 6990,
											"end": 6992,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6979,
											"end": 6988,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6975,
											"end": 6993,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6958,
											"end": 6994,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 6958,
											"end": 6994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6958,
											"end": 6994,
											"name": "tag",
											"source": 10,
											"value": "616"
										},
										{
											"begin": 6958,
											"end": 6994,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6953,
											"end": 6955,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6945,
											"end": 6951,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6941,
											"end": 6956,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6934,
											"end": 6995,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7028,
											"end": 7064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "617"
										},
										{
											"begin": 7060,
											"end": 7062,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7049,
											"end": 7058,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7045,
											"end": 7063,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7028,
											"end": 7064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 7028,
											"end": 7064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7028,
											"end": 7064,
											"name": "tag",
											"source": 10,
											"value": "617"
										},
										{
											"begin": 7028,
											"end": 7064,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7023,
											"end": 7025,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7015,
											"end": 7021,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7011,
											"end": 7026,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7004,
											"end": 7065,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7098,
											"end": 7134,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "618"
										},
										{
											"begin": 7130,
											"end": 7132,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7119,
											"end": 7128,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7115,
											"end": 7133,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7098,
											"end": 7134,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 7098,
											"end": 7134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7098,
											"end": 7134,
											"name": "tag",
											"source": 10,
											"value": "618"
										},
										{
											"begin": 7098,
											"end": 7134,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7093,
											"end": 7095,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7085,
											"end": 7091,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7081,
											"end": 7096,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7074,
											"end": 7135,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7169,
											"end": 7206,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "619"
										},
										{
											"begin": 7201,
											"end": 7204,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 7190,
											"end": 7199,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7186,
											"end": 7205,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7169,
											"end": 7206,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 7169,
											"end": 7206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7169,
											"end": 7206,
											"name": "tag",
											"source": 10,
											"value": "619"
										},
										{
											"begin": 7169,
											"end": 7206,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7163,
											"end": 7166,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 7155,
											"end": 7161,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7151,
											"end": 7167,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7144,
											"end": 7207,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7144,
											"end": 7207,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6512,
											"end": 7213,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6512,
											"end": 7213,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6512,
											"end": 7213,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6512,
											"end": 7213,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6512,
											"end": 7213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7218,
											"end": 8032,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 7218,
											"end": 8032,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7367,
											"end": 7373,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7375,
											"end": 7381,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7383,
											"end": 7389,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7391,
											"end": 7397,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7399,
											"end": 7405,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7452,
											"end": 7455,
											"name": "PUSH",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 7440,
											"end": 7449,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7431,
											"end": 7438,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 7427,
											"end": 7450,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7423,
											"end": 7456,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7420,
											"end": 7473,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7420,
											"end": 7473,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "621"
										},
										{
											"begin": 7420,
											"end": 7473,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7469,
											"end": 7470,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7466,
											"end": 7467,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7459,
											"end": 7471,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7420,
											"end": 7473,
											"name": "tag",
											"source": 10,
											"value": "621"
										},
										{
											"begin": 7420,
											"end": 7473,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7505,
											"end": 7514,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7492,
											"end": 7515,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7482,
											"end": 7515,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 7482,
											"end": 7515,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7562,
											"end": 7564,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7551,
											"end": 7560,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7547,
											"end": 7565,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7534,
											"end": 7566,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7524,
											"end": 7566,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7524,
											"end": 7566,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7617,
											"end": 7619,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7606,
											"end": 7615,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7602,
											"end": 7620,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7589,
											"end": 7621,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7640,
											"end": 7658,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7681,
											"end": 7683,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7673,
											"end": 7679,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7670,
											"end": 7684,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7667,
											"end": 7701,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7667,
											"end": 7701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "622"
										},
										{
											"begin": 7667,
											"end": 7701,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7697,
											"end": 7698,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7694,
											"end": 7695,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7687,
											"end": 7699,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7667,
											"end": 7701,
											"name": "tag",
											"source": 10,
											"value": "622"
										},
										{
											"begin": 7667,
											"end": 7701,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7720,
											"end": 7770,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "623"
										},
										{
											"begin": 7762,
											"end": 7769,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 7753,
											"end": 7759,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7742,
											"end": 7751,
											"name": "DUP11",
											"source": 10
										},
										{
											"begin": 7738,
											"end": 7760,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7720,
											"end": 7770,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 7720,
											"end": 7770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7720,
											"end": 7770,
											"name": "tag",
											"source": 10,
											"value": "623"
										},
										{
											"begin": 7720,
											"end": 7770,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7710,
											"end": 7770,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 7710,
											"end": 7770,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7823,
											"end": 7825,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7812,
											"end": 7821,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 7808,
											"end": 7826,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7795,
											"end": 7827,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 7779,
											"end": 7827,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7779,
											"end": 7827,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7852,
											"end": 7854,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7842,
											"end": 7850,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7839,
											"end": 7855,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 7836,
											"end": 7872,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7836,
											"end": 7872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "624"
										},
										{
											"begin": 7836,
											"end": 7872,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7868,
											"end": 7869,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7865,
											"end": 7866,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7858,
											"end": 7870,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7836,
											"end": 7872,
											"name": "tag",
											"source": 10,
											"value": "624"
										},
										{
											"begin": 7836,
											"end": 7872,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7836,
											"end": 7872,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7891,
											"end": 7943,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "625"
										},
										{
											"begin": 7935,
											"end": 7942,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 7924,
											"end": 7932,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7913,
											"end": 7922,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 7909,
											"end": 7933,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7891,
											"end": 7943,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 7891,
											"end": 7943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7891,
											"end": 7943,
											"name": "tag",
											"source": 10,
											"value": "625"
										},
										{
											"begin": 7891,
											"end": 7943,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7881,
											"end": 7943,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7881,
											"end": 7943,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7881,
											"end": 7943,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7962,
											"end": 8026,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "626"
										},
										{
											"begin": 8018,
											"end": 8025,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 8012,
											"end": 8015,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 8001,
											"end": 8010,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 7997,
											"end": 8016,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7962,
											"end": 8026,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 7962,
											"end": 8026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7962,
											"end": 8026,
											"name": "tag",
											"source": 10,
											"value": "626"
										},
										{
											"begin": 7962,
											"end": 8026,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7952,
											"end": 8026,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7952,
											"end": 8026,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7218,
											"end": 8032,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7218,
											"end": 8032,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 7218,
											"end": 8032,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7218,
											"end": 8032,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7218,
											"end": 8032,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 7218,
											"end": 8032,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7218,
											"end": 8032,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7218,
											"end": 8032,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7218,
											"end": 8032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8037,
											"end": 8427,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 8037,
											"end": 8427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8115,
											"end": 8121,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8123,
											"end": 8129,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8176,
											"end": 8178,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8164,
											"end": 8173,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8155,
											"end": 8162,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8151,
											"end": 8174,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8147,
											"end": 8179,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8144,
											"end": 8196,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8144,
											"end": 8196,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "628"
										},
										{
											"begin": 8144,
											"end": 8196,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8192,
											"end": 8193,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8189,
											"end": 8190,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8182,
											"end": 8194,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8144,
											"end": 8196,
											"name": "tag",
											"source": 10,
											"value": "628"
										},
										{
											"begin": 8144,
											"end": 8196,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8228,
											"end": 8237,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8215,
											"end": 8238,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 8205,
											"end": 8238,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8205,
											"end": 8238,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8289,
											"end": 8291,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8278,
											"end": 8287,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8274,
											"end": 8292,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8261,
											"end": 8293,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 8316,
											"end": 8334,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8308,
											"end": 8314,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8305,
											"end": 8335,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8302,
											"end": 8352,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8302,
											"end": 8352,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "629"
										},
										{
											"begin": 8302,
											"end": 8352,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8348,
											"end": 8349,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8345,
											"end": 8346,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8338,
											"end": 8350,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8302,
											"end": 8352,
											"name": "tag",
											"source": 10,
											"value": "629"
										},
										{
											"begin": 8302,
											"end": 8352,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8371,
											"end": 8421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "630"
										},
										{
											"begin": 8413,
											"end": 8420,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8404,
											"end": 8410,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8393,
											"end": 8402,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8389,
											"end": 8411,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8371,
											"end": 8421,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 8371,
											"end": 8421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8371,
											"end": 8421,
											"name": "tag",
											"source": 10,
											"value": "630"
										},
										{
											"begin": 8371,
											"end": 8421,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8361,
											"end": 8421,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8361,
											"end": 8421,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8361,
											"end": 8421,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8037,
											"end": 8427,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8037,
											"end": 8427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8037,
											"end": 8427,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8037,
											"end": 8427,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8037,
											"end": 8427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8037,
											"end": 8427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8432,
											"end": 8592,
											"name": "tag",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 8432,
											"end": 8592,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8497,
											"end": 8517,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8497,
											"end": 8517,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 8553,
											"end": 8566,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8553,
											"end": 8566,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8546,
											"end": 8567,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8536,
											"end": 8568,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8536,
											"end": 8568,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 8526,
											"end": 8586,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "589"
										},
										{
											"begin": 8526,
											"end": 8586,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8582,
											"end": 8583,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8579,
											"end": 8580,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8572,
											"end": 8584,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8597,
											"end": 8987,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 8597,
											"end": 8987,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8672,
											"end": 8678,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8680,
											"end": 8686,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8733,
											"end": 8735,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8721,
											"end": 8730,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8712,
											"end": 8719,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8708,
											"end": 8731,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8704,
											"end": 8736,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8701,
											"end": 8753,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8701,
											"end": 8753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "634"
										},
										{
											"begin": 8701,
											"end": 8753,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8749,
											"end": 8750,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8746,
											"end": 8747,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8739,
											"end": 8751,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8701,
											"end": 8753,
											"name": "tag",
											"source": 10,
											"value": "634"
										},
										{
											"begin": 8701,
											"end": 8753,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8789,
											"end": 8798,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8776,
											"end": 8799,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 8822,
											"end": 8840,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8814,
											"end": 8820,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8811,
											"end": 8841,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8808,
											"end": 8858,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8808,
											"end": 8858,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "635"
										},
										{
											"begin": 8808,
											"end": 8858,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8854,
											"end": 8855,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8851,
											"end": 8852,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8844,
											"end": 8856,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8808,
											"end": 8858,
											"name": "tag",
											"source": 10,
											"value": "635"
										},
										{
											"begin": 8808,
											"end": 8858,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8877,
											"end": 8927,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "636"
										},
										{
											"begin": 8919,
											"end": 8926,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8910,
											"end": 8916,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8899,
											"end": 8908,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8895,
											"end": 8917,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8877,
											"end": 8927,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 8877,
											"end": 8927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8877,
											"end": 8927,
											"name": "tag",
											"source": 10,
											"value": "636"
										},
										{
											"begin": 8877,
											"end": 8927,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8867,
											"end": 8927,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8867,
											"end": 8927,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8867,
											"end": 8927,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8946,
											"end": 8981,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 8977,
											"end": 8979,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8966,
											"end": 8975,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8962,
											"end": 8980,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8946,
											"end": 8981,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 8946,
											"end": 8981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9640,
											"end": 9914,
											"name": "tag",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 9640,
											"end": 9914,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9842,
											"end": 9845,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 9827,
											"end": 9846,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9827,
											"end": 9846,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9855,
											"end": 9908,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 9831,
											"end": 9840,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9890,
											"end": 9896,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9355,
											"end": 9359,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 9347,
											"end": 9352,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9341,
											"end": 9353,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9337,
											"end": 9360,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9332,
											"end": 9335,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9325,
											"end": 9361,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9422,
											"end": 9426,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 9414,
											"end": 9418,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9407,
											"end": 9412,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9403,
											"end": 9419,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9397,
											"end": 9420,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9393,
											"end": 9427,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9386,
											"end": 9390,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9381,
											"end": 9384,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9377,
											"end": 9391,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9370,
											"end": 9428,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9489,
											"end": 9493,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 9481,
											"end": 9485,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9474,
											"end": 9479,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9470,
											"end": 9486,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9464,
											"end": 9487,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9460,
											"end": 9494,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9453,
											"end": 9457,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9448,
											"end": 9451,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9444,
											"end": 9458,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9437,
											"end": 9495,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9556,
											"end": 9560,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 9548,
											"end": 9552,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 9541,
											"end": 9546,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9537,
											"end": 9553,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9531,
											"end": 9554,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9527,
											"end": 9561,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9520,
											"end": 9524,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 9515,
											"end": 9518,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9511,
											"end": 9525,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9504,
											"end": 9562,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9623,
											"end": 9627,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 9615,
											"end": 9619,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 9608,
											"end": 9613,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9604,
											"end": 9620,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9598,
											"end": 9621,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9594,
											"end": 9628,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9587,
											"end": 9591,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 9582,
											"end": 9585,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9578,
											"end": 9592,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9571,
											"end": 9629,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9571,
											"end": 9629,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9571,
											"end": 9629,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9255,
											"end": 9635,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9919,
											"end": 10173,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 9919,
											"end": 10173,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9984,
											"end": 9990,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9992,
											"end": 9998,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10045,
											"end": 10047,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10033,
											"end": 10042,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10024,
											"end": 10031,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10020,
											"end": 10043,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10016,
											"end": 10048,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 10013,
											"end": 10065,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 10013,
											"end": 10065,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "643"
										},
										{
											"begin": 10013,
											"end": 10065,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10061,
											"end": 10062,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10058,
											"end": 10059,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10051,
											"end": 10063,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10013,
											"end": 10065,
											"name": "tag",
											"source": 10,
											"value": "643"
										},
										{
											"begin": 10013,
											"end": 10065,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10084,
											"end": 10113,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "644"
										},
										{
											"begin": 10103,
											"end": 10112,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10084,
											"end": 10113,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 10084,
											"end": 10113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10084,
											"end": 10113,
											"name": "tag",
											"source": 10,
											"value": "644"
										},
										{
											"begin": 10084,
											"end": 10113,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10074,
											"end": 10113,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10074,
											"end": 10113,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10132,
											"end": 10167,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 10163,
											"end": 10165,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10152,
											"end": 10161,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10148,
											"end": 10166,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10132,
											"end": 10167,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 10132,
											"end": 10167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10178,
											"end": 11261,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 10178,
											"end": 11261,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10363,
											"end": 10365,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10352,
											"end": 10361,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10366,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10408,
											"end": 10414,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10402,
											"end": 10415,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10397,
											"end": 10399,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10386,
											"end": 10395,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10382,
											"end": 10400,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10375,
											"end": 10416,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10470,
											"end": 10472,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10462,
											"end": 10468,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10458,
											"end": 10473,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10452,
											"end": 10474,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10447,
											"end": 10449,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10436,
											"end": 10445,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10432,
											"end": 10450,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10425,
											"end": 10475,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10326,
											"end": 10330,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10522,
											"end": 10524,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 10514,
											"end": 10520,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10510,
											"end": 10525,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10504,
											"end": 10526,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10562,
											"end": 10568,
											"name": "PUSH",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 10557,
											"end": 10559,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10546,
											"end": 10555,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10542,
											"end": 10560,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10535,
											"end": 10569,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10592,
											"end": 10644,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "647"
										},
										{
											"begin": 10639,
											"end": 10642,
											"name": "PUSH",
											"source": 10,
											"value": "1A0"
										},
										{
											"begin": 10628,
											"end": 10637,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10624,
											"end": 10643,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10610,
											"end": 10622,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10592,
											"end": 10644,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 10592,
											"end": 10644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10592,
											"end": 10644,
											"name": "tag",
											"source": 10,
											"value": "647"
										},
										{
											"begin": 10592,
											"end": 10644,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10578,
											"end": 10644,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10578,
											"end": 10644,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10693,
											"end": 10695,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 10685,
											"end": 10691,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10681,
											"end": 10696,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10675,
											"end": 10697,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10766,
											"end": 10768,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 10762,
											"end": 10769,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 10750,
											"end": 10759,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10742,
											"end": 10748,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10738,
											"end": 10760,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10734,
											"end": 10770,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10728,
											"end": 10731,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 10717,
											"end": 10726,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10713,
											"end": 10732,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10706,
											"end": 10771,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10794,
											"end": 10835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "648"
										},
										{
											"begin": 10828,
											"end": 10834,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10812,
											"end": 10826,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10794,
											"end": 10835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 10794,
											"end": 10835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10794,
											"end": 10835,
											"name": "tag",
											"source": 10,
											"value": "648"
										},
										{
											"begin": 10794,
											"end": 10835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10780,
											"end": 10835,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10780,
											"end": 10835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10780,
											"end": 10835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10890,
											"end": 10893,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 10882,
											"end": 10888,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10878,
											"end": 10894,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10872,
											"end": 10895,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10866,
											"end": 10869,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 10855,
											"end": 10864,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10851,
											"end": 10870,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10844,
											"end": 10896,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10979,
											"end": 10980,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10975,
											"end": 10976,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10970,
											"end": 10973,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 10966,
											"end": 10977,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 10962,
											"end": 10981,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10955,
											"end": 10958,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 10947,
											"end": 10953,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 10943,
											"end": 10959,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10937,
											"end": 10960,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 10933,
											"end": 10982,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10927,
											"end": 10930,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 10916,
											"end": 10925,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10912,
											"end": 10931,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10905,
											"end": 10983,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11032,
											"end": 11035,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 11024,
											"end": 11030,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11020,
											"end": 11036,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11014,
											"end": 11037,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11046,
											"end": 11098,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "649"
										},
										{
											"begin": 11093,
											"end": 11096,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 11082,
											"end": 11091,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11078,
											"end": 11097,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11062,
											"end": 11076,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 375,
											"end": 388,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 368,
											"end": 389,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 356,
											"end": 390,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 356,
											"end": 390,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 305,
											"end": 396,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11046,
											"end": 11098,
											"name": "tag",
											"source": 10,
											"value": "649"
										},
										{
											"begin": 11046,
											"end": 11098,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11147,
											"end": 11150,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 11135,
											"end": 11151,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11135,
											"end": 11151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11129,
											"end": 11152,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9341,
											"end": 9353,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9341,
											"end": 9353,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9355,
											"end": 9359,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 9337,
											"end": 9360,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9337,
											"end": 9360,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9337,
											"end": 9360,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11227,
											"end": 11230,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 11212,
											"end": 11231,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 11212,
											"end": 11231,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9325,
											"end": 9361,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9414,
											"end": 9418,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9403,
											"end": 9419,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9403,
											"end": 9419,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9397,
											"end": 9420,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9393,
											"end": 9427,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9393,
											"end": 9427,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9377,
											"end": 9391,
											"name": "PUSH",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 9377,
											"end": 9391,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9377,
											"end": 9391,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9370,
											"end": 9428,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9481,
											"end": 9485,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9470,
											"end": 9486,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9470,
											"end": 9486,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9464,
											"end": 9487,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9460,
											"end": 9494,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9460,
											"end": 9494,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9444,
											"end": 9458,
											"name": "PUSH",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 9444,
											"end": 9458,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9444,
											"end": 9458,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9437,
											"end": 9495,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9548,
											"end": 9552,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 9537,
											"end": 9553,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9537,
											"end": 9553,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9531,
											"end": 9554,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9527,
											"end": 9561,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9527,
											"end": 9561,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9511,
											"end": 9525,
											"name": "PUSH",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 9511,
											"end": 9525,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 9511,
											"end": 9525,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9504,
											"end": 9562,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9615,
											"end": 9619,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 9604,
											"end": 9620,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9604,
											"end": 9620,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9598,
											"end": 9621,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9594,
											"end": 9628,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 9578,
											"end": 9592,
											"name": "PUSH",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 9578,
											"end": 9592,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9578,
											"end": 9592,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9571,
											"end": 9629,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11161,
											"end": 11232,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "374"
										},
										{
											"begin": 9255,
											"end": 9635,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11266,
											"end": 11898,
											"name": "tag",
											"source": 10,
											"value": "194"
										},
										{
											"begin": 11266,
											"end": 11898,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11437,
											"end": 11439,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11489,
											"end": 11510,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11489,
											"end": 11510,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11489,
											"end": 11510,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11559,
											"end": 11572,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11559,
											"end": 11572,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11462,
											"end": 11480,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11462,
											"end": 11480,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11462,
											"end": 11480,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11581,
											"end": 11603,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11581,
											"end": 11603,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11581,
											"end": 11603,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11408,
											"end": 11412,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11408,
											"end": 11412,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11437,
											"end": 11439,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11660,
											"end": 11675,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11660,
											"end": 11675,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11660,
											"end": 11675,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11660,
											"end": 11675,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11634,
											"end": 11636,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11619,
											"end": 11637,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 11619,
											"end": 11637,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11619,
											"end": 11637,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11408,
											"end": 11412,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11703,
											"end": 11872,
											"name": "tag",
											"source": 10,
											"value": "652"
										},
										{
											"begin": 11703,
											"end": 11872,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11717,
											"end": 11723,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11714,
											"end": 11715,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11711,
											"end": 11724,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 11703,
											"end": 11872,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11703,
											"end": 11872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "654"
										},
										{
											"begin": 11703,
											"end": 11872,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11778,
											"end": 11791,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11778,
											"end": 11791,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11766,
											"end": 11792,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11766,
											"end": 11792,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11847,
											"end": 11862,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11847,
											"end": 11862,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11847,
											"end": 11862,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11847,
											"end": 11862,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11812,
											"end": 11824,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11812,
											"end": 11824,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 11812,
											"end": 11824,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11812,
											"end": 11824,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11739,
											"end": 11740,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 11732,
											"end": 11741,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11703,
											"end": 11872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "652"
										},
										{
											"begin": 11703,
											"end": 11872,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11703,
											"end": 11872,
											"name": "tag",
											"source": 10,
											"value": "654"
										},
										{
											"begin": 11703,
											"end": 11872,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11889,
											"end": 11892,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11889,
											"end": 11892,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 11266,
											"end": 11898,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11266,
											"end": 11898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11903,
											"end": 12147,
											"name": "tag",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 11903,
											"end": 12147,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11994,
											"end": 12000,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12047,
											"end": 12050,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 12035,
											"end": 12044,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12026,
											"end": 12033,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12022,
											"end": 12045,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12018,
											"end": 12051,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 12015,
											"end": 12068,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 12015,
											"end": 12068,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "656"
										},
										{
											"begin": 12015,
											"end": 12068,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12064,
											"end": 12065,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12061,
											"end": 12062,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12054,
											"end": 12066,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 12015,
											"end": 12068,
											"name": "tag",
											"source": 10,
											"value": "656"
										},
										{
											"begin": 12015,
											"end": 12068,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12087,
											"end": 12141,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 12133,
											"end": 12140,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12122,
											"end": 12131,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12087,
											"end": 12141,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 12087,
											"end": 12141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12152,
											"end": 12495,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 12152,
											"end": 12495,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12354,
											"end": 12356,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12336,
											"end": 12357,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12336,
											"end": 12357,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12336,
											"end": 12357,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12393,
											"end": 12395,
											"name": "PUSH",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 12373,
											"end": 12391,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12373,
											"end": 12391,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12373,
											"end": 12391,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12366,
											"end": 12396,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59081C1C9BDC1BDCD85B081251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12427,
											"end": 12429,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12412,
											"end": 12430,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12412,
											"end": 12430,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12405,
											"end": 12454,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12486,
											"end": 12488,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 12471,
											"end": 12489,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12471,
											"end": 12489,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12152,
											"end": 12495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12500,
											"end": 12880,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 12500,
											"end": 12880,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12579,
											"end": 12580,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 12575,
											"end": 12587,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12575,
											"end": 12587,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12575,
											"end": 12587,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 12575,
											"end": 12587,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12622,
											"end": 12634,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12622,
											"end": 12634,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12622,
											"end": 12634,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 12643,
											"end": 12704,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "660"
										},
										{
											"begin": 12643,
											"end": 12704,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12697,
											"end": 12701,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 12689,
											"end": 12695,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12685,
											"end": 12702,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 12675,
											"end": 12702,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12675,
											"end": 12702,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12643,
											"end": 12704,
											"name": "tag",
											"source": 10,
											"value": "660"
										},
										{
											"begin": 12643,
											"end": 12704,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12750,
											"end": 12752,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12742,
											"end": 12748,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12739,
											"end": 12753,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 12719,
											"end": 12737,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12716,
											"end": 12754,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12713,
											"end": 12874,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 12713,
											"end": 12874,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 12796,
											"end": 12806,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 12791,
											"end": 12794,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 12787,
											"end": 12807,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 12784,
											"end": 12785,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12777,
											"end": 12808,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12831,
											"end": 12835,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 12828,
											"end": 12829,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12821,
											"end": 12836,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12859,
											"end": 12863,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12856,
											"end": 12857,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12849,
											"end": 12864,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 13582,
											"end": 13926,
											"name": "tag",
											"source": 10,
											"value": "233"
										},
										{
											"begin": 13582,
											"end": 13926,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13784,
											"end": 13786,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13766,
											"end": 13787,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 13766,
											"end": 13787,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13766,
											"end": 13787,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13823,
											"end": 13825,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 13803,
											"end": 13821,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13803,
											"end": 13821,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13803,
											"end": 13821,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13796,
											"end": 13826,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14D8DBDC9948191BD95CC81B9BDD08195E1A5CDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13857,
											"end": 13859,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13842,
											"end": 13860,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13842,
											"end": 13860,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13835,
											"end": 13885,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13917,
											"end": 13919,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 13902,
											"end": 13920,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13902,
											"end": 13920,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13582,
											"end": 13926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14279,
											"end": 14406,
											"name": "tag",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 14279,
											"end": 14406,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14340,
											"end": 14350,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 14335,
											"end": 14338,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 14331,
											"end": 14351,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 14328,
											"end": 14329,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14321,
											"end": 14352,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14371,
											"end": 14375,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 14368,
											"end": 14369,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14361,
											"end": 14376,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14395,
											"end": 14399,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14392,
											"end": 14393,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14385,
											"end": 14400,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 14411,
											"end": 14536,
											"name": "tag",
											"source": 10,
											"value": "238"
										},
										{
											"begin": 14411,
											"end": 14536,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14476,
											"end": 14485,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14476,
											"end": 14485,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14476,
											"end": 14485,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14497,
											"end": 14507,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14497,
											"end": 14507,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14497,
											"end": 14507,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14494,
											"end": 14530,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14494,
											"end": 14530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 14494,
											"end": 14530,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 14510,
											"end": 14528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 14510,
											"end": 14528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15368,
											"end": 15913,
											"name": "tag",
											"source": 10,
											"value": "546"
										},
										{
											"begin": 15368,
											"end": 15913,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15470,
											"end": 15472,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 15465,
											"end": 15468,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15462,
											"end": 15473,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15459,
											"end": 15907,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15459,
											"end": 15907,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "260"
										},
										{
											"begin": 15459,
											"end": 15907,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15506,
											"end": 15507,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15531,
											"end": 15536,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15527,
											"end": 15529,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15520,
											"end": 15537,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15576,
											"end": 15580,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15572,
											"end": 15574,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15562,
											"end": 15581,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 15646,
											"end": 15648,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 15634,
											"end": 15644,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15630,
											"end": 15649,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15627,
											"end": 15628,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 15623,
											"end": 15650,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 15617,
											"end": 15621,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15613,
											"end": 15651,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15682,
											"end": 15686,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15670,
											"end": 15680,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 15667,
											"end": 15687,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 15664,
											"end": 15711,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15664,
											"end": 15711,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "675"
										},
										{
											"begin": 15664,
											"end": 15711,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15705,
											"end": 15709,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15664,
											"end": 15711,
											"name": "tag",
											"source": 10,
											"value": "675"
										},
										{
											"begin": 15664,
											"end": 15711,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15760,
											"end": 15762,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 15755,
											"end": 15758,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15751,
											"end": 15763,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15748,
											"end": 15749,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 15744,
											"end": 15764,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 15738,
											"end": 15742,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15734,
											"end": 15765,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15724,
											"end": 15765,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15724,
											"end": 15765,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15815,
											"end": 15897,
											"name": "tag",
											"source": 10,
											"value": "676"
										},
										{
											"begin": 15815,
											"end": 15897,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15833,
											"end": 15835,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15826,
											"end": 15831,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15823,
											"end": 15836,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 15815,
											"end": 15897,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15815,
											"end": 15897,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "678"
										},
										{
											"begin": 15815,
											"end": 15897,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15878,
											"end": 15895,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15878,
											"end": 15895,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15878,
											"end": 15895,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 15859,
											"end": 15860,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 15848,
											"end": 15861,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15815,
											"end": 15897,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "676"
										},
										{
											"begin": 15815,
											"end": 15897,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15815,
											"end": 15897,
											"name": "tag",
											"source": 10,
											"value": "678"
										},
										{
											"begin": 15815,
											"end": 15897,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15819,
											"end": 15822,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15819,
											"end": 15822,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15819,
											"end": 15822,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15368,
											"end": 15913,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15368,
											"end": 15913,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15368,
											"end": 15913,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15368,
											"end": 15913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16089,
											"end": 17441,
											"name": "tag",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 16089,
											"end": 17441,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16215,
											"end": 16218,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16209,
											"end": 16219,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 16242,
											"end": 16260,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16234,
											"end": 16240,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16231,
											"end": 16261,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 16228,
											"end": 16284,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 16228,
											"end": 16284,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "682"
										},
										{
											"begin": 16228,
											"end": 16284,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16264,
											"end": 16282,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "682"
										},
										{
											"begin": 16264,
											"end": 16282,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 16264,
											"end": 16282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16264,
											"end": 16282,
											"name": "tag",
											"source": 10,
											"value": "682"
										},
										{
											"begin": 16264,
											"end": 16282,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16293,
											"end": 16390,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "683"
										},
										{
											"begin": 16383,
											"end": 16389,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16343,
											"end": 16381,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "684"
										},
										{
											"begin": 16375,
											"end": 16379,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16369,
											"end": 16380,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 16343,
											"end": 16381,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 16343,
											"end": 16381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16343,
											"end": 16381,
											"name": "tag",
											"source": 10,
											"value": "684"
										},
										{
											"begin": 16343,
											"end": 16381,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16337,
											"end": 16341,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16293,
											"end": 16390,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "546"
										},
										{
											"begin": 16293,
											"end": 16390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16293,
											"end": 16390,
											"name": "tag",
											"source": 10,
											"value": "683"
										},
										{
											"begin": 16293,
											"end": 16390,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16445,
											"end": 16449,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16445,
											"end": 16449,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 16509,
											"end": 16511,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 16498,
											"end": 16512,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16498,
											"end": 16512,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 16526,
											"end": 16527,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 16521,
											"end": 17184,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16521,
											"end": 17184,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 16521,
											"end": 17184,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "686"
										},
										{
											"begin": 16521,
											"end": 17184,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17228,
											"end": 17229,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17245,
											"end": 17251,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17242,
											"end": 17331,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 17242,
											"end": 17331,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "687"
										},
										{
											"begin": 17242,
											"end": 17331,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17297,
											"end": 17316,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 17297,
											"end": 17316,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17297,
											"end": 17316,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17291,
											"end": 17317,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 17242,
											"end": 17331,
											"name": "tag",
											"source": 10,
											"value": "687"
										},
										{
											"begin": 17242,
											"end": 17331,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16046,
											"end": 16047,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 16042,
											"end": 16053,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 16042,
											"end": 16053,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16042,
											"end": 16053,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 16038,
											"end": 16062,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 16034,
											"end": 16063,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 16024,
											"end": 16064,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16070,
											"end": 16071,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 16066,
											"end": 16077,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16066,
											"end": 16077,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16066,
											"end": 16077,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 16021,
											"end": 16078,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 17344,
											"end": 17425,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 17344,
											"end": 17425,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 16491,
											"end": 17435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "678"
										},
										{
											"begin": 16491,
											"end": 17435,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16521,
											"end": 17184,
											"name": "tag",
											"source": 10,
											"value": "686"
										},
										{
											"begin": 16521,
											"end": 17184,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15315,
											"end": 15316,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15308,
											"end": 15322,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 15308,
											"end": 15322,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15308,
											"end": 15322,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15352,
											"end": 15356,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15339,
											"end": 15357,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15339,
											"end": 15357,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 16557,
											"end": 16577,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 16557,
											"end": 16577,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 16557,
											"end": 16577,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16675,
											"end": 16911,
											"name": "tag",
											"source": 10,
											"value": "690"
										},
										{
											"begin": 16675,
											"end": 16911,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16689,
											"end": 16696,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16686,
											"end": 16687,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16683,
											"end": 16697,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 16675,
											"end": 16911,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 16675,
											"end": 16911,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "692"
										},
										{
											"begin": 16675,
											"end": 16911,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 16778,
											"end": 16797,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 16778,
											"end": 16797,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 16778,
											"end": 16797,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16772,
											"end": 16798,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 16757,
											"end": 16799,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16757,
											"end": 16799,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 16870,
											"end": 16897,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 16870,
											"end": 16897,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16870,
											"end": 16897,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16870,
											"end": 16897,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 16838,
											"end": 16839,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 16826,
											"end": 16840,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16826,
											"end": 16840,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16826,
											"end": 16840,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16826,
											"end": 16840,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16705,
											"end": 16724,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 16705,
											"end": 16724,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16675,
											"end": 16911,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "690"
										},
										{
											"begin": 16675,
											"end": 16911,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16675,
											"end": 16911,
											"name": "tag",
											"source": 10,
											"value": "692"
										},
										{
											"begin": 16675,
											"end": 16911,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16679,
											"end": 16682,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16939,
											"end": 16945,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 16930,
											"end": 16937,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16927,
											"end": 16946,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 16924,
											"end": 17125,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 16924,
											"end": 17125,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "693"
										},
										{
											"begin": 16924,
											"end": 17125,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17000,
											"end": 17019,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 17000,
											"end": 17019,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 17000,
											"end": 17019,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16994,
											"end": 17020,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17083,
											"end": 17084,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 17079,
											"end": 17093,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 17079,
											"end": 17093,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17079,
											"end": 17093,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 17095,
											"end": 17098,
											"name": "PUSH",
											"source": 10,
											"value": "F8"
										},
										{
											"begin": 17075,
											"end": 17099,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17071,
											"end": 17108,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 17067,
											"end": 17109,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 17052,
											"end": 17110,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 17037,
											"end": 17111,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17037,
											"end": 17111,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 16924,
											"end": 17125,
											"name": "tag",
											"source": 10,
											"value": "693"
										},
										{
											"begin": 16924,
											"end": 17125,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17171,
											"end": 17172,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 17155,
											"end": 17169,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17155,
											"end": 17169,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17155,
											"end": 17169,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 17151,
											"end": 17173,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17138,
											"end": 17174,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17138,
											"end": 17174,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16089,
											"end": 17441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17446,
											"end": 17737,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 17446,
											"end": 17737,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17623,
											"end": 17629,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17612,
											"end": 17621,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17605,
											"end": 17630,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17666,
											"end": 17668,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17661,
											"end": 17663,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17650,
											"end": 17659,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17646,
											"end": 17664,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17639,
											"end": 17669,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17586,
											"end": 17590,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17686,
											"end": 17731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 17727,
											"end": 17729,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 17716,
											"end": 17725,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17712,
											"end": 17730,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17704,
											"end": 17710,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 17686,
											"end": 17731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 17686,
											"end": 17731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17742,
											"end": 17869,
											"name": "tag",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 17742,
											"end": 17869,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17803,
											"end": 17813,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 17798,
											"end": 17801,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 17794,
											"end": 17814,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 17791,
											"end": 17792,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17784,
											"end": 17815,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17834,
											"end": 17838,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 17831,
											"end": 17832,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 17824,
											"end": 17839,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17858,
											"end": 17862,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 17855,
											"end": 17856,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17848,
											"end": 17863,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 17874,
											"end": 18009,
											"name": "tag",
											"source": 10,
											"value": "278"
										},
										{
											"begin": 17874,
											"end": 18009,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17913,
											"end": 17916,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17934,
											"end": 17951,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 17934,
											"end": 17951,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17934,
											"end": 17951,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17931,
											"end": 17974,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "699"
										},
										{
											"begin": 17931,
											"end": 17974,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 17954,
											"end": 17972,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "699"
										},
										{
											"begin": 17954,
											"end": 17972,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 17954,
											"end": 17972,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17954,
											"end": 17972,
											"name": "tag",
											"source": 10,
											"value": "699"
										},
										{
											"begin": 17954,
											"end": 17972,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18001,
											"end": 18002,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 17990,
											"end": 18003,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17990,
											"end": 18003,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17874,
											"end": 18009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18370,
											"end": 18659,
											"name": "tag",
											"source": 10,
											"value": "309"
										},
										{
											"begin": 18370,
											"end": 18659,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18501,
											"end": 18504,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18539,
											"end": 18545,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18533,
											"end": 18546,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 18555,
											"end": 18621,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "702"
										},
										{
											"begin": 18614,
											"end": 18620,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18609,
											"end": 18612,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 18602,
											"end": 18606,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18594,
											"end": 18600,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 18590,
											"end": 18607,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18555,
											"end": 18621,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 18555,
											"end": 18621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18555,
											"end": 18621,
											"name": "tag",
											"source": 10,
											"value": "702"
										},
										{
											"begin": 18555,
											"end": 18621,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18637,
											"end": 18653,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18637,
											"end": 18653,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18637,
											"end": 18653,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18637,
											"end": 18653,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18637,
											"end": 18653,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 18370,
											"end": 18659,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18370,
											"end": 18659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19715,
											"end": 19940,
											"name": "tag",
											"source": 10,
											"value": "324"
										},
										{
											"begin": 19715,
											"end": 19940,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19819,
											"end": 19823,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 19798,
											"end": 19810,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19798,
											"end": 19810,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19798,
											"end": 19810,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 19812,
											"end": 19824,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19812,
											"end": 19824,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19812,
											"end": 19824,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 19794,
											"end": 19825,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 19845,
											"end": 19867,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19845,
											"end": 19867,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19845,
											"end": 19867,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 19845,
											"end": 19867,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19886,
											"end": 19910,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19886,
											"end": 19910,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19886,
											"end": 19910,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 19876,
											"end": 19934,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "708"
										},
										{
											"begin": 19876,
											"end": 19934,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 19914,
											"end": 19932,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "708"
										},
										{
											"begin": 19914,
											"end": 19932,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 19914,
											"end": 19932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19914,
											"end": 19932,
											"name": "tag",
											"source": 10,
											"value": "708"
										},
										{
											"begin": 19914,
											"end": 19932,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19876,
											"end": 19934,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19715,
											"end": 19940,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 19715,
											"end": 19940,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19715,
											"end": 19940,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19715,
											"end": 19940,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19715,
											"end": 19940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19945,
											"end": 20093,
											"name": "tag",
											"source": 10,
											"value": "330"
										},
										{
											"begin": 19945,
											"end": 20093,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20033,
											"end": 20037,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 20012,
											"end": 20024,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20012,
											"end": 20024,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20012,
											"end": 20024,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 20026,
											"end": 20038,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20026,
											"end": 20038,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20026,
											"end": 20038,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 20008,
											"end": 20039,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20008,
											"end": 20039,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20051,
											"end": 20064,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20051,
											"end": 20064,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 20048,
											"end": 20087,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 20048,
											"end": 20087,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 20048,
											"end": 20087,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20067,
											"end": 20085,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 20067,
											"end": 20085,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 20067,
											"end": 20085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20098,
											"end": 20360,
											"name": "tag",
											"source": 10,
											"value": "335"
										},
										{
											"begin": 20098,
											"end": 20360,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20136,
											"end": 20137,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20170,
											"end": 20174,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 20167,
											"end": 20168,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20163,
											"end": 20175,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 20194,
											"end": 20197,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 20184,
											"end": 20318,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "713"
										},
										{
											"begin": 20184,
											"end": 20318,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20240,
											"end": 20250,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 20235,
											"end": 20238,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 20231,
											"end": 20251,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 20228,
											"end": 20229,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20221,
											"end": 20252,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20275,
											"end": 20279,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 20272,
											"end": 20273,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 20265,
											"end": 20280,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20303,
											"end": 20307,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 20300,
											"end": 20301,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20293,
											"end": 20308,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 20184,
											"end": 20318,
											"name": "tag",
											"source": 10,
											"value": "713"
										},
										{
											"begin": 20184,
											"end": 20318,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20350,
											"end": 20353,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 20343,
											"end": 20347,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 20340,
											"end": 20341,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20336,
											"end": 20348,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 20332,
											"end": 20354,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 20327,
											"end": 20354,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20327,
											"end": 20354,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20327,
											"end": 20354,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20098,
											"end": 20360,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 20098,
											"end": 20360,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20098,
											"end": 20360,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20098,
											"end": 20360,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20098,
											"end": 20360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20365,
											"end": 20493,
											"name": "tag",
											"source": 10,
											"value": "337"
										},
										{
											"begin": 20365,
											"end": 20493,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20432,
											"end": 20441,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20432,
											"end": 20441,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20432,
											"end": 20441,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 20453,
											"end": 20464,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20453,
											"end": 20464,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20453,
											"end": 20464,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 20450,
											"end": 20487,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 20450,
											"end": 20487,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 20450,
											"end": 20487,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 20467,
											"end": 20485,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 20467,
											"end": 20485,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 20467,
											"end": 20485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20900,
											"end": 21427,
											"name": "tag",
											"source": 10,
											"value": "348"
										},
										{
											"begin": 20900,
											"end": 21427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21153,
											"end": 21159,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21142,
											"end": 21151,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21135,
											"end": 21160,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21196,
											"end": 21199,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 21191,
											"end": 21193,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21180,
											"end": 21189,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21176,
											"end": 21194,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21169,
											"end": 21200,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21116,
											"end": 21120,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21223,
											"end": 21269,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "719"
										},
										{
											"begin": 21264,
											"end": 21267,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 21253,
											"end": 21262,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21249,
											"end": 21268,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21241,
											"end": 21247,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 21223,
											"end": 21269,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 21223,
											"end": 21269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21223,
											"end": 21269,
											"name": "tag",
											"source": 10,
											"value": "719"
										},
										{
											"begin": 21223,
											"end": 21269,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21317,
											"end": 21326,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21309,
											"end": 21315,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21305,
											"end": 21327,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 21300,
											"end": 21302,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 21289,
											"end": 21298,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21285,
											"end": 21303,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21278,
											"end": 21328,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21345,
											"end": 21378,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "720"
										},
										{
											"begin": 21371,
											"end": 21377,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21363,
											"end": 21369,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 21345,
											"end": 21378,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 21345,
											"end": 21378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21345,
											"end": 21378,
											"name": "tag",
											"source": 10,
											"value": "720"
										},
										{
											"begin": 21345,
											"end": 21378,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21337,
											"end": 21378,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21337,
											"end": 21378,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21337,
											"end": 21378,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21414,
											"end": 21420,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21409,
											"end": 21411,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 21398,
											"end": 21407,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21394,
											"end": 21412,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21387,
											"end": 21421,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20900,
											"end": 21427,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 20900,
											"end": 21427,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 20900,
											"end": 21427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20900,
											"end": 21427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20900,
											"end": 21427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20900,
											"end": 21427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20900,
											"end": 21427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20900,
											"end": 21427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21776,
											"end": 21912,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 21776,
											"end": 21912,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21815,
											"end": 21818,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21843,
											"end": 21848,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21833,
											"end": 21872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "724"
										},
										{
											"begin": 21833,
											"end": 21872,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 21852,
											"end": 21870,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "724"
										},
										{
											"begin": 21852,
											"end": 21870,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 21852,
											"end": 21870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21852,
											"end": 21870,
											"name": "tag",
											"source": 10,
											"value": "724"
										},
										{
											"begin": 21852,
											"end": 21870,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 21888,
											"end": 21906,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21888,
											"end": 21906,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21776,
											"end": 21912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22571,
											"end": 22872,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 22571,
											"end": 22872,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22742,
											"end": 22744,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 22731,
											"end": 22740,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22724,
											"end": 22745,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22705,
											"end": 22709,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22762,
											"end": 22807,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "729"
										},
										{
											"begin": 22803,
											"end": 22805,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 22792,
											"end": 22801,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22788,
											"end": 22806,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22780,
											"end": 22786,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 22762,
											"end": 22807,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 22762,
											"end": 22807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22762,
											"end": 22807,
											"name": "tag",
											"source": 10,
											"value": "729"
										},
										{
											"begin": 22762,
											"end": 22807,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22754,
											"end": 22807,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22754,
											"end": 22807,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22857,
											"end": 22863,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22850,
											"end": 22864,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 22843,
											"end": 22865,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 22838,
											"end": 22840,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22827,
											"end": 22836,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22823,
											"end": 22841,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22816,
											"end": 22866,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22571,
											"end": 22872,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 22571,
											"end": 22872,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 22571,
											"end": 22872,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22571,
											"end": 22872,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22571,
											"end": 22872,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22571,
											"end": 22872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									],
									".data": {
										"A33092EC2EA5E84579A4A7F81A8171C84A984183E655AB76A6EA5C0D5344C7B0": "482648e7878e9fa54c0a2f67ffd22d00ebc37cf7a03e060e428d2ab0cd6735cc",
										"CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8": "a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol",
								"CrossFi-Treasury-Guard/contracts/interfaces/IAIScoreRegistry.sol",
								"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ADMIN_ROLE()": "75b238fc",
							"AI_ORACLE_ROLE()": "c601f7af",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"DISPUTE_RESOLVER_ROLE()": "bfe42a37",
							"MAX_SCORE()": "27ff6223",
							"MILESTONE_APPROVER_ROLE()": "a02d72fb",
							"MIN_SCORE()": "40b89270",
							"SCORE_VALIDITY_PERIOD()": "a91ad18e",
							"TREASURY_MANAGER_ROLE()": "ebdf690f",
							"authorizedOracles(address)": "61c992a3",
							"getAIScore(uint256)": "0311b82d",
							"getAllRoles()": "f2bcac3d",
							"getDetailedAIScore(uint256)": "ea535940",
							"getOracleStats(address)": "c772a8a6",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleCount(address)": "aca5a8a7",
							"getScoringBreakdown(uint256)": "cfe85a2f",
							"grantMultipleRoles(address,bytes32[])": "91b9f9d8",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasAIScore(uint256)": "96caac0a",
							"hasAnyRole(address,bytes32[])": "68ca78f9",
							"hasRole(bytes32,address)": "91d14854",
							"oracleScoreCount(address)": "7131f025",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"removeScore(uint256,string)": "b8a956d3",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeMultipleRoles(address,bytes32[])": "4fe9d1f5",
							"revokeRole(bytes32,address)": "d547741f",
							"scoringWeights()": "4da89fbd",
							"setOracleAuthorization(address,bool)": "d5c1a1e1",
							"setSupportedModel(string,bool)": "ba340773",
							"submitAIScore(uint256,uint256,string,string,(uint8,uint8,uint8,uint8,uint8))": "7092b0bc",
							"supportedModels(string)": "2ed49cf7",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalScoresSubmitted()": "3a1e017f",
							"unpause()": "3f4ba83a",
							"updateAIScore(uint256,uint256,string,string)": "2b116373",
							"updateScoringCriteria((uint8,uint8,uint8,uint8,uint8))": "ff8dea01"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"overallScore\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"justificationIPFS\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"modelVersion\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"AIScoreSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"modelVersion\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"supported\",\"type\":\"bool\"}],\"name\":\"ModelSupported\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"authorized\",\"type\":\"bool\"}],\"name\":\"OracleAuthorized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newScore\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"ScoreUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"ecosystemContribution\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feasibility\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"riskAssessment\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"teamReputation\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"innovation\",\"type\":\"uint8\"}],\"indexed\":false,\"internalType\":\"struct AIScoreRegistry.ScoringCriteria\",\"name\":\"newCriteria\",\"type\":\"tuple\"}],\"name\":\"ScoringCriteriaUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"AI_ORACLE_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DISPUTE_RESOLVER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_SCORE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MILESTONE_APPROVER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_SCORE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SCORE_VALIDITY_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TREASURY_MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorizedOracles\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getAIScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"justification\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllRoles\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getDetailedAIScore\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"overallScore\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"justificationIPFS\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"modelVersion\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"ecosystemScore\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feasibilityScore\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"riskScore\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"teamScore\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"innovationScore\",\"type\":\"uint8\"}],\"internalType\":\"struct IAIScoreRegistry.ScoringBreakdown\",\"name\":\"breakdown\",\"type\":\"tuple\"}],\"internalType\":\"struct AIScoreRegistry.AIScoreData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"}],\"name\":\"getOracleStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"scoreCount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isAuthorized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getRoleCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"roleCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getScoringBreakdown\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"ecosystemScore\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feasibilityScore\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"riskScore\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"teamScore\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"innovationScore\",\"type\":\"uint8\"}],\"internalType\":\"struct IAIScoreRegistry.ScoringBreakdown\",\"name\":\"breakdown\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"}],\"name\":\"grantMultipleRoles\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"hasAIScore\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"}],\"name\":\"hasAnyRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"oracleScoreCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"removeScore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"}],\"name\":\"revokeMultipleRoles\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"scoringWeights\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"ecosystemContribution\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feasibility\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"riskAssessment\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"teamReputation\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"innovation\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"authorized\",\"type\":\"bool\"}],\"name\":\"setOracleAuthorization\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"modelVersion\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"supported\",\"type\":\"bool\"}],\"name\":\"setSupportedModel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"overallScore\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"justificationIPFS\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"modelVersion\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"ecosystemScore\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feasibilityScore\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"riskScore\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"teamScore\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"innovationScore\",\"type\":\"uint8\"}],\"internalType\":\"struct IAIScoreRegistry.ScoringBreakdown\",\"name\":\"breakdown\",\"type\":\"tuple\"}],\"name\":\"submitAIScore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"supportedModels\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalScoresSubmitted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newScore\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"newJustificationIPFS\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"updateAIScore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"ecosystemContribution\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feasibility\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"riskAssessment\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"teamReputation\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"innovation\",\"type\":\"uint8\"}],\"internalType\":\"struct AIScoreRegistry.ScoringCriteria\",\"name\":\"newCriteria\",\"type\":\"tuple\"}],\"name\":\"updateScoringCriteria\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"CrossFi Treasury Guard Team\",\"details\":\"Stores AI-generated scores and IPFS CIDs for proposal analysis\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"getAIScore(uint256)\":{\"details\":\"Get AI score for a proposal\",\"params\":{\"proposalId\":\"The proposal ID\"},\"returns\":{\"exists\":\"Whether score exists\",\"justification\":\"IPFS CID for detailed analysis\",\"score\":\"Overall AI score\"}},\"getAllRoles()\":{\"details\":\"Get all available roles\",\"returns\":{\"roles\":\"Array of all role identifiers\"}},\"getDetailedAIScore(uint256)\":{\"details\":\"Get detailed AI score data\",\"params\":{\"proposalId\":\"The proposal ID\"},\"returns\":{\"_0\":\"Complete AI score data structure\"}},\"getOracleStats(address)\":{\"details\":\"Get oracle statistics\",\"params\":{\"oracle\":\"Oracle address\"},\"returns\":{\"isAuthorized\":\"Whether oracle is authorized\",\"scoreCount\":\"Number of scores submitted by oracle\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleCount(address)\":{\"details\":\"Get all roles for an account\",\"params\":{\"account\":\"Account to check\"},\"returns\":{\"roleCount\":\"Number of roles the account has\"}},\"getScoringBreakdown(uint256)\":{\"details\":\"Get scoring breakdown for a proposal\",\"params\":{\"proposalId\":\"The proposal ID\"},\"returns\":{\"breakdown\":\"Detailed scoring breakdown\"}},\"grantMultipleRoles(address,bytes32[])\":{\"details\":\"Grant multiple roles to an account\",\"params\":{\"account\":\"Account to grant roles to\",\"roles\":\"Array of role identifiers\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasAIScore(uint256)\":{\"details\":\"Check if AI score exists for a proposal\",\"params\":{\"proposalId\":\"The proposal ID\"},\"returns\":{\"exists\":\"Whether score exists\"}},\"hasAnyRole(address,bytes32[])\":{\"details\":\"Check if account has any of the specified roles\",\"params\":{\"account\":\"Account to check\",\"roles\":\"Array of role identifiers\"},\"returns\":{\"_0\":\"hasAnyRole True if account has at least one of the roles\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"removeScore(uint256,string)\":{\"details\":\"Emergency function to remove invalid score\",\"params\":{\"proposalId\":\"The proposal ID\",\"reason\":\"Reason for removal\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeMultipleRoles(address,bytes32[])\":{\"details\":\"Revoke multiple roles from an account\",\"params\":{\"account\":\"Account to revoke roles from\",\"roles\":\"Array of role identifiers\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setOracleAuthorization(address,bool)\":{\"details\":\"Authorize or deauthorize an AI oracle\",\"params\":{\"authorized\":\"Authorization status\",\"oracle\":\"Oracle address\"}},\"setSupportedModel(string,bool)\":{\"details\":\"Add or remove supported AI model\",\"params\":{\"modelVersion\":\"Model version string\",\"supported\":\"Whether model is supported\"}},\"submitAIScore(uint256,uint256,string,string,(uint8,uint8,uint8,uint8,uint8))\":{\"details\":\"Submit AI-generated score for a proposal\",\"params\":{\"breakdown\":\"Detailed scoring breakdown\",\"justificationIPFS\":\"IPFS CID containing detailed analysis\",\"modelVersion\":\"AI model version used\",\"overallScore\":\"Overall AI score (0-100)\",\"proposalId\":\"The proposal ID\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"updateAIScore(uint256,uint256,string,string)\":{\"details\":\"Update existing AI score (only within validity period)\",\"params\":{\"newJustificationIPFS\":\"New IPFS CID for updated analysis\",\"newScore\":\"New overall score\",\"proposalId\":\"The proposal ID\",\"reason\":\"Reason for score update\"}},\"updateScoringCriteria((uint8,uint8,uint8,uint8,uint8))\":{\"details\":\"Update scoring criteria weights\",\"params\":{\"newCriteria\":\"New scoring criteria\"}}},\"title\":\"AIScoreRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":\"AIScoreRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol\":{\"keccak256\":\"0x0ee26ac494c1988dd2d6e0d1bf4e9958c1f6071ebe582d9dbd54e0b9b9dc1f09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9baf8f4b005ae29df38f8c7a7c5230ac77b8fd8fb92a748932513f9b145e354\",\"dweb:/ipfs/QmPDwc8CssF4d4oRsg6MgbWxrm7Xt22MG8FqEQsTksMYKw\"]},\"CrossFi-Treasury-Guard/contracts/interfaces/IAIScoreRegistry.sol\":{\"keccak256\":\"0xb36aceb50a3c334f727f77bbd2f6660b3a7f48226a1cc73c6b4273f03c1c6b17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b080c589ae5af3faf1a2a218267478d86dc5408b674e696f4a9a5b617ac46ff\",\"dweb:/ipfs/QmaYY5xJZHYqg7KPdB25pTZyYnhcDrN3miPVTTUE38tvJS\"]},\"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":{\"keccak256\":\"0x8b7cd81ef25f52c2cdffb0879b4c8d953d671eef13fa1ebdda28c0c2e16c52da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc0018431667094cdb37883ffc7417dfd2c552844692f1340143f4e7e4b903f3\",\"dweb:/ipfs/QmPdnh9tbMBQCaazQ2fzbQSKKxkERU75TcSDZ9KVfDhujb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol:AIScoreRegistry",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)22_storage)"
							},
							{
								"astId": 397,
								"contract": "CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol:AIScoreRegistry",
								"label": "_paused",
								"offset": 0,
								"slot": "1",
								"type": "t_bool"
							},
							{
								"astId": 498,
								"contract": "CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol:AIScoreRegistry",
								"label": "_status",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 667,
								"contract": "CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol:AIScoreRegistry",
								"label": "aiScores",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint256,t_struct(AIScoreData)662_storage)"
							},
							{
								"astId": 671,
								"contract": "CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol:AIScoreRegistry",
								"label": "authorizedOracles",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 675,
								"contract": "CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol:AIScoreRegistry",
								"label": "supportedModels",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_string_memory_ptr,t_bool)"
							},
							{
								"astId": 678,
								"contract": "CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol:AIScoreRegistry",
								"label": "scoringWeights",
								"offset": 0,
								"slot": "6",
								"type": "t_struct(ScoringCriteria)644_storage"
							},
							{
								"astId": 689,
								"contract": "CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol:AIScoreRegistry",
								"label": "totalScoresSubmitted",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 693,
								"contract": "CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol:AIScoreRegistry",
								"label": "oracleScoreCount",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)22_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)22_storage"
							},
							"t_mapping(t_string_memory_ptr,t_bool)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_uint256,t_struct(AIScoreData)662_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct AIScoreRegistry.AIScoreData)",
								"numberOfBytes": "32",
								"value": "t_struct(AIScoreData)662_storage"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(AIScoreData)662_storage": {
								"encoding": "inplace",
								"label": "struct AIScoreRegistry.AIScoreData",
								"members": [
									{
										"astId": 646,
										"contract": "CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol:AIScoreRegistry",
										"label": "proposalId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 648,
										"contract": "CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol:AIScoreRegistry",
										"label": "overallScore",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 650,
										"contract": "CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol:AIScoreRegistry",
										"label": "justificationIPFS",
										"offset": 0,
										"slot": "2",
										"type": "t_string_storage"
									},
									{
										"astId": 652,
										"contract": "CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol:AIScoreRegistry",
										"label": "modelVersion",
										"offset": 0,
										"slot": "3",
										"type": "t_string_storage"
									},
									{
										"astId": 654,
										"contract": "CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol:AIScoreRegistry",
										"label": "timestamp",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 656,
										"contract": "CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol:AIScoreRegistry",
										"label": "oracle",
										"offset": 0,
										"slot": "5",
										"type": "t_address"
									},
									{
										"astId": 658,
										"contract": "CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol:AIScoreRegistry",
										"label": "exists",
										"offset": 20,
										"slot": "5",
										"type": "t_bool"
									},
									{
										"astId": 661,
										"contract": "CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol:AIScoreRegistry",
										"label": "breakdown",
										"offset": 0,
										"slot": "6",
										"type": "t_struct(ScoringBreakdown)1394_storage"
									}
								],
								"numberOfBytes": "224"
							},
							"t_struct(RoleData)22_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 19,
										"contract": "CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol:AIScoreRegistry",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 21,
										"contract": "CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol:AIScoreRegistry",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(ScoringBreakdown)1394_storage": {
								"encoding": "inplace",
								"label": "struct IAIScoreRegistry.ScoringBreakdown",
								"members": [
									{
										"astId": 1385,
										"contract": "CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol:AIScoreRegistry",
										"label": "ecosystemScore",
										"offset": 0,
										"slot": "0",
										"type": "t_uint8"
									},
									{
										"astId": 1387,
										"contract": "CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol:AIScoreRegistry",
										"label": "feasibilityScore",
										"offset": 1,
										"slot": "0",
										"type": "t_uint8"
									},
									{
										"astId": 1389,
										"contract": "CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol:AIScoreRegistry",
										"label": "riskScore",
										"offset": 2,
										"slot": "0",
										"type": "t_uint8"
									},
									{
										"astId": 1391,
										"contract": "CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol:AIScoreRegistry",
										"label": "teamScore",
										"offset": 3,
										"slot": "0",
										"type": "t_uint8"
									},
									{
										"astId": 1393,
										"contract": "CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol:AIScoreRegistry",
										"label": "innovationScore",
										"offset": 4,
										"slot": "0",
										"type": "t_uint8"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(ScoringCriteria)644_storage": {
								"encoding": "inplace",
								"label": "struct AIScoreRegistry.ScoringCriteria",
								"members": [
									{
										"astId": 635,
										"contract": "CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol:AIScoreRegistry",
										"label": "ecosystemContribution",
										"offset": 0,
										"slot": "0",
										"type": "t_uint8"
									},
									{
										"astId": 637,
										"contract": "CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol:AIScoreRegistry",
										"label": "feasibility",
										"offset": 1,
										"slot": "0",
										"type": "t_uint8"
									},
									{
										"astId": 639,
										"contract": "CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol:AIScoreRegistry",
										"label": "riskAssessment",
										"offset": 2,
										"slot": "0",
										"type": "t_uint8"
									},
									{
										"astId": 641,
										"contract": "CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol:AIScoreRegistry",
										"label": "teamReputation",
										"offset": 3,
										"slot": "0",
										"type": "t_uint8"
									},
									{
										"astId": 643,
										"contract": "CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol:AIScoreRegistry",
										"label": "innovation",
										"offset": 4,
										"slot": "0",
										"type": "t_uint8"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"CrossFi-Treasury-Guard/contracts/interfaces/IAIScoreRegistry.sol": {
				"IAIScoreRegistry": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "overallScore",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "justificationIPFS",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "modelVersion",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "oracle",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "AIScoreSubmitted",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "getAIScore",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "score",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "justification",
									"type": "string"
								},
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "hasAIScore",
							"outputs": [
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "overallScore",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "justificationIPFS",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "modelVersion",
									"type": "string"
								},
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "ecosystemScore",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "feasibilityScore",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "riskScore",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "teamScore",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "innovationScore",
											"type": "uint8"
										}
									],
									"internalType": "struct IAIScoreRegistry.ScoringBreakdown",
									"name": "breakdown",
									"type": "tuple"
								}
							],
							"name": "submitAIScore",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for AIScoreRegistry contract",
						"kind": "dev",
						"methods": {},
						"title": "IAIScoreRegistry",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAIScore(uint256)": "0311b82d",
							"hasAIScore(uint256)": "96caac0a",
							"submitAIScore(uint256,uint256,string,string,(uint8,uint8,uint8,uint8,uint8))": "7092b0bc"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"overallScore\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"justificationIPFS\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"modelVersion\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"AIScoreSubmitted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getAIScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"justification\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"hasAIScore\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"overallScore\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"justificationIPFS\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"modelVersion\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"ecosystemScore\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feasibilityScore\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"riskScore\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"teamScore\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"innovationScore\",\"type\":\"uint8\"}],\"internalType\":\"struct IAIScoreRegistry.ScoringBreakdown\",\"name\":\"breakdown\",\"type\":\"tuple\"}],\"name\":\"submitAIScore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for AIScoreRegistry contract\",\"kind\":\"dev\",\"methods\":{},\"title\":\"IAIScoreRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CrossFi-Treasury-Guard/contracts/interfaces/IAIScoreRegistry.sol\":\"IAIScoreRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"CrossFi-Treasury-Guard/contracts/interfaces/IAIScoreRegistry.sol\":{\"keccak256\":\"0xb36aceb50a3c334f727f77bbd2f6660b3a7f48226a1cc73c6b4273f03c1c6b17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b080c589ae5af3faf1a2a218267478d86dc5408b674e696f4a9a5b617ac46ff\",\"dweb:/ipfs/QmaYY5xJZHYqg7KPdB25pTZyYnhcDrN3miPVTTUE38tvJS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol": {
				"ExtendedAccessControl": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "AI_ORACLE_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DISPUTE_RESOLVER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MILESTONE_APPROVER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TREASURY_MANAGER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllRoles",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getRoleCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "roleCount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								}
							],
							"name": "grantMultipleRoles",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								}
							],
							"name": "hasAnyRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								}
							],
							"name": "revokeMultipleRoles",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extended access control with custom roles for CrossFi Treasury Guard",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getAllRoles()": {
								"details": "Get all available roles",
								"returns": {
									"roles": "Array of all role identifiers"
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleCount(address)": {
								"details": "Get all roles for an account",
								"params": {
									"account": "Account to check"
								},
								"returns": {
									"roleCount": "Number of roles the account has"
								}
							},
							"grantMultipleRoles(address,bytes32[])": {
								"details": "Grant multiple roles to an account",
								"params": {
									"account": "Account to grant roles to",
									"roles": "Array of role identifiers"
								}
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasAnyRole(address,bytes32[])": {
								"details": "Check if account has any of the specified roles",
								"params": {
									"account": "Account to check",
									"roles": "Array of role identifiers"
								},
								"returns": {
									"_0": "hasAnyRole True if account has at least one of the roles"
								}
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeMultipleRoles(address,bytes32[])": {
								"details": "Revoke multiple roles from an account",
								"params": {
									"account": "Account to revoke roles from",
									"roles": "Array of role identifiers"
								}
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"title": "AccessControl",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":719:793  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":744:786  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n  0x00\n    /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":775:785  msg.sender */\n  caller\n    /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":744:754  _grantRole */\n  tag_5\n    /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":744:786  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  jump\t// in\ntag_4:\n  pop\n    /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n  jump(tag_6)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_5:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6232:6236  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n  dup3\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n  dup6\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  dup2\n  keccak256\n  sload\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6297  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n  dup4\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n  dup7\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6323:6327  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n  tag_11\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  swap1\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  jump\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\ntag_11:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6364:6371  account */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6358:6362  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6407:6411  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6449:6454  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x91d14854\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xbfe42a37\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xbfe42a37\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xc601f7af\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xebdf690f\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2bcac3d\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x91d14854\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa02d72fb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xaca5a8a7\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x4fe9d1f5\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x4fe9d1f5\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x68ca78f9\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x75b238fc\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x91b9f9d8\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_23\n      tag_24\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_4:\n      tag_29\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3851:3858  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      0x01\n      add\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      jump\n    tag_29:\n      mload(0x40)\n        /* \"#utility.yul\":828:853   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":816:818   */\n      0x20\n        /* \"#utility.yul\":801:819   */\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      tag_27\n        /* \"#utility.yul\":682:859   */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_5:\n      tag_35\n      tag_36\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_6:\n      tag_35\n      tag_40\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1352:1573  function revokeMultipleRoles(address account, bytes32[] memory roles) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_7:\n      tag_35\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1816:2087  function hasAnyRole(address account, bytes32[] memory roles) external view returns (bool) {... */\n    tag_8:\n      tag_23\n      tag_47\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":306:366  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n    tag_9:\n      tag_29\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":343:366  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":306:366  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n      dup2\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":960:1179  function grantMultipleRoles(address account, bytes32[] memory roles) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_10:\n      tag_35\n      tag_54\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_11:\n      tag_23\n      tag_57\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":534:620  bytes32 public constant MILESTONE_APPROVER_ROLE = keccak256(\"MILESTONE_APPROVER_ROLE\") */\n    tag_12:\n      tag_29\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":584:620  keccak256(\"MILESTONE_APPROVER_ROLE\") */\n      0x58223cdfb69946630d837d40b5c366a584f0217ada7fddd8318f2e08603cfa22\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":534:620  bytes32 public constant MILESTONE_APPROVER_ROLE = keccak256(\"MILESTONE_APPROVER_ROLE\") */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_13:\n      tag_29\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2250:2610  function getRoleCount(address account) external view returns (uint256 roleCount) {... */\n    tag_14:\n      tag_29\n      tag_67\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":626:708  bytes32 public constant DISPUTE_RESOLVER_ROLE = keccak256(\"DISPUTE_RESOLVER_ROLE\") */\n    tag_15:\n      tag_29\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":674:708  keccak256(\"DISPUTE_RESOLVER_ROLE\") */\n      0x7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":626:708  bytes32 public constant DISPUTE_RESOLVER_ROLE = keccak256(\"DISPUTE_RESOLVER_ROLE\") */\n      dup2\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":372:440  bytes32 public constant AI_ORACLE_ROLE = keccak256(\"AI_ORACLE_ROLE\") */\n    tag_16:\n      tag_29\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":413:440  keccak256(\"AI_ORACLE_ROLE\") */\n      0x482648e7878e9fa54c0a2f67ffd22d00ebc37cf7a03e060e428d2ab0cd6735cc\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":372:440  bytes32 public constant AI_ORACLE_ROLE = keccak256(\"AI_ORACLE_ROLE\") */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_17:\n      tag_35\n      tag_79\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":446:528  bytes32 public constant TREASURY_MANAGER_ROLE = keccak256(\"TREASURY_MANAGER_ROLE\") */\n    tag_18:\n      tag_29\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":494:528  keccak256(\"TREASURY_MANAGER_ROLE\") */\n      0xede9dcdb0ce99dc7cec9c7be9246ad08b37853683ad91569c187b647ddf5e21c\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":446:528  bytes32 public constant TREASURY_MANAGER_ROLE = keccak256(\"TREASURY_MANAGER_ROLE\") */\n      dup2\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2723:3087  function getAllRoles() public pure returns (bytes32[] memory roles) {... */\n    tag_19:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2626:2630  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2696  interfaceId == type(IAccessControl).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x7965db0b)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      tag_90\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:869  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2736  super.supportsInterface(interfaceId) */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2642:2736  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3851:3858  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_95\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_96\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      tag_98\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4317:4321  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4323:4330  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4316  _grantRole */\n      tag_99\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      jump\t// in\n    tag_98:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_41:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n      tag_103\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5454:5484  AccessControlBadConfirmation() */\n      mload(0x40)\n      shl(0xe1, 0x334bd919)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      tag_104\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5517:5521  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5523:5541  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5516  _revokeRole */\n      tag_105\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_104:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1352:1573  function revokeMultipleRoles(address account, bytes32[] memory roles) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_107\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_96\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_107:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1475:1484  uint256 i */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1470:1567  for (uint256 i = 0; i < roles.length; i++) {... */\n    tag_109:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1494:1499  roles */\n      dup3\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1494:1506  roles.length */\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1490:1491  i */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1490:1506  i < roles.length */\n      lt\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1470:1567  for (uint256 i = 0; i < roles.length; i++) {... */\n      iszero\n      tag_98\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1527:1556  revokeRole(roles[i], account) */\n      tag_112\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1538:1543  roles */\n      dup4\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1544:1545  i */\n      dup3\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1538:1546  roles[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_114\n      jumpi\n      tag_114\n      tag_115\n      jump\t// in\n    tag_114:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1548:1555  account */\n      dup6\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1527:1537  revokeRole */\n      tag_80\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1527:1556  revokeRole(roles[i], account) */\n      jump\t// in\n    tag_112:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1508:1511  i++ */\n      dup1\n      tag_116\n      dup2\n      tag_117\n      jump\t// in\n    tag_116:\n      swap2\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1470:1567  for (uint256 i = 0; i < roles.length; i++) {... */\n      jump(tag_109)\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1816:2087  function hasAnyRole(address account, bytes32[] memory roles) external view returns (bool) {... */\n    tag_48:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1900:1904  bool */\n      0x00\n      dup1\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1916:2059  for (uint256 i = 0; i < roles.length; i++) {... */\n    tag_119:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1940:1945  roles */\n      dup3\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1940:1952  roles.length */\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1936:1937  i */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1936:1952  i < roles.length */\n      lt\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1916:2059  for (uint256 i = 0; i < roles.length; i++) {... */\n      iszero\n      tag_120\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1977:2003  hasRole(roles[i], account) */\n      tag_122\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1985:1990  roles */\n      dup4\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1991:1992  i */\n      dup3\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1985:1993  roles[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_124\n      jumpi\n      tag_124\n      tag_115\n      jump\t// in\n    tag_124:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1995:2002  account */\n      dup6\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1977:1984  hasRole */\n      tag_58\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1977:2003  hasRole(roles[i], account) */\n      jump\t// in\n    tag_122:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1973:2049  if (hasRole(roles[i], account)) {... */\n      iszero\n      tag_125\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2030:2034  true */\n      0x01\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2023:2034  return true */\n      swap2\n      pop\n      pop\n      jump(tag_90)\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1973:2049  if (hasRole(roles[i], account)) {... */\n    tag_125:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1954:1957  i++ */\n      dup1\n      tag_126\n      dup2\n      tag_117\n      jump\t// in\n    tag_126:\n      swap2\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1916:2059  for (uint256 i = 0; i < roles.length; i++) {... */\n      jump(tag_119)\n    tag_120:\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2075:2080  false */\n      0x00\n      swap4\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1816:2087  function hasAnyRole(address account, bytes32[] memory roles) external view returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":960:1179  function grantMultipleRoles(address account, bytes32[] memory roles) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_128\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_96\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_128:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1082:1091  uint256 i */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1077:1173  for (uint256 i = 0; i < roles.length; i++) {... */\n    tag_130:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1101:1106  roles */\n      dup3\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1101:1113  roles.length */\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1097:1098  i */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1097:1113  i < roles.length */\n      lt\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1077:1173  for (uint256 i = 0; i < roles.length; i++) {... */\n      iszero\n      tag_98\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1134:1162  grantRole(roles[i], account) */\n      tag_133\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1144:1149  roles */\n      dup4\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1150:1151  i */\n      dup3\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1144:1152  roles[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_135\n      jumpi\n      tag_135\n      tag_115\n      jump\t// in\n    tag_135:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1154:1161  account */\n      dup6\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1134:1143  grantRole */\n      tag_38\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1134:1162  grantRole(roles[i], account) */\n      jump\t// in\n    tag_133:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1115:1118  i++ */\n      dup1\n      tag_136\n      dup2\n      tag_117\n      jump\t// in\n    tag_136:\n      swap2\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1077:1173  for (uint256 i = 0; i < roles.length; i++) {... */\n      jump(tag_130)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2907:2911  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2250:2610  function getRoleCount(address account) external view returns (uint256 roleCount) {... */\n    tag_69:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2312:2329  uint256 roleCount */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2341:2366  bytes32[] memory allRoles */\n      dup1\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2369:2382  getAllRoles() */\n      tag_139\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2369:2380  getAllRoles */\n      tag_85\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2369:2382  getAllRoles() */\n      jump\t// in\n    tag_139:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2341:2382  bytes32[] memory allRoles = getAllRoles() */\n      swap1\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2392:2405  uint256 count */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2433:2442  uint256 i */\n      dup1\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2428:2573  for (uint256 i = 0; i < allRoles.length; i++) {... */\n    tag_140:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2452:2460  allRoles */\n      dup3\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2452:2467  allRoles.length */\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2448:2449  i */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2448:2467  i < allRoles.length */\n      lt\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2428:2573  for (uint256 i = 0; i < allRoles.length; i++) {... */\n      iszero\n      tag_141\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2492:2521  hasRole(allRoles[i], account) */\n      tag_143\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2500:2508  allRoles */\n      dup4\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2509:2510  i */\n      dup3\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2500:2511  allRoles[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_145\n      jumpi\n      tag_145\n      tag_115\n      jump\t// in\n    tag_145:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2513:2520  account */\n      dup7\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2492:2499  hasRole */\n      tag_58\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2492:2521  hasRole(allRoles[i], account) */\n      jump\t// in\n    tag_143:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2488:2563  if (hasRole(allRoles[i], account)) {... */\n      iszero\n      tag_146\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2541:2548  count++ */\n      dup2\n      tag_147\n      dup2\n      tag_117\n      jump\t// in\n    tag_147:\n      swap3\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2488:2563  if (hasRole(allRoles[i], account)) {... */\n    tag_146:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2469:2472  i++ */\n      dup1\n      tag_148\n      dup2\n      tag_117\n      jump\t// in\n    tag_148:\n      swap2\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2428:2573  for (uint256 i = 0; i < allRoles.length; i++) {... */\n      jump(tag_140)\n    tag_141:\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2598:2603  count */\n      swap4\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2250:2610  function getRoleCount(address account) external view returns (uint256 roleCount) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3851:3858  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_151\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_96\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      tag_98\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4735:4739  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4741:4748  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4734  _revokeRole */\n      tag_105\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      jump\t// in\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2723:3087  function getAllRoles() public pure returns (bytes32[] memory roles) {... */\n    tag_85:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2809:2825  new bytes32[](6) */\n      0x40\n      dup1\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2823:2824  6 */\n      0x06\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2809:2825  new bytes32[](6) */\n      dup1\n      dup3\n      mstore\n      0xe0\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2767:2789  bytes32[] memory roles */\n      0x60\n      swap2\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2809:2825  new bytes32[](6) */\n      0x20\n      dup3\n      add\n      0xc0\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2801:2825  roles = new bytes32[](6) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2846:2864  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2835:2840  roles */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2841:2842  0 */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2835:2843  roles[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_160\n      jumpi\n      tag_160\n      tag_115\n      jump\t// in\n    tag_160:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2835:2864  roles[0] = DEFAULT_ADMIN_ROLE */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":343:366  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2874:2879  roles */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2880:2881  1 */\n      0x01\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2874:2882  roles[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_162\n      jumpi\n      tag_162\n      tag_115\n      jump\t// in\n    tag_162:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2874:2895  roles[1] = ADMIN_ROLE */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":413:440  keccak256(\"AI_ORACLE_ROLE\") */\n      0x482648e7878e9fa54c0a2f67ffd22d00ebc37cf7a03e060e428d2ab0cd6735cc\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2905:2910  roles */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2911:2912  2 */\n      0x02\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2905:2913  roles[2] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_164\n      jumpi\n      tag_164\n      tag_115\n      jump\t// in\n    tag_164:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2905:2930  roles[2] = AI_ORACLE_ROLE */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":494:528  keccak256(\"TREASURY_MANAGER_ROLE\") */\n      0xede9dcdb0ce99dc7cec9c7be9246ad08b37853683ad91569c187b647ddf5e21c\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2940:2945  roles */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2946:2947  3 */\n      0x03\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2940:2948  roles[3] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_166\n      jumpi\n      tag_166\n      tag_115\n      jump\t// in\n    tag_166:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2940:2972  roles[3] = TREASURY_MANAGER_ROLE */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":584:620  keccak256(\"MILESTONE_APPROVER_ROLE\") */\n      0x58223cdfb69946630d837d40b5c366a584f0217ada7fddd8318f2e08603cfa22\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2982:2987  roles */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2988:2989  4 */\n      0x04\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2982:2990  roles[4] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_168\n      jumpi\n      tag_168\n      tag_115\n      jump\t// in\n    tag_168:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2982:3016  roles[4] = MILESTONE_APPROVER_ROLE */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":674:708  keccak256(\"DISPUTE_RESOLVER_ROLE\") */\n      0x7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":3026:3031  roles */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":3032:3033  5 */\n      0x05\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":3026:3034  roles[5] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_170\n      jumpi\n      tag_170\n      tag_115\n      jump\t// in\n    tag_170:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":3026:3058  roles[5] = DISPUTE_RESOLVER_ROLE */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2723:3087  function getAllRoles() public pure returns (bytes32[] memory roles) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3271  _checkRole(role, _msgSender()) */\n      tag_173\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3252:3256  role */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3251  _checkRole */\n      tag_175\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3271  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6232:6236  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n      tag_177\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6261:6265  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6267:6274  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6260  hasRole */\n      tag_58\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n      tag_178\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6297  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6323:6327  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n      tag_179\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6364:6371  account */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6358:6362  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6407:6411  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n      jump(tag_90)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n    tag_178:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6449:6454  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n      jump(tag_90)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6708:7025  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6786:6790  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6828  hasRole(role, account) */\n      tag_183\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6814:6818  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6820:6827  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6813  hasRole */\n      tag_58\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6828  hasRole(role, account) */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6802:7019  if (hasRole(role, account)) {... */\n      iszero\n      tag_178\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6876:6881  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6856  _roles[role] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6873  _roles[role].hasRole[account] */\n      dup7\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6881  _roles[role].hasRole[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6856  _roles[role] */\n      dup7\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6876:6881  false */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      log4\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6961:6965  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6954:6965  return true */\n      jump(tag_90)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3408:3605  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3518  hasRole(role, account) */\n      tag_188\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3504:3508  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3510:3517  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3503  hasRole */\n      tag_58\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3518  hasRole(role, account) */\n      jump\t// in\n    tag_188:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n      tag_189\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      shl(0xe0, 0xe2517d3f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4198:4230   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4180:4231   */\n      mstore\n        /* \"#utility.yul\":4247:4265   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4240:4274   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":4153:4171   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3408:3605  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_25:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_195\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      dup1\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_195:\n        /* \"#utility.yul\":167:190   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":219:251   */\n      dup2\n      and\n        /* \"#utility.yul\":209:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":199:270   */\n      tag_196\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":199:270   */\n    tag_196:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":497:677   */\n    tag_31:\n        /* \"#utility.yul\":556:562   */\n      0x00\n        /* \"#utility.yul\":609:611   */\n      0x20\n        /* \"#utility.yul\":597:606   */\n      dup3\n        /* \"#utility.yul\":588:595   */\n      dup5\n        /* \"#utility.yul\":584:607   */\n      sub\n        /* \"#utility.yul\":580:612   */\n      slt\n        /* \"#utility.yul\":577:629   */\n      iszero\n      tag_199\n      jumpi\n        /* \"#utility.yul\":625:626   */\n      0x00\n        /* \"#utility.yul\":622:623   */\n      dup1\n        /* \"#utility.yul\":615:627   */\n      revert\n        /* \"#utility.yul\":577:629   */\n    tag_199:\n      pop\n        /* \"#utility.yul\":648:671   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":497:677   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":864:1037   */\n    tag_192:\n        /* \"#utility.yul\":932:952   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":981:1012   */\n      dup2\n      and\n        /* \"#utility.yul\":971:1013   */\n      dup2\n      eq\n        /* \"#utility.yul\":961:1031   */\n      tag_202\n      jumpi\n        /* \"#utility.yul\":1027:1028   */\n      0x00\n        /* \"#utility.yul\":1024:1025   */\n      dup1\n        /* \"#utility.yul\":1017:1029   */\n      revert\n        /* \"#utility.yul\":961:1031   */\n    tag_202:\n        /* \"#utility.yul\":864:1037   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1296   */\n    tag_37:\n        /* \"#utility.yul\":1110:1116   */\n      0x00\n        /* \"#utility.yul\":1118:1124   */\n      dup1\n        /* \"#utility.yul\":1171:1173   */\n      0x40\n        /* \"#utility.yul\":1159:1168   */\n      dup4\n        /* \"#utility.yul\":1150:1157   */\n      dup6\n        /* \"#utility.yul\":1146:1169   */\n      sub\n        /* \"#utility.yul\":1142:1174   */\n      slt\n        /* \"#utility.yul\":1139:1191   */\n      iszero\n      tag_204\n      jumpi\n        /* \"#utility.yul\":1187:1188   */\n      0x00\n        /* \"#utility.yul\":1184:1185   */\n      dup1\n        /* \"#utility.yul\":1177:1189   */\n      revert\n        /* \"#utility.yul\":1139:1191   */\n    tag_204:\n        /* \"#utility.yul\":1223:1232   */\n      dup3\n        /* \"#utility.yul\":1210:1233   */\n      calldataload\n        /* \"#utility.yul\":1200:1233   */\n      swap2\n      pop\n        /* \"#utility.yul\":1252:1290   */\n      tag_205\n        /* \"#utility.yul\":1286:1288   */\n      0x20\n        /* \"#utility.yul\":1275:1284   */\n      dup5\n        /* \"#utility.yul\":1271:1289   */\n      add\n        /* \"#utility.yul\":1252:1290   */\n      tag_192\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":1242:1290   */\n      swap1\n      pop\n        /* \"#utility.yul\":1042:1296   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1301:1428   */\n    tag_157:\n        /* \"#utility.yul\":1362:1372   */\n      0x4e487b71\n        /* \"#utility.yul\":1357:1360   */\n      0xe0\n        /* \"#utility.yul\":1353:1373   */\n      shl\n        /* \"#utility.yul\":1350:1351   */\n      0x00\n        /* \"#utility.yul\":1343:1374   */\n      mstore\n        /* \"#utility.yul\":1393:1397   */\n      0x41\n        /* \"#utility.yul\":1390:1391   */\n      0x04\n        /* \"#utility.yul\":1383:1398   */\n      mstore\n        /* \"#utility.yul\":1417:1421   */\n      0x24\n        /* \"#utility.yul\":1414:1415   */\n      0x00\n        /* \"#utility.yul\":1407:1422   */\n      revert\n        /* \"#utility.yul\":1433:2622   */\n    tag_44:\n        /* \"#utility.yul\":1526:1532   */\n      0x00\n        /* \"#utility.yul\":1534:1540   */\n      dup1\n        /* \"#utility.yul\":1587:1589   */\n      0x40\n        /* \"#utility.yul\":1575:1584   */\n      dup4\n        /* \"#utility.yul\":1566:1573   */\n      dup6\n        /* \"#utility.yul\":1562:1585   */\n      sub\n        /* \"#utility.yul\":1558:1590   */\n      slt\n        /* \"#utility.yul\":1555:1607   */\n      iszero\n      tag_208\n      jumpi\n        /* \"#utility.yul\":1603:1604   */\n      0x00\n        /* \"#utility.yul\":1600:1601   */\n      dup1\n        /* \"#utility.yul\":1593:1605   */\n      revert\n        /* \"#utility.yul\":1555:1607   */\n    tag_208:\n        /* \"#utility.yul\":1626:1655   */\n      tag_209\n        /* \"#utility.yul\":1645:1654   */\n      dup4\n        /* \"#utility.yul\":1626:1655   */\n      tag_192\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":1616:1655   */\n      swap2\n      pop\n        /* \"#utility.yul\":1674:1676   */\n      0x20\n        /* \"#utility.yul\":1727:1729   */\n      dup1\n        /* \"#utility.yul\":1716:1725   */\n      dup5\n        /* \"#utility.yul\":1712:1730   */\n      add\n        /* \"#utility.yul\":1699:1731   */\n      calldataload\n        /* \"#utility.yul\":1750:1768   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1791:1793   */\n      dup1\n        /* \"#utility.yul\":1783:1789   */\n      dup3\n        /* \"#utility.yul\":1780:1794   */\n      gt\n        /* \"#utility.yul\":1777:1811   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":1807:1808   */\n      0x00\n        /* \"#utility.yul\":1804:1805   */\n      dup1\n        /* \"#utility.yul\":1797:1809   */\n      revert\n        /* \"#utility.yul\":1777:1811   */\n    tag_210:\n        /* \"#utility.yul\":1845:1851   */\n      dup2\n        /* \"#utility.yul\":1834:1843   */\n      dup7\n        /* \"#utility.yul\":1830:1852   */\n      add\n        /* \"#utility.yul\":1820:1852   */\n      swap2\n      pop\n        /* \"#utility.yul\":1890:1897   */\n      dup7\n        /* \"#utility.yul\":1883:1887   */\n      0x1f\n        /* \"#utility.yul\":1879:1881   */\n      dup4\n        /* \"#utility.yul\":1875:1888   */\n      add\n        /* \"#utility.yul\":1871:1898   */\n      slt\n        /* \"#utility.yul\":1861:1916   */\n      tag_211\n      jumpi\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1909:1910   */\n      dup1\n        /* \"#utility.yul\":1902:1914   */\n      revert\n        /* \"#utility.yul\":1861:1916   */\n    tag_211:\n        /* \"#utility.yul\":1948:1950   */\n      dup2\n        /* \"#utility.yul\":1935:1951   */\n      calldataload\n        /* \"#utility.yul\":1970:1972   */\n      dup2\n        /* \"#utility.yul\":1966:1968   */\n      dup2\n        /* \"#utility.yul\":1963:1973   */\n      gt\n        /* \"#utility.yul\":1960:1996   */\n      iszero\n      tag_213\n      jumpi\n        /* \"#utility.yul\":1976:1994   */\n      tag_213\n      tag_157\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":2022:2024   */\n      dup1\n        /* \"#utility.yul\":2019:2020   */\n      0x05\n        /* \"#utility.yul\":2015:2025   */\n      shl\n        /* \"#utility.yul\":2054:2056   */\n      0x40\n        /* \"#utility.yul\":2048:2057   */\n      mload\n        /* \"#utility.yul\":2117:2119   */\n      0x1f\n        /* \"#utility.yul\":2113:2120   */\n      not\n        /* \"#utility.yul\":2108:2110   */\n      0x3f\n        /* \"#utility.yul\":2104:2106   */\n      dup4\n        /* \"#utility.yul\":2100:2111   */\n      add\n        /* \"#utility.yul\":2096:2121   */\n      and\n        /* \"#utility.yul\":2088:2094   */\n      dup2\n        /* \"#utility.yul\":2084:2122   */\n      add\n        /* \"#utility.yul\":2172:2178   */\n      dup2\n        /* \"#utility.yul\":2160:2170   */\n      dup2\n        /* \"#utility.yul\":2157:2179   */\n      lt\n        /* \"#utility.yul\":2152:2154   */\n      dup6\n        /* \"#utility.yul\":2140:2150   */\n      dup3\n        /* \"#utility.yul\":2137:2155   */\n      gt\n        /* \"#utility.yul\":2134:2180   */\n      or\n        /* \"#utility.yul\":2131:2203   */\n      iszero\n      tag_215\n      jumpi\n        /* \"#utility.yul\":2183:2201   */\n      tag_215\n      tag_157\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":2219:2221   */\n      0x40\n        /* \"#utility.yul\":2212:2234   */\n      mstore\n        /* \"#utility.yul\":2269:2287   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":2303:2318   */\n      dup5\n      dup3\n      add\n      swap3\n      pop\n        /* \"#utility.yul\":2345:2356   */\n      dup4\n      dup2\n      add\n        /* \"#utility.yul\":2341:2361   */\n      dup6\n      add\n      swap2\n        /* \"#utility.yul\":2373:2392   */\n      dup10\n      dup4\n      gt\n        /* \"#utility.yul\":2370:2409   */\n      iszero\n      tag_216\n      jumpi\n        /* \"#utility.yul\":2405:2406   */\n      0x00\n        /* \"#utility.yul\":2402:2403   */\n      dup1\n        /* \"#utility.yul\":2395:2407   */\n      revert\n        /* \"#utility.yul\":2370:2409   */\n    tag_216:\n        /* \"#utility.yul\":2429:2440   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":2449:2591   */\n    tag_217:\n        /* \"#utility.yul\":2465:2471   */\n      dup3\n        /* \"#utility.yul\":2460:2463   */\n      dup6\n        /* \"#utility.yul\":2457:2472   */\n      lt\n        /* \"#utility.yul\":2449:2591   */\n      iszero\n      tag_219\n      jumpi\n        /* \"#utility.yul\":2531:2548   */\n      dup5\n      calldataload\n        /* \"#utility.yul\":2519:2549   */\n      dup5\n      mstore\n        /* \"#utility.yul\":2482:2494   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":2569:2581   */\n      swap3\n      dup6\n      add\n      swap3\n        /* \"#utility.yul\":2449:2591   */\n      jump(tag_217)\n    tag_219:\n        /* \"#utility.yul\":2610:2616   */\n      dup1\n        /* \"#utility.yul\":2600:2616   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1433:2622   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2627:2813   */\n    tag_68:\n        /* \"#utility.yul\":2686:2692   */\n      0x00\n        /* \"#utility.yul\":2739:2741   */\n      0x20\n        /* \"#utility.yul\":2727:2736   */\n      dup3\n        /* \"#utility.yul\":2718:2725   */\n      dup5\n        /* \"#utility.yul\":2714:2737   */\n      sub\n        /* \"#utility.yul\":2710:2742   */\n      slt\n        /* \"#utility.yul\":2707:2759   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":2755:2756   */\n      0x00\n        /* \"#utility.yul\":2752:2753   */\n      dup1\n        /* \"#utility.yul\":2745:2757   */\n      revert\n        /* \"#utility.yul\":2707:2759   */\n    tag_221:\n        /* \"#utility.yul\":2778:2807   */\n      tag_196\n        /* \"#utility.yul\":2797:2806   */\n      dup3\n        /* \"#utility.yul\":2778:2807   */\n      tag_192\n      jump\t// in\n        /* \"#utility.yul\":3000:3632   */\n    tag_87:\n        /* \"#utility.yul\":3171:3173   */\n      0x20\n        /* \"#utility.yul\":3223:3244   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3293:3306   */\n      dup3\n      mload\n        /* \"#utility.yul\":3196:3214   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":3315:3337   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":3142:3146   */\n      0x00\n      swap2\n        /* \"#utility.yul\":3171:3173   */\n      swap1\n        /* \"#utility.yul\":3394:3409   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":3368:3370   */\n      0x40\n        /* \"#utility.yul\":3353:3371   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":3142:3146   */\n      dup5\n        /* \"#utility.yul\":3437:3606   */\n    tag_225:\n        /* \"#utility.yul\":3451:3457   */\n      dup2\n        /* \"#utility.yul\":3448:3449   */\n      dup2\n        /* \"#utility.yul\":3445:3458   */\n      lt\n        /* \"#utility.yul\":3437:3606   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":3512:3525   */\n      dup4\n      mload\n        /* \"#utility.yul\":3500:3526   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3581:3596   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":3546:3558   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":3473:3474   */\n      0x01\n        /* \"#utility.yul\":3466:3475   */\n      add\n        /* \"#utility.yul\":3437:3606   */\n      jump(tag_225)\n    tag_227:\n      pop\n        /* \"#utility.yul\":3623:3626   */\n      swap1\n      swap7\n        /* \"#utility.yul\":3000:3632   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3637:3764   */\n    tag_115:\n        /* \"#utility.yul\":3698:3708   */\n      0x4e487b71\n        /* \"#utility.yul\":3693:3696   */\n      0xe0\n        /* \"#utility.yul\":3689:3709   */\n      shl\n        /* \"#utility.yul\":3686:3687   */\n      0x00\n        /* \"#utility.yul\":3679:3710   */\n      mstore\n        /* \"#utility.yul\":3729:3733   */\n      0x32\n        /* \"#utility.yul\":3726:3727   */\n      0x04\n        /* \"#utility.yul\":3719:3734   */\n      mstore\n        /* \"#utility.yul\":3753:3757   */\n      0x24\n        /* \"#utility.yul\":3750:3751   */\n      0x00\n        /* \"#utility.yul\":3743:3758   */\n      revert\n        /* \"#utility.yul\":3769:4001   */\n    tag_117:\n        /* \"#utility.yul\":3808:3811   */\n      0x00\n        /* \"#utility.yul\":3829:3846   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":3826:3966   */\n      tag_230\n      jumpi\n        /* \"#utility.yul\":3888:3898   */\n      0x4e487b71\n        /* \"#utility.yul\":3883:3886   */\n      0xe0\n        /* \"#utility.yul\":3879:3899   */\n      shl\n        /* \"#utility.yul\":3876:3877   */\n      0x00\n        /* \"#utility.yul\":3869:3900   */\n      mstore\n        /* \"#utility.yul\":3923:3927   */\n      0x11\n        /* \"#utility.yul\":3920:3921   */\n      0x04\n        /* \"#utility.yul\":3913:3928   */\n      mstore\n        /* \"#utility.yul\":3951:3955   */\n      0x24\n        /* \"#utility.yul\":3948:3949   */\n      0x00\n        /* \"#utility.yul\":3941:3956   */\n      revert\n        /* \"#utility.yul\":3826:3966   */\n    tag_230:\n      pop\n        /* \"#utility.yul\":3993:3994   */\n      0x01\n        /* \"#utility.yul\":3982:3995   */\n      add\n      swap1\n        /* \"#utility.yul\":3769:4001   */\n      jump\t// out\n\n    auxdata: 0xa264697066735822122082139c2b2b562ea8c4f51329d6aab03634e445b72a0ae15dc2fc0d53bade4b8c64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1482": {
									"entryPoint": null,
									"id": 1482,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_grantRole_257": {
									"entryPoint": 34,
									"id": 257,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_564": {
									"entryPoint": null,
									"id": 564,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_81": {
									"entryPoint": null,
									"id": 81,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061001c600033610022565b506100ce565b6000828152602081815260408083206001600160a01b038516845290915281205460ff166100c4576000838152602081815260408083206001600160a01b03861684529091529020805460ff1916600117905561007c3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016100c8565b5060005b92915050565b610a47806100dd6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806391d14854116100a2578063bfe42a3711610071578063bfe42a3714610246578063c601f7af1461026d578063d547741f14610294578063ebdf690f146102a7578063f2bcac3d146102ce57600080fd5b806391d14854146101f1578063a02d72fb14610204578063a217fddf1461022b578063aca5a8a71461023357600080fd5b80634fe9d1f5116100de5780634fe9d1f51461019157806368ca78f9146101a457806375b238fc146101b757806391b9f9d8146101de57600080fd5b806301ffc9a714610110578063248a9ca3146101385780632f2ff15d1461016957806336568abe1461017e575b600080fd5b61012361011e3660046107fc565b6102e3565b60405190151581526020015b60405180910390f35b61015b61014636600461082d565b60009081526020819052604090206001015490565b60405190815260200161012f565b61017c610177366004610862565b61031a565b005b61017c61018c366004610862565b610345565b61017c61019f3660046108a4565b61037d565b6101236101b23660046108a4565b6103c9565b61015b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b61017c6101ec3660046108a4565b610424565b6101236101ff366004610862565b610470565b61015b7f58223cdfb69946630d837d40b5c366a584f0217ada7fddd8318f2e08603cfa2281565b61015b600081565b61015b610241366004610975565b610499565b61015b7f7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e81565b61015b7f482648e7878e9fa54c0a2f67ffd22d00ebc37cf7a03e060e428d2ab0cd6735cc81565b61017c6102a2366004610862565b610503565b61015b7fede9dcdb0ce99dc7cec9c7be9246ad08b37853683ad91569c187b647ddf5e21c81565b6102d6610528565b60405161012f9190610990565b60006001600160e01b03198216637965db0b60e01b148061031457506301ffc9a760e01b6001600160e01b03198316145b92915050565b600082815260208190526040902060010154610335816106b1565b61033f83836106be565b50505050565b6001600160a01b038116331461036e5760405163334bd91960e11b815260040160405180910390fd5b6103788282610750565b505050565b6000610388816106b1565b60005b825181101561033f576103b78382815181106103a9576103a96109d4565b602002602001015185610503565b806103c1816109ea565b91505061038b565b6000805b825181101561041a576103f98382815181106103eb576103eb6109d4565b602002602001015185610470565b15610408576001915050610314565b80610412816109ea565b9150506103cd565b5060009392505050565b600061042f816106b1565b60005b825181101561033f5761045e838281518110610450576104506109d4565b60200260200101518561031a565b80610468816109ea565b915050610432565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6000806104a4610528565b90506000805b82518110156104fb576104d68382815181106104c8576104c86109d4565b602002602001015186610470565b156104e957816104e5816109ea565b9250505b806104f3816109ea565b9150506104aa565b509392505050565b60008281526020819052604090206001015461051e816106b1565b61033f8383610750565b60408051600680825260e082019092526060916020820160c0803683370190505090506000801b81600081518110610562576105626109d4565b6020026020010181815250507fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775816001815181106105a2576105a26109d4565b6020026020010181815250507f482648e7878e9fa54c0a2f67ffd22d00ebc37cf7a03e060e428d2ab0cd6735cc816002815181106105e2576105e26109d4565b6020026020010181815250507fede9dcdb0ce99dc7cec9c7be9246ad08b37853683ad91569c187b647ddf5e21c81600381518110610622576106226109d4565b6020026020010181815250507f58223cdfb69946630d837d40b5c366a584f0217ada7fddd8318f2e08603cfa2281600481518110610662576106626109d4565b6020026020010181815250507f7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e816005815181106106a2576106a26109d4565b60200260200101818152505090565b6106bb81336107bb565b50565b60006106ca8383610470565b610748576000838152602081815260408083206001600160a01b03861684529091529020805460ff191660011790556107003390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4506001610314565b506000610314565b600061075c8383610470565b15610748576000838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4506001610314565b6107c58282610470565b6107f85760405163e2517d3f60e01b81526001600160a01b03821660048201526024810183905260440160405180910390fd5b5050565b60006020828403121561080e57600080fd5b81356001600160e01b03198116811461082657600080fd5b9392505050565b60006020828403121561083f57600080fd5b5035919050565b80356001600160a01b038116811461085d57600080fd5b919050565b6000806040838503121561087557600080fd5b8235915061088560208401610846565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156108b757600080fd5b6108c083610846565b915060208084013567ffffffffffffffff808211156108de57600080fd5b818601915086601f8301126108f257600080fd5b8135818111156109045761090461088e565b8060051b604051601f19603f830116810181811085821117156109295761092961088e565b60405291825284820192508381018501918983111561094757600080fd5b938501935b828510156109655784358452938501939285019261094c565b8096505050505050509250929050565b60006020828403121561098757600080fd5b61082682610846565b6020808252825182820181905260009190848201906040850190845b818110156109c8578351835292840192918401916001016109ac565b50909695505050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201610a0a57634e487b7160e01b600052601160045260246000fd5b506001019056fea264697066735822122082139c2b2b562ea8c4f51329d6aab03634e445b72a0ae15dc2fc0d53bade4b8c64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C PUSH1 0x0 CALLER PUSH2 0x22 JUMP JUMPDEST POP PUSH2 0xCE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xC4 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x7C CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0xC8 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA47 DUP1 PUSH2 0xDD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xBFE42A37 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xBFE42A37 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0xC601F7AF EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0xEBDF690F EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xF2BCAC3D EQ PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0xA02D72FB EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xACA5A8A7 EQ PUSH2 0x233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4FE9D1F5 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x4FE9D1F5 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x68CA78F9 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x91B9F9D8 EQ PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x17E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0x7FC JUMP JUMPDEST PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x146 CALLDATASIZE PUSH1 0x4 PUSH2 0x82D JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12F JUMP JUMPDEST PUSH2 0x17C PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0x862 JUMP JUMPDEST PUSH2 0x31A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17C PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0x862 JUMP JUMPDEST PUSH2 0x345 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x19F CALLDATASIZE PUSH1 0x4 PUSH2 0x8A4 JUMP JUMPDEST PUSH2 0x37D JUMP JUMPDEST PUSH2 0x123 PUSH2 0x1B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x8A4 JUMP JUMPDEST PUSH2 0x3C9 JUMP JUMPDEST PUSH2 0x15B PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x1EC CALLDATASIZE PUSH1 0x4 PUSH2 0x8A4 JUMP JUMPDEST PUSH2 0x424 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0x862 JUMP JUMPDEST PUSH2 0x470 JUMP JUMPDEST PUSH2 0x15B PUSH32 0x58223CDFB69946630D837D40B5C366A584F0217ADA7FDDD8318F2E08603CFA22 DUP2 JUMP JUMPDEST PUSH2 0x15B PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x241 CALLDATASIZE PUSH1 0x4 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x499 JUMP JUMPDEST PUSH2 0x15B PUSH32 0x7B8BB8356A3F32F5C111FF23F050D97F08988E0883529EA7BFF3B918887A6E0E DUP2 JUMP JUMPDEST PUSH2 0x15B PUSH32 0x482648E7878E9FA54C0A2F67FFD22D00EBC37CF7A03E060E428D2AB0CD6735CC DUP2 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x2A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x862 JUMP JUMPDEST PUSH2 0x503 JUMP JUMPDEST PUSH2 0x15B PUSH32 0xEDE9DCDB0CE99DC7CEC9C7BE9246AD08B37853683AD91569C187B647DDF5E21C DUP2 JUMP JUMPDEST PUSH2 0x2D6 PUSH2 0x528 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x990 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x314 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x335 DUP2 PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x33F DUP4 DUP4 PUSH2 0x6BE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x36E JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x378 DUP3 DUP3 PUSH2 0x750 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x388 DUP2 PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x33F JUMPI PUSH2 0x3B7 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3A9 JUMPI PUSH2 0x3A9 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH2 0x503 JUMP JUMPDEST DUP1 PUSH2 0x3C1 DUP2 PUSH2 0x9EA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x38B JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x41A JUMPI PUSH2 0x3F9 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3EB JUMPI PUSH2 0x3EB PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH2 0x470 JUMP JUMPDEST ISZERO PUSH2 0x408 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x314 JUMP JUMPDEST DUP1 PUSH2 0x412 DUP2 PUSH2 0x9EA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3CD JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42F DUP2 PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x33F JUMPI PUSH2 0x45E DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x450 JUMPI PUSH2 0x450 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH2 0x31A JUMP JUMPDEST DUP1 PUSH2 0x468 DUP2 PUSH2 0x9EA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x432 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4A4 PUSH2 0x528 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x4FB JUMPI PUSH2 0x4D6 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4C8 JUMPI PUSH2 0x4C8 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 PUSH2 0x470 JUMP JUMPDEST ISZERO PUSH2 0x4E9 JUMPI DUP2 PUSH2 0x4E5 DUP2 PUSH2 0x9EA JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x4F3 DUP2 PUSH2 0x9EA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4AA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x51E DUP2 PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x33F DUP4 DUP4 PUSH2 0x750 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x6 DUP1 DUP3 MSTORE PUSH1 0xE0 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0xC0 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x562 JUMPI PUSH2 0x562 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x5A2 JUMPI PUSH2 0x5A2 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH32 0x482648E7878E9FA54C0A2F67FFD22D00EBC37CF7A03E060E428D2AB0CD6735CC DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x5E2 JUMPI PUSH2 0x5E2 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH32 0xEDE9DCDB0CE99DC7CEC9C7BE9246AD08B37853683AD91569C187B647DDF5E21C DUP2 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x622 JUMPI PUSH2 0x622 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH32 0x58223CDFB69946630D837D40B5C366A584F0217ADA7FDDD8318F2E08603CFA22 DUP2 PUSH1 0x4 DUP2 MLOAD DUP2 LT PUSH2 0x662 JUMPI PUSH2 0x662 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH32 0x7B8BB8356A3F32F5C111FF23F050D97F08988E0883529EA7BFF3B918887A6E0E DUP2 PUSH1 0x5 DUP2 MLOAD DUP2 LT PUSH2 0x6A2 JUMPI PUSH2 0x6A2 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP SWAP1 JUMP JUMPDEST PUSH2 0x6BB DUP2 CALLER PUSH2 0x7BB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6CA DUP4 DUP4 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x748 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x700 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x314 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x314 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x75C DUP4 DUP4 PUSH2 0x470 JUMP JUMPDEST ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x314 JUMP JUMPDEST PUSH2 0x7C5 DUP3 DUP3 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x7F8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x80E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x826 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x83F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x85D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x875 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x885 PUSH1 0x20 DUP5 ADD PUSH2 0x846 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8C0 DUP4 PUSH2 0x846 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP1 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x8DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x904 JUMPI PUSH2 0x904 PUSH2 0x88E JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x929 JUMPI PUSH2 0x929 PUSH2 0x88E JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP10 DUP4 GT ISZERO PUSH2 0x947 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x965 JUMPI DUP5 CALLDATALOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x94C JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x987 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x826 DUP3 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9C8 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x9AC JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xA0A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 SGT SWAP13 0x2B 0x2B JUMP 0x2E 0xA8 0xC4 CREATE2 SGT 0x29 0xD6 0xAA 0xB0 CALLDATASIZE CALLVALUE 0xE4 GASLIMIT 0xB7 0x2A EXP 0xE1 0x5D 0xC2 0xFC 0xD MSTORE8 0xBA 0xDE 0x4B DUP13 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "227:2862:9:-:0;;;719:74;;;;;;;;;-1:-1:-1;744:42:9;2241:4:0;775:10:9;744;:42::i;:::-;;227:2862;;6155:316:0;6232:4;2930:12;;;;;;;;;;;-1:-1:-1;;;;;2930:29:0;;;;;;;;;;;;6248:217;;6291:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6291:29:0;;;;;;;;;:36;;-1:-1:-1;;6291:36:0;6323:4;6291:36;;;6373:12;735:10:4;;656:96;6373:12:0;-1:-1:-1;;;;;6346:40:0;6364:7;-1:-1:-1;;;;;6346:40:0;6358:4;6346:40;;;;;;;;;;-1:-1:-1;6407:4:0;6400:11;;6248:217;-1:-1:-1;6449:5:0;6248:217;6155:316;;;;:::o;227:2862:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ADMIN_ROLE_1452": {
									"entryPoint": null,
									"id": 1452,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@AI_ORACLE_ROLE_1457": {
									"entryPoint": null,
									"id": 1457,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_30": {
									"entryPoint": null,
									"id": 30,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DISPUTE_RESOLVER_ROLE_1472": {
									"entryPoint": null,
									"id": 1472,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MILESTONE_APPROVER_ROLE_1467": {
									"entryPoint": null,
									"id": 1467,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TREASURY_MANAGER_ROLE_1462": {
									"entryPoint": null,
									"id": 1462,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_115": {
									"entryPoint": 1979,
									"id": 115,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_94": {
									"entryPoint": 1713,
									"id": 94,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_257": {
									"entryPoint": 1726,
									"id": 257,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_564": {
									"entryPoint": null,
									"id": 564,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_295": {
									"entryPoint": 1872,
									"id": 295,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAllRoles_1686": {
									"entryPoint": 1320,
									"id": 1686,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRoleAdmin_129": {
									"entryPoint": null,
									"id": 129,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRoleCount_1632": {
									"entryPoint": 1177,
									"id": 1632,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantMultipleRoles_1515": {
									"entryPoint": 1060,
									"id": 1515,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@grantRole_148": {
									"entryPoint": 794,
									"id": 148,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasAnyRole_1585": {
									"entryPoint": 969,
									"id": 1585,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@hasRole_81": {
									"entryPoint": 1136,
									"id": 81,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceRole_190": {
									"entryPoint": 837,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeMultipleRoles_1548": {
									"entryPoint": 893,
									"id": 1548,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_167": {
									"entryPoint": 1283,
									"id": 167,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_605": {
									"entryPoint": null,
									"id": 605,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_63": {
									"entryPoint": 739,
									"id": 63,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_array$_t_bytes32_$dyn_memory_ptr": {
									"entryPoint": 2212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 2093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 2146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 2044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 2448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 2538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x32": {
									"entryPoint": 2516,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2190,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4282:10",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:10",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "83:217:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "129:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "138:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "141:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "125:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:32:10"
															},
															"nodeType": "YulIf",
															"src": "93:52:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "167:23:10"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "158:5:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "234:3:10",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "239:10:10",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "230:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "230:20:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "219:32:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "209:43:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "202:51:10"
															},
															"nodeType": "YulIf",
															"src": "199:71:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:10",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "49:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "60:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "72:6:10",
														"type": ""
													}
												],
												"src": "14:286:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "400:92:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "410:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "433:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "418:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "445:41:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "445:41:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "369:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "380:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "391:4:10",
														"type": ""
													}
												],
												"src": "305:187:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "567:110:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "613:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "622:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "625:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "615:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "615:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "615:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "588:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "597:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "584:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "584:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "609:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "580:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "580:32:10"
															},
															"nodeType": "YulIf",
															"src": "577:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "638:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "661:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "648:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "533:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "544:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "556:6:10",
														"type": ""
													}
												],
												"src": "497:180:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "783:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "793:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "805:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "816:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "801:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "801:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "793:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "835:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "846:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "828:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "828:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "828:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "752:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "763:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "774:4:10",
														"type": ""
													}
												],
												"src": "682:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "913:124:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "923:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "945:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "932:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "932:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "923:5:10"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1015:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1024:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1027:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1017:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1017:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1017:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "974:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "985:5:10"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1000:3:10",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1005:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "996:3:10"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "996:11:10"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1009:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "992:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "992:19:10"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "981:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "981:31:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "971:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "971:42:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "964:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "964:50:10"
															},
															"nodeType": "YulIf",
															"src": "961:70:10"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "892:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "903:5:10",
														"type": ""
													}
												],
												"src": "864:173:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1129:167:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1175:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1184:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1187:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1177:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1177:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1177:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1150:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1159:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1146:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1146:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1171:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1142:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1142:32:10"
															},
															"nodeType": "YulIf",
															"src": "1139:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1200:33:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1223:9:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1210:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1210:23:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1200:6:10"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1242:48:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1275:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1286:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1271:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1271:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1252:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1252:38:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1242:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1087:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1098:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1110:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1118:6:10",
														"type": ""
													}
												],
												"src": "1042:254:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1333:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1350:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1357:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1362:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1353:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1353:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1343:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1343:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1343:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1390:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1393:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1383:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1383:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1383:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1414:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1417:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1407:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1407:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1407:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1301:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1545:1077:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1591:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1600:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1603:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1593:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1593:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1593:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1566:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1575:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1562:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1562:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1587:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1558:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1558:32:10"
															},
															"nodeType": "YulIf",
															"src": "1555:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1616:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1645:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1626:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1626:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1616:6:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1664:12:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1674:2:10",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1668:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1685:46:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1716:9:10"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1727:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1712:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1712:18:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1699:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1699:32:10"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1689:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1740:28:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1750:18:10",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1744:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1795:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1804:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1807:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1797:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1797:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1797:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1783:6:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1791:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1780:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1780:14:10"
															},
															"nodeType": "YulIf",
															"src": "1777:34:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1820:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1834:9:10"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1845:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1830:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1830:22:10"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1824:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1900:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1909:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1902:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1902:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1902:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1879:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1883:4:10",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1875:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1875:13:10"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1890:7:10"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1871:27:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1864:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1864:35:10"
															},
															"nodeType": "YulIf",
															"src": "1861:55:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1925:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1948:2:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1935:12:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1935:16:10"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1929:2:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1974:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1976:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1976:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1976:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1966:2:10"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1970:2:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1963:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "1963:10:10"
															},
															"nodeType": "YulIf",
															"src": "1960:36:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2005:20:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2019:1:10",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "2022:2:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "2015:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2015:10:10"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "2009:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2034:23:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2054:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2048:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2048:9:10"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "2038:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2066:56:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2088:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "2104:2:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2108:2:10",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2100:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2100:11:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2117:2:10",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2113:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2113:7:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2096:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2096:25:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2084:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2084:38:10"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2070:10:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2181:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2183:16:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2183:18:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2183:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2140:10:10"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "2152:2:10"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2137:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2137:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2160:10:10"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2172:6:10"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2157:2:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2157:22:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2134:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2134:46:10"
															},
															"nodeType": "YulIf",
															"src": "2131:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2219:2:10",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2223:10:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2212:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2212:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2212:22:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2243:17:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "2254:6:10"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2247:3:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2276:6:10"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "2284:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2269:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2269:18:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2269:18:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2296:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2307:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2315:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2303:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2303:15:10"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "2296:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2327:34:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "2349:2:10"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "2353:2:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2345:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2345:11:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2358:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2341:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2341:20:10"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "2331:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2393:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2402:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2405:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2395:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2395:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2395:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2376:6:10"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2384:7:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2373:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2373:19:10"
															},
															"nodeType": "YulIf",
															"src": "2370:39:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2418:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2433:2:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2437:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2429:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2429:11:10"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "2422:3:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2505:86:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2526:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "2544:3:10"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "2531:12:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2531:17:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2519:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2519:30:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2519:30:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2562:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2573:3:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2578:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2569:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2569:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2562:3:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2460:3:10"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2465:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2457:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2457:15:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2473:23:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2475:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "2486:3:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2491:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2482:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2482:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2475:3:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2453:3:10",
																"statements": []
															},
															"src": "2449:142:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2600:16:10",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "2610:6:10"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2600:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_bytes32_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1503:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1514:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1526:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1534:6:10",
														"type": ""
													}
												],
												"src": "1433:1189:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2697:116:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2743:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2752:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2755:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2745:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2745:12:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2745:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2718:7:10"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2727:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2714:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2714:23:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2739:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2710:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2710:32:10"
															},
															"nodeType": "YulIf",
															"src": "2707:52:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2768:39:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2797:9:10"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2778:18:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2778:29:10"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2768:6:10"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2663:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2674:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2686:6:10",
														"type": ""
													}
												],
												"src": "2627:186:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2919:76:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2929:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2941:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2952:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2937:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2937:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2929:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2971:9:10"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2982:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2964:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "2964:25:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2964:25:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2888:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2899:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2910:4:10",
														"type": ""
													}
												],
												"src": "2818:177:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3151:481:10",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3161:12:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3171:2:10",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3165:2:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3182:32:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3200:9:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3211:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3196:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3196:18:10"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "3186:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3230:9:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3241:2:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3223:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3223:21:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3223:21:10"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3253:17:10",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "3264:6:10"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "3257:3:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3279:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3293:5:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3293:13:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3283:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "3322:6:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3330:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3315:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3315:22:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3315:22:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3346:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3357:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3368:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3353:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3353:18:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3346:3:10"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3380:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3398:6:10"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3406:2:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3394:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3394:15:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "3384:6:10",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3418:10:10",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3427:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3422:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3486:120:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3507:3:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "3518:6:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3512:5:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3512:13:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3500:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3500:26:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3500:26:10"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3539:19:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3550:3:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3555:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3546:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3546:12:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3539:3:10"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3571:25:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3585:6:10"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3593:2:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3581:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3581:15:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3571:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3448:1:10"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3451:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3445:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3445:13:10"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3459:18:10",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3461:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3470:1:10"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3473:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3466:3:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3466:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3461:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3441:3:10",
																"statements": []
															},
															"src": "3437:169:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3615:11:10",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3623:3:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3615:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3120:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3131:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3142:4:10",
														"type": ""
													}
												],
												"src": "3000:632:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3669:95:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3686:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3693:3:10",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3698:10:10",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3689:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3689:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:31:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:31:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3726:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3729:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3719:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3719:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3719:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3750:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3753:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3743:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3743:15:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3743:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "3637:127:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3816:185:10",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3855:111:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3876:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3883:3:10",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3888:10:10",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3879:3:10"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3879:20:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3869:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3869:31:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3869:31:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3920:1:10",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3923:4:10",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3913:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3913:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3913:15:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3948:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3951:4:10",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3941:6:10"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3941:15:10"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3941:15:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3832:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3843:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3839:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3839:6:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3829:2:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3829:17:10"
															},
															"nodeType": "YulIf",
															"src": "3826:140:10"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3975:20:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3986:5:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3993:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3982:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "3982:13:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3975:3:10"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3798:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3808:3:10",
														"type": ""
													}
												],
												"src": "3769:232:10"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4135:145:10",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4145:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4157:9:10"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4168:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4153:3:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4153:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4145:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4187:9:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4202:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4218:3:10",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4223:1:10",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4214:3:10"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4214:11:10"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4227:1:10",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4210:3:10"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4210:19:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4198:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4198:32:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4180:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4180:51:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4180:51:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4251:9:10"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4262:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4247:3:10"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4247:18:10"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4267:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4240:6:10"
																},
																"nodeType": "YulFunctionCall",
																"src": "4240:34:10"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4240:34:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4096:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4107:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4115:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4126:4:10",
														"type": ""
													}
												],
												"src": "4006:274:10"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_array$_t_bytes32_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let _1 := 32\n        let offset := calldataload(add(headStart, _1))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _1)\n        }\n        value1 := memPtr\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n}",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061010b5760003560e01c806391d14854116100a2578063bfe42a3711610071578063bfe42a3714610246578063c601f7af1461026d578063d547741f14610294578063ebdf690f146102a7578063f2bcac3d146102ce57600080fd5b806391d14854146101f1578063a02d72fb14610204578063a217fddf1461022b578063aca5a8a71461023357600080fd5b80634fe9d1f5116100de5780634fe9d1f51461019157806368ca78f9146101a457806375b238fc146101b757806391b9f9d8146101de57600080fd5b806301ffc9a714610110578063248a9ca3146101385780632f2ff15d1461016957806336568abe1461017e575b600080fd5b61012361011e3660046107fc565b6102e3565b60405190151581526020015b60405180910390f35b61015b61014636600461082d565b60009081526020819052604090206001015490565b60405190815260200161012f565b61017c610177366004610862565b61031a565b005b61017c61018c366004610862565b610345565b61017c61019f3660046108a4565b61037d565b6101236101b23660046108a4565b6103c9565b61015b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b61017c6101ec3660046108a4565b610424565b6101236101ff366004610862565b610470565b61015b7f58223cdfb69946630d837d40b5c366a584f0217ada7fddd8318f2e08603cfa2281565b61015b600081565b61015b610241366004610975565b610499565b61015b7f7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e81565b61015b7f482648e7878e9fa54c0a2f67ffd22d00ebc37cf7a03e060e428d2ab0cd6735cc81565b61017c6102a2366004610862565b610503565b61015b7fede9dcdb0ce99dc7cec9c7be9246ad08b37853683ad91569c187b647ddf5e21c81565b6102d6610528565b60405161012f9190610990565b60006001600160e01b03198216637965db0b60e01b148061031457506301ffc9a760e01b6001600160e01b03198316145b92915050565b600082815260208190526040902060010154610335816106b1565b61033f83836106be565b50505050565b6001600160a01b038116331461036e5760405163334bd91960e11b815260040160405180910390fd5b6103788282610750565b505050565b6000610388816106b1565b60005b825181101561033f576103b78382815181106103a9576103a96109d4565b602002602001015185610503565b806103c1816109ea565b91505061038b565b6000805b825181101561041a576103f98382815181106103eb576103eb6109d4565b602002602001015185610470565b15610408576001915050610314565b80610412816109ea565b9150506103cd565b5060009392505050565b600061042f816106b1565b60005b825181101561033f5761045e838281518110610450576104506109d4565b60200260200101518561031a565b80610468816109ea565b915050610432565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6000806104a4610528565b90506000805b82518110156104fb576104d68382815181106104c8576104c86109d4565b602002602001015186610470565b156104e957816104e5816109ea565b9250505b806104f3816109ea565b9150506104aa565b509392505050565b60008281526020819052604090206001015461051e816106b1565b61033f8383610750565b60408051600680825260e082019092526060916020820160c0803683370190505090506000801b81600081518110610562576105626109d4565b6020026020010181815250507fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775816001815181106105a2576105a26109d4565b6020026020010181815250507f482648e7878e9fa54c0a2f67ffd22d00ebc37cf7a03e060e428d2ab0cd6735cc816002815181106105e2576105e26109d4565b6020026020010181815250507fede9dcdb0ce99dc7cec9c7be9246ad08b37853683ad91569c187b647ddf5e21c81600381518110610622576106226109d4565b6020026020010181815250507f58223cdfb69946630d837d40b5c366a584f0217ada7fddd8318f2e08603cfa2281600481518110610662576106626109d4565b6020026020010181815250507f7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e816005815181106106a2576106a26109d4565b60200260200101818152505090565b6106bb81336107bb565b50565b60006106ca8383610470565b610748576000838152602081815260408083206001600160a01b03861684529091529020805460ff191660011790556107003390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4506001610314565b506000610314565b600061075c8383610470565b15610748576000838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4506001610314565b6107c58282610470565b6107f85760405163e2517d3f60e01b81526001600160a01b03821660048201526024810183905260440160405180910390fd5b5050565b60006020828403121561080e57600080fd5b81356001600160e01b03198116811461082657600080fd5b9392505050565b60006020828403121561083f57600080fd5b5035919050565b80356001600160a01b038116811461085d57600080fd5b919050565b6000806040838503121561087557600080fd5b8235915061088560208401610846565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156108b757600080fd5b6108c083610846565b915060208084013567ffffffffffffffff808211156108de57600080fd5b818601915086601f8301126108f257600080fd5b8135818111156109045761090461088e565b8060051b604051601f19603f830116810181811085821117156109295761092961088e565b60405291825284820192508381018501918983111561094757600080fd5b938501935b828510156109655784358452938501939285019261094c565b8096505050505050509250929050565b60006020828403121561098757600080fd5b61082682610846565b6020808252825182820181905260009190848201906040850190845b818110156109c8578351835292840192918401916001016109ac565b50909695505050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201610a0a57634e487b7160e01b600052601160045260246000fd5b506001019056fea264697066735822122082139c2b2b562ea8c4f51329d6aab03634e445b72a0ae15dc2fc0d53bade4b8c64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xBFE42A37 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xBFE42A37 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0xC601F7AF EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0xEBDF690F EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xF2BCAC3D EQ PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0xA02D72FB EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xACA5A8A7 EQ PUSH2 0x233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4FE9D1F5 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x4FE9D1F5 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x68CA78F9 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x91B9F9D8 EQ PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x17E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0x7FC JUMP JUMPDEST PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x146 CALLDATASIZE PUSH1 0x4 PUSH2 0x82D JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12F JUMP JUMPDEST PUSH2 0x17C PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0x862 JUMP JUMPDEST PUSH2 0x31A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17C PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0x862 JUMP JUMPDEST PUSH2 0x345 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x19F CALLDATASIZE PUSH1 0x4 PUSH2 0x8A4 JUMP JUMPDEST PUSH2 0x37D JUMP JUMPDEST PUSH2 0x123 PUSH2 0x1B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x8A4 JUMP JUMPDEST PUSH2 0x3C9 JUMP JUMPDEST PUSH2 0x15B PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x1EC CALLDATASIZE PUSH1 0x4 PUSH2 0x8A4 JUMP JUMPDEST PUSH2 0x424 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0x862 JUMP JUMPDEST PUSH2 0x470 JUMP JUMPDEST PUSH2 0x15B PUSH32 0x58223CDFB69946630D837D40B5C366A584F0217ADA7FDDD8318F2E08603CFA22 DUP2 JUMP JUMPDEST PUSH2 0x15B PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x241 CALLDATASIZE PUSH1 0x4 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x499 JUMP JUMPDEST PUSH2 0x15B PUSH32 0x7B8BB8356A3F32F5C111FF23F050D97F08988E0883529EA7BFF3B918887A6E0E DUP2 JUMP JUMPDEST PUSH2 0x15B PUSH32 0x482648E7878E9FA54C0A2F67FFD22D00EBC37CF7A03E060E428D2AB0CD6735CC DUP2 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x2A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x862 JUMP JUMPDEST PUSH2 0x503 JUMP JUMPDEST PUSH2 0x15B PUSH32 0xEDE9DCDB0CE99DC7CEC9C7BE9246AD08B37853683AD91569C187B647DDF5E21C DUP2 JUMP JUMPDEST PUSH2 0x2D6 PUSH2 0x528 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x990 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x314 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x335 DUP2 PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x33F DUP4 DUP4 PUSH2 0x6BE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x36E JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x378 DUP3 DUP3 PUSH2 0x750 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x388 DUP2 PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x33F JUMPI PUSH2 0x3B7 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3A9 JUMPI PUSH2 0x3A9 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH2 0x503 JUMP JUMPDEST DUP1 PUSH2 0x3C1 DUP2 PUSH2 0x9EA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x38B JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x41A JUMPI PUSH2 0x3F9 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3EB JUMPI PUSH2 0x3EB PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH2 0x470 JUMP JUMPDEST ISZERO PUSH2 0x408 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x314 JUMP JUMPDEST DUP1 PUSH2 0x412 DUP2 PUSH2 0x9EA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3CD JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42F DUP2 PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x33F JUMPI PUSH2 0x45E DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x450 JUMPI PUSH2 0x450 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH2 0x31A JUMP JUMPDEST DUP1 PUSH2 0x468 DUP2 PUSH2 0x9EA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x432 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4A4 PUSH2 0x528 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x4FB JUMPI PUSH2 0x4D6 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4C8 JUMPI PUSH2 0x4C8 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 PUSH2 0x470 JUMP JUMPDEST ISZERO PUSH2 0x4E9 JUMPI DUP2 PUSH2 0x4E5 DUP2 PUSH2 0x9EA JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x4F3 DUP2 PUSH2 0x9EA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4AA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x51E DUP2 PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x33F DUP4 DUP4 PUSH2 0x750 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x6 DUP1 DUP3 MSTORE PUSH1 0xE0 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0xC0 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x562 JUMPI PUSH2 0x562 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x5A2 JUMPI PUSH2 0x5A2 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH32 0x482648E7878E9FA54C0A2F67FFD22D00EBC37CF7A03E060E428D2AB0CD6735CC DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x5E2 JUMPI PUSH2 0x5E2 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH32 0xEDE9DCDB0CE99DC7CEC9C7BE9246AD08B37853683AD91569C187B647DDF5E21C DUP2 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x622 JUMPI PUSH2 0x622 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH32 0x58223CDFB69946630D837D40B5C366A584F0217ADA7FDDD8318F2E08603CFA22 DUP2 PUSH1 0x4 DUP2 MLOAD DUP2 LT PUSH2 0x662 JUMPI PUSH2 0x662 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH32 0x7B8BB8356A3F32F5C111FF23F050D97F08988E0883529EA7BFF3B918887A6E0E DUP2 PUSH1 0x5 DUP2 MLOAD DUP2 LT PUSH2 0x6A2 JUMPI PUSH2 0x6A2 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP SWAP1 JUMP JUMPDEST PUSH2 0x6BB DUP2 CALLER PUSH2 0x7BB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6CA DUP4 DUP4 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x748 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x700 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x314 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x314 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x75C DUP4 DUP4 PUSH2 0x470 JUMP JUMPDEST ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x314 JUMP JUMPDEST PUSH2 0x7C5 DUP3 DUP3 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x7F8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x80E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x826 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x83F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x85D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x875 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x885 PUSH1 0x20 DUP5 ADD PUSH2 0x846 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8C0 DUP4 PUSH2 0x846 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP1 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x8DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x904 JUMPI PUSH2 0x904 PUSH2 0x88E JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x929 JUMPI PUSH2 0x929 PUSH2 0x88E JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP10 DUP4 GT ISZERO PUSH2 0x947 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x965 JUMPI DUP5 CALLDATALOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x94C JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x987 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x826 DUP3 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9C8 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x9AC JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xA0A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 SGT SWAP13 0x2B 0x2B JUMP 0x2E 0xA8 0xC4 CREATE2 SGT 0x29 0xD6 0xAA 0xB0 CALLDATASIZE CALLVALUE 0xE4 GASLIMIT 0xB7 0x2A EXP 0xE1 0x5D 0xC2 0xFC 0xD MSTORE8 0xBA 0xDE 0x4B DUP13 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "227:2862:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2541:202:0;;;;;;:::i;:::-;;:::i;:::-;;;470:14:10;;463:22;445:41;;433:2;418:18;2541:202:0;;;;;;;;3786:120;;;;;;:::i;:::-;3851:7;3877:12;;;;;;;;;;:22;;;;3786:120;;;;828:25:10;;;816:2;801:18;3786:120:0;682:177:10;4202:136:0;;;;;;:::i;:::-;;:::i;:::-;;5304:245;;;;;;:::i;:::-;;:::i;1352:221:9:-;;;;;;:::i;:::-;;:::i;1816:271::-;;;;;;:::i;:::-;;:::i;306:60::-;;343:23;306:60;;960:219;;;;;;:::i;:::-;;:::i;2830:136:0:-;;;;;;:::i;:::-;;:::i;534:86:9:-;;584:36;534:86;;2196:49:0;;2241:4;2196:49;;2250:360:9;;;;;;:::i;:::-;;:::i;626:82::-;;674:34;626:82;;372:68;;413:27;372:68;;4618:138:0;;;;;;:::i;:::-;;:::i;446:82:9:-;;494:34;446:82;;2723:364;;;:::i;:::-;;;;;;;:::i;2541:202:0:-;2626:4;-1:-1:-1;;;;;;2649:47:0;;-1:-1:-1;;;2649:47:0;;:87;;-1:-1:-1;;;;;;;;;;829:40:5;;;2700:36:0;2642:94;2541:202;-1:-1:-1;;2541:202:0:o;4202:136::-;3851:7;3877:12;;;;;;;;;;:22;;;2473:16;2484:4;2473:10;:16::i;:::-;4306:25:::1;4317:4;4323:7;4306:10;:25::i;:::-;;4202:136:::0;;;:::o;5304:245::-;-1:-1:-1;;;;;5397:34:0;;735:10:4;5397:34:0;5393:102;;5454:30;;-1:-1:-1;;;5454:30:0;;;;;;;;;;;5393:102;5505:37;5517:4;5523:18;5505:11;:37::i;:::-;;5304:245;;:::o;1352:221:9:-;2241:4:0;2473:16;2241:4;2473:10;:16::i;:::-;1475:9:9::1;1470:97;1494:5;:12;1490:1;:16;1470:97;;;1527:29;1538:5;1544:1;1538:8;;;;;;;;:::i;:::-;;;;;;;1548:7;1527:10;:29::i;:::-;1508:3:::0;::::1;::::0;::::1;:::i;:::-;;;;1470:97;;1816:271:::0;1900:4;;1916:143;1940:5;:12;1936:1;:16;1916:143;;;1977:26;1985:5;1991:1;1985:8;;;;;;;;:::i;:::-;;;;;;;1995:7;1977;:26::i;:::-;1973:76;;;2030:4;2023:11;;;;;1973:76;1954:3;;;;:::i;:::-;;;;1916:143;;;-1:-1:-1;2075:5:9;;1816:271;-1:-1:-1;;;1816:271:9:o;960:219::-;2241:4:0;2473:16;2241:4;2473:10;:16::i;:::-;1082:9:9::1;1077:96;1101:5;:12;1097:1;:16;1077:96;;;1134:28;1144:5;1150:1;1144:8;;;;;;;;:::i;:::-;;;;;;;1154:7;1134:9;:28::i;:::-;1115:3:::0;::::1;::::0;::::1;:::i;:::-;;;;1077:96;;2830:136:0::0;2907:4;2930:12;;;;;;;;;;;-1:-1:-1;;;;;2930:29:0;;;;;;;;;;;;;;;2830:136::o;2250:360:9:-;2312:17;2341:25;2369:13;:11;:13::i;:::-;2341:41;;2392:13;2433:9;2428:145;2452:8;:15;2448:1;:19;2428:145;;;2492:29;2500:8;2509:1;2500:11;;;;;;;;:::i;:::-;;;;;;;2513:7;2492;:29::i;:::-;2488:75;;;2541:7;;;;:::i;:::-;;;;2488:75;2469:3;;;;:::i;:::-;;;;2428:145;;;-1:-1:-1;2598:5:9;2250:360;-1:-1:-1;;;2250:360:9:o;4618:138:0:-;3851:7;3877:12;;;;;;;;;;:22;;;2473:16;2484:4;2473:10;:16::i;:::-;4723:26:::1;4735:4;4741:7;4723:11;:26::i;2723:364:9:-:0;2809:16;;;2823:1;2809:16;;;;;;;;;2767:22;;2809:16;;;;;;;;;;-1:-1:-1;2809:16:9;2801:24;;2241:4:0;2846:18:9;;2835:5;2841:1;2835:8;;;;;;;;:::i;:::-;;;;;;:29;;;;;343:23;2874:5;2880:1;2874:8;;;;;;;;:::i;:::-;;;;;;:21;;;;;413:27;2905:5;2911:1;2905:8;;;;;;;;:::i;:::-;;;;;;:25;;;;;494:34;2940:5;2946:1;2940:8;;;;;;;;:::i;:::-;;;;;;:32;;;;;584:36;2982:5;2988:1;2982:8;;;;;;;;:::i;:::-;;;;;;:34;;;;;674;3026:5;3032:1;3026:8;;;;;;;;:::i;:::-;;;;;;:32;;;;;2723:364;:::o;3175:103:0:-;3241:30;3252:4;735:10:4;3241::0;:30::i;:::-;3175:103;:::o;6155:316::-;6232:4;6253:22;6261:4;6267:7;6253;:22::i;:::-;6248:217;;6291:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6291:29:0;;;;;;;;;:36;;-1:-1:-1;;6291:36:0;6323:4;6291:36;;;6373:12;735:10:4;;656:96;6373:12:0;-1:-1:-1;;;;;6346:40:0;6364:7;-1:-1:-1;;;;;6346:40:0;6358:4;6346:40;;;;;;;;;;-1:-1:-1;6407:4:0;6400:11;;6248:217;-1:-1:-1;6449:5:0;6442:12;;6708:317;6786:4;6806:22;6814:4;6820:7;6806;:22::i;:::-;6802:217;;;6876:5;6844:12;;;;;;;;;;;-1:-1:-1;;;;;6844:29:0;;;;;;;;;;:37;;-1:-1:-1;;6844:37:0;;;6900:40;735:10:4;;6844:12:0;;6900:40;;6876:5;6900:40;-1:-1:-1;6961:4:0;6954:11;;3408:197;3496:22;3504:4;3510:7;3496;:22::i;:::-;3491:108;;3541:47;;-1:-1:-1;;;3541:47:0;;-1:-1:-1;;;;;4198:32:10;;3541:47:0;;;4180:51:10;4247:18;;;4240:34;;;4153:18;;3541:47:0;;;;;;;3491:108;3408:197;;:::o;14:286:10:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:10;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:10:o;497:180::-;556:6;609:2;597:9;588:7;584:23;580:32;577:52;;;625:1;622;615:12;577:52;-1:-1:-1;648:23:10;;497:180;-1:-1:-1;497:180:10:o;864:173::-;932:20;;-1:-1:-1;;;;;981:31:10;;971:42;;961:70;;1027:1;1024;1017:12;961:70;864:173;;;:::o;1042:254::-;1110:6;1118;1171:2;1159:9;1150:7;1146:23;1142:32;1139:52;;;1187:1;1184;1177:12;1139:52;1223:9;1210:23;1200:33;;1252:38;1286:2;1275:9;1271:18;1252:38;:::i;:::-;1242:48;;1042:254;;;;;:::o;1301:127::-;1362:10;1357:3;1353:20;1350:1;1343:31;1393:4;1390:1;1383:15;1417:4;1414:1;1407:15;1433:1189;1526:6;1534;1587:2;1575:9;1566:7;1562:23;1558:32;1555:52;;;1603:1;1600;1593:12;1555:52;1626:29;1645:9;1626:29;:::i;:::-;1616:39;;1674:2;1727;1716:9;1712:18;1699:32;1750:18;1791:2;1783:6;1780:14;1777:34;;;1807:1;1804;1797:12;1777:34;1845:6;1834:9;1830:22;1820:32;;1890:7;1883:4;1879:2;1875:13;1871:27;1861:55;;1912:1;1909;1902:12;1861:55;1948:2;1935:16;1970:2;1966;1963:10;1960:36;;;1976:18;;:::i;:::-;2022:2;2019:1;2015:10;2054:2;2048:9;2117:2;2113:7;2108:2;2104;2100:11;2096:25;2088:6;2084:38;2172:6;2160:10;2157:22;2152:2;2140:10;2137:18;2134:46;2131:72;;;2183:18;;:::i;:::-;2219:2;2212:22;2269:18;;;2303:15;;;;-1:-1:-1;2345:11:10;;;2341:20;;;2373:19;;;2370:39;;;2405:1;2402;2395:12;2370:39;2429:11;;;;2449:142;2465:6;2460:3;2457:15;2449:142;;;2531:17;;2519:30;;2482:12;;;;2569;;;;2449:142;;;2610:6;2600:16;;;;;;;;1433:1189;;;;;:::o;2627:186::-;2686:6;2739:2;2727:9;2718:7;2714:23;2710:32;2707:52;;;2755:1;2752;2745:12;2707:52;2778:29;2797:9;2778:29;:::i;3000:632::-;3171:2;3223:21;;;3293:13;;3196:18;;;3315:22;;;3142:4;;3171:2;3394:15;;;;3368:2;3353:18;;;3142:4;3437:169;3451:6;3448:1;3445:13;3437:169;;;3512:13;;3500:26;;3581:15;;;;3546:12;;;;3473:1;3466:9;3437:169;;;-1:-1:-1;3623:3:10;;3000:632;-1:-1:-1;;;;;;3000:632:10:o;3637:127::-;3698:10;3693:3;3689:20;3686:1;3679:31;3729:4;3726:1;3719:15;3753:4;3750:1;3743:15;3769:232;3808:3;3829:17;;;3826:140;;3888:10;3883:3;3879:20;3876:1;3869:31;3923:4;3920:1;3913:15;3951:4;3948:1;3941:15;3826:140;-1:-1:-1;3993:1:10;3982:13;;3769:232::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "526200",
								"executionCost": "29245",
								"totalCost": "555445"
							},
							"external": {
								"ADMIN_ROLE()": "262",
								"AI_ORACLE_ROLE()": "239",
								"DEFAULT_ADMIN_ROLE()": "262",
								"DISPUTE_RESOLVER_ROLE()": "217",
								"MILESTONE_APPROVER_ROLE()": "240",
								"TREASURY_MANAGER_ROLE()": "283",
								"getAllRoles()": "infinite",
								"getRoleAdmin(bytes32)": "2493",
								"getRoleCount(address)": "infinite",
								"grantMultipleRoles(address,bytes32[])": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasAnyRole(address,bytes32[])": "infinite",
								"hasRole(bytes32,address)": "2674",
								"renounceRole(bytes32,address)": "29113",
								"revokeMultipleRoles(address,bytes32[])": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "450"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 227,
									"end": 3089,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 719,
									"end": 793,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 719,
									"end": 793,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 719,
									"end": 793,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 719,
									"end": 793,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 719,
									"end": 793,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 719,
									"end": 793,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 793,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 719,
									"end": 793,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 719,
									"end": 793,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 719,
									"end": 793,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 744,
									"end": 786,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2241,
									"end": 2245,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 775,
									"end": 785,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 744,
									"end": 754,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 744,
									"end": 786,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 744,
									"end": 786,
									"name": "tag",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 744,
									"end": 786,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 744,
									"end": 786,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6232,
									"end": 6236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6297,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6323,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 735,
									"end": 745,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6364,
									"end": 6371,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6358,
									"end": 6362,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6407,
									"end": 6411,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6449,
									"end": 6454,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "tag",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122082139c2b2b562ea8c4f51329d6aab03634e445b72a0ae15dc2fc0d53bade4b8c64736f6c63430008140033",
									".code": [
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 9,
											"value": "91D14854"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 9,
											"value": "BFE42A37"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 9,
											"value": "BFE42A37"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 9,
											"value": "C601F7AF"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 9,
											"value": "D547741F"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 9,
											"value": "EBDF690F"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 9,
											"value": "F2BCAC3D"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 9,
											"value": "91D14854"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 9,
											"value": "A02D72FB"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 9,
											"value": "A217FDDF"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 9,
											"value": "ACA5A8A7"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 9,
											"value": "4FE9D1F5"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 9,
											"value": "4FE9D1F5"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 9,
											"value": "68CA78F9"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 9,
											"value": "75B238FC"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 9,
											"value": "91B9F9D8"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 9,
											"value": "1FFC9A7"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 9,
											"value": "248A9CA3"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 9,
											"value": "2F2FF15D"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 9,
											"value": "36568ABE"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 828,
											"end": 853,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 828,
											"end": 853,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 828,
											"end": 853,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 816,
											"end": 818,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 801,
											"end": 819,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 682,
											"end": 859,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1573,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 1352,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 1352,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1352,
											"end": 1573,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1573,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1352,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1352,
											"end": 1573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1573,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1352,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1352,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1352,
											"end": 1573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1816,
											"end": 2087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 1816,
											"end": 2087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 306,
											"end": 366,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 306,
											"end": 366,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 306,
											"end": 366,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 343,
											"end": 366,
											"name": "PUSH",
											"source": 9,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 306,
											"end": 366,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 306,
											"end": 366,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 960,
											"end": 1179,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 960,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 960,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 960,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 960,
											"end": 1179,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 960,
											"end": 1179,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 960,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 960,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 960,
											"end": 1179,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 960,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 960,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 960,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 534,
											"end": 620,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 534,
											"end": 620,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 534,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 584,
											"end": 620,
											"name": "PUSH",
											"source": 9,
											"value": "58223CDFB69946630D837D40B5C366A584F0217ADA7FDDD8318F2E08603CFA22"
										},
										{
											"begin": 534,
											"end": 620,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 534,
											"end": 620,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2250,
											"end": 2610,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 2250,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2250,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 2250,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 2250,
											"end": 2610,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2250,
											"end": 2610,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2250,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 2250,
											"end": 2610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2250,
											"end": 2610,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 2250,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2250,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 2250,
											"end": 2610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 626,
											"end": 708,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 626,
											"end": 708,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 626,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 674,
											"end": 708,
											"name": "PUSH",
											"source": 9,
											"value": "7B8BB8356A3F32F5C111FF23F050D97F08988E0883529EA7BFF3B918887A6E0E"
										},
										{
											"begin": 626,
											"end": 708,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 626,
											"end": 708,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 372,
											"end": 440,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 372,
											"end": 440,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 372,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 413,
											"end": 440,
											"name": "PUSH",
											"source": 9,
											"value": "482648E7878E9FA54C0A2F67FFD22D00EBC37CF7A03E060E428D2AB0CD6735CC"
										},
										{
											"begin": 372,
											"end": 440,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 372,
											"end": 440,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 446,
											"end": 528,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 446,
											"end": 528,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 446,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 494,
											"end": 528,
											"name": "PUSH",
											"source": 9,
											"value": "EDE9DCDB0CE99DC7CEC9C7BE9246AD08B37853683AD91569C187B647DDF5E21C"
										},
										{
											"begin": 446,
											"end": 528,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 446,
											"end": 528,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 2723,
											"end": 3087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 2723,
											"end": 3087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 829,
											"end": 869,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 829,
											"end": 869,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 829,
											"end": 869,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2642,
											"end": 2736,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4317,
											"end": 4321,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4330,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4316,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4306,
											"end": 4331,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "334BD919"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 5517,
											"end": 5521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 5505,
											"end": 5542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1573,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1352,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1470,
											"end": 1567,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 1470,
											"end": 1567,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1494,
											"end": 1499,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1494,
											"end": 1506,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1490,
											"end": 1491,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1490,
											"end": 1506,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1470,
											"end": 1567,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1470,
											"end": 1567,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 1470,
											"end": 1567,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1556,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 1538,
											"end": 1543,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1544,
											"end": 1545,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 1538,
											"end": 1546,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1548,
											"end": 1555,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1537,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1527,
											"end": 1556,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1527,
											"end": 1556,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 1527,
											"end": 1556,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1508,
											"end": 1511,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1508,
											"end": 1511,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 1508,
											"end": 1511,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1508,
											"end": 1511,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 1508,
											"end": 1511,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1508,
											"end": 1511,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 1508,
											"end": 1511,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1508,
											"end": 1511,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1508,
											"end": 1511,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1508,
											"end": 1511,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1470,
											"end": 1567,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 1470,
											"end": 1567,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1900,
											"end": 1904,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 1904,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1916,
											"end": 2059,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 1916,
											"end": 2059,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1945,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1940,
											"end": 1952,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1936,
											"end": 1937,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1936,
											"end": 1952,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1916,
											"end": 2059,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1916,
											"end": 2059,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 1916,
											"end": 2059,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 1985,
											"end": 1990,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1991,
											"end": 1992,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 1985,
											"end": 1993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1995,
											"end": 2002,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1977,
											"end": 2003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1977,
											"end": 2003,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 1977,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1973,
											"end": 2049,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1973,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 1973,
											"end": 2049,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2030,
											"end": 2034,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2023,
											"end": 2034,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2034,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2034,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2023,
											"end": 2034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 2023,
											"end": 2034,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1973,
											"end": 2049,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 1973,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 1954,
											"end": 1957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1916,
											"end": 2059,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 1916,
											"end": 2059,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1916,
											"end": 2059,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 1916,
											"end": 2059,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2075,
											"end": 2080,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2075,
											"end": 2080,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1816,
											"end": 2087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 960,
											"end": 1179,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 960,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1173,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 1077,
											"end": 1173,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1106,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1101,
											"end": 1113,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1098,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1113,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1173,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1173,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 1077,
											"end": 1173,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1134,
											"end": 1162,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 1144,
											"end": 1149,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1151,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 1144,
											"end": 1152,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1154,
											"end": 1161,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 1134,
											"end": 1143,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 1134,
											"end": 1162,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1134,
											"end": 1162,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 1134,
											"end": 1162,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1115,
											"end": 1118,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1115,
											"end": 1118,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 1115,
											"end": 1118,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1115,
											"end": 1118,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 1115,
											"end": 1118,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1115,
											"end": 1118,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 1115,
											"end": 1118,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1115,
											"end": 1118,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1115,
											"end": 1118,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1115,
											"end": 1118,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1077,
											"end": 1173,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 1077,
											"end": 1173,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2911,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2250,
											"end": 2610,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 2250,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2312,
											"end": 2329,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2341,
											"end": 2366,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 2369,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 2369,
											"end": 2382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2341,
											"end": 2382,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2341,
											"end": 2382,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2392,
											"end": 2405,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2433,
											"end": 2442,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2428,
											"end": 2573,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 2428,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2452,
											"end": 2460,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2452,
											"end": 2467,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2448,
											"end": 2449,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2448,
											"end": 2467,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2428,
											"end": 2573,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2428,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 2428,
											"end": 2573,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2492,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 2500,
											"end": 2508,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2509,
											"end": 2510,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 2500,
											"end": 2511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2513,
											"end": 2520,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 2492,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 2492,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2492,
											"end": 2521,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 2492,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2488,
											"end": 2563,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2488,
											"end": 2563,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 2488,
											"end": 2563,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 2541,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2488,
											"end": 2563,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 2488,
											"end": 2563,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2472,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 2469,
											"end": 2472,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 2469,
											"end": 2472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2472,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 2469,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2472,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2472,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2469,
											"end": 2472,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2428,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 2428,
											"end": 2573,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2428,
											"end": 2573,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 2428,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2598,
											"end": 2603,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2250,
											"end": 2610,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2250,
											"end": 2610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4735,
											"end": 4739,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4741,
											"end": 4748,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4723,
											"end": 4749,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 2824,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2767,
											"end": 2789,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 2767,
											"end": 2789,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "CALLDATACOPY",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2801,
											"end": 2825,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2801,
											"end": 2825,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2846,
											"end": 2864,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2846,
											"end": 2864,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2840,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2841,
											"end": 2842,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 2835,
											"end": 2843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "tag",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2864,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2864,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2864,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2864,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2835,
											"end": 2864,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 343,
											"end": 366,
											"name": "PUSH",
											"source": 9,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 2874,
											"end": 2879,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2880,
											"end": 2881,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 2874,
											"end": 2882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2895,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2895,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2895,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2895,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2874,
											"end": 2895,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 413,
											"end": 440,
											"name": "PUSH",
											"source": 9,
											"value": "482648E7878E9FA54C0A2F67FFD22D00EBC37CF7A03E060E428D2AB0CD6735CC"
										},
										{
											"begin": 2905,
											"end": 2910,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2911,
											"end": 2912,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 2905,
											"end": 2913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2930,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2930,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2930,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2930,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2905,
											"end": 2930,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 494,
											"end": 528,
											"name": "PUSH",
											"source": 9,
											"value": "EDE9DCDB0CE99DC7CEC9C7BE9246AD08B37853683AD91569C187B647DDF5E21C"
										},
										{
											"begin": 2940,
											"end": 2945,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2946,
											"end": 2947,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 2940,
											"end": 2948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "tag",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 2972,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 2972,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 2972,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 2972,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2940,
											"end": 2972,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 584,
											"end": 620,
											"name": "PUSH",
											"source": 9,
											"value": "58223CDFB69946630D837D40B5C366A584F0217ADA7FDDD8318F2E08603CFA22"
										},
										{
											"begin": 2982,
											"end": 2987,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2988,
											"end": 2989,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 2982,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3016,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3016,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3016,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3016,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2982,
											"end": 3016,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 674,
											"end": 708,
											"name": "PUSH",
											"source": 9,
											"value": "7B8BB8356A3F32F5C111FF23F050D97F08988E0883529EA7BFF3B918887A6E0E"
										},
										{
											"begin": 3026,
											"end": 3031,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3032,
											"end": 3033,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 3026,
											"end": 3034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "tag",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3058,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3058,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3058,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3058,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3026,
											"end": 3058,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2723,
											"end": 3087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 3252,
											"end": 3256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3241,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 3241,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6232,
											"end": 6236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 6261,
											"end": 6265,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6267,
											"end": 6274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6253,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 6253,
											"end": 6275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6297,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6323,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6364,
											"end": 6371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6358,
											"end": 6362,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6407,
											"end": 6411,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6449,
											"end": 6454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6786,
											"end": 6790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 6814,
											"end": 6818,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 6827,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 6806,
											"end": 6828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6876,
											"end": 6881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6876,
											"end": 6881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6961,
											"end": 6965,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3504,
											"end": 3508,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3517,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3496,
											"end": 3518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2517D3F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4198,
											"end": 4230,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4198,
											"end": 4230,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4180,
											"end": 4231,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4247,
											"end": 4265,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 4247,
											"end": 4265,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4247,
											"end": 4265,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4274,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4274,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4240,
											"end": 4274,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4153,
											"end": 4171,
											"name": "PUSH",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 4153,
											"end": 4171,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 167,
											"end": 190,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 219,
											"end": 251,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 219,
											"end": 251,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 209,
											"end": 252,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 209,
											"end": 252,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 199,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 199,
											"end": 270,
											"name": "tag",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 497,
											"end": 677,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 497,
											"end": 677,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 556,
											"end": 562,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 609,
											"end": 611,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 597,
											"end": 606,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 588,
											"end": 595,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 584,
											"end": 607,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 580,
											"end": 612,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 577,
											"end": 629,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 577,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 577,
											"end": 629,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 625,
											"end": 626,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 623,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 615,
											"end": 627,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 577,
											"end": 629,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 577,
											"end": 629,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 648,
											"end": 671,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 648,
											"end": 671,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 497,
											"end": 677,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 497,
											"end": 677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 864,
											"end": 1037,
											"name": "tag",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 864,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 932,
											"end": 952,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 932,
											"end": 952,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 981,
											"end": 1012,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 981,
											"end": 1012,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 971,
											"end": 1013,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 971,
											"end": 1013,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 961,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 961,
											"end": 1031,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1027,
											"end": 1028,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 1025,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1017,
											"end": 1029,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 961,
											"end": 1031,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 961,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 864,
											"end": 1037,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 864,
											"end": 1037,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 864,
											"end": 1037,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 864,
											"end": 1037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1296,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 1042,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1110,
											"end": 1116,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1124,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1171,
											"end": 1173,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1159,
											"end": 1168,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1150,
											"end": 1157,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1146,
											"end": 1169,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1142,
											"end": 1174,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1139,
											"end": 1191,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1139,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 1139,
											"end": 1191,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1187,
											"end": 1188,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1185,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1177,
											"end": 1189,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1139,
											"end": 1191,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 1139,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1223,
											"end": 1232,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1210,
											"end": 1233,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1200,
											"end": 1233,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1200,
											"end": 1233,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 1286,
											"end": 1288,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1275,
											"end": 1284,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1271,
											"end": 1289,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 1252,
											"end": 1290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "tag",
											"source": 10,
											"value": "205"
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1242,
											"end": 1290,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1242,
											"end": 1290,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1296,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1296,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1296,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1296,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1296,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1042,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1301,
											"end": 1428,
											"name": "tag",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 1301,
											"end": 1428,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1362,
											"end": 1372,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 1357,
											"end": 1360,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 1353,
											"end": 1373,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 1350,
											"end": 1351,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1343,
											"end": 1374,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1393,
											"end": 1397,
											"name": "PUSH",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 1390,
											"end": 1391,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1383,
											"end": 1398,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1417,
											"end": 1421,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 1414,
											"end": 1415,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 1422,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1433,
											"end": 2622,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 1433,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1526,
											"end": 1532,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1587,
											"end": 1589,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1575,
											"end": 1584,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1566,
											"end": 1573,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1562,
											"end": 1585,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1558,
											"end": 1590,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1555,
											"end": 1607,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1555,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 1555,
											"end": 1607,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1603,
											"end": 1604,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1600,
											"end": 1601,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1555,
											"end": 1607,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 1555,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 1645,
											"end": 1654,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 1626,
											"end": 1655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1626,
											"end": 1655,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 1626,
											"end": 1655,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1616,
											"end": 1655,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1616,
											"end": 1655,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1674,
											"end": 1676,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1727,
											"end": 1729,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1716,
											"end": 1725,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1712,
											"end": 1730,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1699,
											"end": 1731,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1750,
											"end": 1768,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1791,
											"end": 1793,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1783,
											"end": 1789,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1780,
											"end": 1794,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1777,
											"end": 1811,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1777,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 1777,
											"end": 1811,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1807,
											"end": 1808,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1804,
											"end": 1805,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1797,
											"end": 1809,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1777,
											"end": 1811,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 1777,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1845,
											"end": 1851,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1830,
											"end": 1852,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1820,
											"end": 1852,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1820,
											"end": 1852,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1890,
											"end": 1897,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1883,
											"end": 1887,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 1879,
											"end": 1881,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1875,
											"end": 1888,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1871,
											"end": 1898,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1861,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 1861,
											"end": 1916,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1909,
											"end": 1910,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1902,
											"end": 1914,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1861,
											"end": 1916,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 1861,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1948,
											"end": 1950,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1935,
											"end": 1951,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 1970,
											"end": 1972,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1966,
											"end": 1968,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 1973,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1976,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 1976,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 1976,
											"end": 1994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1976,
											"end": 1994,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 1976,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2022,
											"end": 2024,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 2054,
											"end": 2056,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2057,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2117,
											"end": 2119,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2108,
											"end": 2110,
											"name": "PUSH",
											"source": 10,
											"value": "3F"
										},
										{
											"begin": 2104,
											"end": 2106,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2100,
											"end": 2111,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2096,
											"end": 2121,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2088,
											"end": 2094,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2084,
											"end": 2122,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2172,
											"end": 2178,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2160,
											"end": 2170,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2157,
											"end": 2179,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2152,
											"end": 2154,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2140,
											"end": 2150,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2155,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2134,
											"end": 2180,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2203,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2131,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 2131,
											"end": 2203,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 2183,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 2183,
											"end": 2201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2201,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 2183,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2219,
											"end": 2221,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2212,
											"end": 2234,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2269,
											"end": 2287,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2269,
											"end": 2287,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2269,
											"end": 2287,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2303,
											"end": 2318,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2303,
											"end": 2318,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2303,
											"end": 2318,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2303,
											"end": 2318,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2345,
											"end": 2356,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2345,
											"end": 2356,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2345,
											"end": 2356,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2361,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2361,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2341,
											"end": 2361,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2373,
											"end": 2392,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 2373,
											"end": 2392,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2373,
											"end": 2392,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2405,
											"end": 2406,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2402,
											"end": 2403,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2395,
											"end": 2407,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "tag",
											"source": 10,
											"value": "216"
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2429,
											"end": 2440,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2429,
											"end": 2440,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2429,
											"end": 2440,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2429,
											"end": 2440,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2591,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 2449,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2465,
											"end": 2471,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2460,
											"end": 2463,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2457,
											"end": 2472,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2591,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 2449,
											"end": 2591,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2548,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2531,
											"end": 2548,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2519,
											"end": 2549,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2519,
											"end": 2549,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2569,
											"end": 2581,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2569,
											"end": 2581,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2569,
											"end": 2581,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2569,
											"end": 2581,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 2449,
											"end": 2591,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2449,
											"end": 2591,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 2449,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2610,
											"end": 2616,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2600,
											"end": 2616,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 2600,
											"end": 2616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2600,
											"end": 2616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2600,
											"end": 2616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2600,
											"end": 2616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2600,
											"end": 2616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2600,
											"end": 2616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2600,
											"end": 2616,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1433,
											"end": 2622,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1433,
											"end": 2622,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1433,
											"end": 2622,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1433,
											"end": 2622,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1433,
											"end": 2622,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1433,
											"end": 2622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2627,
											"end": 2813,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 2627,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2686,
											"end": 2692,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2739,
											"end": 2741,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2727,
											"end": 2736,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2718,
											"end": 2725,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2714,
											"end": 2737,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2710,
											"end": 2742,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2707,
											"end": 2759,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2707,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 2707,
											"end": 2759,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2755,
											"end": 2756,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2752,
											"end": 2753,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2745,
											"end": 2757,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2707,
											"end": 2759,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 2707,
											"end": 2759,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2778,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "196"
										},
										{
											"begin": 2797,
											"end": 2806,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2778,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "192"
										},
										{
											"begin": 2778,
											"end": 2807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3632,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 3000,
											"end": 3632,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3171,
											"end": 3173,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3223,
											"end": 3244,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3223,
											"end": 3244,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3223,
											"end": 3244,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3293,
											"end": 3306,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3293,
											"end": 3306,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3315,
											"end": 3337,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3315,
											"end": 3337,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3315,
											"end": 3337,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3146,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3142,
											"end": 3146,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3171,
											"end": 3173,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3394,
											"end": 3409,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3394,
											"end": 3409,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3394,
											"end": 3409,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3394,
											"end": 3409,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3368,
											"end": 3370,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3353,
											"end": 3371,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3353,
											"end": 3371,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3353,
											"end": 3371,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3142,
											"end": 3146,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3437,
											"end": 3606,
											"name": "tag",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 3437,
											"end": 3606,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3451,
											"end": 3457,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3448,
											"end": 3449,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3445,
											"end": 3458,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3437,
											"end": 3606,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3437,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 3437,
											"end": 3606,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3512,
											"end": 3525,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3512,
											"end": 3525,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3500,
											"end": 3526,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3500,
											"end": 3526,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3581,
											"end": 3596,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3581,
											"end": 3596,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3581,
											"end": 3596,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3581,
											"end": 3596,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3546,
											"end": 3558,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3546,
											"end": 3558,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3546,
											"end": 3558,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3546,
											"end": 3558,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3473,
											"end": 3474,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3466,
											"end": 3475,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3437,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "225"
										},
										{
											"begin": 3437,
											"end": 3606,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3437,
											"end": 3606,
											"name": "tag",
											"source": 10,
											"value": "227"
										},
										{
											"begin": 3437,
											"end": 3606,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3623,
											"end": 3626,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3626,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 3000,
											"end": 3632,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3000,
											"end": 3632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3637,
											"end": 3764,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 3637,
											"end": 3764,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 3708,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 3693,
											"end": 3696,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 3689,
											"end": 3709,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3686,
											"end": 3687,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3679,
											"end": 3710,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3729,
											"end": 3733,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 3726,
											"end": 3727,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3719,
											"end": 3734,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3753,
											"end": 3757,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3750,
											"end": 3751,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3743,
											"end": 3758,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3769,
											"end": 4001,
											"name": "tag",
											"source": 10,
											"value": "117"
										},
										{
											"begin": 3769,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3808,
											"end": 3811,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3829,
											"end": 3846,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3829,
											"end": 3846,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3829,
											"end": 3846,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3826,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 3826,
											"end": 3966,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3888,
											"end": 3898,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B71"
										},
										{
											"begin": 3883,
											"end": 3886,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 3879,
											"end": 3899,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 3876,
											"end": 3877,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3869,
											"end": 3900,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3923,
											"end": 3927,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 3920,
											"end": 3921,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3913,
											"end": 3928,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3951,
											"end": 3955,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 3948,
											"end": 3949,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3956,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3826,
											"end": 3966,
											"name": "tag",
											"source": 10,
											"value": "230"
										},
										{
											"begin": 3826,
											"end": 3966,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3993,
											"end": 3994,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3982,
											"end": 3995,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3982,
											"end": 3995,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3769,
											"end": 4001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol",
								"CrossFi-Treasury-Guard/contracts/interfaces/IAIScoreRegistry.sol",
								"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ADMIN_ROLE()": "75b238fc",
							"AI_ORACLE_ROLE()": "c601f7af",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"DISPUTE_RESOLVER_ROLE()": "bfe42a37",
							"MILESTONE_APPROVER_ROLE()": "a02d72fb",
							"TREASURY_MANAGER_ROLE()": "ebdf690f",
							"getAllRoles()": "f2bcac3d",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleCount(address)": "aca5a8a7",
							"grantMultipleRoles(address,bytes32[])": "91b9f9d8",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasAnyRole(address,bytes32[])": "68ca78f9",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeMultipleRoles(address,bytes32[])": "4fe9d1f5",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"AI_ORACLE_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DISPUTE_RESOLVER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MILESTONE_APPROVER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TREASURY_MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllRoles\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getRoleCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"roleCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"}],\"name\":\"grantMultipleRoles\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"}],\"name\":\"hasAnyRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"}],\"name\":\"revokeMultipleRoles\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extended access control with custom roles for CrossFi Treasury Guard\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getAllRoles()\":{\"details\":\"Get all available roles\",\"returns\":{\"roles\":\"Array of all role identifiers\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleCount(address)\":{\"details\":\"Get all roles for an account\",\"params\":{\"account\":\"Account to check\"},\"returns\":{\"roleCount\":\"Number of roles the account has\"}},\"grantMultipleRoles(address,bytes32[])\":{\"details\":\"Grant multiple roles to an account\",\"params\":{\"account\":\"Account to grant roles to\",\"roles\":\"Array of role identifiers\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasAnyRole(address,bytes32[])\":{\"details\":\"Check if account has any of the specified roles\",\"params\":{\"account\":\"Account to check\",\"roles\":\"Array of role identifiers\"},\"returns\":{\"_0\":\"hasAnyRole True if account has at least one of the roles\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeMultipleRoles(address,bytes32[])\":{\"details\":\"Revoke multiple roles from an account\",\"params\":{\"account\":\"Account to revoke roles from\",\"roles\":\"Array of role identifiers\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"AccessControl\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":\"ExtendedAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":{\"keccak256\":\"0x8b7cd81ef25f52c2cdffb0879b4c8d953d671eef13fa1ebdda28c0c2e16c52da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc0018431667094cdb37883ffc7417dfd2c552844692f1340143f4e7e4b903f3\",\"dweb:/ipfs/QmPdnh9tbMBQCaazQ2fzbQSKKxkERU75TcSDZ9KVfDhujb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol:ExtendedAccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)22_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)22_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)22_storage"
							},
							"t_struct(RoleData)22_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 19,
										"contract": "CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol:ExtendedAccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 21,
										"contract": "CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol:ExtendedAccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							296
						],
						"Context": [
							582
						],
						"ERC165": [
							606
						],
						"IAccessControl": [
							379
						],
						"IERC165": [
							618
						]
					},
					"id": 297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 380,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 379,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 583,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 582,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 607,
							"src": "233:66:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 618,
										"src": "241:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 7,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 606,
										"src": "250:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 10,
										"name": "Context",
										"nameLocations": [
											"1997:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 582,
										"src": "1997:7:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:7:0"
								},
								{
									"baseName": {
										"id": 12,
										"name": "IAccessControl",
										"nameLocations": [
											"2006:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 379,
										"src": "2006:14:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "2006:14:0"
								},
								{
									"baseName": {
										"id": 14,
										"name": "ERC165",
										"nameLocations": [
											"2022:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 606,
										"src": "2022:6:0"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "2022:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 9,
								"nodeType": "StructuredDocumentation",
								"src": "301:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 296,
							"linearizedBaseContracts": [
								296,
								606,
								618,
								379,
								582
							],
							"name": "AccessControl",
							"nameLocation": "1980:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 22,
									"members": [
										{
											"constant": false,
											"id": 19,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2094:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "2061:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 18,
												"keyName": "account",
												"keyNameLocation": "2077:7:0",
												"keyType": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2061:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2088:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 21,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2119:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "2111:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 20,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2111:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2042:8:0",
									"nodeType": "StructDefinition",
									"scope": 296,
									"src": "2035:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2183:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 296,
									"src": "2141:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 26,
										"keyName": "role",
										"keyNameLocation": "2157:4:0",
										"keyType": {
											"id": 23,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2149:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2141:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 25,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 24,
												"name": "RoleData",
												"nameLocations": [
													"2165:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 22,
												"src": "2165:8:0"
											},
											"referencedDeclaration": 22,
											"src": "2165:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$22_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 30,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2220:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 296,
									"src": "2196:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 28,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2196:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 29,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2241:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "2463:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 36,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "2484:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 35,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															94,
															115
														],
														"referencedDeclaration": 94,
														"src": "2473:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2473:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2473:16:0"
											},
											{
												"id": 39,
												"nodeType": "PlaceholderStatement",
												"src": "2499:1:0"
											}
										]
									},
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "2252:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 41,
									"name": "onlyRole",
									"nameLocation": "2440:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2457:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "2449:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 32,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2448:14:0"
									},
									"src": "2431:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										605
									],
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "2632:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 55,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 50,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "2649:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 52,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 379,
																		"src": "2669:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$379_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$379_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 51,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2664:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2664:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$379",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2685:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2664:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2649:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 58,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "2724:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 56,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2700:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$296_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2706:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 605,
															"src": "2700:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2700:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2649:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 49,
												"id": 61,
												"nodeType": "Return",
												"src": "2642:94:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "2513:23:0",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2550:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 46,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2608:8:0"
									},
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2575:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2568:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 43,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2567:20:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2626:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 47,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2626:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2625:6:0"
									},
									"scope": 296,
									"src": "2541:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										346
									],
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2913:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 73,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "2930:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 75,
															"indexExpression": {
																"id": 74,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "2937:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2930:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$22_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2943:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "2930:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 78,
													"indexExpression": {
														"id": 77,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "2951:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2930:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 72,
												"id": 79,
												"nodeType": "Return",
												"src": "2923:36:0"
											}
										]
									},
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "2749:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2839:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2855:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2847:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 65,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2869:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2861:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2861:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2846:31:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2907:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 70,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2907:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2906:6:0"
									},
									"scope": 296,
									"src": "2830:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "3231:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 88,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "3252:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 89,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 564,
																"src": "3258:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3258:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 87,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															94,
															115
														],
														"referencedDeclaration": 115,
														"src": "3241:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3241:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "3241:30:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2972:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3184:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3203:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "3195:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 83,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3194:14:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:0"
									},
									"scope": 296,
									"src": "3175:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "3481:124:0",
										"statements": [
											{
												"condition": {
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3495:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 103,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3504:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 104,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "3510:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 102,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "3496:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3496:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 113,
												"nodeType": "IfStatement",
												"src": "3491:108:0",
												"trueBody": {
													"id": 112,
													"nodeType": "Block",
													"src": "3520:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 108,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "3574:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 109,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "3583:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 107,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "3541:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$__$",
																		"typeString": "function (address,bytes32) pure"
																	}
																},
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3541:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 111,
															"nodeType": "RevertStatement",
															"src": "3534:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "3284:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3417:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3436:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3428:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 96,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3450:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3442:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3442:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3427:31:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3481:0:0"
									},
									"scope": 296,
									"src": "3408:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										354
									],
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "3860:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 123,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "3877:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 125,
														"indexExpression": {
															"id": 124,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "3884:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3877:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$22_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3890:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 21,
													"src": "3877:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 122,
												"id": 127,
												"nodeType": "Return",
												"src": "3870:29:0"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "3611:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3795:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3816:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3808:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 117,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:14:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3851:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 120,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:9:0"
									},
									"scope": 296,
									"src": "3786:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										362
									],
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "4296:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 143,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "4317:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 144,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "4323:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 142,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "4306:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4306:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "4306:25:0"
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "3912:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 138,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "4289:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 137,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4276:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 140,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 136,
												"name": "onlyRole",
												"nameLocations": [
													"4267:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "4267:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4267:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4211:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4229:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "4221:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4221:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4243:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "4235:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4235:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4220:31:0"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4296:0:0"
									},
									"scope": 296,
									"src": "4202:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										370
									],
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "4713:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 162,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "4735:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 163,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4741:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 161,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "4723:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4723:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "4723:26:0"
											}
										]
									},
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "4344:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 157,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "4706:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 156,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4693:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4693:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 159,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 155,
												"name": "onlyRole",
												"nameLocations": [
													"4684:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "4684:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4684:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4627:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4646:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4638:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 150,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4637:31:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4713:0:0"
									},
									"scope": 296,
									"src": "4618:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										378
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "5383:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 175,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "5397:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 176,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "5419:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5419:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5397:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 183,
												"nodeType": "IfStatement",
												"src": "5393:102:0",
												"trueBody": {
													"id": 182,
													"nodeType": "Block",
													"src": "5433:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 179,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 309,
																	"src": "5454:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5454:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 181,
															"nodeType": "RevertStatement",
															"src": "5447:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "5517:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 186,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "5523:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5505:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5505:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5505:37:0"
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "4762:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5313:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5334:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5326:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 169,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5348:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5340:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5325:42:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5383:0:0"
									},
									"scope": 296,
									"src": "5304:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "5747:174:0",
										"statements": [
											{
												"assignments": [
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5765:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 217,
														"src": "5757:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 198,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5757:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 203,
												"initialValue": {
													"arguments": [
														{
															"id": 201,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5798:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 200,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "5785:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5785:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5757:46:0"
											},
											{
												"expression": {
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 204,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "5813:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 206,
															"indexExpression": {
																"id": 205,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "5820:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5813:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$22_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5826:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "5813:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 208,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "5838:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5813:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "5813:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 212,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5879:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "5885:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 214,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "5904:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 211,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "5862:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5862:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "EmitStatement",
												"src": "5857:57:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5555:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5683:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5705:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5697:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5697:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5719:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5711:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 194,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5696:33:0"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5747:0:0"
									},
									"scope": 296,
									"src": "5674:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "6238:233:0",
										"statements": [
											{
												"condition": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6252:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 229,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "6261:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 230,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "6267:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 228,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "6253:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6253:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 254,
													"nodeType": "Block",
													"src": "6428:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6449:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 227,
															"id": 253,
															"nodeType": "Return",
															"src": "6442:12:0"
														}
													]
												},
												"id": 255,
												"nodeType": "IfStatement",
												"src": "6248:217:0",
												"trueBody": {
													"id": 251,
													"nodeType": "Block",
													"src": "6277:145:0",
													"statements": [
														{
															"expression": {
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 233,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 27,
																				"src": "6291:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 235,
																			"indexExpression": {
																				"id": 234,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 221,
																				"src": "6298:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6291:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$22_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 236,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6304:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 19,
																		"src": "6291:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 238,
																	"indexExpression": {
																		"id": 237,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 223,
																		"src": "6312:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6291:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6323:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6291:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 241,
															"nodeType": "ExpressionStatement",
															"src": "6291:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 243,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "6358:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 244,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 223,
																		"src": "6364:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 245,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 564,
																			"src": "6373:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6373:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 242,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "6346:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6346:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 248,
															"nodeType": "EmitStatement",
															"src": "6341:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6407:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 227,
															"id": 250,
															"nodeType": "Return",
															"src": "6400:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "5927:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6164:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6183:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6175:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 220,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6197:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6189:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6189:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6174:31:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6232:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6232:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6231:6:0"
									},
									"scope": 296,
									"src": "6155:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "6792:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 268,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "6814:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 269,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "6820:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 267,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "6806:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6806:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 292,
													"nodeType": "Block",
													"src": "6982:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7003:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 266,
															"id": 291,
															"nodeType": "Return",
															"src": "6996:12:0"
														}
													]
												},
												"id": 293,
												"nodeType": "IfStatement",
												"src": "6802:217:0",
												"trueBody": {
													"id": 289,
													"nodeType": "Block",
													"src": "6830:146:0",
													"statements": [
														{
															"expression": {
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 271,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 27,
																				"src": "6844:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 273,
																			"indexExpression": {
																				"id": 272,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 260,
																				"src": "6851:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6844:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$22_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 274,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6857:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 19,
																		"src": "6844:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 276,
																	"indexExpression": {
																		"id": 275,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "6865:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6844:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6876:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6844:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 279,
															"nodeType": "ExpressionStatement",
															"src": "6844:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 281,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "6912:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 282,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "6918:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 283,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 564,
																			"src": "6927:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6927:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 280,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "6900:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6900:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 286,
															"nodeType": "EmitStatement",
															"src": "6895:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 266,
															"id": 288,
															"nodeType": "Return",
															"src": "6954:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "6477:226:0",
										"text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6717:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6737:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6729:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 259,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6751:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6743:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6743:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6728:31:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6786:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6786:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6785:6:0"
									},
									"scope": 296,
									"src": "6708:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 297,
							"src": "1962:5065:0",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336
							]
						}
					],
					"src": "108:6920:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							379
						]
					},
					"id": 380,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 298,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 299,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 379,
							"linearizedBaseContracts": [
								379
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 306,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 303,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 309,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 318,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 311,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 313,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 315,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 327,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 320,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 336,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 329,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 346,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 338,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 379,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 354,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 348,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 351,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 379,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 356,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 379,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 370,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 364,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 379,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 372,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 379,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 380,
							"src": "226:3116:1",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							582
						],
						"Pausable": [
							487
						]
					},
					"id": 488,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 381,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 382,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 488,
							"sourceUnit": 583,
							"src": "130:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 384,
										"name": "Context",
										"nameLocations": [
											"632:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 582,
										"src": "632:7:2"
									},
									"id": 385,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:2"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 383,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:2",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 487,
							"linearizedBaseContracts": [
								487,
								582
							],
							"name": "Pausable",
							"nameLocation": "620:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:2",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 390,
									"name": "Paused",
									"nameLocation": "730:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "737:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:2"
									},
									"src": "724:30:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:2",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 395,
									"name": "Unpaused",
									"nameLocation": "841:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "850:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:2"
									},
									"src": "835:32:2"
								},
								{
									"constant": false,
									"id": 397,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 487,
									"src": "873:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 396,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "986:32:2",
										"statements": [
											{
												"expression": {
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 401,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "996:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 402,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "996:15:2"
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:2",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 406,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:2"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:2"
									},
									"scope": 487,
									"src": "972:46:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "1229:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 409,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 443,
														"src": "1239:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:2"
											},
											{
												"id": 412,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:2"
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:2",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 414,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:2"
									},
									"src": "1204:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "1476:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 417,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "1486:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 419,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:2"
											},
											{
												"id": 420,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:2"
											}
										]
									},
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:2",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 422,
									"name": "whenPaused",
									"nameLocation": "1463:10:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:2"
									},
									"src": "1454:66:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "1668:31:2",
										"statements": [
											{
												"expression": {
													"id": 428,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 397,
													"src": "1685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 427,
												"id": 429,
												"nodeType": "Return",
												"src": "1678:14:2"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:2",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:2"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "1662:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 425,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:2"
									},
									"scope": 487,
									"src": "1615:84:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 442,
										"nodeType": "Block",
										"src": "1818:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:2",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 436,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "1837:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 435,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:2"
											}
										]
									},
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:2",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:2"
									},
									"returnParameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:2"
									},
									"scope": 487,
									"src": "1767:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "1993:58:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 448,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 431,
																"src": "2011:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 447,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:2"
											}
										]
									},
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:2",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:2"
									},
									"returnParameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:2"
									},
									"scope": 487,
									"src": "1945:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 469,
										"nodeType": "Block",
										"src": "2235:66:2",
										"statements": [
											{
												"expression": {
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 460,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "2245:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 461,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 463,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 465,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 564,
																"src": "2281:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 464,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "2274:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 468,
												"nodeType": "EmitStatement",
												"src": "2269:25:2"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:2",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 470,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 458,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 457,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 414,
												"src": "2221:13:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:2"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:2"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:2"
									},
									"scope": 487,
									"src": "2186:115:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 485,
										"nodeType": "Block",
										"src": "2481:69:2",
										"statements": [
											{
												"expression": {
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 476,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "2491:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 477,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 481,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 564,
																"src": "2530:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 480,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 395,
														"src": "2521:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 484,
												"nodeType": "EmitStatement",
												"src": "2516:27:2"
											}
										]
									},
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:2",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 486,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 474,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 473,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 422,
												"src": "2470:10:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:2"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:2"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:2"
									},
									"scope": 487,
									"src": "2433:117:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 488,
							"src": "602:1950:2",
							"usedErrors": [],
							"usedEvents": [
								390,
								395
							]
						}
					],
					"src": "105:2448:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							552
						]
					},
					"id": 553,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 489,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 490,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 552,
							"linearizedBaseContracts": [
								552
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 493,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 552,
									"src": "1676:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 491,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 492,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 496,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 552,
									"src": "1723:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 494,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 495,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 498,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 552,
									"src": "1767:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 497,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 505,
										"nodeType": "Block",
										"src": "1811:39:3",
										"statements": [
											{
												"expression": {
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 501,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "1821:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 502,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "1831:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:3"
											}
										]
									},
									"id": 506,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:3"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:3"
									},
									"scope": 552,
									"src": "1797:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "2251:79:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 509,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "2261:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:3"
											},
											{
												"id": 512,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 513,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "2303:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 515,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:3"
											}
										]
									},
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 517,
									"name": "nonReentrant",
									"nameLocation": "2236:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:3"
									},
									"src": "2227:103:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "2375:248:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 521,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 498,
																"src": "2468:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 522,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 496,
																"src": "2479:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 520,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:3"
											},
											{
												"expression": {
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 527,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "2598:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 528,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "2608:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 530,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:3"
											}
										]
									},
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:3"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:3"
									},
									"scope": 552,
									"src": "2336:287:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "2667:171:3",
										"statements": [
											{
												"expression": {
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 535,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "2809:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 536,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "2819:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:3"
											}
										]
									},
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:3"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:3"
									},
									"scope": 552,
									"src": "2629:209:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "3081:43:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 546,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "3098:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 547,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "3109:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 545,
												"id": 549,
												"nodeType": "Return",
												"src": "3091:26:3"
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:3",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:3"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3075:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 543,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:3"
									},
									"scope": 552,
									"src": "3017:107:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 553,
							"src": "888:2238:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							582
						]
					},
					"id": 583,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 554,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 555,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 582,
							"linearizedBaseContracts": [
								582
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 560,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 559,
												"id": 562,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 582,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 569,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 568,
												"id": 571,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 566,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 582,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 577,
												"id": 579,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 582,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 583,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							606
						],
						"IERC165": [
							618
						]
					},
					"id": 607,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 584,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 586,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 607,
							"sourceUnit": 619,
							"src": "140:38:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 585,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 618,
										"src": "148:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 588,
										"name": "IERC165",
										"nameLocations": [
											"688:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 618,
										"src": "688:7:5"
									},
									"id": 589,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:5"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 587,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:5",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 606,
							"linearizedBaseContracts": [
								606,
								618
							],
							"name": "ERC165",
							"nameLocation": "678:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										617
									],
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "812:64:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 597,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "829:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 599,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "849:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$618_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$618_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 598,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "844:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "844:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$618",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "858:11:5",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "844:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "829:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 596,
												"id": 603,
												"nodeType": "Return",
												"src": "822:47:5"
											}
										]
									},
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "702:23:5",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "739:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "764:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "757:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 591,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "757:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:20:5"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "806:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 594,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "806:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "805:6:5"
									},
									"scope": 606,
									"src": "730:146:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 607,
							"src": "660:218:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:765:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							618
						]
					},
					"id": 619,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 608,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 609,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:6",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 618,
							"linearizedBaseContracts": [
								618
							],
							"name": "IERC165",
							"nameLocation": "433:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 610,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:6",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 617,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "819:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 611,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:6"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "862:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 614,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:6"
									},
									"scope": 618,
									"src": "792:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 619,
							"src": "423:447:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:6"
				},
				"id": 6
			},
			"CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol": {
				"ast": {
					"absolutePath": "CrossFi-Treasury-Guard/contracts/AIScoreRegistry.sol",
					"exportedSymbols": {
						"AIScoreRegistry": [
							1380
						],
						"AccessControl": [
							296
						],
						"Context": [
							582
						],
						"ERC165": [
							606
						],
						"ExtendedAccessControl": [
							1687
						],
						"IAIScoreRegistry": [
							1441
						],
						"IAccessControl": [
							379
						],
						"IERC165": [
							618
						],
						"Pausable": [
							487
						],
						"ReentrancyGuard": [
							552
						]
					},
					"id": 1381,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 620,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"absolutePath": "CrossFi-Treasury-Guard/contracts/interfaces/IAIScoreRegistry.sol",
							"file": "./interfaces/IAIScoreRegistry.sol",
							"id": 621,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1381,
							"sourceUnit": 1442,
							"src": "58:43:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol",
							"file": "./utils/ExtendedAccessControl.sol",
							"id": 622,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1381,
							"sourceUnit": 1688,
							"src": "102:43:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 623,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1381,
							"sourceUnit": 488,
							"src": "146:55:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 624,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1381,
							"sourceUnit": 553,
							"src": "202:62:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 626,
										"name": "IAIScoreRegistry",
										"nameLocations": [
											"438:16:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1441,
										"src": "438:16:7"
									},
									"id": 627,
									"nodeType": "InheritanceSpecifier",
									"src": "438:16:7"
								},
								{
									"baseName": {
										"id": 628,
										"name": "ExtendedAccessControl",
										"nameLocations": [
											"456:21:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1687,
										"src": "456:21:7"
									},
									"id": 629,
									"nodeType": "InheritanceSpecifier",
									"src": "456:21:7"
								},
								{
									"baseName": {
										"id": 630,
										"name": "Pausable",
										"nameLocations": [
											"479:8:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 487,
										"src": "479:8:7"
									},
									"id": 631,
									"nodeType": "InheritanceSpecifier",
									"src": "479:8:7"
								},
								{
									"baseName": {
										"id": 632,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"489:15:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 552,
										"src": "489:15:7"
									},
									"id": 633,
									"nodeType": "InheritanceSpecifier",
									"src": "489:15:7"
								}
							],
							"canonicalName": "AIScoreRegistry",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 625,
								"nodeType": "StructuredDocumentation",
								"src": "266:142:7",
								"text": " @title AIScoreRegistry\n @dev Stores AI-generated scores and IPFS CIDs for proposal analysis\n @author CrossFi Treasury Guard Team"
							},
							"fullyImplemented": true,
							"id": 1380,
							"linearizedBaseContracts": [
								1380,
								552,
								487,
								1687,
								296,
								606,
								618,
								379,
								582,
								1441
							],
							"name": "AIScoreRegistry",
							"nameLocation": "419:15:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AIScoreRegistry.ScoringCriteria",
									"id": 644,
									"members": [
										{
											"constant": false,
											"id": 635,
											"mutability": "mutable",
											"name": "ecosystemContribution",
											"nameLocation": "569:21:7",
											"nodeType": "VariableDeclaration",
											"scope": 644,
											"src": "563:27:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 634,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "563:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 637,
											"mutability": "mutable",
											"name": "feasibility",
											"nameLocation": "606:11:7",
											"nodeType": "VariableDeclaration",
											"scope": 644,
											"src": "600:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 636,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "600:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 639,
											"mutability": "mutable",
											"name": "riskAssessment",
											"nameLocation": "633:14:7",
											"nodeType": "VariableDeclaration",
											"scope": 644,
											"src": "627:20:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 638,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "627:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 641,
											"mutability": "mutable",
											"name": "teamReputation",
											"nameLocation": "663:14:7",
											"nodeType": "VariableDeclaration",
											"scope": 644,
											"src": "657:20:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 640,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "657:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 643,
											"mutability": "mutable",
											"name": "innovation",
											"nameLocation": "693:10:7",
											"nodeType": "VariableDeclaration",
											"scope": 644,
											"src": "687:16:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 642,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "687:5:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ScoringCriteria",
									"nameLocation": "537:15:7",
									"nodeType": "StructDefinition",
									"scope": 1380,
									"src": "530:180:7",
									"visibility": "public"
								},
								{
									"canonicalName": "AIScoreRegistry.AIScoreData",
									"id": 662,
									"members": [
										{
											"constant": false,
											"id": 646,
											"mutability": "mutable",
											"name": "proposalId",
											"nameLocation": "780:10:7",
											"nodeType": "VariableDeclaration",
											"scope": 662,
											"src": "772:18:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 645,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "772:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 648,
											"mutability": "mutable",
											"name": "overallScore",
											"nameLocation": "808:12:7",
											"nodeType": "VariableDeclaration",
											"scope": 662,
											"src": "800:20:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 647,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "800:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 650,
											"mutability": "mutable",
											"name": "justificationIPFS",
											"nameLocation": "837:17:7",
											"nodeType": "VariableDeclaration",
											"scope": 662,
											"src": "830:24:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 649,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "830:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 652,
											"mutability": "mutable",
											"name": "modelVersion",
											"nameLocation": "871:12:7",
											"nodeType": "VariableDeclaration",
											"scope": 662,
											"src": "864:19:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 651,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "864:6:7",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 654,
											"mutability": "mutable",
											"name": "timestamp",
											"nameLocation": "901:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 662,
											"src": "893:17:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 653,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "893:7:7",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 656,
											"mutability": "mutable",
											"name": "oracle",
											"nameLocation": "928:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 662,
											"src": "920:14:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 655,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "920:7:7",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 658,
											"mutability": "mutable",
											"name": "exists",
											"nameLocation": "953:6:7",
											"nodeType": "VariableDeclaration",
											"scope": 662,
											"src": "948:11:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 657,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "948:4:7",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 661,
											"mutability": "mutable",
											"name": "breakdown",
											"nameLocation": "986:9:7",
											"nodeType": "VariableDeclaration",
											"scope": 662,
											"src": "969:26:7",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_ScoringBreakdown_$1394_storage_ptr",
												"typeString": "struct IAIScoreRegistry.ScoringBreakdown"
											},
											"typeName": {
												"id": 660,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 659,
													"name": "ScoringBreakdown",
													"nameLocations": [
														"969:16:7"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1394,
													"src": "969:16:7"
												},
												"referencedDeclaration": 1394,
												"src": "969:16:7",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ScoringBreakdown_$1394_storage_ptr",
													"typeString": "struct IAIScoreRegistry.ScoringBreakdown"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AIScoreData",
									"nameLocation": "750:11:7",
									"nodeType": "StructDefinition",
									"scope": 1380,
									"src": "743:259:7",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 667,
									"mutability": "mutable",
									"name": "aiScores",
									"nameLocation": "1048:8:7",
									"nodeType": "VariableDeclaration",
									"scope": 1380,
									"src": "1008:48:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_AIScoreData_$662_storage_$",
										"typeString": "mapping(uint256 => struct AIScoreRegistry.AIScoreData)"
									},
									"typeName": {
										"id": 666,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 663,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1016:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1008:31:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_AIScoreData_$662_storage_$",
											"typeString": "mapping(uint256 => struct AIScoreRegistry.AIScoreData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 665,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 664,
												"name": "AIScoreData",
												"nameLocations": [
													"1027:11:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 662,
												"src": "1027:11:7"
											},
											"referencedDeclaration": 662,
											"src": "1027:11:7",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_AIScoreData_$662_storage_ptr",
												"typeString": "struct AIScoreRegistry.AIScoreData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "61c992a3",
									"id": 671,
									"mutability": "mutable",
									"name": "authorizedOracles",
									"nameLocation": "1094:17:7",
									"nodeType": "VariableDeclaration",
									"scope": 1380,
									"src": "1062:49:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 670,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 668,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1070:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1062:24:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 669,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1081:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2ed49cf7",
									"id": 675,
									"mutability": "mutable",
									"name": "supportedModels",
									"nameLocation": "1148:15:7",
									"nodeType": "VariableDeclaration",
									"scope": 1380,
									"src": "1117:46:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
										"typeString": "mapping(string => bool)"
									},
									"typeName": {
										"id": 674,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 672,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "1125:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"nodeType": "Mapping",
										"src": "1117:23:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
											"typeString": "mapping(string => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 673,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1135:4:7",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4da89fbd",
									"id": 678,
									"mutability": "mutable",
									"name": "scoringWeights",
									"nameLocation": "1197:14:7",
									"nodeType": "VariableDeclaration",
									"scope": 1380,
									"src": "1174:37:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_ScoringCriteria_$644_storage",
										"typeString": "struct AIScoreRegistry.ScoringCriteria"
									},
									"typeName": {
										"id": 677,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 676,
											"name": "ScoringCriteria",
											"nameLocations": [
												"1174:15:7"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 644,
											"src": "1174:15:7"
										},
										"referencedDeclaration": 644,
										"src": "1174:15:7",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_ScoringCriteria_$644_storage_ptr",
											"typeString": "struct AIScoreRegistry.ScoringCriteria"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "40b89270",
									"id": 681,
									"mutability": "constant",
									"name": "MIN_SCORE",
									"nameLocation": "1241:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 1380,
									"src": "1217:37:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 679,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1217:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 680,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1253:1:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "27ff6223",
									"id": 684,
									"mutability": "constant",
									"name": "MAX_SCORE",
									"nameLocation": "1284:9:7",
									"nodeType": "VariableDeclaration",
									"scope": 1380,
									"src": "1260:39:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 682,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1260:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313030",
										"id": 683,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1296:3:7",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a91ad18e",
									"id": 687,
									"mutability": "constant",
									"name": "SCORE_VALIDITY_PERIOD",
									"nameLocation": "1329:21:7",
									"nodeType": "VariableDeclaration",
									"scope": 1380,
									"src": "1305:55:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 685,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1305:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3330",
										"id": 686,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1353:7:7",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2592000_by_1",
											"typeString": "int_const 2592000"
										},
										"value": "30"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3a1e017f",
									"id": 689,
									"mutability": "mutable",
									"name": "totalScoresSubmitted",
									"nameLocation": "1382:20:7",
									"nodeType": "VariableDeclaration",
									"scope": 1380,
									"src": "1367:35:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 688,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1367:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7131f025",
									"id": 693,
									"mutability": "mutable",
									"name": "oracleScoreCount",
									"nameLocation": "1443:16:7",
									"nodeType": "VariableDeclaration",
									"scope": 1380,
									"src": "1408:51:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 692,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 690,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1416:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1408:27:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 691,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1427:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "82a8fb1e779ea45ad427cc612e47087f5386a567e49dce488185e40646fa48d5",
									"id": 699,
									"name": "OracleAuthorized",
									"nameLocation": "1477:16:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"indexed": true,
												"mutability": "mutable",
												"name": "oracle",
												"nameLocation": "1510:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "1494:22:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"indexed": false,
												"mutability": "mutable",
												"name": "authorized",
												"nameLocation": "1523:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 699,
												"src": "1518:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 696,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1518:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1493:41:7"
									},
									"src": "1471:64:7"
								},
								{
									"anonymous": false,
									"eventSelector": "2e5180543742ece2db44ed70b2619f2bf555a29a7bdead994736174f0d90a9b6",
									"id": 705,
									"name": "ModelSupported",
									"nameLocation": "1546:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"indexed": false,
												"mutability": "mutable",
												"name": "modelVersion",
												"nameLocation": "1568:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "1561:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 700,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1561:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 703,
												"indexed": false,
												"mutability": "mutable",
												"name": "supported",
												"nameLocation": "1587:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 705,
												"src": "1582:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 702,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1582:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1560:37:7"
									},
									"src": "1540:58:7"
								},
								{
									"anonymous": false,
									"eventSelector": "90565f56924446477768885e9b20cf4cb9d2183f2ad4313f3e90f1dcaedcc0ae",
									"id": 710,
									"name": "ScoringCriteriaUpdated",
									"nameLocation": "1609:22:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"indexed": false,
												"mutability": "mutable",
												"name": "newCriteria",
												"nameLocation": "1648:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "1632:27:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ScoringCriteria_$644_memory_ptr",
													"typeString": "struct AIScoreRegistry.ScoringCriteria"
												},
												"typeName": {
													"id": 707,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 706,
														"name": "ScoringCriteria",
														"nameLocations": [
															"1632:15:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 644,
														"src": "1632:15:7"
													},
													"referencedDeclaration": 644,
													"src": "1632:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ScoringCriteria_$644_storage_ptr",
														"typeString": "struct AIScoreRegistry.ScoringCriteria"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1631:29:7"
									},
									"src": "1603:58:7"
								},
								{
									"anonymous": false,
									"eventSelector": "d3e8dbbe8ff60a1fae1e5f88e71f27270ed38badc7b26e19922ed94fd12f5fe9",
									"id": 718,
									"name": "ScoreUpdated",
									"nameLocation": "1672:12:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"indexed": true,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "1701:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "1685:26:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1685:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"indexed": false,
												"mutability": "mutable",
												"name": "newScore",
												"nameLocation": "1721:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "1713:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1713:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"indexed": false,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "1738:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "1731:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 715,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1731:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1684:61:7"
									},
									"src": "1666:80:7"
								},
								{
									"body": {
										"id": 729,
										"nodeType": "Block",
										"src": "1784:91:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 721,
																"name": "authorizedOracles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 671,
																"src": "1802:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 724,
															"indexExpression": {
																"expression": {
																	"id": 722,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1820:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 723,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1824:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1820:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1802:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a6564206f7261636c65",
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1833:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36814994bee7035561531cc8c4f1f230479c45e6bccc4871cc426851cda156a2",
																"typeString": "literal_string \"Not authorized oracle\""
															},
															"value": "Not authorized oracle"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36814994bee7035561531cc8c4f1f230479c45e6bccc4871cc426851cda156a2",
																"typeString": "literal_string \"Not authorized oracle\""
															}
														],
														"id": 720,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1794:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1794:63:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 727,
												"nodeType": "ExpressionStatement",
												"src": "1794:63:7"
											},
											{
												"id": 728,
												"nodeType": "PlaceholderStatement",
												"src": "1867:1:7"
											}
										]
									},
									"id": 730,
									"name": "onlyAuthorizedOracle",
									"nameLocation": "1761:20:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1781:2:7"
									},
									"src": "1752:123:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 746,
										"nodeType": "Block",
										"src": "1916:99:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 735,
																	"name": "score",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 732,
																	"src": "1934:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 736,
																	"name": "MIN_SCORE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 681,
																	"src": "1943:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1934:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 738,
																	"name": "score",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 732,
																	"src": "1956:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 739,
																	"name": "MAX_SCORE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 684,
																	"src": "1965:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1956:18:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1934:40:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53636f7265206f7574206f662072616e6765",
															"id": 742,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1976:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_63af77bbbc7224208a06ceed8f4ab35deccfa6d50db9fd125a1b296b24befc02",
																"typeString": "literal_string \"Score out of range\""
															},
															"value": "Score out of range"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_63af77bbbc7224208a06ceed8f4ab35deccfa6d50db9fd125a1b296b24befc02",
																"typeString": "literal_string \"Score out of range\""
															}
														],
														"id": 734,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1926:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1926:71:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 744,
												"nodeType": "ExpressionStatement",
												"src": "1926:71:7"
											},
											{
												"id": 745,
												"nodeType": "PlaceholderStatement",
												"src": "2007:1:7"
											}
										]
									},
									"id": 747,
									"name": "validScore",
									"nameLocation": "1890:10:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "score",
												"nameLocation": "1909:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "1901:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1901:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1900:15:7"
									},
									"src": "1881:134:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "2070:74:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 752,
																"name": "proposalId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 749,
																"src": "2088:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 753,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2101:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2088:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642070726f706f73616c204944",
															"id": 755,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2104:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0febab928e40c46453cf5b5d4970676eff56829a16bec62dc48d209b2deaf8aa",
																"typeString": "literal_string \"Invalid proposal ID\""
															},
															"value": "Invalid proposal ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0febab928e40c46453cf5b5d4970676eff56829a16bec62dc48d209b2deaf8aa",
																"typeString": "literal_string \"Invalid proposal ID\""
															}
														],
														"id": 751,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2080:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2080:46:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 757,
												"nodeType": "ExpressionStatement",
												"src": "2080:46:7"
											},
											{
												"id": 758,
												"nodeType": "PlaceholderStatement",
												"src": "2136:1:7"
											}
										]
									},
									"id": 760,
									"name": "validProposalId",
									"nameLocation": "2034:15:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "2058:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "2050:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2050:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2049:20:7"
									},
									"src": "2025:119:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 803,
										"nodeType": "Block",
										"src": "2164:551:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 764,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "2185:18:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 765,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2205:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2209:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2205:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 763,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "2174:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2174:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 768,
												"nodeType": "ExpressionStatement",
												"src": "2174:42:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 770,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1452,
															"src": "2237:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 771,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2249:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2253:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2249:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 769,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "2226:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2226:34:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 774,
												"nodeType": "ExpressionStatement",
												"src": "2226:34:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 776,
															"name": "AI_ORACLE_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1457,
															"src": "2281:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 777,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2297:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2301:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2297:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 775,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "2270:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2270:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 780,
												"nodeType": "ExpressionStatement",
												"src": "2270:38:7"
											},
											{
												"expression": {
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 781,
														"name": "scoringWeights",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "2374:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ScoringCriteria_$644_storage",
															"typeString": "struct AIScoreRegistry.ScoringCriteria storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "3235",
																"id": 783,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2444:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_25_by_1",
																	"typeString": "int_const 25"
																},
																"value": "25"
															},
															{
																"hexValue": "3235",
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2473:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_25_by_1",
																	"typeString": "int_const 25"
																},
																"value": "25"
															},
															{
																"hexValue": "3230",
																"id": 785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2505:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_20_by_1",
																	"typeString": "int_const 20"
																},
																"value": "20"
															},
															{
																"hexValue": "3135",
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2537:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_15_by_1",
																	"typeString": "int_const 15"
																},
																"value": "15"
															},
															{
																"hexValue": "3135",
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2565:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_15_by_1",
																	"typeString": "int_const 15"
																},
																"value": "15"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_25_by_1",
																	"typeString": "int_const 25"
																},
																{
																	"typeIdentifier": "t_rational_25_by_1",
																	"typeString": "int_const 25"
																},
																{
																	"typeIdentifier": "t_rational_20_by_1",
																	"typeString": "int_const 20"
																},
																{
																	"typeIdentifier": "t_rational_15_by_1",
																	"typeString": "int_const 15"
																},
																{
																	"typeIdentifier": "t_rational_15_by_1",
																	"typeString": "int_const 15"
																}
															],
															"id": 782,
															"name": "ScoringCriteria",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 644,
															"src": "2391:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_ScoringCriteria_$644_storage_ptr_$",
																"typeString": "type(struct AIScoreRegistry.ScoringCriteria storage pointer)"
															}
														},
														"id": 788,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"2421:21:7",
															"2460:11:7",
															"2489:14:7",
															"2521:14:7",
															"2553:10:7"
														],
														"names": [
															"ecosystemContribution",
															"feasibility",
															"riskAssessment",
															"teamReputation",
															"innovation"
														],
														"nodeType": "FunctionCall",
														"src": "2391:187:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ScoringCriteria_$644_memory_ptr",
															"typeString": "struct AIScoreRegistry.ScoringCriteria memory"
														}
													},
													"src": "2374:204:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ScoringCriteria_$644_storage",
														"typeString": "struct AIScoreRegistry.ScoringCriteria storage ref"
													}
												},
												"id": 790,
												"nodeType": "ExpressionStatement",
												"src": "2374:204:7"
											},
											{
												"expression": {
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 791,
															"name": "supportedModels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "2633:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
																"typeString": "mapping(string memory => bool)"
															}
														},
														"id": 793,
														"indexExpression": {
															"hexValue": "4750542d34",
															"id": 792,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2649:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_11de9be17dd9710e02579f1d3d096fba221ae653f68d1d6cff1fad0d446c1346",
																"typeString": "literal_string \"GPT-4\""
															},
															"value": "GPT-4"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2633:24:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 794,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2660:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2633:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "2633:31:7"
											},
											{
												"expression": {
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 797,
															"name": "supportedModels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "2674:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
																"typeString": "mapping(string memory => bool)"
															}
														},
														"id": 799,
														"indexExpression": {
															"hexValue": "436c617564652d33",
															"id": 798,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2690:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c235908f3fc48dcce6e16e1e3337122520ccf4d205e2a9e98b1319347573ff32",
																"typeString": "literal_string \"Claude-3\""
															},
															"value": "Claude-3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2674:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 800,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2704:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2674:34:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 802,
												"nodeType": "ExpressionStatement",
												"src": "2674:34:7"
											}
										]
									},
									"id": 804,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2161:2:7"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2164:0:7"
									},
									"scope": 1380,
									"src": "2150:565:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1422
									],
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "3380:1795:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 839,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 835,
																			"name": "justificationIPFS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 811,
																			"src": "3404:17:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3398:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 833,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3398:5:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3398:24:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3423:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3398:31:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3432:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3398:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4a757374696669636174696f6e2049504653207265717569726564",
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3435:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb40561e7c3cb6abb9adde29a2dee0b8a1ccdccf090b25897bee188991cd7422",
																"typeString": "literal_string \"Justification IPFS required\""
															},
															"value": "Justification IPFS required"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb40561e7c3cb6abb9adde29a2dee0b8a1ccdccf090b25897bee188991cd7422",
																"typeString": "literal_string \"Justification IPFS required\""
															}
														],
														"id": 832,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3390:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3390:75:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 842,
												"nodeType": "ExpressionStatement",
												"src": "3390:75:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 844,
																"name": "supportedModels",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 675,
																"src": "3483:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
																	"typeString": "mapping(string memory => bool)"
																}
															},
															"id": 846,
															"indexExpression": {
																"id": 845,
																"name": "modelVersion",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 813,
																"src": "3499:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3483:29:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "556e737570706f72746564204149206d6f64656c",
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3514:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_63d21e090775948cc310afaf01e8b96f7a91e37be07b5dc6b48ce00b62db1e97",
																"typeString": "literal_string \"Unsupported AI model\""
															},
															"value": "Unsupported AI model"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_63d21e090775948cc310afaf01e8b96f7a91e37be07b5dc6b48ce00b62db1e97",
																"typeString": "literal_string \"Unsupported AI model\""
															}
														],
														"id": 843,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3475:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3475:62:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 849,
												"nodeType": "ExpressionStatement",
												"src": "3475:62:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3555:28:7",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 851,
																		"name": "aiScores",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "3556:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_AIScoreData_$662_storage_$",
																			"typeString": "mapping(uint256 => struct AIScoreRegistry.AIScoreData storage ref)"
																		}
																	},
																	"id": 853,
																	"indexExpression": {
																		"id": 852,
																		"name": "proposalId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 807,
																		"src": "3565:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3556:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AIScoreData_$662_storage",
																		"typeString": "struct AIScoreRegistry.AIScoreData storage ref"
																	}
																},
																"id": 854,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3577:6:7",
																"memberName": "exists",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 658,
																"src": "3556:27:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53636f726520616c726561647920657869737473",
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3585:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_20fced6b954284e1ef5d497b8bc6607c1a209e0dcf4c8b3eed5e618c3c1d88c8",
																"typeString": "literal_string \"Score already exists\""
															},
															"value": "Score already exists"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_20fced6b954284e1ef5d497b8bc6607c1a209e0dcf4c8b3eed5e618c3c1d88c8",
																"typeString": "literal_string \"Score already exists\""
															}
														],
														"id": 850,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3547:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3547:61:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 858,
												"nodeType": "ExpressionStatement",
												"src": "3547:61:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 863,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 860,
																					"name": "breakdown",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 816,
																					"src": "3685:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ScoringBreakdown_$1394_memory_ptr",
																						"typeString": "struct IAIScoreRegistry.ScoringBreakdown memory"
																					}
																				},
																				"id": 861,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3695:14:7",
																				"memberName": "ecosystemScore",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1385,
																				"src": "3685:24:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"hexValue": "313030",
																				"id": 862,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3713:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"src": "3685:31:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 867,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 864,
																					"name": "breakdown",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 816,
																					"src": "3732:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ScoringBreakdown_$1394_memory_ptr",
																						"typeString": "struct IAIScoreRegistry.ScoringBreakdown memory"
																					}
																				},
																				"id": 865,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3742:16:7",
																				"memberName": "feasibilityScore",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1387,
																				"src": "3732:26:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"hexValue": "313030",
																				"id": 866,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3762:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_100_by_1",
																					"typeString": "int_const 100"
																				},
																				"value": "100"
																			},
																			"src": "3732:33:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3685:80:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 872,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 869,
																				"name": "breakdown",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 816,
																				"src": "3781:9:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ScoringBreakdown_$1394_memory_ptr",
																					"typeString": "struct IAIScoreRegistry.ScoringBreakdown memory"
																				}
																			},
																			"id": 870,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3791:9:7",
																			"memberName": "riskScore",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1389,
																			"src": "3781:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<=",
																		"rightExpression": {
																			"hexValue": "313030",
																			"id": 871,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3804:3:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"value": "100"
																		},
																		"src": "3781:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "3685:122:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 874,
																			"name": "breakdown",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 816,
																			"src": "3823:9:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ScoringBreakdown_$1394_memory_ptr",
																				"typeString": "struct IAIScoreRegistry.ScoringBreakdown memory"
																			}
																		},
																		"id": 875,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3833:9:7",
																		"memberName": "teamScore",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1391,
																		"src": "3823:19:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3846:3:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "3823:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3685:164:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 879,
																		"name": "breakdown",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 816,
																		"src": "3865:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ScoringBreakdown_$1394_memory_ptr",
																			"typeString": "struct IAIScoreRegistry.ScoringBreakdown memory"
																		}
																	},
																	"id": 880,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3875:15:7",
																	"memberName": "innovationScore",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1393,
																	"src": "3865:25:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "313030",
																	"id": 881,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3894:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100_by_1",
																		"typeString": "int_const 100"
																	},
																	"value": "100"
																},
																"src": "3865:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3685:212:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420627265616b646f776e2073636f726573",
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3911:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_befe45b55b0e14ee54aad630250f4a82387142889d62a313e7d018bafe212caf",
																"typeString": "literal_string \"Invalid breakdown scores\""
															},
															"value": "Invalid breakdown scores"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_befe45b55b0e14ee54aad630250f4a82387142889d62a313e7d018bafe212caf",
																"typeString": "literal_string \"Invalid breakdown scores\""
															}
														],
														"id": 859,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3664:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3664:283:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "3664:283:7"
											},
											{
												"assignments": [
													888
												],
												"declarations": [
													{
														"constant": false,
														"id": 888,
														"mutability": "mutable",
														"name": "calculatedScore",
														"nameLocation": "3966:15:7",
														"nodeType": "VariableDeclaration",
														"scope": 979,
														"src": "3958:23:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 887,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3958:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 926,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 915,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 901,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						},
																						"id": 893,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 889,
																								"name": "breakdown",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 816,
																								"src": "3999:9:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_ScoringBreakdown_$1394_memory_ptr",
																									"typeString": "struct IAIScoreRegistry.ScoringBreakdown memory"
																								}
																							},
																							"id": 890,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4009:14:7",
																							"memberName": "ecosystemScore",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1385,
																							"src": "3999:24:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"id": 891,
																								"name": "scoringWeights",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 678,
																								"src": "4026:14:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_ScoringCriteria_$644_storage",
																									"typeString": "struct AIScoreRegistry.ScoringCriteria storage ref"
																								}
																							},
																							"id": 892,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4041:21:7",
																							"memberName": "ecosystemContribution",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 635,
																							"src": "4026:36:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"src": "3999:63:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					}
																				],
																				"id": 894,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3998:65:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						},
																						"id": 899,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"expression": {
																								"id": 895,
																								"name": "breakdown",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 816,
																								"src": "4079:9:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_ScoringBreakdown_$1394_memory_ptr",
																									"typeString": "struct IAIScoreRegistry.ScoringBreakdown memory"
																								}
																							},
																							"id": 896,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4089:16:7",
																							"memberName": "feasibilityScore",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1387,
																							"src": "4079:26:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"expression": {
																								"id": 897,
																								"name": "scoringWeights",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 678,
																								"src": "4108:14:7",
																								"typeDescriptions": {
																									"typeIdentifier": "t_struct$_ScoringCriteria_$644_storage",
																									"typeString": "struct AIScoreRegistry.ScoringCriteria storage ref"
																								}
																							},
																							"id": 898,
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4123:11:7",
																							"memberName": "feasibility",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 637,
																							"src": "4108:26:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"src": "4079:55:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					}
																				],
																				"id": 900,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4078:57:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "3998:137:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					},
																					"id": 906,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 902,
																							"name": "breakdown",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 816,
																							"src": "4151:9:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_ScoringBreakdown_$1394_memory_ptr",
																								"typeString": "struct IAIScoreRegistry.ScoringBreakdown memory"
																							}
																						},
																						"id": 903,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "4161:9:7",
																						"memberName": "riskScore",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1389,
																						"src": "4151:19:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"expression": {
																							"id": 904,
																							"name": "scoringWeights",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 678,
																							"src": "4173:14:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_ScoringCriteria_$644_storage",
																								"typeString": "struct AIScoreRegistry.ScoringCriteria storage ref"
																							}
																						},
																						"id": 905,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "4188:14:7",
																						"memberName": "riskAssessment",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 639,
																						"src": "4173:29:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint8",
																							"typeString": "uint8"
																						}
																					},
																					"src": "4151:51:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				}
																			],
																			"id": 907,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "4150:53:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "3998:205:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				},
																				"id": 913,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 909,
																						"name": "breakdown",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 816,
																						"src": "4219:9:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_ScoringBreakdown_$1394_memory_ptr",
																							"typeString": "struct IAIScoreRegistry.ScoringBreakdown memory"
																						}
																					},
																					"id": 910,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4229:9:7",
																					"memberName": "teamScore",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1391,
																					"src": "4219:19:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"expression": {
																						"id": 911,
																						"name": "scoringWeights",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 678,
																						"src": "4241:14:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_ScoringCriteria_$644_storage",
																							"typeString": "struct AIScoreRegistry.ScoringCriteria storage ref"
																						}
																					},
																					"id": 912,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4256:14:7",
																					"memberName": "teamReputation",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 641,
																					"src": "4241:29:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "4219:51:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			}
																		],
																		"id": 914,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "4218:53:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "3998:273:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 920,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 916,
																					"name": "breakdown",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 816,
																					"src": "4287:9:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ScoringBreakdown_$1394_memory_ptr",
																						"typeString": "struct IAIScoreRegistry.ScoringBreakdown memory"
																					}
																				},
																				"id": 917,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4297:15:7",
																				"memberName": "innovationScore",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1393,
																				"src": "4287:25:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"expression": {
																					"id": 918,
																					"name": "scoringWeights",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 678,
																					"src": "4315:14:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ScoringCriteria_$644_storage",
																						"typeString": "struct AIScoreRegistry.ScoringCriteria storage ref"
																					}
																				},
																				"id": 919,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4330:10:7",
																				"memberName": "innovation",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 643,
																				"src": "4315:25:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "4287:53:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"id": 921,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4286:55:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "3998:343:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"id": 923,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3984:367:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 924,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4354:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "3984:373:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3958:399:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 928,
																	"name": "overallScore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 809,
																	"src": "4389:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 929,
																		"name": "calculatedScore",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 888,
																		"src": "4405:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "35",
																		"id": 930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4423:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_5_by_1",
																			"typeString": "int_const 5"
																		},
																		"value": "5"
																	},
																	"src": "4405:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4389:35:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 933,
																	"name": "overallScore",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 809,
																	"src": "4428:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 934,
																		"name": "calculatedScore",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 888,
																		"src": "4444:15:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "35",
																		"id": 935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4462:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_5_by_1",
																			"typeString": "int_const 5"
																		},
																		"value": "5"
																	},
																	"src": "4444:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4428:35:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4389:74:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53636f726520696e636f6e73697374656e74207769746820627265616b646f776e",
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4477:35:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ce993e7b10fa53e3a225bbeee5af32a4ed7ada86d6a9cad7b2171003c1c4c4d6",
																"typeString": "literal_string \"Score inconsistent with breakdown\""
															},
															"value": "Score inconsistent with breakdown"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ce993e7b10fa53e3a225bbeee5af32a4ed7ada86d6a9cad7b2171003c1c4c4d6",
																"typeString": "literal_string \"Score inconsistent with breakdown\""
															}
														],
														"id": 927,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4368:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4368:154:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 941,
												"nodeType": "ExpressionStatement",
												"src": "4368:154:7"
											},
											{
												"expression": {
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 942,
															"name": "aiScores",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "4533:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_AIScoreData_$662_storage_$",
																"typeString": "mapping(uint256 => struct AIScoreRegistry.AIScoreData storage ref)"
															}
														},
														"id": 944,
														"indexExpression": {
															"id": 943,
															"name": "proposalId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "4542:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4533:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AIScoreData_$662_storage",
															"typeString": "struct AIScoreRegistry.AIScoreData storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 946,
																"name": "proposalId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 807,
																"src": "4594:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 947,
																"name": "overallScore",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 809,
																"src": "4632:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 948,
																"name": "justificationIPFS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 811,
																"src": "4677:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"id": 949,
																"name": "modelVersion",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 813,
																"src": "4722:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"expression": {
																	"id": 950,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "4759:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 951,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4765:9:7",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "4759:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 952,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4796:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 953,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4800:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4796:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"hexValue": "74727565",
																"id": 954,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4828:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"id": 955,
																"name": "breakdown",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 816,
																"src": "4857:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ScoringBreakdown_$1394_memory_ptr",
																	"typeString": "struct IAIScoreRegistry.ScoringBreakdown memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_struct$_ScoringBreakdown_$1394_memory_ptr",
																	"typeString": "struct IAIScoreRegistry.ScoringBreakdown memory"
																}
															],
															"id": 945,
															"name": "AIScoreData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "4556:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_AIScoreData_$662_storage_ptr_$",
																"typeString": "type(struct AIScoreRegistry.AIScoreData storage pointer)"
															}
														},
														"id": 956,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"4582:10:7",
															"4618:12:7",
															"4658:17:7",
															"4708:12:7",
															"4748:9:7",
															"4788:6:7",
															"4820:6:7",
															"4846:9:7"
														],
														"names": [
															"proposalId",
															"overallScore",
															"justificationIPFS",
															"modelVersion",
															"timestamp",
															"oracle",
															"exists",
															"breakdown"
														],
														"nodeType": "FunctionCall",
														"src": "4556:321:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AIScoreData_$662_memory_ptr",
															"typeString": "struct AIScoreRegistry.AIScoreData memory"
														}
													},
													"src": "4533:344:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AIScoreData_$662_storage",
														"typeString": "struct AIScoreRegistry.AIScoreData storage ref"
													}
												},
												"id": 958,
												"nodeType": "ExpressionStatement",
												"src": "4533:344:7"
											},
											{
												"expression": {
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "4896:22:7",
													"subExpression": {
														"id": 959,
														"name": "totalScoresSubmitted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "4896:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "4896:22:7"
											},
											{
												"expression": {
													"id": 966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "4928:30:7",
													"subExpression": {
														"baseExpression": {
															"id": 962,
															"name": "oracleScoreCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "4928:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 965,
														"indexExpression": {
															"expression": {
																"id": 963,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4945:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4949:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4945:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4928:28:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 967,
												"nodeType": "ExpressionStatement",
												"src": "4928:30:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 969,
															"name": "proposalId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "5012:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 970,
															"name": "overallScore",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 809,
															"src": "5036:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 971,
															"name": "justificationIPFS",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 811,
															"src": "5062:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 972,
															"name": "modelVersion",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "5093:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 973,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5119:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5123:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5119:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 975,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5143:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5149:9:7",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "5143:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 968,
														"name": "AIScoreSubmitted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1408,
														"src": "4982:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,string memory,string memory,address,uint256)"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4982:186:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 978,
												"nodeType": "EmitStatement",
												"src": "4977:191:7"
											}
										]
									},
									"documentation": {
										"id": 805,
										"nodeType": "StructuredDocumentation",
										"src": "2721:326:7",
										"text": " @dev Submit AI-generated score for a proposal\n @param proposalId The proposal ID\n @param overallScore Overall AI score (0-100)\n @param justificationIPFS IPFS CID containing detailed analysis\n @param modelVersion AI model version used\n @param breakdown Detailed scoring breakdown"
									},
									"functionSelector": "7092b0bc",
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 820,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 819,
												"name": "onlyAuthorizedOracle",
												"nameLocations": [
													"3279:20:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 730,
												"src": "3279:20:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3279:20:7"
										},
										{
											"arguments": [
												{
													"id": 822,
													"name": "proposalId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 807,
													"src": "3316:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 823,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 821,
												"name": "validProposalId",
												"nameLocations": [
													"3300:15:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 760,
												"src": "3300:15:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3300:27:7"
										},
										{
											"arguments": [
												{
													"id": 825,
													"name": "overallScore",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 809,
													"src": "3339:12:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 826,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 824,
												"name": "validScore",
												"nameLocations": [
													"3328:10:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 747,
												"src": "3328:10:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3328:24:7"
										},
										{
											"id": 828,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 827,
												"name": "whenNotPaused",
												"nameLocations": [
													"3353:13:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 414,
												"src": "3353:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3353:13:7"
										},
										{
											"id": 830,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 829,
												"name": "nonReentrant",
												"nameLocations": [
													"3367:12:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 517,
												"src": "3367:12:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "3367:12:7"
										}
									],
									"name": "submitAIScore",
									"nameLocation": "3063:13:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 818,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3270:8:7"
									},
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "3094:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "3086:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3086:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "overallScore",
												"nameLocation": "3122:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "3114:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3114:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "justificationIPFS",
												"nameLocation": "3158:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "3144:31:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 810,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3144:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "modelVersion",
												"nameLocation": "3199:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "3185:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 812,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3185:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "breakdown",
												"nameLocation": "3245:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "3221:33:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ScoringBreakdown_$1394_memory_ptr",
													"typeString": "struct IAIScoreRegistry.ScoringBreakdown"
												},
												"typeName": {
													"id": 815,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 814,
														"name": "ScoringBreakdown",
														"nameLocations": [
															"3221:16:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1394,
														"src": "3221:16:7"
													},
													"referencedDeclaration": 1394,
													"src": "3221:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ScoringBreakdown_$1394_storage_ptr",
														"typeString": "struct IAIScoreRegistry.ScoringBreakdown"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3076:184:7"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3380:0:7"
									},
									"scope": 1380,
									"src": "3054:2121:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1073,
										"nodeType": "Block",
										"src": "5711:638:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1003,
																	"name": "aiScores",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 667,
																	"src": "5729:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_AIScoreData_$662_storage_$",
																		"typeString": "mapping(uint256 => struct AIScoreRegistry.AIScoreData storage ref)"
																	}
																},
																"id": 1005,
																"indexExpression": {
																	"id": 1004,
																	"name": "proposalId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "5738:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5729:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AIScoreData_$662_storage",
																	"typeString": "struct AIScoreRegistry.AIScoreData storage ref"
																}
															},
															"id": 1006,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:7",
															"memberName": "exists",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 658,
															"src": "5729:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53636f726520646f6573206e6f74206578697374",
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5758:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a69795945e67f0e5e64fe0dde79a3a480ebe678a88469f6b4d51002796df2777",
																"typeString": "literal_string \"Score does not exist\""
															},
															"value": "Score does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a69795945e67f0e5e64fe0dde79a3a480ebe678a88469f6b4d51002796df2777",
																"typeString": "literal_string \"Score does not exist\""
															}
														],
														"id": 1002,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5721:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5721:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1009,
												"nodeType": "ExpressionStatement",
												"src": "5721:60:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1017,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1011,
																		"name": "aiScores",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "5799:8:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_AIScoreData_$662_storage_$",
																			"typeString": "mapping(uint256 => struct AIScoreRegistry.AIScoreData storage ref)"
																		}
																	},
																	"id": 1013,
																	"indexExpression": {
																		"id": 1012,
																		"name": "proposalId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 983,
																		"src": "5808:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5799:20:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AIScoreData_$662_storage",
																		"typeString": "struct AIScoreRegistry.AIScoreData storage ref"
																	}
																},
																"id": 1014,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5820:6:7",
																"memberName": "oracle",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 656,
																"src": "5799:27:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1015,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5830:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1016,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5834:6:7",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5830:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5799:41:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74206f726967696e616c206f7261636c65",
															"id": 1018,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5842:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_41166c2cb511fd788913a8ccf76df85866bc3ce3fb64b1c01c1d3d2a216501a6",
																"typeString": "literal_string \"Not original oracle\""
															},
															"value": "Not original oracle"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_41166c2cb511fd788913a8ccf76df85866bc3ce3fb64b1c01c1d3d2a216501a6",
																"typeString": "literal_string \"Not original oracle\""
															}
														],
														"id": 1010,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5791:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5791:73:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1020,
												"nodeType": "ExpressionStatement",
												"src": "5791:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1022,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "5895:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1023,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5901:9:7",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "5895:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 1024,
																			"name": "aiScores",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 667,
																			"src": "5914:8:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_AIScoreData_$662_storage_$",
																				"typeString": "mapping(uint256 => struct AIScoreRegistry.AIScoreData storage ref)"
																			}
																		},
																		"id": 1026,
																		"indexExpression": {
																			"id": 1025,
																			"name": "proposalId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 983,
																			"src": "5923:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "5914:20:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_AIScoreData_$662_storage",
																			"typeString": "struct AIScoreRegistry.AIScoreData storage ref"
																		}
																	},
																	"id": 1027,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5935:9:7",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 654,
																	"src": "5914:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1028,
																	"name": "SCORE_VALIDITY_PERIOD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 687,
																	"src": "5947:21:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5914:54:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5895:73:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55706461746520706572696f642065787069726564",
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5982:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_698e91f2cf105a34b76ad1f14b4cc68435f9c50341312fde16759560e3c5635e",
																"typeString": "literal_string \"Update period expired\""
															},
															"value": "Update period expired"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_698e91f2cf105a34b76ad1f14b4cc68435f9c50341312fde16759560e3c5635e",
																"typeString": "literal_string \"Update period expired\""
															}
														],
														"id": 1021,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5874:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1032,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5874:141:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1033,
												"nodeType": "ExpressionStatement",
												"src": "5874:141:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1041,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1037,
																			"name": "reason",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 989,
																			"src": "6039:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6033:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1035,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "6033:5:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6033:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6047:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6033:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1040,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6056:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6033:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "55706461746520726561736f6e207265717569726564",
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6059:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9c71f73b66f3d1246f466c2230b476e959ed0f64c536bfee50d23aa5ba49feb",
																"typeString": "literal_string \"Update reason required\""
															},
															"value": "Update reason required"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9c71f73b66f3d1246f466c2230b476e959ed0f64c536bfee50d23aa5ba49feb",
																"typeString": "literal_string \"Update reason required\""
															}
														],
														"id": 1034,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6025:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6025:59:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1044,
												"nodeType": "ExpressionStatement",
												"src": "6025:59:7"
											},
											{
												"expression": {
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1045,
																"name": "aiScores",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 667,
																"src": "6103:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_AIScoreData_$662_storage_$",
																	"typeString": "mapping(uint256 => struct AIScoreRegistry.AIScoreData storage ref)"
																}
															},
															"id": 1047,
															"indexExpression": {
																"id": 1046,
																"name": "proposalId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 983,
																"src": "6112:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6103:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AIScoreData_$662_storage",
																"typeString": "struct AIScoreRegistry.AIScoreData storage ref"
															}
														},
														"id": 1048,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6124:12:7",
														"memberName": "overallScore",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 648,
														"src": "6103:33:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1049,
														"name": "newScore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "6139:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6103:44:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "6103:44:7"
											},
											{
												"expression": {
													"id": 1057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1052,
																"name": "aiScores",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 667,
																"src": "6157:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_AIScoreData_$662_storage_$",
																	"typeString": "mapping(uint256 => struct AIScoreRegistry.AIScoreData storage ref)"
																}
															},
															"id": 1054,
															"indexExpression": {
																"id": 1053,
																"name": "proposalId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 983,
																"src": "6166:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6157:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AIScoreData_$662_storage",
																"typeString": "struct AIScoreRegistry.AIScoreData storage ref"
															}
														},
														"id": 1055,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6178:17:7",
														"memberName": "justificationIPFS",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 650,
														"src": "6157:38:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1056,
														"name": "newJustificationIPFS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 987,
														"src": "6198:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6157:61:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1058,
												"nodeType": "ExpressionStatement",
												"src": "6157:61:7"
											},
											{
												"expression": {
													"id": 1065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1059,
																"name": "aiScores",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 667,
																"src": "6228:8:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_AIScoreData_$662_storage_$",
																	"typeString": "mapping(uint256 => struct AIScoreRegistry.AIScoreData storage ref)"
																}
															},
															"id": 1061,
															"indexExpression": {
																"id": 1060,
																"name": "proposalId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 983,
																"src": "6237:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6228:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AIScoreData_$662_storage",
																"typeString": "struct AIScoreRegistry.AIScoreData storage ref"
															}
														},
														"id": 1062,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6249:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 654,
														"src": "6228:30:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1063,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "6261:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1064,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6267:9:7",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "6261:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6228:48:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1066,
												"nodeType": "ExpressionStatement",
												"src": "6228:48:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1068,
															"name": "proposalId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "6313:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1069,
															"name": "newScore",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "6325:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1070,
															"name": "reason",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "6335:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1067,
														"name": "ScoreUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "6300:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,uint256,string memory)"
														}
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6300:42:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1072,
												"nodeType": "EmitStatement",
												"src": "6295:47:7"
											}
										]
									},
									"documentation": {
										"id": 981,
										"nodeType": "StructuredDocumentation",
										"src": "5182:274:7",
										"text": " @dev Update existing AI score (only within validity period)\n @param proposalId The proposal ID\n @param newScore New overall score\n @param newJustificationIPFS New IPFS CID for updated analysis\n @param reason Reason for score update"
									},
									"functionSelector": "2b116373",
									"id": 1074,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 992,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 991,
												"name": "onlyAuthorizedOracle",
												"nameLocations": [
													"5627:20:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 730,
												"src": "5627:20:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5627:20:7"
										},
										{
											"arguments": [
												{
													"id": 994,
													"name": "proposalId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 983,
													"src": "5664:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 995,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 993,
												"name": "validProposalId",
												"nameLocations": [
													"5648:15:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 760,
												"src": "5648:15:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5648:27:7"
										},
										{
											"arguments": [
												{
													"id": 997,
													"name": "newScore",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 985,
													"src": "5687:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 998,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 996,
												"name": "validScore",
												"nameLocations": [
													"5676:10:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 747,
												"src": "5676:10:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5676:20:7"
										},
										{
											"id": 1000,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 999,
												"name": "whenNotPaused",
												"nameLocations": [
													"5697:13:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 414,
												"src": "5697:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "5697:13:7"
										}
									],
									"name": "updateAIScore",
									"nameLocation": "5470:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "5501:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "5493:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5493:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "newScore",
												"nameLocation": "5529:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "5521:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5521:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "newJustificationIPFS",
												"nameLocation": "5561:20:7",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "5547:34:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 986,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5547:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "5605:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "5591:20:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 988,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5591:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5483:134:7"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5711:0:7"
									},
									"scope": 1380,
									"src": "5461:888:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1433
									],
									"body": {
										"id": 1105,
										"nodeType": "Block",
										"src": "6780:157:7",
										"statements": [
											{
												"assignments": [
													1092
												],
												"declarations": [
													{
														"constant": false,
														"id": 1092,
														"mutability": "mutable",
														"name": "scoreData",
														"nameLocation": "6810:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1105,
														"src": "6790:29:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AIScoreData_$662_storage_ptr",
															"typeString": "struct AIScoreRegistry.AIScoreData"
														},
														"typeName": {
															"id": 1091,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1090,
																"name": "AIScoreData",
																"nameLocations": [
																	"6790:11:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 662,
																"src": "6790:11:7"
															},
															"referencedDeclaration": 662,
															"src": "6790:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AIScoreData_$662_storage_ptr",
																"typeString": "struct AIScoreRegistry.AIScoreData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1096,
												"initialValue": {
													"baseExpression": {
														"id": 1093,
														"name": "aiScores",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "6822:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_AIScoreData_$662_storage_$",
															"typeString": "mapping(uint256 => struct AIScoreRegistry.AIScoreData storage ref)"
														}
													},
													"id": 1095,
													"indexExpression": {
														"id": 1094,
														"name": "proposalId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1077,
														"src": "6831:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6822:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AIScoreData_$662_storage",
														"typeString": "struct AIScoreRegistry.AIScoreData storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6790:52:7"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 1097,
																"name": "scoreData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1092,
																"src": "6860:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AIScoreData_$662_storage_ptr",
																	"typeString": "struct AIScoreRegistry.AIScoreData storage pointer"
																}
															},
															"id": 1098,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6870:12:7",
															"memberName": "overallScore",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 648,
															"src": "6860:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1099,
																"name": "scoreData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1092,
																"src": "6884:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AIScoreData_$662_storage_ptr",
																	"typeString": "struct AIScoreRegistry.AIScoreData storage pointer"
																}
															},
															"id": 1100,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6894:17:7",
															"memberName": "justificationIPFS",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 650,
															"src": "6884:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														},
														{
															"expression": {
																"id": 1101,
																"name": "scoreData",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1092,
																"src": "6913:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AIScoreData_$662_storage_ptr",
																	"typeString": "struct AIScoreRegistry.AIScoreData storage pointer"
																}
															},
															"id": 1102,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6923:6:7",
															"memberName": "exists",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 658,
															"src": "6913:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1103,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "6859:71:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_string_storage_$_t_bool_$",
														"typeString": "tuple(uint256,string storage ref,bool)"
													}
												},
												"functionReturnParameters": 1089,
												"id": 1104,
												"nodeType": "Return",
												"src": "6852:78:7"
											}
										]
									},
									"documentation": {
										"id": 1075,
										"nodeType": "StructuredDocumentation",
										"src": "6355:233:7",
										"text": " @dev Get AI score for a proposal\n @param proposalId The proposal ID\n @return score Overall AI score\n @return justification IPFS CID for detailed analysis\n @return exists Whether score exists"
									},
									"functionSelector": "0311b82d",
									"id": 1106,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1081,
													"name": "proposalId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1077,
													"src": "6672:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1082,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1080,
												"name": "validProposalId",
												"nameLocations": [
													"6656:15:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 760,
												"src": "6656:15:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "6656:27:7"
										}
									],
									"name": "getAIScore",
									"nameLocation": "6602:10:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1079,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6647:8:7"
									},
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "6621:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "6613:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6613:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6612:20:7"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "score",
												"nameLocation": "6710:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "6702:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6702:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "justification",
												"nameLocation": "6739:13:7",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "6725:27:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1085,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6725:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "exists",
												"nameLocation": "6767:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "6762:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1087,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6762:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6692:87:7"
									},
									"scope": 1380,
									"src": "6593:344:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1130,
										"nodeType": "Block",
										"src": "7206:114:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1119,
																	"name": "aiScores",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 667,
																	"src": "7224:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_AIScoreData_$662_storage_$",
																		"typeString": "mapping(uint256 => struct AIScoreRegistry.AIScoreData storage ref)"
																	}
																},
																"id": 1121,
																"indexExpression": {
																	"id": 1120,
																	"name": "proposalId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1109,
																	"src": "7233:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7224:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AIScoreData_$662_storage",
																	"typeString": "struct AIScoreRegistry.AIScoreData storage ref"
																}
															},
															"id": 1122,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7245:6:7",
															"memberName": "exists",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 658,
															"src": "7224:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53636f726520646f6573206e6f74206578697374",
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7253:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a69795945e67f0e5e64fe0dde79a3a480ebe678a88469f6b4d51002796df2777",
																"typeString": "literal_string \"Score does not exist\""
															},
															"value": "Score does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a69795945e67f0e5e64fe0dde79a3a480ebe678a88469f6b4d51002796df2777",
																"typeString": "literal_string \"Score does not exist\""
															}
														],
														"id": 1118,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7216:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7216:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1125,
												"nodeType": "ExpressionStatement",
												"src": "7216:60:7"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1126,
														"name": "aiScores",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "7293:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_AIScoreData_$662_storage_$",
															"typeString": "mapping(uint256 => struct AIScoreRegistry.AIScoreData storage ref)"
														}
													},
													"id": 1128,
													"indexExpression": {
														"id": 1127,
														"name": "proposalId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1109,
														"src": "7302:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7293:20:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AIScoreData_$662_storage",
														"typeString": "struct AIScoreRegistry.AIScoreData storage ref"
													}
												},
												"functionReturnParameters": 1117,
												"id": 1129,
												"nodeType": "Return",
												"src": "7286:27:7"
											}
										]
									},
									"documentation": {
										"id": 1107,
										"nodeType": "StructuredDocumentation",
										"src": "6943:139:7",
										"text": " @dev Get detailed AI score data\n @param proposalId The proposal ID\n @return Complete AI score data structure"
									},
									"functionSelector": "ea535940",
									"id": 1131,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1112,
													"name": "proposalId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1109,
													"src": "7165:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1113,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1111,
												"name": "validProposalId",
												"nameLocations": [
													"7149:15:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 760,
												"src": "7149:15:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "7149:27:7"
										}
									],
									"name": "getDetailedAIScore",
									"nameLocation": "7096:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "7123:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "7115:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7115:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7114:20:7"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "7186:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AIScoreData_$662_memory_ptr",
													"typeString": "struct AIScoreRegistry.AIScoreData"
												},
												"typeName": {
													"id": 1115,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1114,
														"name": "AIScoreData",
														"nameLocations": [
															"7186:11:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 662,
														"src": "7186:11:7"
													},
													"referencedDeclaration": 662,
													"src": "7186:11:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AIScoreData_$662_storage_ptr",
														"typeString": "struct AIScoreRegistry.AIScoreData"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7185:20:7"
									},
									"scope": 1380,
									"src": "7087:233:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1156,
										"nodeType": "Block",
										"src": "7619:124:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1144,
																	"name": "aiScores",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 667,
																	"src": "7637:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_AIScoreData_$662_storage_$",
																		"typeString": "mapping(uint256 => struct AIScoreRegistry.AIScoreData storage ref)"
																	}
																},
																"id": 1146,
																"indexExpression": {
																	"id": 1145,
																	"name": "proposalId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1134,
																	"src": "7646:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7637:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AIScoreData_$662_storage",
																	"typeString": "struct AIScoreRegistry.AIScoreData storage ref"
																}
															},
															"id": 1147,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7658:6:7",
															"memberName": "exists",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 658,
															"src": "7637:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53636f726520646f6573206e6f74206578697374",
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7666:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a69795945e67f0e5e64fe0dde79a3a480ebe678a88469f6b4d51002796df2777",
																"typeString": "literal_string \"Score does not exist\""
															},
															"value": "Score does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a69795945e67f0e5e64fe0dde79a3a480ebe678a88469f6b4d51002796df2777",
																"typeString": "literal_string \"Score does not exist\""
															}
														],
														"id": 1143,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7629:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7629:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1150,
												"nodeType": "ExpressionStatement",
												"src": "7629:60:7"
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1151,
															"name": "aiScores",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "7706:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_AIScoreData_$662_storage_$",
																"typeString": "mapping(uint256 => struct AIScoreRegistry.AIScoreData storage ref)"
															}
														},
														"id": 1153,
														"indexExpression": {
															"id": 1152,
															"name": "proposalId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "7715:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7706:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AIScoreData_$662_storage",
															"typeString": "struct AIScoreRegistry.AIScoreData storage ref"
														}
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7727:9:7",
													"memberName": "breakdown",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 661,
													"src": "7706:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ScoringBreakdown_$1394_storage",
														"typeString": "struct IAIScoreRegistry.ScoringBreakdown storage ref"
													}
												},
												"functionReturnParameters": 1142,
												"id": 1155,
												"nodeType": "Return",
												"src": "7699:37:7"
											}
										]
									},
									"documentation": {
										"id": 1132,
										"nodeType": "StructuredDocumentation",
										"src": "7326:153:7",
										"text": " @dev Get scoring breakdown for a proposal\n @param proposalId The proposal ID\n @return breakdown Detailed scoring breakdown"
									},
									"functionSelector": "cfe85a2f",
									"id": 1157,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1137,
													"name": "proposalId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1134,
													"src": "7563:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1138,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1136,
												"name": "validProposalId",
												"nameLocations": [
													"7547:15:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 760,
												"src": "7547:15:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "7547:27:7"
										}
									],
									"name": "getScoringBreakdown",
									"nameLocation": "7493:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1134,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "7521:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "7513:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7513:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7512:20:7"
									},
									"returnParameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "breakdown",
												"nameLocation": "7608:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1157,
												"src": "7584:33:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ScoringBreakdown_$1394_memory_ptr",
													"typeString": "struct IAIScoreRegistry.ScoringBreakdown"
												},
												"typeName": {
													"id": 1140,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1139,
														"name": "ScoringBreakdown",
														"nameLocations": [
															"7584:16:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1394,
														"src": "7584:16:7"
													},
													"referencedDeclaration": 1394,
													"src": "7584:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ScoringBreakdown_$1394_storage_ptr",
														"typeString": "struct IAIScoreRegistry.ScoringBreakdown"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:35:7"
									},
									"scope": 1380,
									"src": "7484:259:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1440
									],
									"body": {
										"id": 1174,
										"nodeType": "Block",
										"src": "8014:51:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 1169,
															"name": "aiScores",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "8031:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_AIScoreData_$662_storage_$",
																"typeString": "mapping(uint256 => struct AIScoreRegistry.AIScoreData storage ref)"
															}
														},
														"id": 1171,
														"indexExpression": {
															"id": 1170,
															"name": "proposalId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "8040:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8031:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AIScoreData_$662_storage",
															"typeString": "struct AIScoreRegistry.AIScoreData storage ref"
														}
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8052:6:7",
													"memberName": "exists",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 658,
													"src": "8031:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1168,
												"id": 1173,
												"nodeType": "Return",
												"src": "8024:34:7"
											}
										]
									},
									"documentation": {
										"id": 1158,
										"nodeType": "StructuredDocumentation",
										"src": "7749:147:7",
										"text": " @dev Check if AI score exists for a proposal\n @param proposalId The proposal ID\n @return exists Whether score exists"
									},
									"functionSelector": "96caac0a",
									"id": 1175,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1164,
													"name": "proposalId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1160,
													"src": "7980:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1165,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1163,
												"name": "validProposalId",
												"nameLocations": [
													"7964:15:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 760,
												"src": "7964:15:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "7964:27:7"
										}
									],
									"name": "hasAIScore",
									"nameLocation": "7910:10:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1162,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7955:8:7"
									},
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "7929:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "7921:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7921:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7920:20:7"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "exists",
												"nameLocation": "8006:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "8001:11:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1166,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8001:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8000:13:7"
									},
									"scope": 1380,
									"src": "7901:164:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "8379:77:7",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"baseExpression": {
																"id": 1185,
																"name": "oracleScoreCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 693,
																"src": "8397:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1187,
															"indexExpression": {
																"id": 1186,
																"name": "oracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1178,
																"src": "8414:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8397:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"baseExpression": {
																"id": 1188,
																"name": "authorizedOracles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 671,
																"src": "8423:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1190,
															"indexExpression": {
																"id": 1189,
																"name": "oracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1178,
																"src": "8441:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8423:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 1191,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "8396:53:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
														"typeString": "tuple(uint256,bool)"
													}
												},
												"functionReturnParameters": 1184,
												"id": 1192,
												"nodeType": "Return",
												"src": "8389:60:7"
											}
										]
									},
									"documentation": {
										"id": 1176,
										"nodeType": "StructuredDocumentation",
										"src": "8071:201:7",
										"text": " @dev Get oracle statistics\n @param oracle Oracle address\n @return scoreCount Number of scores submitted by oracle\n @return isAuthorized Whether oracle is authorized"
									},
									"functionSelector": "c772a8a6",
									"id": 1194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOracleStats",
									"nameLocation": "8286:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "oracle",
												"nameLocation": "8309:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "8301:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8301:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8300:16:7"
									},
									"returnParameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "scoreCount",
												"nameLocation": "8348:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "8340:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8340:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "isAuthorized",
												"nameLocation": "8365:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "8360:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1182,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8360:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8339:39:7"
									},
									"scope": 1380,
									"src": "8277:179:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1240,
										"nodeType": "Block",
										"src": "8706:337:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1206,
																"name": "oracle",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1197,
																"src": "8724:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8742:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1208,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8734:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1207,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8734:7:7",
																		"typeDescriptions": {}
																	}
																},
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8734:10:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8724:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206f7261636c652061646472657373",
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8746:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3",
																"typeString": "literal_string \"Invalid oracle address\""
															},
															"value": "Invalid oracle address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b5c25d5c4ca6addfa23ca815554bb7bee3a9885ce01501a275168a62aa7cded3",
																"typeString": "literal_string \"Invalid oracle address\""
															}
														],
														"id": 1205,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8716:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8716:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1214,
												"nodeType": "ExpressionStatement",
												"src": "8716:55:7"
											},
											{
												"expression": {
													"id": 1219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1215,
															"name": "authorizedOracles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "8781:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1217,
														"indexExpression": {
															"id": 1216,
															"name": "oracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "8799:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8781:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1218,
														"name": "authorized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1199,
														"src": "8809:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8781:38:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1220,
												"nodeType": "ExpressionStatement",
												"src": "8781:38:7"
											},
											{
												"condition": {
													"id": 1221,
													"name": "authorized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1199,
													"src": "8842:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1233,
													"nodeType": "Block",
													"src": "8918:59:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1229,
																		"name": "AI_ORACLE_ROLE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1457,
																		"src": "8943:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1230,
																		"name": "oracle",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1197,
																		"src": "8959:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1228,
																	"name": "revokeRole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "8932:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address)"
																	}
																},
																"id": 1231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8932:34:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1232,
															"nodeType": "ExpressionStatement",
															"src": "8932:34:7"
														}
													]
												},
												"id": 1234,
												"nodeType": "IfStatement",
												"src": "8838:139:7",
												"trueBody": {
													"id": 1227,
													"nodeType": "Block",
													"src": "8854:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1223,
																		"name": "AI_ORACLE_ROLE",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1457,
																		"src": "8878:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1224,
																		"name": "oracle",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1197,
																		"src": "8894:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1222,
																	"name": "grantRole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 148,
																	"src": "8868:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address)"
																	}
																},
																"id": 1225,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8868:33:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1226,
															"nodeType": "ExpressionStatement",
															"src": "8868:33:7"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1236,
															"name": "oracle",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "9017:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1237,
															"name": "authorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "9025:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1235,
														"name": "OracleAuthorized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 699,
														"src": "9000:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,bool)"
														}
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9000:36:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1239,
												"nodeType": "EmitStatement",
												"src": "8995:41:7"
											}
										]
									},
									"documentation": {
										"id": 1195,
										"nodeType": "StructuredDocumentation",
										"src": "8463:143:7",
										"text": " @dev Authorize or deauthorize an AI oracle\n @param oracle Oracle address\n @param authorized Authorization status"
									},
									"functionSelector": "d5c1a1e1",
									"id": 1241,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1202,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1452,
													"src": "8694:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1203,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1201,
												"name": "onlyRole",
												"nameLocations": [
													"8685:8:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "8685:8:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "8685:20:7"
										}
									],
									"name": "setOracleAuthorization",
									"nameLocation": "8620:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "oracle",
												"nameLocation": "8651:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "8643:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8643:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "authorized",
												"nameLocation": "8664:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "8659:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1198,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8659:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8642:33:7"
									},
									"returnParameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8706:0:7"
									},
									"scope": 1380,
									"src": "8611:432:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1274,
										"nodeType": "Block",
										"src": "9310:186:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1255,
																			"name": "modelVersion",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1244,
																			"src": "9334:12:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9328:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1253,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "9328:5:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1256,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9328:19:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9348:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "9328:26:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1258,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9357:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9328:30:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206d6f64656c2076657273696f6e",
															"id": 1260,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9360:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_809a61880eab24cb5f12ad5fdac924d8282984ac0b80d15a3da59e6265c2820d",
																"typeString": "literal_string \"Invalid model version\""
															},
															"value": "Invalid model version"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_809a61880eab24cb5f12ad5fdac924d8282984ac0b80d15a3da59e6265c2820d",
																"typeString": "literal_string \"Invalid model version\""
															}
														],
														"id": 1252,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9320:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9320:64:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1262,
												"nodeType": "ExpressionStatement",
												"src": "9320:64:7"
											},
											{
												"expression": {
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1263,
															"name": "supportedModels",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "9394:15:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_bool_$",
																"typeString": "mapping(string memory => bool)"
															}
														},
														"id": 1265,
														"indexExpression": {
															"id": 1264,
															"name": "modelVersion",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "9410:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9394:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1266,
														"name": "supported",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1246,
														"src": "9426:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9394:41:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1268,
												"nodeType": "ExpressionStatement",
												"src": "9394:41:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1270,
															"name": "modelVersion",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "9465:12:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 1271,
															"name": "supported",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "9479:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1269,
														"name": "ModelSupported",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 705,
														"src": "9450:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_bool_$returns$__$",
															"typeString": "function (string memory,bool)"
														}
													},
													"id": 1272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9450:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1273,
												"nodeType": "EmitStatement",
												"src": "9445:44:7"
											}
										]
									},
									"documentation": {
										"id": 1242,
										"nodeType": "StructuredDocumentation",
										"src": "9049:155:7",
										"text": " @dev Add or remove supported AI model\n @param modelVersion Model version string\n @param supported Whether model is supported"
									},
									"functionSelector": "ba340773",
									"id": 1275,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1249,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1452,
													"src": "9298:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1250,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1248,
												"name": "onlyRole",
												"nameLocations": [
													"9289:8:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "9289:8:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "9289:20:7"
										}
									],
									"name": "setSupportedModel",
									"nameLocation": "9218:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "modelVersion",
												"nameLocation": "9250:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "9236:26:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1243,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9236:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "supported",
												"nameLocation": "9269:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "9264:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1245,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9264:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9235:44:7"
									},
									"returnParameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9310:0:7"
									},
									"scope": 1380,
									"src": "9209:287:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1313,
										"nodeType": "Block",
										"src": "9706:385:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"id": 1299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"id": 1296,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		},
																		"id": 1293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 1290,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1286,
																					"name": "newCriteria",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1279,
																					"src": "9737:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ScoringCriteria_$644_memory_ptr",
																						"typeString": "struct AIScoreRegistry.ScoringCriteria memory"
																					}
																				},
																				"id": 1287,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "9749:21:7",
																				"memberName": "ecosystemContribution",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 635,
																				"src": "9737:33:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"expression": {
																					"id": 1288,
																					"name": "newCriteria",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1279,
																					"src": "9786:11:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ScoringCriteria_$644_memory_ptr",
																						"typeString": "struct AIScoreRegistry.ScoringCriteria memory"
																					}
																				},
																				"id": 1289,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "9798:11:7",
																				"memberName": "feasibility",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 637,
																				"src": "9786:23:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "9737:72:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"expression": {
																				"id": 1291,
																				"name": "newCriteria",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1279,
																				"src": "9825:11:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ScoringCriteria_$644_memory_ptr",
																					"typeString": "struct AIScoreRegistry.ScoringCriteria memory"
																				}
																			},
																			"id": 1292,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "9837:14:7",
																			"memberName": "riskAssessment",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 639,
																			"src": "9825:26:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "9737:114:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"expression": {
																			"id": 1294,
																			"name": "newCriteria",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1279,
																			"src": "9867:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_ScoringCriteria_$644_memory_ptr",
																				"typeString": "struct AIScoreRegistry.ScoringCriteria memory"
																			}
																		},
																		"id": 1295,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "9879:14:7",
																		"memberName": "teamReputation",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 641,
																		"src": "9867:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "9737:156:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"expression": {
																		"id": 1297,
																		"name": "newCriteria",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1279,
																		"src": "9909:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ScoringCriteria_$644_memory_ptr",
																			"typeString": "struct AIScoreRegistry.ScoringCriteria memory"
																		}
																	},
																	"id": 1298,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "9921:10:7",
																	"memberName": "innovation",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 643,
																	"src": "9909:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "9737:194:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "313030",
																"id": 1300,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9935:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "9737:201:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "57656967687473206d7573742073756d20746f20313030",
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9952:25:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c7f58c8f44846a2e8ce4b5a63e4a4c560693fa19e08f64bcd465c09c293ca1df",
																"typeString": "literal_string \"Weights must sum to 100\""
															},
															"value": "Weights must sum to 100"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c7f58c8f44846a2e8ce4b5a63e4a4c560693fa19e08f64bcd465c09c293ca1df",
																"typeString": "literal_string \"Weights must sum to 100\""
															}
														],
														"id": 1285,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9716:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9716:271:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1304,
												"nodeType": "ExpressionStatement",
												"src": "9716:271:7"
											},
											{
												"expression": {
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1305,
														"name": "scoringWeights",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "10006:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ScoringCriteria_$644_storage",
															"typeString": "struct AIScoreRegistry.ScoringCriteria storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1306,
														"name": "newCriteria",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1279,
														"src": "10023:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ScoringCriteria_$644_memory_ptr",
															"typeString": "struct AIScoreRegistry.ScoringCriteria memory"
														}
													},
													"src": "10006:28:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ScoringCriteria_$644_storage",
														"typeString": "struct AIScoreRegistry.ScoringCriteria storage ref"
													}
												},
												"id": 1308,
												"nodeType": "ExpressionStatement",
												"src": "10006:28:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1310,
															"name": "newCriteria",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1279,
															"src": "10072:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ScoringCriteria_$644_memory_ptr",
																"typeString": "struct AIScoreRegistry.ScoringCriteria memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_ScoringCriteria_$644_memory_ptr",
																"typeString": "struct AIScoreRegistry.ScoringCriteria memory"
															}
														],
														"id": 1309,
														"name": "ScoringCriteriaUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 710,
														"src": "10049:22:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_struct$_ScoringCriteria_$644_memory_ptr_$returns$__$",
															"typeString": "function (struct AIScoreRegistry.ScoringCriteria memory)"
														}
													},
													"id": 1311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10049:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1312,
												"nodeType": "EmitStatement",
												"src": "10044:40:7"
											}
										]
									},
									"documentation": {
										"id": 1276,
										"nodeType": "StructuredDocumentation",
										"src": "9502:102:7",
										"text": " @dev Update scoring criteria weights\n @param newCriteria New scoring criteria"
									},
									"functionSelector": "ff8dea01",
									"id": 1314,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1282,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1452,
													"src": "9694:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1283,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1281,
												"name": "onlyRole",
												"nameLocations": [
													"9685:8:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "9685:8:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "9685:20:7"
										}
									],
									"name": "updateScoringCriteria",
									"nameLocation": "9618:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "newCriteria",
												"nameLocation": "9663:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "9640:34:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ScoringCriteria_$644_memory_ptr",
													"typeString": "struct AIScoreRegistry.ScoringCriteria"
												},
												"typeName": {
													"id": 1278,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1277,
														"name": "ScoringCriteria",
														"nameLocations": [
															"9640:15:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 644,
														"src": "9640:15:7"
													},
													"referencedDeclaration": 644,
													"src": "9640:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ScoringCriteria_$644_storage_ptr",
														"typeString": "struct AIScoreRegistry.ScoringCriteria"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9639:36:7"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9706:0:7"
									},
									"scope": 1380,
									"src": "9609:482:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1358,
										"nodeType": "Block",
										"src": "10350:276:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1326,
																	"name": "aiScores",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 667,
																	"src": "10368:8:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_AIScoreData_$662_storage_$",
																		"typeString": "mapping(uint256 => struct AIScoreRegistry.AIScoreData storage ref)"
																	}
																},
																"id": 1328,
																"indexExpression": {
																	"id": 1327,
																	"name": "proposalId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1317,
																	"src": "10377:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10368:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AIScoreData_$662_storage",
																	"typeString": "struct AIScoreRegistry.AIScoreData storage ref"
																}
															},
															"id": 1329,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "10389:6:7",
															"memberName": "exists",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 658,
															"src": "10368:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53636f726520646f6573206e6f74206578697374",
															"id": 1330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10397:22:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a69795945e67f0e5e64fe0dde79a3a480ebe678a88469f6b4d51002796df2777",
																"typeString": "literal_string \"Score does not exist\""
															},
															"value": "Score does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a69795945e67f0e5e64fe0dde79a3a480ebe678a88469f6b4d51002796df2777",
																"typeString": "literal_string \"Score does not exist\""
															}
														],
														"id": 1325,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10360:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10360:60:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1332,
												"nodeType": "ExpressionStatement",
												"src": "10360:60:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1336,
																			"name": "reason",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1319,
																			"src": "10444:6:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "10438:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1334,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "10438:5:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1337,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "10438:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10452:6:7",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "10438:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1339,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10461:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10438:24:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526561736f6e207265717569726564",
															"id": 1341,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10464:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_000e680d12c25df5d1fde0e9487a3490e64ec427f6d963ef2486a46037e13d33",
																"typeString": "literal_string \"Reason required\""
															},
															"value": "Reason required"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_000e680d12c25df5d1fde0e9487a3490e64ec427f6d963ef2486a46037e13d33",
																"typeString": "literal_string \"Reason required\""
															}
														],
														"id": 1333,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10430:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10430:52:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1343,
												"nodeType": "ExpressionStatement",
												"src": "10430:52:7"
											},
											{
												"expression": {
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "10501:27:7",
													"subExpression": {
														"baseExpression": {
															"id": 1344,
															"name": "aiScores",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "10508:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_AIScoreData_$662_storage_$",
																"typeString": "mapping(uint256 => struct AIScoreRegistry.AIScoreData storage ref)"
															}
														},
														"id": 1346,
														"indexExpression": {
															"id": 1345,
															"name": "proposalId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1317,
															"src": "10517:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10508:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AIScoreData_$662_storage",
															"typeString": "struct AIScoreRegistry.AIScoreData storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1348,
												"nodeType": "ExpressionStatement",
												"src": "10501:27:7"
											},
											{
												"expression": {
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "--",
													"prefix": false,
													"src": "10538:22:7",
													"subExpression": {
														"id": 1349,
														"name": "totalScoresSubmitted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 689,
														"src": "10538:20:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1351,
												"nodeType": "ExpressionStatement",
												"src": "10538:22:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1353,
															"name": "proposalId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1317,
															"src": "10597:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 1354,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10609:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1355,
															"name": "reason",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "10612:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1352,
														"name": "ScoreUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 718,
														"src": "10584:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,uint256,string memory)"
														}
													},
													"id": 1356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10584:35:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1357,
												"nodeType": "EmitStatement",
												"src": "10579:40:7"
											}
										]
									},
									"documentation": {
										"id": 1315,
										"nodeType": "StructuredDocumentation",
										"src": "10097:147:7",
										"text": " @dev Emergency function to remove invalid score\n @param proposalId The proposal ID\n @param reason Reason for removal"
									},
									"functionSelector": "b8a956d3",
									"id": 1359,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1322,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 30,
													"src": "10330:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1323,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1321,
												"name": "onlyRole",
												"nameLocations": [
													"10321:8:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "10321:8:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "10321:28:7"
										}
									],
									"name": "removeScore",
									"nameLocation": "10258:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "10278:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "10270:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10270:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "10304:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "10290:20:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1318,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10290:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10269:42:7"
									},
									"returnParameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10350:0:7"
									},
									"scope": 1380,
									"src": "10249:377:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1368,
										"nodeType": "Block",
										"src": "10679:25:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1365,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 470,
														"src": "10689:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10689:8:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1367,
												"nodeType": "ExpressionStatement",
												"src": "10689:8:7"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1369,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1362,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1452,
													"src": "10667:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1363,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1361,
												"name": "onlyRole",
												"nameLocations": [
													"10658:8:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "10658:8:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "10658:20:7"
										}
									],
									"name": "pause",
									"nameLocation": "10641:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10646:2:7"
									},
									"returnParameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10679:0:7"
									},
									"scope": 1380,
									"src": "10632:72:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1378,
										"nodeType": "Block",
										"src": "10759:27:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1375,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "10769:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10769:10:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1377,
												"nodeType": "ExpressionStatement",
												"src": "10769:10:7"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1379,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1372,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1452,
													"src": "10747:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1373,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1371,
												"name": "onlyRole",
												"nameLocations": [
													"10738:8:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "10738:8:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "10738:20:7"
										}
									],
									"name": "unpause",
									"nameLocation": "10719:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10726:2:7"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10759:0:7"
									},
									"scope": 1380,
									"src": "10710:76:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1381,
							"src": "410:10378:7",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336,
								390,
								395,
								699,
								705,
								710,
								718,
								1408
							]
						}
					],
					"src": "32:10756:7"
				},
				"id": 7
			},
			"CrossFi-Treasury-Guard/contracts/interfaces/IAIScoreRegistry.sol": {
				"ast": {
					"absolutePath": "CrossFi-Treasury-Guard/contracts/interfaces/IAIScoreRegistry.sol",
					"exportedSymbols": {
						"IAIScoreRegistry": [
							1441
						]
					},
					"id": 1442,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1382,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAIScoreRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1383,
								"nodeType": "StructuredDocumentation",
								"src": "58:81:8",
								"text": " @title IAIScoreRegistry\n @dev Interface for AIScoreRegistry contract"
							},
							"fullyImplemented": false,
							"id": 1441,
							"linearizedBaseContracts": [
								1441
							],
							"name": "IAIScoreRegistry",
							"nameLocation": "150:16:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IAIScoreRegistry.ScoringBreakdown",
									"id": 1394,
									"members": [
										{
											"constant": false,
											"id": 1385,
											"mutability": "mutable",
											"name": "ecosystemScore",
											"nameLocation": "218:14:8",
											"nodeType": "VariableDeclaration",
											"scope": 1394,
											"src": "212:20:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1384,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "212:5:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1387,
											"mutability": "mutable",
											"name": "feasibilityScore",
											"nameLocation": "248:16:8",
											"nodeType": "VariableDeclaration",
											"scope": 1394,
											"src": "242:22:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1386,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "242:5:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1389,
											"mutability": "mutable",
											"name": "riskScore",
											"nameLocation": "280:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 1394,
											"src": "274:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1388,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "274:5:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1391,
											"mutability": "mutable",
											"name": "teamScore",
											"nameLocation": "305:9:8",
											"nodeType": "VariableDeclaration",
											"scope": 1394,
											"src": "299:15:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1390,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "299:5:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1393,
											"mutability": "mutable",
											"name": "innovationScore",
											"nameLocation": "330:15:8",
											"nodeType": "VariableDeclaration",
											"scope": 1394,
											"src": "324:21:8",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1392,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "324:5:8",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ScoringBreakdown",
									"nameLocation": "185:16:8",
									"nodeType": "StructDefinition",
									"scope": 1441,
									"src": "178:174:8",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "09e8ad66e4736435405704d301d344e9454f286d3feeb2036b1adc6f4900ccbc",
									"id": 1408,
									"name": "AIScoreSubmitted",
									"nameLocation": "382:16:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"indexed": true,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "424:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "408:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "408:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1398,
												"indexed": false,
												"mutability": "mutable",
												"name": "overallScore",
												"nameLocation": "452:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "444:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "444:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1400,
												"indexed": false,
												"mutability": "mutable",
												"name": "justificationIPFS",
												"nameLocation": "481:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "474:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1399,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "474:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"indexed": false,
												"mutability": "mutable",
												"name": "modelVersion",
												"nameLocation": "515:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "508:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1401,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "508:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"indexed": true,
												"mutability": "mutable",
												"name": "oracle",
												"nameLocation": "553:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "537:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "537:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1406,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "577:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1408,
												"src": "569:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "569:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "398:194:8"
									},
									"src": "376:217:8"
								},
								{
									"functionSelector": "7092b0bc",
									"id": 1422,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "submitAIScore",
									"nameLocation": "629:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "660:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "652:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1412,
												"mutability": "mutable",
												"name": "overallScore",
												"nameLocation": "688:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "680:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1411,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "justificationIPFS",
												"nameLocation": "724:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "710:31:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1413,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "710:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1416,
												"mutability": "mutable",
												"name": "modelVersion",
												"nameLocation": "765:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "751:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1415,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "751:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "breakdown",
												"nameLocation": "811:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "787:33:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ScoringBreakdown_$1394_memory_ptr",
													"typeString": "struct IAIScoreRegistry.ScoringBreakdown"
												},
												"typeName": {
													"id": 1418,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1417,
														"name": "ScoringBreakdown",
														"nameLocations": [
															"787:16:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1394,
														"src": "787:16:8"
													},
													"referencedDeclaration": 1394,
													"src": "787:16:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ScoringBreakdown_$1394_storage_ptr",
														"typeString": "struct IAIScoreRegistry.ScoringBreakdown"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "642:184:8"
									},
									"returnParameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "835:0:8"
									},
									"scope": 1441,
									"src": "620:216:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0311b82d",
									"id": 1433,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAIScore",
									"nameLocation": "855:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1424,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "874:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "866:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1423,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "865:20:8"
									},
									"returnParameters": {
										"id": 1432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "score",
												"nameLocation": "926:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "918:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "918:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1429,
												"mutability": "mutable",
												"name": "justification",
												"nameLocation": "955:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "941:27:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1428,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "941:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "exists",
												"nameLocation": "983:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1433,
												"src": "978:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "978:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "908:87:8"
									},
									"scope": 1441,
									"src": "846:150:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "96caac0a",
									"id": 1440,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasAIScore",
									"nameLocation": "1015:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "1034:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "1026:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1026:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1025:20:8"
									},
									"returnParameters": {
										"id": 1439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1438,
												"mutability": "mutable",
												"name": "exists",
												"nameLocation": "1074:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1440,
												"src": "1069:11:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1437,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1069:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1068:13:8"
									},
									"scope": 1441,
									"src": "1006:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1442,
							"src": "140:944:8",
							"usedErrors": [],
							"usedEvents": [
								1408
							]
						}
					],
					"src": "32:1053:8"
				},
				"id": 8
			},
			"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol": {
				"ast": {
					"absolutePath": "CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							296
						],
						"Context": [
							582
						],
						"ERC165": [
							606
						],
						"ExtendedAccessControl": [
							1687
						],
						"IAccessControl": [
							379
						],
						"IERC165": [
							618
						]
					},
					"id": 1688,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1443,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1444,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1688,
							"sourceUnit": 297,
							"src": "58:58:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1446,
										"name": "AccessControl",
										"nameLocations": [
											"261:13:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "261:13:9"
									},
									"id": 1447,
									"nodeType": "InheritanceSpecifier",
									"src": "261:13:9"
								}
							],
							"canonicalName": "ExtendedAccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1445,
								"nodeType": "StructuredDocumentation",
								"src": "118:108:9",
								"text": " @title AccessControl\n @dev Extended access control with custom roles for CrossFi Treasury Guard"
							},
							"fullyImplemented": true,
							"id": 1687,
							"linearizedBaseContracts": [
								1687,
								296,
								606,
								618,
								379,
								582
							],
							"name": "ExtendedAccessControl",
							"nameLocation": "236:21:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "75b238fc",
									"id": 1452,
									"mutability": "constant",
									"name": "ADMIN_ROLE",
									"nameLocation": "330:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1687,
									"src": "306:60:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1448,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "306:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41444d494e5f524f4c45",
												"id": 1450,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "353:12:9",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												},
												"value": "ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												}
											],
											"id": 1449,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "343:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1451,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "343:23:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "c601f7af",
									"id": 1457,
									"mutability": "constant",
									"name": "AI_ORACLE_ROLE",
									"nameLocation": "396:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1687,
									"src": "372:68:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1453,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "372:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41495f4f5241434c455f524f4c45",
												"id": 1455,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "423:16:9",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_482648e7878e9fa54c0a2f67ffd22d00ebc37cf7a03e060e428d2ab0cd6735cc",
													"typeString": "literal_string \"AI_ORACLE_ROLE\""
												},
												"value": "AI_ORACLE_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_482648e7878e9fa54c0a2f67ffd22d00ebc37cf7a03e060e428d2ab0cd6735cc",
													"typeString": "literal_string \"AI_ORACLE_ROLE\""
												}
											],
											"id": 1454,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "413:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1456,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "413:27:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "ebdf690f",
									"id": 1462,
									"mutability": "constant",
									"name": "TREASURY_MANAGER_ROLE",
									"nameLocation": "470:21:9",
									"nodeType": "VariableDeclaration",
									"scope": 1687,
									"src": "446:82:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1458,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "446:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "54524541535552595f4d414e414745525f524f4c45",
												"id": 1460,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "504:23:9",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_ede9dcdb0ce99dc7cec9c7be9246ad08b37853683ad91569c187b647ddf5e21c",
													"typeString": "literal_string \"TREASURY_MANAGER_ROLE\""
												},
												"value": "TREASURY_MANAGER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_ede9dcdb0ce99dc7cec9c7be9246ad08b37853683ad91569c187b647ddf5e21c",
													"typeString": "literal_string \"TREASURY_MANAGER_ROLE\""
												}
											],
											"id": 1459,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "494:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1461,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "494:34:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a02d72fb",
									"id": 1467,
									"mutability": "constant",
									"name": "MILESTONE_APPROVER_ROLE",
									"nameLocation": "558:23:9",
									"nodeType": "VariableDeclaration",
									"scope": 1687,
									"src": "534:86:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1463,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "534:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d494c4553544f4e455f415050524f5645525f524f4c45",
												"id": 1465,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "594:25:9",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_58223cdfb69946630d837d40b5c366a584f0217ada7fddd8318f2e08603cfa22",
													"typeString": "literal_string \"MILESTONE_APPROVER_ROLE\""
												},
												"value": "MILESTONE_APPROVER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_58223cdfb69946630d837d40b5c366a584f0217ada7fddd8318f2e08603cfa22",
													"typeString": "literal_string \"MILESTONE_APPROVER_ROLE\""
												}
											],
											"id": 1464,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "584:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1466,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "584:36:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "bfe42a37",
									"id": 1472,
									"mutability": "constant",
									"name": "DISPUTE_RESOLVER_ROLE",
									"nameLocation": "650:21:9",
									"nodeType": "VariableDeclaration",
									"scope": 1687,
									"src": "626:82:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1468,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "626:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "444953505554455f5245534f4c5645525f524f4c45",
												"id": 1470,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "684:23:9",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e",
													"typeString": "literal_string \"DISPUTE_RESOLVER_ROLE\""
												},
												"value": "DISPUTE_RESOLVER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e",
													"typeString": "literal_string \"DISPUTE_RESOLVER_ROLE\""
												}
											],
											"id": 1469,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "674:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1471,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "674:34:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1481,
										"nodeType": "Block",
										"src": "733:60:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1476,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "755:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1477,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "775:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "779:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "775:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1475,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "744:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "744:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1480,
												"nodeType": "ExpressionStatement",
												"src": "744:42:9"
											}
										]
									},
									"id": 1482,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "730:2:9"
									},
									"returnParameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "733:0:9"
									},
									"scope": 1687,
									"src": "719:74:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1514,
										"nodeType": "Block",
										"src": "1067:112:9",
										"statements": [
											{
												"body": {
													"id": 1512,
													"nodeType": "Block",
													"src": "1120:53:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1506,
																			"name": "roles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1488,
																			"src": "1144:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																				"typeString": "bytes32[] memory"
																			}
																		},
																		"id": 1508,
																		"indexExpression": {
																			"id": 1507,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1495,
																			"src": "1150:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1144:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1509,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1485,
																		"src": "1154:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1505,
																	"name": "grantRole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 148,
																	"src": "1134:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address)"
																	}
																},
																"id": 1510,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1134:28:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1511,
															"nodeType": "ExpressionStatement",
															"src": "1134:28:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1498,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1495,
														"src": "1097:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1499,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1488,
															"src": "1101:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 1500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1107:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1101:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1097:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1513,
												"initializationExpression": {
													"assignments": [
														1495
													],
													"declarations": [
														{
															"constant": false,
															"id": 1495,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1090:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1513,
															"src": "1082:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1494,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1082:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1497,
													"initialValue": {
														"hexValue": "30",
														"id": 1496,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1094:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1082:13:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1503,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1115:3:9",
														"subExpression": {
															"id": 1502,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1495,
															"src": "1115:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1504,
													"nodeType": "ExpressionStatement",
													"src": "1115:3:9"
												},
												"nodeType": "ForStatement",
												"src": "1077:96:9"
											}
										]
									},
									"documentation": {
										"id": 1483,
										"nodeType": "StructuredDocumentation",
										"src": "803:152:9",
										"text": " @dev Grant multiple roles to an account\n @param account Account to grant roles to\n @param roles Array of role identifiers"
									},
									"functionSelector": "91b9f9d8",
									"id": 1515,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1491,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 30,
													"src": "1047:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1492,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1490,
												"name": "onlyRole",
												"nameLocations": [
													"1038:8:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "1038:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1038:28:9"
										}
									],
									"name": "grantMultipleRoles",
									"nameLocation": "969:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "996:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "988:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "988:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "roles",
												"nameLocation": "1022:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1005:22:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1486,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1005:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1487,
													"nodeType": "ArrayTypeName",
													"src": "1005:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "987:41:9"
									},
									"returnParameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1067:0:9"
									},
									"scope": 1687,
									"src": "960:219:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1547,
										"nodeType": "Block",
										"src": "1460:113:9",
										"statements": [
											{
												"body": {
													"id": 1545,
													"nodeType": "Block",
													"src": "1513:54:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1539,
																			"name": "roles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1521,
																			"src": "1538:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																				"typeString": "bytes32[] memory"
																			}
																		},
																		"id": 1541,
																		"indexExpression": {
																			"id": 1540,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1528,
																			"src": "1544:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1538:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1542,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1518,
																		"src": "1548:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1538,
																	"name": "revokeRole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "1527:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address)"
																	}
																},
																"id": 1543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1527:29:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1544,
															"nodeType": "ExpressionStatement",
															"src": "1527:29:9"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1531,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1528,
														"src": "1490:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1532,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1521,
															"src": "1494:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 1533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1500:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1494:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1490:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1546,
												"initializationExpression": {
													"assignments": [
														1528
													],
													"declarations": [
														{
															"constant": false,
															"id": 1528,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1483:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1546,
															"src": "1475:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1527,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1475:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1530,
													"initialValue": {
														"hexValue": "30",
														"id": 1529,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1475:13:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1536,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1508:3:9",
														"subExpression": {
															"id": 1535,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "1508:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1537,
													"nodeType": "ExpressionStatement",
													"src": "1508:3:9"
												},
												"nodeType": "ForStatement",
												"src": "1470:97:9"
											}
										]
									},
									"documentation": {
										"id": 1516,
										"nodeType": "StructuredDocumentation",
										"src": "1189:158:9",
										"text": " @dev Revoke multiple roles from an account\n @param account Account to revoke roles from\n @param roles Array of role identifiers"
									},
									"functionSelector": "4fe9d1f5",
									"id": 1548,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1524,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 30,
													"src": "1440:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1525,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1523,
												"name": "onlyRole",
												"nameLocations": [
													"1431:8:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "1431:8:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1431:28:9"
										}
									],
									"name": "revokeMultipleRoles",
									"nameLocation": "1361:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1518,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1389:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "1381:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1381:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1521,
												"mutability": "mutable",
												"name": "roles",
												"nameLocation": "1415:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1548,
												"src": "1398:22:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1519,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1398:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1520,
													"nodeType": "ArrayTypeName",
													"src": "1398:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1380:41:9"
									},
									"returnParameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1460:0:9"
									},
									"scope": 1687,
									"src": "1352:221:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1584,
										"nodeType": "Block",
										"src": "1906:181:9",
										"statements": [
											{
												"body": {
													"id": 1580,
													"nodeType": "Block",
													"src": "1959:100:9",
													"statements": [
														{
															"condition": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1571,
																			"name": "roles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1554,
																			"src": "1985:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																				"typeString": "bytes32[] memory"
																			}
																		},
																		"id": 1573,
																		"indexExpression": {
																			"id": 1572,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1560,
																			"src": "1991:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1985:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1574,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1551,
																		"src": "1995:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1570,
																	"name": "hasRole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 81,
																	"src": "1977:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (bytes32,address) view returns (bool)"
																	}
																},
																"id": 1575,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1977:26:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1579,
															"nodeType": "IfStatement",
															"src": "1973:76:9",
															"trueBody": {
																"id": 1578,
																"nodeType": "Block",
																"src": "2005:44:9",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "74727565",
																			"id": 1576,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2030:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"functionReturnParameters": 1558,
																		"id": 1577,
																		"nodeType": "Return",
																		"src": "2023:11:9"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1563,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1560,
														"src": "1936:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1564,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1554,
															"src": "1940:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 1565,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1946:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1940:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1936:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1581,
												"initializationExpression": {
													"assignments": [
														1560
													],
													"declarations": [
														{
															"constant": false,
															"id": 1560,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1929:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1581,
															"src": "1921:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1559,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1921:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1562,
													"initialValue": {
														"hexValue": "30",
														"id": 1561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1933:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1921:13:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1954:3:9",
														"subExpression": {
															"id": 1567,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1560,
															"src": "1954:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1569,
													"nodeType": "ExpressionStatement",
													"src": "1954:3:9"
												},
												"nodeType": "ForStatement",
												"src": "1916:143:9"
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 1582,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2075:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 1558,
												"id": 1583,
												"nodeType": "Return",
												"src": "2068:12:9"
											}
										]
									},
									"documentation": {
										"id": 1549,
										"nodeType": "StructuredDocumentation",
										"src": "1583:228:9",
										"text": " @dev Check if account has any of the specified roles\n @param account Account to check\n @param roles Array of role identifiers\n @return hasAnyRole True if account has at least one of the roles"
									},
									"functionSelector": "68ca78f9",
									"id": 1585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasAnyRole",
									"nameLocation": "1825:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1844:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "1836:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1836:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "roles",
												"nameLocation": "1870:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "1853:22:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1552,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1853:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1553,
													"nodeType": "ArrayTypeName",
													"src": "1853:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1835:41:9"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "1900:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1556,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1900:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1899:6:9"
									},
									"scope": 1687,
									"src": "1816:271:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1631,
										"nodeType": "Block",
										"src": "2331:279:9",
										"statements": [
											{
												"assignments": [
													1597
												],
												"declarations": [
													{
														"constant": false,
														"id": 1597,
														"mutability": "mutable",
														"name": "allRoles",
														"nameLocation": "2358:8:9",
														"nodeType": "VariableDeclaration",
														"scope": 1631,
														"src": "2341:25:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1595,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "2341:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1596,
															"nodeType": "ArrayTypeName",
															"src": "2341:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1600,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1598,
														"name": "getAllRoles",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1686,
														"src": "2369:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function () pure returns (bytes32[] memory)"
														}
													},
													"id": 1599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2369:13:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2341:41:9"
											},
											{
												"assignments": [
													1602
												],
												"declarations": [
													{
														"constant": false,
														"id": 1602,
														"mutability": "mutable",
														"name": "count",
														"nameLocation": "2400:5:9",
														"nodeType": "VariableDeclaration",
														"scope": 1631,
														"src": "2392:13:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1601,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2392:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1604,
												"initialValue": {
													"hexValue": "30",
													"id": 1603,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2408:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2392:17:9"
											},
											{
												"body": {
													"id": 1627,
													"nodeType": "Block",
													"src": "2474:99:9",
													"statements": [
														{
															"condition": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 1617,
																			"name": "allRoles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1597,
																			"src": "2500:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																				"typeString": "bytes32[] memory"
																			}
																		},
																		"id": 1619,
																		"indexExpression": {
																			"id": 1618,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1606,
																			"src": "2509:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2500:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 1620,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1588,
																		"src": "2513:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1616,
																	"name": "hasRole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 81,
																	"src": "2492:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (bytes32,address) view returns (bool)"
																	}
																},
																"id": 1621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2492:29:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1626,
															"nodeType": "IfStatement",
															"src": "2488:75:9",
															"trueBody": {
																"id": 1625,
																"nodeType": "Block",
																"src": "2523:40:9",
																"statements": [
																	{
																		"expression": {
																			"id": 1623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "2541:7:9",
																			"subExpression": {
																				"id": 1622,
																				"name": "count",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1602,
																				"src": "2541:5:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1624,
																		"nodeType": "ExpressionStatement",
																		"src": "2541:7:9"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1609,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1606,
														"src": "2448:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1610,
															"name": "allRoles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1597,
															"src": "2452:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 1611,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2461:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2452:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2448:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1628,
												"initializationExpression": {
													"assignments": [
														1606
													],
													"declarations": [
														{
															"constant": false,
															"id": 1606,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2441:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1628,
															"src": "2433:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1605,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2433:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1608,
													"initialValue": {
														"hexValue": "30",
														"id": 1607,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2445:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2433:13:9"
												},
												"loopExpression": {
													"expression": {
														"id": 1614,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2469:3:9",
														"subExpression": {
															"id": 1613,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "2469:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1615,
													"nodeType": "ExpressionStatement",
													"src": "2469:3:9"
												},
												"nodeType": "ForStatement",
												"src": "2428:145:9"
											},
											{
												"expression": {
													"id": 1629,
													"name": "count",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1602,
													"src": "2598:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1592,
												"id": 1630,
												"nodeType": "Return",
												"src": "2591:12:9"
											}
										]
									},
									"documentation": {
										"id": 1586,
										"nodeType": "StructuredDocumentation",
										"src": "2097:148:9",
										"text": " @dev Get all roles for an account\n @param account Account to check\n @return roleCount Number of roles the account has"
									},
									"functionSelector": "aca5a8a7",
									"id": 1632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleCount",
									"nameLocation": "2259:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1588,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2280:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "2272:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2272:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2271:17:9"
									},
									"returnParameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "roleCount",
												"nameLocation": "2320:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "2312:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2312:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2311:19:9"
									},
									"scope": 1687,
									"src": "2250:360:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1685,
										"nodeType": "Block",
										"src": "2791:296:9",
										"statements": [
											{
												"expression": {
													"id": 1645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1639,
														"name": "roles",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1637,
														"src": "2801:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "36",
																"id": 1643,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2823:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_6_by_1",
																	"typeString": "int_const 6"
																},
																"value": "6"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_6_by_1",
																	"typeString": "int_const 6"
																}
															],
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "2809:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (bytes32[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 1640,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "2813:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"id": 1641,
																"nodeType": "ArrayTypeName",
																"src": "2813:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																	"typeString": "bytes32[]"
																}
															}
														},
														"id": 1644,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2809:16:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[] memory"
														}
													},
													"src": "2801:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"id": 1646,
												"nodeType": "ExpressionStatement",
												"src": "2801:24:9"
											},
											{
												"expression": {
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1647,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1637,
															"src": "2835:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 1649,
														"indexExpression": {
															"hexValue": "30",
															"id": 1648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2841:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2835:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1650,
														"name": "DEFAULT_ADMIN_ROLE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "2846:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2835:29:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1652,
												"nodeType": "ExpressionStatement",
												"src": "2835:29:9"
											},
											{
												"expression": {
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1653,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1637,
															"src": "2874:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 1655,
														"indexExpression": {
															"hexValue": "31",
															"id": 1654,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2880:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2874:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1656,
														"name": "ADMIN_ROLE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1452,
														"src": "2885:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2874:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1658,
												"nodeType": "ExpressionStatement",
												"src": "2874:21:9"
											},
											{
												"expression": {
													"id": 1663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1659,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1637,
															"src": "2905:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 1661,
														"indexExpression": {
															"hexValue": "32",
															"id": 1660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2911:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2905:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1662,
														"name": "AI_ORACLE_ROLE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1457,
														"src": "2916:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2905:25:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1664,
												"nodeType": "ExpressionStatement",
												"src": "2905:25:9"
											},
											{
												"expression": {
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1665,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1637,
															"src": "2940:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 1667,
														"indexExpression": {
															"hexValue": "33",
															"id": 1666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2946:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2940:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1668,
														"name": "TREASURY_MANAGER_ROLE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "2951:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2940:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1670,
												"nodeType": "ExpressionStatement",
												"src": "2940:32:9"
											},
											{
												"expression": {
													"id": 1675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1671,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1637,
															"src": "2982:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 1673,
														"indexExpression": {
															"hexValue": "34",
															"id": 1672,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2988:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2982:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1674,
														"name": "MILESTONE_APPROVER_ROLE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1467,
														"src": "2993:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2982:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1676,
												"nodeType": "ExpressionStatement",
												"src": "2982:34:9"
											},
											{
												"expression": {
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1677,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1637,
															"src": "3026:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 1679,
														"indexExpression": {
															"hexValue": "35",
															"id": 1678,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3032:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3026:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1680,
														"name": "DISPUTE_RESOLVER_ROLE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1472,
														"src": "3037:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3026:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1682,
												"nodeType": "ExpressionStatement",
												"src": "3026:32:9"
											},
											{
												"expression": {
													"id": 1683,
													"name": "roles",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1637,
													"src": "3075:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 1638,
												"id": 1684,
												"nodeType": "Return",
												"src": "3068:12:9"
											}
										]
									},
									"documentation": {
										"id": 1633,
										"nodeType": "StructuredDocumentation",
										"src": "2620:98:9",
										"text": " @dev Get all available roles\n @return roles Array of all role identifiers"
									},
									"functionSelector": "f2bcac3d",
									"id": 1686,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllRoles",
									"nameLocation": "2732:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2743:2:9"
									},
									"returnParameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "roles",
												"nameLocation": "2784:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1686,
												"src": "2767:22:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1635,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "2767:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1636,
													"nodeType": "ArrayTypeName",
													"src": "2767:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2766:24:9"
									},
									"scope": 1687,
									"src": "2723:364:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1688,
							"src": "227:2862:9",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336
							]
						}
					],
					"src": "32:3057:9"
				},
				"id": 9
			}
		}
	}
}