{
	"id": "166f8f0afdd581903304821d6db23877",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\n/**\n * @title AccessControl\n * @dev Extended access control with custom roles for CrossFi Treasury Guard\n */\ncontract ExtendedAccessControl is AccessControl {\n    \n    // Custom roles\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\n    bytes32 public constant AI_ORACLE_ROLE = keccak256(\"AI_ORACLE_ROLE\");\n    bytes32 public constant TREASURY_MANAGER_ROLE = keccak256(\"TREASURY_MANAGER_ROLE\");\n    bytes32 public constant MILESTONE_APPROVER_ROLE = keccak256(\"MILESTONE_APPROVER_ROLE\");\n    bytes32 public constant DISPUTE_RESOLVER_ROLE = keccak256(\"DISPUTE_RESOLVER_ROLE\");\n    \n    constructor() {\n         _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n    }\n    \n    /**\n     * @dev Grant multiple roles to an account\n     * @param account Account to grant roles to\n     * @param roles Array of role identifiers\n     */\n    function grantMultipleRoles(address account, bytes32[] memory roles) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        for (uint256 i = 0; i < roles.length; i++) {\n            grantRole(roles[i], account);\n        }\n    }\n    \n    /**\n     * @dev Revoke multiple roles from an account\n     * @param account Account to revoke roles from\n     * @param roles Array of role identifiers\n     */\n    function revokeMultipleRoles(address account, bytes32[] memory roles) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        for (uint256 i = 0; i < roles.length; i++) {\n            revokeRole(roles[i], account);\n        }\n    }\n    \n    /**\n     * @dev Check if account has any of the specified roles\n     * @param account Account to check\n     * @param roles Array of role identifiers\n     * @return hasAnyRole True if account has at least one of the roles\n     */\n    function hasAnyRole(address account, bytes32[] memory roles) external view returns (bool) {\n        for (uint256 i = 0; i < roles.length; i++) {\n            if (hasRole(roles[i], account)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    \n    /**\n     * @dev Get all roles for an account\n     * @param account Account to check\n     * @return roleCount Number of roles the account has\n     */\n    function getRoleCount(address account) external view returns (uint256 roleCount) {\n        bytes32[] memory allRoles = getAllRoles();\n        uint256 count = 0;\n        \n        for (uint256 i = 0; i < allRoles.length; i++) {\n            if (hasRole(allRoles[i], account)) {\n                count++;\n            }\n        }\n        \n        return count;\n    }\n    \n    /**\n     * @dev Get all available roles\n     * @return roles Array of all role identifiers\n     */\n    function getAllRoles() public pure returns (bytes32[] memory roles) {\n        roles = new bytes32[](6);\n        roles[0] = DEFAULT_ADMIN_ROLE;\n        roles[1] = ADMIN_ROLE;\n        roles[2] = AI_ORACLE_ROLE;\n        roles[3] = TREASURY_MANAGER_ROLE;\n        roles[4] = MILESTONE_APPROVER_ROLE;\n        roles[5] = DISPUTE_RESOLVER_ROLE;\n        return roles;\n    }\n}"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\n\npragma solidity >=0.8.4;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "paris"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)22_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)22_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)22_storage"
							},
							"t_struct(RoleData)22_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 19,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 21,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol": {
				"ExtendedAccessControl": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "AI_ORACLE_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DISPUTE_RESOLVER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MILESTONE_APPROVER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TREASURY_MANAGER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllRoles",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getRoleCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "roleCount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								}
							],
							"name": "grantMultipleRoles",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								}
							],
							"name": "hasAnyRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								}
							],
							"name": "revokeMultipleRoles",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extended access control with custom roles for CrossFi Treasury Guard",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getAllRoles()": {
								"details": "Get all available roles",
								"returns": {
									"roles": "Array of all role identifiers"
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleCount(address)": {
								"details": "Get all roles for an account",
								"params": {
									"account": "Account to check"
								},
								"returns": {
									"roleCount": "Number of roles the account has"
								}
							},
							"grantMultipleRoles(address,bytes32[])": {
								"details": "Grant multiple roles to an account",
								"params": {
									"account": "Account to grant roles to",
									"roles": "Array of role identifiers"
								}
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasAnyRole(address,bytes32[])": {
								"details": "Check if account has any of the specified roles",
								"params": {
									"account": "Account to check",
									"roles": "Array of role identifiers"
								},
								"returns": {
									"_0": "hasAnyRole True if account has at least one of the roles"
								}
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeMultipleRoles(address,bytes32[])": {
								"details": "Revoke multiple roles from an account",
								"params": {
									"account": "Account to revoke roles from",
									"roles": "Array of role identifiers"
								}
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"title": "AccessControl",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":719:793  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":744:786  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n  0x00\n    /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":775:785  msg.sender */\n  caller\n    /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":744:754  _grantRole */\n  tag_5\n    /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":744:786  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  jump\t// in\ntag_4:\n  pop\n    /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n  jump(tag_6)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_5:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6232:6236  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n  dup3\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n  dup6\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  dup2\n  keccak256\n  sload\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6297  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n  dup4\n  dup2\n  mstore\n  0x20\n  dup2\n  dup2\n  mstore\n  0x40\n  dup1\n  dup4\n  keccak256\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n  dup7\n  and\n  dup5\n  mstore\n  swap1\n  swap2\n  mstore\n  swap1\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6323:6327  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n  tag_11\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  swap1\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  jump\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\ntag_11:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6364:6371  account */\n  dup3\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6358:6362  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6407:6411  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6449:6454  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x91d14854\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xbfe42a37\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xbfe42a37\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xc601f7af\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xebdf690f\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2bcac3d\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x91d14854\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa02d72fb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xaca5a8a7\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x4fe9d1f5\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x4fe9d1f5\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x68ca78f9\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x75b238fc\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x91b9f9d8\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_23\n      tag_24\n      calldatasize\n      0x04\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_4:\n      tag_29\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3851:3858  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      0x01\n      add\n      sload\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      jump\n    tag_29:\n      mload(0x40)\n        /* \"#utility.yul\":828:853   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":816:818   */\n      0x20\n        /* \"#utility.yul\":801:819   */\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      tag_27\n        /* \"#utility.yul\":682:859   */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_5:\n      tag_35\n      tag_36\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_6:\n      tag_35\n      tag_40\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_40:\n      tag_41\n      jump\t// in\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1352:1573  function revokeMultipleRoles(address account, bytes32[] memory roles) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_7:\n      tag_35\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1816:2087  function hasAnyRole(address account, bytes32[] memory roles) external view returns (bool) {... */\n    tag_8:\n      tag_23\n      tag_47\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":306:366  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n    tag_9:\n      tag_29\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":343:366  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":306:366  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n      dup2\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":960:1179  function grantMultipleRoles(address account, bytes32[] memory roles) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_10:\n      tag_35\n      tag_54\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_11:\n      tag_23\n      tag_57\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":534:620  bytes32 public constant MILESTONE_APPROVER_ROLE = keccak256(\"MILESTONE_APPROVER_ROLE\") */\n    tag_12:\n      tag_29\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":584:620  keccak256(\"MILESTONE_APPROVER_ROLE\") */\n      0x58223cdfb69946630d837d40b5c366a584f0217ada7fddd8318f2e08603cfa22\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":534:620  bytes32 public constant MILESTONE_APPROVER_ROLE = keccak256(\"MILESTONE_APPROVER_ROLE\") */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_13:\n      tag_29\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2250:2610  function getRoleCount(address account) external view returns (uint256 roleCount) {... */\n    tag_14:\n      tag_29\n      tag_67\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":626:708  bytes32 public constant DISPUTE_RESOLVER_ROLE = keccak256(\"DISPUTE_RESOLVER_ROLE\") */\n    tag_15:\n      tag_29\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":674:708  keccak256(\"DISPUTE_RESOLVER_ROLE\") */\n      0x7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":626:708  bytes32 public constant DISPUTE_RESOLVER_ROLE = keccak256(\"DISPUTE_RESOLVER_ROLE\") */\n      dup2\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":372:440  bytes32 public constant AI_ORACLE_ROLE = keccak256(\"AI_ORACLE_ROLE\") */\n    tag_16:\n      tag_29\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":413:440  keccak256(\"AI_ORACLE_ROLE\") */\n      0x482648e7878e9fa54c0a2f67ffd22d00ebc37cf7a03e060e428d2ab0cd6735cc\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":372:440  bytes32 public constant AI_ORACLE_ROLE = keccak256(\"AI_ORACLE_ROLE\") */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_17:\n      tag_35\n      tag_79\n      calldatasize\n      0x04\n      tag_37\n      jump\t// in\n    tag_79:\n      tag_80\n      jump\t// in\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":446:528  bytes32 public constant TREASURY_MANAGER_ROLE = keccak256(\"TREASURY_MANAGER_ROLE\") */\n    tag_18:\n      tag_29\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":494:528  keccak256(\"TREASURY_MANAGER_ROLE\") */\n      0xede9dcdb0ce99dc7cec9c7be9246ad08b37853683ad91569c187b647ddf5e21c\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":446:528  bytes32 public constant TREASURY_MANAGER_ROLE = keccak256(\"TREASURY_MANAGER_ROLE\") */\n      dup2\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2723:3087  function getAllRoles() public pure returns (bytes32[] memory roles) {... */\n    tag_19:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2626:2630  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2696  interfaceId == type(IAccessControl).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x7965db0b)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      tag_90\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:869  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2736  super.supportsInterface(interfaceId) */\n    tag_90:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2642:2736  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3851:3858  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_95\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_96\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      tag_98\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4317:4321  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4323:4330  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4316  _grantRole */\n      tag_99\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      jump\t// in\n    tag_98:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_41:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      dup2\n      and\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n      tag_103\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5454:5484  AccessControlBadConfirmation() */\n      mload(0x40)\n      shl(0xe1, 0x334bd919)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      tag_104\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5517:5521  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5523:5541  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5516  _revokeRole */\n      tag_105\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_104:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1352:1573  function revokeMultipleRoles(address account, bytes32[] memory roles) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_107\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_96\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_107:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1475:1484  uint256 i */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1470:1567  for (uint256 i = 0; i < roles.length; i++) {... */\n    tag_109:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1494:1499  roles */\n      dup3\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1494:1506  roles.length */\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1490:1491  i */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1490:1506  i < roles.length */\n      lt\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1470:1567  for (uint256 i = 0; i < roles.length; i++) {... */\n      iszero\n      tag_98\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1527:1556  revokeRole(roles[i], account) */\n      tag_112\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1538:1543  roles */\n      dup4\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1544:1545  i */\n      dup3\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1538:1546  roles[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_114\n      jumpi\n      tag_114\n      tag_115\n      jump\t// in\n    tag_114:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1548:1555  account */\n      dup6\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1527:1537  revokeRole */\n      tag_80\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1527:1556  revokeRole(roles[i], account) */\n      jump\t// in\n    tag_112:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1508:1511  i++ */\n      dup1\n      tag_116\n      dup2\n      tag_117\n      jump\t// in\n    tag_116:\n      swap2\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1470:1567  for (uint256 i = 0; i < roles.length; i++) {... */\n      jump(tag_109)\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1816:2087  function hasAnyRole(address account, bytes32[] memory roles) external view returns (bool) {... */\n    tag_48:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1900:1904  bool */\n      0x00\n      dup1\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1916:2059  for (uint256 i = 0; i < roles.length; i++) {... */\n    tag_119:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1940:1945  roles */\n      dup3\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1940:1952  roles.length */\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1936:1937  i */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1936:1952  i < roles.length */\n      lt\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1916:2059  for (uint256 i = 0; i < roles.length; i++) {... */\n      iszero\n      tag_120\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1977:2003  hasRole(roles[i], account) */\n      tag_122\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1985:1990  roles */\n      dup4\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1991:1992  i */\n      dup3\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1985:1993  roles[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_124\n      jumpi\n      tag_124\n      tag_115\n      jump\t// in\n    tag_124:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1995:2002  account */\n      dup6\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1977:1984  hasRole */\n      tag_58\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1977:2003  hasRole(roles[i], account) */\n      jump\t// in\n    tag_122:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1973:2049  if (hasRole(roles[i], account)) {... */\n      iszero\n      tag_125\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2030:2034  true */\n      0x01\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2023:2034  return true */\n      swap2\n      pop\n      pop\n      jump(tag_90)\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1973:2049  if (hasRole(roles[i], account)) {... */\n    tag_125:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1954:1957  i++ */\n      dup1\n      tag_126\n      dup2\n      tag_117\n      jump\t// in\n    tag_126:\n      swap2\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1916:2059  for (uint256 i = 0; i < roles.length; i++) {... */\n      jump(tag_119)\n    tag_120:\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2075:2080  false */\n      0x00\n      swap4\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1816:2087  function hasAnyRole(address account, bytes32[] memory roles) external view returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":960:1179  function grantMultipleRoles(address account, bytes32[] memory roles) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_128\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_96\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_128:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1082:1091  uint256 i */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1077:1173  for (uint256 i = 0; i < roles.length; i++) {... */\n    tag_130:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1101:1106  roles */\n      dup3\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1101:1113  roles.length */\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1097:1098  i */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1097:1113  i < roles.length */\n      lt\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1077:1173  for (uint256 i = 0; i < roles.length; i++) {... */\n      iszero\n      tag_98\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1134:1162  grantRole(roles[i], account) */\n      tag_133\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1144:1149  roles */\n      dup4\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1150:1151  i */\n      dup3\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1144:1152  roles[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_135\n      jumpi\n      tag_135\n      tag_115\n      jump\t// in\n    tag_135:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1154:1161  account */\n      dup6\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1134:1143  grantRole */\n      tag_38\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1134:1162  grantRole(roles[i], account) */\n      jump\t// in\n    tag_133:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1115:1118  i++ */\n      dup1\n      tag_136\n      dup2\n      tag_117\n      jump\t// in\n    tag_136:\n      swap2\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1077:1173  for (uint256 i = 0; i < roles.length; i++) {... */\n      jump(tag_130)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2907:2911  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n      swap2\n      dup3\n      mstore\n      0x20\n      dup3\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2250:2610  function getRoleCount(address account) external view returns (uint256 roleCount) {... */\n    tag_69:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2312:2329  uint256 roleCount */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2341:2366  bytes32[] memory allRoles */\n      dup1\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2369:2382  getAllRoles() */\n      tag_139\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2369:2380  getAllRoles */\n      tag_85\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2369:2382  getAllRoles() */\n      jump\t// in\n    tag_139:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2341:2382  bytes32[] memory allRoles = getAllRoles() */\n      swap1\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2392:2405  uint256 count */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2433:2442  uint256 i */\n      dup1\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2428:2573  for (uint256 i = 0; i < allRoles.length; i++) {... */\n    tag_140:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2452:2460  allRoles */\n      dup3\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2452:2467  allRoles.length */\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2448:2449  i */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2448:2467  i < allRoles.length */\n      lt\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2428:2573  for (uint256 i = 0; i < allRoles.length; i++) {... */\n      iszero\n      tag_141\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2492:2521  hasRole(allRoles[i], account) */\n      tag_143\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2500:2508  allRoles */\n      dup4\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2509:2510  i */\n      dup3\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2500:2511  allRoles[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_145\n      jumpi\n      tag_145\n      tag_115\n      jump\t// in\n    tag_145:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2513:2520  account */\n      dup7\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2492:2499  hasRole */\n      tag_58\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2492:2521  hasRole(allRoles[i], account) */\n      jump\t// in\n    tag_143:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2488:2563  if (hasRole(allRoles[i], account)) {... */\n      iszero\n      tag_146\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2541:2548  count++ */\n      dup2\n      tag_147\n      dup2\n      tag_117\n      jump\t// in\n    tag_147:\n      swap3\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2488:2563  if (hasRole(allRoles[i], account)) {... */\n    tag_146:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2469:2472  i++ */\n      dup1\n      tag_148\n      dup2\n      tag_117\n      jump\t// in\n    tag_148:\n      swap2\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2428:2573  for (uint256 i = 0; i < allRoles.length; i++) {... */\n      jump(tag_140)\n    tag_141:\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2598:2603  count */\n      swap4\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2250:2610  function getRoleCount(address account) external view returns (uint256 roleCount) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3851:3858  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      dup3\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_151\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_96\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      tag_98\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4735:4739  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4741:4748  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4734  _revokeRole */\n      tag_105\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      jump\t// in\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2723:3087  function getAllRoles() public pure returns (bytes32[] memory roles) {... */\n    tag_85:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2809:2825  new bytes32[](6) */\n      0x40\n      dup1\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2823:2824  6 */\n      0x06\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2809:2825  new bytes32[](6) */\n      dup1\n      dup3\n      mstore\n      0xe0\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2767:2789  bytes32[] memory roles */\n      0x60\n      swap2\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2809:2825  new bytes32[](6) */\n      0x20\n      dup3\n      add\n      0xc0\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2801:2825  roles = new bytes32[](6) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2846:2864  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2835:2840  roles */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2841:2842  0 */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2835:2843  roles[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_160\n      jumpi\n      tag_160\n      tag_115\n      jump\t// in\n    tag_160:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2835:2864  roles[0] = DEFAULT_ADMIN_ROLE */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":343:366  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2874:2879  roles */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2880:2881  1 */\n      0x01\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2874:2882  roles[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_162\n      jumpi\n      tag_162\n      tag_115\n      jump\t// in\n    tag_162:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2874:2895  roles[1] = ADMIN_ROLE */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":413:440  keccak256(\"AI_ORACLE_ROLE\") */\n      0x482648e7878e9fa54c0a2f67ffd22d00ebc37cf7a03e060e428d2ab0cd6735cc\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2905:2910  roles */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2911:2912  2 */\n      0x02\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2905:2913  roles[2] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_164\n      jumpi\n      tag_164\n      tag_115\n      jump\t// in\n    tag_164:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2905:2930  roles[2] = AI_ORACLE_ROLE */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":494:528  keccak256(\"TREASURY_MANAGER_ROLE\") */\n      0xede9dcdb0ce99dc7cec9c7be9246ad08b37853683ad91569c187b647ddf5e21c\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2940:2945  roles */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2946:2947  3 */\n      0x03\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2940:2948  roles[3] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_166\n      jumpi\n      tag_166\n      tag_115\n      jump\t// in\n    tag_166:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2940:2972  roles[3] = TREASURY_MANAGER_ROLE */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":584:620  keccak256(\"MILESTONE_APPROVER_ROLE\") */\n      0x58223cdfb69946630d837d40b5c366a584f0217ada7fddd8318f2e08603cfa22\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2982:2987  roles */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2988:2989  4 */\n      0x04\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2982:2990  roles[4] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_168\n      jumpi\n      tag_168\n      tag_115\n      jump\t// in\n    tag_168:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2982:3016  roles[4] = MILESTONE_APPROVER_ROLE */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":674:708  keccak256(\"DISPUTE_RESOLVER_ROLE\") */\n      0x7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":3026:3031  roles */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":3032:3033  5 */\n      0x05\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":3026:3034  roles[5] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_170\n      jumpi\n      tag_170\n      tag_115\n      jump\t// in\n    tag_170:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":3026:3058  roles[5] = DISPUTE_RESOLVER_ROLE */\n      dup2\n      dup2\n      mstore\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2723:3087  function getAllRoles() public pure returns (bytes32[] memory roles) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3271  _checkRole(role, _msgSender()) */\n      tag_173\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3252:3256  role */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3251  _checkRole */\n      tag_175\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3271  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_173:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6232:6236  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n      tag_177\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6261:6265  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6267:6274  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6260  hasRole */\n      tag_58\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n      tag_178\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6297  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6323:6327  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n      tag_179\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n    tag_179:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6364:6371  account */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6358:6362  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6407:6411  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n      jump(tag_90)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n    tag_178:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6449:6454  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n      jump(tag_90)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6708:7025  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6786:6790  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6828  hasRole(role, account) */\n      tag_183\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6814:6818  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6820:6827  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6813  hasRole */\n      tag_58\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6828  hasRole(role, account) */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6802:7019  if (hasRole(role, account)) {... */\n      iszero\n      tag_178\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6876:6881  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6856  _roles[role] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6873  _roles[role].hasRole[account] */\n      dup7\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6881  _roles[role].hasRole[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6856  _roles[role] */\n      dup7\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6876:6881  false */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      log4\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6961:6965  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6954:6965  return true */\n      jump(tag_90)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3408:3605  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3518  hasRole(role, account) */\n      tag_188\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3504:3508  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3510:3517  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3503  hasRole */\n      tag_58\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3518  hasRole(role, account) */\n      jump\t// in\n    tag_188:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n      tag_189\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      shl(0xe0, 0xe2517d3f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4198:4230   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4180:4231   */\n      mstore\n        /* \"#utility.yul\":4247:4265   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4240:4274   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":4153:4171   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3408:3605  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:300   */\n    tag_25:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_195\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      dup1\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_195:\n        /* \"#utility.yul\":167:190   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":219:251   */\n      dup2\n      and\n        /* \"#utility.yul\":209:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":199:270   */\n      tag_196\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":199:270   */\n    tag_196:\n        /* \"#utility.yul\":289:294   */\n      swap4\n        /* \"#utility.yul\":14:300   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":497:677   */\n    tag_31:\n        /* \"#utility.yul\":556:562   */\n      0x00\n        /* \"#utility.yul\":609:611   */\n      0x20\n        /* \"#utility.yul\":597:606   */\n      dup3\n        /* \"#utility.yul\":588:595   */\n      dup5\n        /* \"#utility.yul\":584:607   */\n      sub\n        /* \"#utility.yul\":580:612   */\n      slt\n        /* \"#utility.yul\":577:629   */\n      iszero\n      tag_199\n      jumpi\n        /* \"#utility.yul\":625:626   */\n      0x00\n        /* \"#utility.yul\":622:623   */\n      dup1\n        /* \"#utility.yul\":615:627   */\n      revert\n        /* \"#utility.yul\":577:629   */\n    tag_199:\n      pop\n        /* \"#utility.yul\":648:671   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":497:677   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":864:1037   */\n    tag_192:\n        /* \"#utility.yul\":932:952   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":981:1012   */\n      dup2\n      and\n        /* \"#utility.yul\":971:1013   */\n      dup2\n      eq\n        /* \"#utility.yul\":961:1031   */\n      tag_202\n      jumpi\n        /* \"#utility.yul\":1027:1028   */\n      0x00\n        /* \"#utility.yul\":1024:1025   */\n      dup1\n        /* \"#utility.yul\":1017:1029   */\n      revert\n        /* \"#utility.yul\":961:1031   */\n    tag_202:\n        /* \"#utility.yul\":864:1037   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1042:1296   */\n    tag_37:\n        /* \"#utility.yul\":1110:1116   */\n      0x00\n        /* \"#utility.yul\":1118:1124   */\n      dup1\n        /* \"#utility.yul\":1171:1173   */\n      0x40\n        /* \"#utility.yul\":1159:1168   */\n      dup4\n        /* \"#utility.yul\":1150:1157   */\n      dup6\n        /* \"#utility.yul\":1146:1169   */\n      sub\n        /* \"#utility.yul\":1142:1174   */\n      slt\n        /* \"#utility.yul\":1139:1191   */\n      iszero\n      tag_204\n      jumpi\n        /* \"#utility.yul\":1187:1188   */\n      0x00\n        /* \"#utility.yul\":1184:1185   */\n      dup1\n        /* \"#utility.yul\":1177:1189   */\n      revert\n        /* \"#utility.yul\":1139:1191   */\n    tag_204:\n        /* \"#utility.yul\":1223:1232   */\n      dup3\n        /* \"#utility.yul\":1210:1233   */\n      calldataload\n        /* \"#utility.yul\":1200:1233   */\n      swap2\n      pop\n        /* \"#utility.yul\":1252:1290   */\n      tag_205\n        /* \"#utility.yul\":1286:1288   */\n      0x20\n        /* \"#utility.yul\":1275:1284   */\n      dup5\n        /* \"#utility.yul\":1271:1289   */\n      add\n        /* \"#utility.yul\":1252:1290   */\n      tag_192\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":1242:1290   */\n      swap1\n      pop\n        /* \"#utility.yul\":1042:1296   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1301:1428   */\n    tag_157:\n        /* \"#utility.yul\":1362:1372   */\n      0x4e487b71\n        /* \"#utility.yul\":1357:1360   */\n      0xe0\n        /* \"#utility.yul\":1353:1373   */\n      shl\n        /* \"#utility.yul\":1350:1351   */\n      0x00\n        /* \"#utility.yul\":1343:1374   */\n      mstore\n        /* \"#utility.yul\":1393:1397   */\n      0x41\n        /* \"#utility.yul\":1390:1391   */\n      0x04\n        /* \"#utility.yul\":1383:1398   */\n      mstore\n        /* \"#utility.yul\":1417:1421   */\n      0x24\n        /* \"#utility.yul\":1414:1415   */\n      0x00\n        /* \"#utility.yul\":1407:1422   */\n      revert\n        /* \"#utility.yul\":1433:2622   */\n    tag_44:\n        /* \"#utility.yul\":1526:1532   */\n      0x00\n        /* \"#utility.yul\":1534:1540   */\n      dup1\n        /* \"#utility.yul\":1587:1589   */\n      0x40\n        /* \"#utility.yul\":1575:1584   */\n      dup4\n        /* \"#utility.yul\":1566:1573   */\n      dup6\n        /* \"#utility.yul\":1562:1585   */\n      sub\n        /* \"#utility.yul\":1558:1590   */\n      slt\n        /* \"#utility.yul\":1555:1607   */\n      iszero\n      tag_208\n      jumpi\n        /* \"#utility.yul\":1603:1604   */\n      0x00\n        /* \"#utility.yul\":1600:1601   */\n      dup1\n        /* \"#utility.yul\":1593:1605   */\n      revert\n        /* \"#utility.yul\":1555:1607   */\n    tag_208:\n        /* \"#utility.yul\":1626:1655   */\n      tag_209\n        /* \"#utility.yul\":1645:1654   */\n      dup4\n        /* \"#utility.yul\":1626:1655   */\n      tag_192\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":1616:1655   */\n      swap2\n      pop\n        /* \"#utility.yul\":1674:1676   */\n      0x20\n        /* \"#utility.yul\":1727:1729   */\n      dup1\n        /* \"#utility.yul\":1716:1725   */\n      dup5\n        /* \"#utility.yul\":1712:1730   */\n      add\n        /* \"#utility.yul\":1699:1731   */\n      calldataload\n        /* \"#utility.yul\":1750:1768   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1791:1793   */\n      dup1\n        /* \"#utility.yul\":1783:1789   */\n      dup3\n        /* \"#utility.yul\":1780:1794   */\n      gt\n        /* \"#utility.yul\":1777:1811   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":1807:1808   */\n      0x00\n        /* \"#utility.yul\":1804:1805   */\n      dup1\n        /* \"#utility.yul\":1797:1809   */\n      revert\n        /* \"#utility.yul\":1777:1811   */\n    tag_210:\n        /* \"#utility.yul\":1845:1851   */\n      dup2\n        /* \"#utility.yul\":1834:1843   */\n      dup7\n        /* \"#utility.yul\":1830:1852   */\n      add\n        /* \"#utility.yul\":1820:1852   */\n      swap2\n      pop\n        /* \"#utility.yul\":1890:1897   */\n      dup7\n        /* \"#utility.yul\":1883:1887   */\n      0x1f\n        /* \"#utility.yul\":1879:1881   */\n      dup4\n        /* \"#utility.yul\":1875:1888   */\n      add\n        /* \"#utility.yul\":1871:1898   */\n      slt\n        /* \"#utility.yul\":1861:1916   */\n      tag_211\n      jumpi\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1909:1910   */\n      dup1\n        /* \"#utility.yul\":1902:1914   */\n      revert\n        /* \"#utility.yul\":1861:1916   */\n    tag_211:\n        /* \"#utility.yul\":1948:1950   */\n      dup2\n        /* \"#utility.yul\":1935:1951   */\n      calldataload\n        /* \"#utility.yul\":1970:1972   */\n      dup2\n        /* \"#utility.yul\":1966:1968   */\n      dup2\n        /* \"#utility.yul\":1963:1973   */\n      gt\n        /* \"#utility.yul\":1960:1996   */\n      iszero\n      tag_213\n      jumpi\n        /* \"#utility.yul\":1976:1994   */\n      tag_213\n      tag_157\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":2022:2024   */\n      dup1\n        /* \"#utility.yul\":2019:2020   */\n      0x05\n        /* \"#utility.yul\":2015:2025   */\n      shl\n        /* \"#utility.yul\":2054:2056   */\n      0x40\n        /* \"#utility.yul\":2048:2057   */\n      mload\n        /* \"#utility.yul\":2117:2119   */\n      0x1f\n        /* \"#utility.yul\":2113:2120   */\n      not\n        /* \"#utility.yul\":2108:2110   */\n      0x3f\n        /* \"#utility.yul\":2104:2106   */\n      dup4\n        /* \"#utility.yul\":2100:2111   */\n      add\n        /* \"#utility.yul\":2096:2121   */\n      and\n        /* \"#utility.yul\":2088:2094   */\n      dup2\n        /* \"#utility.yul\":2084:2122   */\n      add\n        /* \"#utility.yul\":2172:2178   */\n      dup2\n        /* \"#utility.yul\":2160:2170   */\n      dup2\n        /* \"#utility.yul\":2157:2179   */\n      lt\n        /* \"#utility.yul\":2152:2154   */\n      dup6\n        /* \"#utility.yul\":2140:2150   */\n      dup3\n        /* \"#utility.yul\":2137:2155   */\n      gt\n        /* \"#utility.yul\":2134:2180   */\n      or\n        /* \"#utility.yul\":2131:2203   */\n      iszero\n      tag_215\n      jumpi\n        /* \"#utility.yul\":2183:2201   */\n      tag_215\n      tag_157\n      jump\t// in\n    tag_215:\n        /* \"#utility.yul\":2219:2221   */\n      0x40\n        /* \"#utility.yul\":2212:2234   */\n      mstore\n        /* \"#utility.yul\":2269:2287   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":2303:2318   */\n      dup5\n      dup3\n      add\n      swap3\n      pop\n        /* \"#utility.yul\":2345:2356   */\n      dup4\n      dup2\n      add\n        /* \"#utility.yul\":2341:2361   */\n      dup6\n      add\n      swap2\n        /* \"#utility.yul\":2373:2392   */\n      dup10\n      dup4\n      gt\n        /* \"#utility.yul\":2370:2409   */\n      iszero\n      tag_216\n      jumpi\n        /* \"#utility.yul\":2405:2406   */\n      0x00\n        /* \"#utility.yul\":2402:2403   */\n      dup1\n        /* \"#utility.yul\":2395:2407   */\n      revert\n        /* \"#utility.yul\":2370:2409   */\n    tag_216:\n        /* \"#utility.yul\":2429:2440   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":2449:2591   */\n    tag_217:\n        /* \"#utility.yul\":2465:2471   */\n      dup3\n        /* \"#utility.yul\":2460:2463   */\n      dup6\n        /* \"#utility.yul\":2457:2472   */\n      lt\n        /* \"#utility.yul\":2449:2591   */\n      iszero\n      tag_219\n      jumpi\n        /* \"#utility.yul\":2531:2548   */\n      dup5\n      calldataload\n        /* \"#utility.yul\":2519:2549   */\n      dup5\n      mstore\n        /* \"#utility.yul\":2482:2494   */\n      swap4\n      dup6\n      add\n      swap4\n        /* \"#utility.yul\":2569:2581   */\n      swap3\n      dup6\n      add\n      swap3\n        /* \"#utility.yul\":2449:2591   */\n      jump(tag_217)\n    tag_219:\n        /* \"#utility.yul\":2610:2616   */\n      dup1\n        /* \"#utility.yul\":2600:2616   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1433:2622   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2627:2813   */\n    tag_68:\n        /* \"#utility.yul\":2686:2692   */\n      0x00\n        /* \"#utility.yul\":2739:2741   */\n      0x20\n        /* \"#utility.yul\":2727:2736   */\n      dup3\n        /* \"#utility.yul\":2718:2725   */\n      dup5\n        /* \"#utility.yul\":2714:2737   */\n      sub\n        /* \"#utility.yul\":2710:2742   */\n      slt\n        /* \"#utility.yul\":2707:2759   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":2755:2756   */\n      0x00\n        /* \"#utility.yul\":2752:2753   */\n      dup1\n        /* \"#utility.yul\":2745:2757   */\n      revert\n        /* \"#utility.yul\":2707:2759   */\n    tag_221:\n        /* \"#utility.yul\":2778:2807   */\n      tag_196\n        /* \"#utility.yul\":2797:2806   */\n      dup3\n        /* \"#utility.yul\":2778:2807   */\n      tag_192\n      jump\t// in\n        /* \"#utility.yul\":3000:3632   */\n    tag_87:\n        /* \"#utility.yul\":3171:3173   */\n      0x20\n        /* \"#utility.yul\":3223:3244   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":3293:3306   */\n      dup3\n      mload\n        /* \"#utility.yul\":3196:3214   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":3315:3337   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":3142:3146   */\n      0x00\n      swap2\n        /* \"#utility.yul\":3171:3173   */\n      swap1\n        /* \"#utility.yul\":3394:3409   */\n      dup5\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":3368:3370   */\n      0x40\n        /* \"#utility.yul\":3353:3371   */\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":3142:3146   */\n      dup5\n        /* \"#utility.yul\":3437:3606   */\n    tag_225:\n        /* \"#utility.yul\":3451:3457   */\n      dup2\n        /* \"#utility.yul\":3448:3449   */\n      dup2\n        /* \"#utility.yul\":3445:3458   */\n      lt\n        /* \"#utility.yul\":3437:3606   */\n      iszero\n      tag_227\n      jumpi\n        /* \"#utility.yul\":3512:3525   */\n      dup4\n      mload\n        /* \"#utility.yul\":3500:3526   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3581:3596   */\n      swap3\n      dup5\n      add\n      swap3\n        /* \"#utility.yul\":3546:3558   */\n      swap2\n      dup5\n      add\n      swap2\n        /* \"#utility.yul\":3473:3474   */\n      0x01\n        /* \"#utility.yul\":3466:3475   */\n      add\n        /* \"#utility.yul\":3437:3606   */\n      jump(tag_225)\n    tag_227:\n      pop\n        /* \"#utility.yul\":3623:3626   */\n      swap1\n      swap7\n        /* \"#utility.yul\":3000:3632   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3637:3764   */\n    tag_115:\n        /* \"#utility.yul\":3698:3708   */\n      0x4e487b71\n        /* \"#utility.yul\":3693:3696   */\n      0xe0\n        /* \"#utility.yul\":3689:3709   */\n      shl\n        /* \"#utility.yul\":3686:3687   */\n      0x00\n        /* \"#utility.yul\":3679:3710   */\n      mstore\n        /* \"#utility.yul\":3729:3733   */\n      0x32\n        /* \"#utility.yul\":3726:3727   */\n      0x04\n        /* \"#utility.yul\":3719:3734   */\n      mstore\n        /* \"#utility.yul\":3753:3757   */\n      0x24\n        /* \"#utility.yul\":3750:3751   */\n      0x00\n        /* \"#utility.yul\":3743:3758   */\n      revert\n        /* \"#utility.yul\":3769:4001   */\n    tag_117:\n        /* \"#utility.yul\":3808:3811   */\n      0x00\n        /* \"#utility.yul\":3829:3846   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":3826:3966   */\n      tag_230\n      jumpi\n        /* \"#utility.yul\":3888:3898   */\n      0x4e487b71\n        /* \"#utility.yul\":3883:3886   */\n      0xe0\n        /* \"#utility.yul\":3879:3899   */\n      shl\n        /* \"#utility.yul\":3876:3877   */\n      0x00\n        /* \"#utility.yul\":3869:3900   */\n      mstore\n        /* \"#utility.yul\":3923:3927   */\n      0x11\n        /* \"#utility.yul\":3920:3921   */\n      0x04\n        /* \"#utility.yul\":3913:3928   */\n      mstore\n        /* \"#utility.yul\":3951:3955   */\n      0x24\n        /* \"#utility.yul\":3948:3949   */\n      0x00\n        /* \"#utility.yul\":3941:3956   */\n      revert\n        /* \"#utility.yul\":3826:3966   */\n    tag_230:\n      pop\n        /* \"#utility.yul\":3993:3994   */\n      0x01\n        /* \"#utility.yul\":3982:3995   */\n      add\n      swap1\n        /* \"#utility.yul\":3769:4001   */\n      jump\t// out\n\n    auxdata: 0xa264697066735822122082139c2b2b562ea8c4f51329d6aab03634e445b72a0ae15dc2fc0d53bade4b8c64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_486": {
									"entryPoint": null,
									"id": 486,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_grantRole_257": {
									"entryPoint": 34,
									"id": 257,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_391": {
									"entryPoint": null,
									"id": 391,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_81": {
									"entryPoint": null,
									"id": 81,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061001c600033610022565b506100ce565b6000828152602081815260408083206001600160a01b038516845290915281205460ff166100c4576000838152602081815260408083206001600160a01b03861684529091529020805460ff1916600117905561007c3390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45060016100c8565b5060005b92915050565b610a47806100dd6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806391d14854116100a2578063bfe42a3711610071578063bfe42a3714610246578063c601f7af1461026d578063d547741f14610294578063ebdf690f146102a7578063f2bcac3d146102ce57600080fd5b806391d14854146101f1578063a02d72fb14610204578063a217fddf1461022b578063aca5a8a71461023357600080fd5b80634fe9d1f5116100de5780634fe9d1f51461019157806368ca78f9146101a457806375b238fc146101b757806391b9f9d8146101de57600080fd5b806301ffc9a714610110578063248a9ca3146101385780632f2ff15d1461016957806336568abe1461017e575b600080fd5b61012361011e3660046107fc565b6102e3565b60405190151581526020015b60405180910390f35b61015b61014636600461082d565b60009081526020819052604090206001015490565b60405190815260200161012f565b61017c610177366004610862565b61031a565b005b61017c61018c366004610862565b610345565b61017c61019f3660046108a4565b61037d565b6101236101b23660046108a4565b6103c9565b61015b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b61017c6101ec3660046108a4565b610424565b6101236101ff366004610862565b610470565b61015b7f58223cdfb69946630d837d40b5c366a584f0217ada7fddd8318f2e08603cfa2281565b61015b600081565b61015b610241366004610975565b610499565b61015b7f7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e81565b61015b7f482648e7878e9fa54c0a2f67ffd22d00ebc37cf7a03e060e428d2ab0cd6735cc81565b61017c6102a2366004610862565b610503565b61015b7fede9dcdb0ce99dc7cec9c7be9246ad08b37853683ad91569c187b647ddf5e21c81565b6102d6610528565b60405161012f9190610990565b60006001600160e01b03198216637965db0b60e01b148061031457506301ffc9a760e01b6001600160e01b03198316145b92915050565b600082815260208190526040902060010154610335816106b1565b61033f83836106be565b50505050565b6001600160a01b038116331461036e5760405163334bd91960e11b815260040160405180910390fd5b6103788282610750565b505050565b6000610388816106b1565b60005b825181101561033f576103b78382815181106103a9576103a96109d4565b602002602001015185610503565b806103c1816109ea565b91505061038b565b6000805b825181101561041a576103f98382815181106103eb576103eb6109d4565b602002602001015185610470565b15610408576001915050610314565b80610412816109ea565b9150506103cd565b5060009392505050565b600061042f816106b1565b60005b825181101561033f5761045e838281518110610450576104506109d4565b60200260200101518561031a565b80610468816109ea565b915050610432565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6000806104a4610528565b90506000805b82518110156104fb576104d68382815181106104c8576104c86109d4565b602002602001015186610470565b156104e957816104e5816109ea565b9250505b806104f3816109ea565b9150506104aa565b509392505050565b60008281526020819052604090206001015461051e816106b1565b61033f8383610750565b60408051600680825260e082019092526060916020820160c0803683370190505090506000801b81600081518110610562576105626109d4565b6020026020010181815250507fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775816001815181106105a2576105a26109d4565b6020026020010181815250507f482648e7878e9fa54c0a2f67ffd22d00ebc37cf7a03e060e428d2ab0cd6735cc816002815181106105e2576105e26109d4565b6020026020010181815250507fede9dcdb0ce99dc7cec9c7be9246ad08b37853683ad91569c187b647ddf5e21c81600381518110610622576106226109d4565b6020026020010181815250507f58223cdfb69946630d837d40b5c366a584f0217ada7fddd8318f2e08603cfa2281600481518110610662576106626109d4565b6020026020010181815250507f7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e816005815181106106a2576106a26109d4565b60200260200101818152505090565b6106bb81336107bb565b50565b60006106ca8383610470565b610748576000838152602081815260408083206001600160a01b03861684529091529020805460ff191660011790556107003390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4506001610314565b506000610314565b600061075c8383610470565b15610748576000838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4506001610314565b6107c58282610470565b6107f85760405163e2517d3f60e01b81526001600160a01b03821660048201526024810183905260440160405180910390fd5b5050565b60006020828403121561080e57600080fd5b81356001600160e01b03198116811461082657600080fd5b9392505050565b60006020828403121561083f57600080fd5b5035919050565b80356001600160a01b038116811461085d57600080fd5b919050565b6000806040838503121561087557600080fd5b8235915061088560208401610846565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156108b757600080fd5b6108c083610846565b915060208084013567ffffffffffffffff808211156108de57600080fd5b818601915086601f8301126108f257600080fd5b8135818111156109045761090461088e565b8060051b604051601f19603f830116810181811085821117156109295761092961088e565b60405291825284820192508381018501918983111561094757600080fd5b938501935b828510156109655784358452938501939285019261094c565b8096505050505050509250929050565b60006020828403121561098757600080fd5b61082682610846565b6020808252825182820181905260009190848201906040850190845b818110156109c8578351835292840192918401916001016109ac565b50909695505050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201610a0a57634e487b7160e01b600052601160045260246000fd5b506001019056fea264697066735822122082139c2b2b562ea8c4f51329d6aab03634e445b72a0ae15dc2fc0d53bade4b8c64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C PUSH1 0x0 CALLER PUSH2 0x22 JUMP JUMPDEST POP PUSH2 0xCE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xC4 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x7C CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0xC8 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA47 DUP1 PUSH2 0xDD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xBFE42A37 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xBFE42A37 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0xC601F7AF EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0xEBDF690F EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xF2BCAC3D EQ PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0xA02D72FB EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xACA5A8A7 EQ PUSH2 0x233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4FE9D1F5 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x4FE9D1F5 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x68CA78F9 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x91B9F9D8 EQ PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x17E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0x7FC JUMP JUMPDEST PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x146 CALLDATASIZE PUSH1 0x4 PUSH2 0x82D JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12F JUMP JUMPDEST PUSH2 0x17C PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0x862 JUMP JUMPDEST PUSH2 0x31A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17C PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0x862 JUMP JUMPDEST PUSH2 0x345 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x19F CALLDATASIZE PUSH1 0x4 PUSH2 0x8A4 JUMP JUMPDEST PUSH2 0x37D JUMP JUMPDEST PUSH2 0x123 PUSH2 0x1B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x8A4 JUMP JUMPDEST PUSH2 0x3C9 JUMP JUMPDEST PUSH2 0x15B PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x1EC CALLDATASIZE PUSH1 0x4 PUSH2 0x8A4 JUMP JUMPDEST PUSH2 0x424 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0x862 JUMP JUMPDEST PUSH2 0x470 JUMP JUMPDEST PUSH2 0x15B PUSH32 0x58223CDFB69946630D837D40B5C366A584F0217ADA7FDDD8318F2E08603CFA22 DUP2 JUMP JUMPDEST PUSH2 0x15B PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x241 CALLDATASIZE PUSH1 0x4 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x499 JUMP JUMPDEST PUSH2 0x15B PUSH32 0x7B8BB8356A3F32F5C111FF23F050D97F08988E0883529EA7BFF3B918887A6E0E DUP2 JUMP JUMPDEST PUSH2 0x15B PUSH32 0x482648E7878E9FA54C0A2F67FFD22D00EBC37CF7A03E060E428D2AB0CD6735CC DUP2 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x2A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x862 JUMP JUMPDEST PUSH2 0x503 JUMP JUMPDEST PUSH2 0x15B PUSH32 0xEDE9DCDB0CE99DC7CEC9C7BE9246AD08B37853683AD91569C187B647DDF5E21C DUP2 JUMP JUMPDEST PUSH2 0x2D6 PUSH2 0x528 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x990 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x314 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x335 DUP2 PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x33F DUP4 DUP4 PUSH2 0x6BE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x36E JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x378 DUP3 DUP3 PUSH2 0x750 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x388 DUP2 PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x33F JUMPI PUSH2 0x3B7 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3A9 JUMPI PUSH2 0x3A9 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH2 0x503 JUMP JUMPDEST DUP1 PUSH2 0x3C1 DUP2 PUSH2 0x9EA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x38B JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x41A JUMPI PUSH2 0x3F9 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3EB JUMPI PUSH2 0x3EB PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH2 0x470 JUMP JUMPDEST ISZERO PUSH2 0x408 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x314 JUMP JUMPDEST DUP1 PUSH2 0x412 DUP2 PUSH2 0x9EA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3CD JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42F DUP2 PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x33F JUMPI PUSH2 0x45E DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x450 JUMPI PUSH2 0x450 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH2 0x31A JUMP JUMPDEST DUP1 PUSH2 0x468 DUP2 PUSH2 0x9EA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x432 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4A4 PUSH2 0x528 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x4FB JUMPI PUSH2 0x4D6 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4C8 JUMPI PUSH2 0x4C8 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 PUSH2 0x470 JUMP JUMPDEST ISZERO PUSH2 0x4E9 JUMPI DUP2 PUSH2 0x4E5 DUP2 PUSH2 0x9EA JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x4F3 DUP2 PUSH2 0x9EA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4AA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x51E DUP2 PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x33F DUP4 DUP4 PUSH2 0x750 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x6 DUP1 DUP3 MSTORE PUSH1 0xE0 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0xC0 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x562 JUMPI PUSH2 0x562 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x5A2 JUMPI PUSH2 0x5A2 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH32 0x482648E7878E9FA54C0A2F67FFD22D00EBC37CF7A03E060E428D2AB0CD6735CC DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x5E2 JUMPI PUSH2 0x5E2 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH32 0xEDE9DCDB0CE99DC7CEC9C7BE9246AD08B37853683AD91569C187B647DDF5E21C DUP2 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x622 JUMPI PUSH2 0x622 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH32 0x58223CDFB69946630D837D40B5C366A584F0217ADA7FDDD8318F2E08603CFA22 DUP2 PUSH1 0x4 DUP2 MLOAD DUP2 LT PUSH2 0x662 JUMPI PUSH2 0x662 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH32 0x7B8BB8356A3F32F5C111FF23F050D97F08988E0883529EA7BFF3B918887A6E0E DUP2 PUSH1 0x5 DUP2 MLOAD DUP2 LT PUSH2 0x6A2 JUMPI PUSH2 0x6A2 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP SWAP1 JUMP JUMPDEST PUSH2 0x6BB DUP2 CALLER PUSH2 0x7BB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6CA DUP4 DUP4 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x748 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x700 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x314 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x314 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x75C DUP4 DUP4 PUSH2 0x470 JUMP JUMPDEST ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x314 JUMP JUMPDEST PUSH2 0x7C5 DUP3 DUP3 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x7F8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x80E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x826 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x83F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x85D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x875 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x885 PUSH1 0x20 DUP5 ADD PUSH2 0x846 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8C0 DUP4 PUSH2 0x846 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP1 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x8DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x904 JUMPI PUSH2 0x904 PUSH2 0x88E JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x929 JUMPI PUSH2 0x929 PUSH2 0x88E JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP10 DUP4 GT ISZERO PUSH2 0x947 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x965 JUMPI DUP5 CALLDATALOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x94C JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x987 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x826 DUP3 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9C8 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x9AC JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xA0A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 SGT SWAP13 0x2B 0x2B JUMP 0x2E 0xA8 0xC4 CREATE2 SGT 0x29 0xD6 0xAA 0xB0 CALLDATASIZE CALLVALUE 0xE4 GASLIMIT 0xB7 0x2A EXP 0xE1 0x5D 0xC2 0xFC 0xD MSTORE8 0xBA 0xDE 0x4B DUP13 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "227:2862:5:-:0;;;719:74;;;;;;;;;-1:-1:-1;744:42:5;2241:4:0;775:10:5;744;:42::i;:::-;;227:2862;;6155:316:0;6232:4;2930:12;;;;;;;;;;;-1:-1:-1;;;;;2930:29:0;;;;;;;;;;;;6248:217;;6291:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6291:29:0;;;;;;;;;:36;;-1:-1:-1;;6291:36:0;6323:4;6291:36;;;6373:12;735:10:2;;656:96;6373:12:0;-1:-1:-1;;;;;6346:40:0;6364:7;-1:-1:-1;;;;;6346:40:0;6358:4;6346:40;;;;;;;;;;-1:-1:-1;6407:4:0;6400:11;;6248:217;-1:-1:-1;6449:5:0;6248:217;6155:316;;;;:::o;227:2862:5:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ADMIN_ROLE_456": {
									"entryPoint": null,
									"id": 456,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@AI_ORACLE_ROLE_461": {
									"entryPoint": null,
									"id": 461,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_30": {
									"entryPoint": null,
									"id": 30,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DISPUTE_RESOLVER_ROLE_476": {
									"entryPoint": null,
									"id": 476,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MILESTONE_APPROVER_ROLE_471": {
									"entryPoint": null,
									"id": 471,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TREASURY_MANAGER_ROLE_466": {
									"entryPoint": null,
									"id": 466,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_115": {
									"entryPoint": 1979,
									"id": 115,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_94": {
									"entryPoint": 1713,
									"id": 94,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_257": {
									"entryPoint": 1726,
									"id": 257,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_391": {
									"entryPoint": null,
									"id": 391,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_295": {
									"entryPoint": 1872,
									"id": 295,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAllRoles_690": {
									"entryPoint": 1320,
									"id": 690,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRoleAdmin_129": {
									"entryPoint": null,
									"id": 129,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRoleCount_636": {
									"entryPoint": 1177,
									"id": 636,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantMultipleRoles_519": {
									"entryPoint": 1060,
									"id": 519,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@grantRole_148": {
									"entryPoint": 794,
									"id": 148,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasAnyRole_589": {
									"entryPoint": 969,
									"id": 589,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@hasRole_81": {
									"entryPoint": 1136,
									"id": 81,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@renounceRole_190": {
									"entryPoint": 837,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeMultipleRoles_552": {
									"entryPoint": 893,
									"id": 552,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_167": {
									"entryPoint": 1283,
									"id": 167,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_432": {
									"entryPoint": null,
									"id": 432,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_63": {
									"entryPoint": 739,
									"id": 63,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 2421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_array$_t_bytes32_$dyn_memory_ptr": {
									"entryPoint": 2212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 2093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 2146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 2044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 2448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 2538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x32": {
									"entryPoint": 2516,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2190,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4282:6",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "83:217:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "129:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "138:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "141:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "125:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:32:6"
															},
															"nodeType": "YulIf",
															"src": "93:52:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "167:23:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "158:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "254:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "263:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "266:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "234:3:6",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "239:10:6",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "230:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "230:20:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "219:32:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "209:43:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "202:51:6"
															},
															"nodeType": "YulIf",
															"src": "199:71:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "279:15:6",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "289:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "49:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "60:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "72:6:6",
														"type": ""
													}
												],
												"src": "14:286:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "400:92:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "410:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "433:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "418:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "445:41:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "445:41:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "369:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "380:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "391:4:6",
														"type": ""
													}
												],
												"src": "305:187:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "567:110:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "613:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "622:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "625:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "615:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "615:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "615:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "588:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "597:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "584:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "584:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "609:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "580:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "580:32:6"
															},
															"nodeType": "YulIf",
															"src": "577:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "638:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "661:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "648:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "533:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "544:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "556:6:6",
														"type": ""
													}
												],
												"src": "497:180:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "783:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "793:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "805:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "816:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "801:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "801:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "793:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "835:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "846:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "828:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "828:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "828:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "752:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "763:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "774:4:6",
														"type": ""
													}
												],
												"src": "682:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "913:124:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "923:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "945:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "932:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "932:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "923:5:6"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1015:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1024:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1027:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1017:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1017:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1017:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "974:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "985:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1000:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1005:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "996:3:6"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "996:11:6"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1009:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "992:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "992:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "981:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "981:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "971:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "971:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "964:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "964:50:6"
															},
															"nodeType": "YulIf",
															"src": "961:70:6"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "892:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "903:5:6",
														"type": ""
													}
												],
												"src": "864:173:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1129:167:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1175:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1184:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1187:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1177:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1177:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1177:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1150:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1159:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1146:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1146:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1171:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1142:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1142:32:6"
															},
															"nodeType": "YulIf",
															"src": "1139:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1200:33:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1223:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1210:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1210:23:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1200:6:6"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1242:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1275:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1286:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1271:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1271:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1252:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1252:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1242:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1087:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1098:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1110:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1118:6:6",
														"type": ""
													}
												],
												"src": "1042:254:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1333:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1350:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1357:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1362:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1353:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1353:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1343:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1343:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1343:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1390:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1393:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1383:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1383:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1383:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1414:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1417:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1407:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1407:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1407:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "1301:127:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1545:1077:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1591:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1600:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1603:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1593:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1593:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1593:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1566:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1575:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1562:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1562:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1587:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1558:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1558:32:6"
															},
															"nodeType": "YulIf",
															"src": "1555:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1616:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1645:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1626:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1626:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1616:6:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1664:12:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1674:2:6",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1668:2:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1685:46:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1716:9:6"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1727:2:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1712:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1712:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1699:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1699:32:6"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1689:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1740:28:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1750:18:6",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "1744:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1795:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1804:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1807:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1797:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1797:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1797:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1783:6:6"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1791:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1780:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1780:14:6"
															},
															"nodeType": "YulIf",
															"src": "1777:34:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1820:32:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1834:9:6"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1845:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1830:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1830:22:6"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "1824:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1900:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1909:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1902:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1902:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1902:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "1879:2:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1883:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1875:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1875:13:6"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1890:7:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1871:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1871:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1864:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1864:35:6"
															},
															"nodeType": "YulIf",
															"src": "1861:55:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1925:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "1948:2:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1935:12:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1935:16:6"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "1929:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1974:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1976:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1976:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1976:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "1966:2:6"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "1970:2:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1963:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "1963:10:6"
															},
															"nodeType": "YulIf",
															"src": "1960:36:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2005:20:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2019:1:6",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "2022:2:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "2015:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2015:10:6"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "2009:2:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2034:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2054:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2048:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2048:9:6"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "2038:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2066:56:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2088:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_5",
																						"nodeType": "YulIdentifier",
																						"src": "2104:2:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2108:2:6",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2100:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2100:11:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2117:2:6",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2113:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2113:7:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2096:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2096:25:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2084:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2084:38:6"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2070:10:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2181:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2183:16:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2183:18:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2183:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2140:10:6"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "2152:2:6"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2137:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2137:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2160:10:6"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2172:6:6"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2157:2:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2157:22:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2134:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2134:46:6"
															},
															"nodeType": "YulIf",
															"src": "2131:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2219:2:6",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2223:10:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2212:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2212:22:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2212:22:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2243:17:6",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "2254:6:6"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2247:3:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2276:6:6"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "2284:2:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2269:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2269:18:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2269:18:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2296:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2307:6:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2315:2:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2303:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2303:15:6"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "2296:3:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2327:34:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "2349:2:6"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "2353:2:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2345:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2345:11:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2358:2:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2341:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2341:20:6"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "2331:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2393:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2402:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2405:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2395:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2395:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2395:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2376:6:6"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2384:7:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2373:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2373:19:6"
															},
															"nodeType": "YulIf",
															"src": "2370:39:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2418:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2433:2:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2437:2:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2429:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2429:11:6"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "2422:3:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2505:86:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2526:3:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "2544:3:6"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "2531:12:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2531:17:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2519:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2519:30:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2519:30:6"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "2562:19:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "2573:3:6"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2578:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2569:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2569:12:6"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2562:3:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2460:3:6"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2465:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "2457:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2457:15:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "2473:23:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "2475:19:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "2486:3:6"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "2491:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2482:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2482:12:6"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2475:3:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "2453:3:6",
																"statements": []
															},
															"src": "2449:142:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2600:16:6",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "2610:6:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2600:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_bytes32_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1503:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1514:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1526:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1534:6:6",
														"type": ""
													}
												],
												"src": "1433:1189:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2697:116:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2743:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2752:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2755:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2745:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2745:12:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2745:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2718:7:6"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2727:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2714:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2714:23:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2739:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2710:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2710:32:6"
															},
															"nodeType": "YulIf",
															"src": "2707:52:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2768:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2797:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "2778:18:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2778:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2768:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2663:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2674:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2686:6:6",
														"type": ""
													}
												],
												"src": "2627:186:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2919:76:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2929:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2941:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2952:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2937:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2937:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2929:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2971:9:6"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2982:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2964:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "2964:25:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2964:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2888:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2899:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2910:4:6",
														"type": ""
													}
												],
												"src": "2818:177:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3151:481:6",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3161:12:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3171:2:6",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3165:2:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3182:32:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3200:9:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3211:2:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3196:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3196:18:6"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "3186:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3230:9:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3241:2:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3223:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3223:21:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3223:21:6"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3253:17:6",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "3264:6:6"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "3257:3:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3279:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3293:5:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3293:13:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3283:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "3322:6:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3330:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3315:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3315:22:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3315:22:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3346:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3357:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3368:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3353:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3353:18:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3346:3:6"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3380:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3398:6:6"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3406:2:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3394:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3394:15:6"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "3384:6:6",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3418:10:6",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3427:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "3422:1:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3486:120:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3507:3:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "3518:6:6"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "3512:5:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3512:13:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3500:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3500:26:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3500:26:6"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3539:19:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "3550:3:6"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3555:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3546:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3546:12:6"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3539:3:6"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3571:25:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "3585:6:6"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "3593:2:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3581:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3581:15:6"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3571:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "3448:1:6"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3451:6:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3445:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3445:13:6"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3459:18:6",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3461:14:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "3470:1:6"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3473:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3466:3:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3466:9:6"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "3461:1:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3441:3:6",
																"statements": []
															},
															"src": "3437:169:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3615:11:6",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "3623:3:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3615:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3120:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3131:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3142:4:6",
														"type": ""
													}
												],
												"src": "3000:632:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3669:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3686:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3693:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3698:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3689:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3689:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:31:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3726:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3729:4:6",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3719:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3719:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3719:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3750:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3753:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3743:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3743:15:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3743:15:6"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "3637:127:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3816:185:6",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3855:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3876:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3883:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3888:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "3879:3:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3879:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3869:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3869:31:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3869:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3920:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3923:4:6",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3913:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3913:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3913:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3948:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3951:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3941:6:6"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3941:15:6"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3941:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3832:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3843:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3839:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3839:6:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "3829:2:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3829:17:6"
															},
															"nodeType": "YulIf",
															"src": "3826:140:6"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3975:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3986:5:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3993:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3982:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "3982:13:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "3975:3:6"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3798:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "3808:3:6",
														"type": ""
													}
												],
												"src": "3769:232:6"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4135:145:6",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4145:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4157:9:6"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4168:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4153:3:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4153:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4145:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4187:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4202:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4218:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4223:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4214:3:6"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4214:11:6"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4227:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4210:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4210:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4198:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4198:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4180:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4180:51:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4180:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4251:9:6"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4262:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4247:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4247:18:6"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4267:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4240:6:6"
																},
																"nodeType": "YulFunctionCall",
																"src": "4240:34:6"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4240:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4096:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4107:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4115:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4126:4:6",
														"type": ""
													}
												],
												"src": "4006:274:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_array$_t_bytes32_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let _1 := 32\n        let offset := calldataload(add(headStart, _1))\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(_5, 63), not(31)))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        let dst := memPtr\n        mstore(memPtr, _4)\n        dst := add(memPtr, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _1)\n        }\n        value1 := memPtr\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let srcPtr := add(value0, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        tail := pos\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061010b5760003560e01c806391d14854116100a2578063bfe42a3711610071578063bfe42a3714610246578063c601f7af1461026d578063d547741f14610294578063ebdf690f146102a7578063f2bcac3d146102ce57600080fd5b806391d14854146101f1578063a02d72fb14610204578063a217fddf1461022b578063aca5a8a71461023357600080fd5b80634fe9d1f5116100de5780634fe9d1f51461019157806368ca78f9146101a457806375b238fc146101b757806391b9f9d8146101de57600080fd5b806301ffc9a714610110578063248a9ca3146101385780632f2ff15d1461016957806336568abe1461017e575b600080fd5b61012361011e3660046107fc565b6102e3565b60405190151581526020015b60405180910390f35b61015b61014636600461082d565b60009081526020819052604090206001015490565b60405190815260200161012f565b61017c610177366004610862565b61031a565b005b61017c61018c366004610862565b610345565b61017c61019f3660046108a4565b61037d565b6101236101b23660046108a4565b6103c9565b61015b7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b61017c6101ec3660046108a4565b610424565b6101236101ff366004610862565b610470565b61015b7f58223cdfb69946630d837d40b5c366a584f0217ada7fddd8318f2e08603cfa2281565b61015b600081565b61015b610241366004610975565b610499565b61015b7f7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e81565b61015b7f482648e7878e9fa54c0a2f67ffd22d00ebc37cf7a03e060e428d2ab0cd6735cc81565b61017c6102a2366004610862565b610503565b61015b7fede9dcdb0ce99dc7cec9c7be9246ad08b37853683ad91569c187b647ddf5e21c81565b6102d6610528565b60405161012f9190610990565b60006001600160e01b03198216637965db0b60e01b148061031457506301ffc9a760e01b6001600160e01b03198316145b92915050565b600082815260208190526040902060010154610335816106b1565b61033f83836106be565b50505050565b6001600160a01b038116331461036e5760405163334bd91960e11b815260040160405180910390fd5b6103788282610750565b505050565b6000610388816106b1565b60005b825181101561033f576103b78382815181106103a9576103a96109d4565b602002602001015185610503565b806103c1816109ea565b91505061038b565b6000805b825181101561041a576103f98382815181106103eb576103eb6109d4565b602002602001015185610470565b15610408576001915050610314565b80610412816109ea565b9150506103cd565b5060009392505050565b600061042f816106b1565b60005b825181101561033f5761045e838281518110610450576104506109d4565b60200260200101518561031a565b80610468816109ea565b915050610432565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6000806104a4610528565b90506000805b82518110156104fb576104d68382815181106104c8576104c86109d4565b602002602001015186610470565b156104e957816104e5816109ea565b9250505b806104f3816109ea565b9150506104aa565b509392505050565b60008281526020819052604090206001015461051e816106b1565b61033f8383610750565b60408051600680825260e082019092526060916020820160c0803683370190505090506000801b81600081518110610562576105626109d4565b6020026020010181815250507fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775816001815181106105a2576105a26109d4565b6020026020010181815250507f482648e7878e9fa54c0a2f67ffd22d00ebc37cf7a03e060e428d2ab0cd6735cc816002815181106105e2576105e26109d4565b6020026020010181815250507fede9dcdb0ce99dc7cec9c7be9246ad08b37853683ad91569c187b647ddf5e21c81600381518110610622576106226109d4565b6020026020010181815250507f58223cdfb69946630d837d40b5c366a584f0217ada7fddd8318f2e08603cfa2281600481518110610662576106626109d4565b6020026020010181815250507f7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e816005815181106106a2576106a26109d4565b60200260200101818152505090565b6106bb81336107bb565b50565b60006106ca8383610470565b610748576000838152602081815260408083206001600160a01b03861684529091529020805460ff191660011790556107003390565b6001600160a01b0316826001600160a01b0316847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4506001610314565b506000610314565b600061075c8383610470565b15610748576000838152602081815260408083206001600160a01b0386168085529252808320805460ff1916905551339286917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4506001610314565b6107c58282610470565b6107f85760405163e2517d3f60e01b81526001600160a01b03821660048201526024810183905260440160405180910390fd5b5050565b60006020828403121561080e57600080fd5b81356001600160e01b03198116811461082657600080fd5b9392505050565b60006020828403121561083f57600080fd5b5035919050565b80356001600160a01b038116811461085d57600080fd5b919050565b6000806040838503121561087557600080fd5b8235915061088560208401610846565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156108b757600080fd5b6108c083610846565b915060208084013567ffffffffffffffff808211156108de57600080fd5b818601915086601f8301126108f257600080fd5b8135818111156109045761090461088e565b8060051b604051601f19603f830116810181811085821117156109295761092961088e565b60405291825284820192508381018501918983111561094757600080fd5b938501935b828510156109655784358452938501939285019261094c565b8096505050505050509250929050565b60006020828403121561098757600080fd5b61082682610846565b6020808252825182820181905260009190848201906040850190845b818110156109c8578351835292840192918401916001016109ac565b50909695505050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201610a0a57634e487b7160e01b600052601160045260246000fd5b506001019056fea264697066735822122082139c2b2b562ea8c4f51329d6aab03634e445b72a0ae15dc2fc0d53bade4b8c64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x91D14854 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xBFE42A37 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xBFE42A37 EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0xC601F7AF EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0xEBDF690F EQ PUSH2 0x2A7 JUMPI DUP1 PUSH4 0xF2BCAC3D EQ PUSH2 0x2CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x91D14854 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0xA02D72FB EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xACA5A8A7 EQ PUSH2 0x233 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4FE9D1F5 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x4FE9D1F5 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x68CA78F9 EQ PUSH2 0x1A4 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x91B9F9D8 EQ PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x138 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x169 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x17E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x123 PUSH2 0x11E CALLDATASIZE PUSH1 0x4 PUSH2 0x7FC JUMP JUMPDEST PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x146 CALLDATASIZE PUSH1 0x4 PUSH2 0x82D JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x12F JUMP JUMPDEST PUSH2 0x17C PUSH2 0x177 CALLDATASIZE PUSH1 0x4 PUSH2 0x862 JUMP JUMPDEST PUSH2 0x31A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17C PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0x862 JUMP JUMPDEST PUSH2 0x345 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x19F CALLDATASIZE PUSH1 0x4 PUSH2 0x8A4 JUMP JUMPDEST PUSH2 0x37D JUMP JUMPDEST PUSH2 0x123 PUSH2 0x1B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x8A4 JUMP JUMPDEST PUSH2 0x3C9 JUMP JUMPDEST PUSH2 0x15B PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x1EC CALLDATASIZE PUSH1 0x4 PUSH2 0x8A4 JUMP JUMPDEST PUSH2 0x424 JUMP JUMPDEST PUSH2 0x123 PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0x862 JUMP JUMPDEST PUSH2 0x470 JUMP JUMPDEST PUSH2 0x15B PUSH32 0x58223CDFB69946630D837D40B5C366A584F0217ADA7FDDD8318F2E08603CFA22 DUP2 JUMP JUMPDEST PUSH2 0x15B PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x15B PUSH2 0x241 CALLDATASIZE PUSH1 0x4 PUSH2 0x975 JUMP JUMPDEST PUSH2 0x499 JUMP JUMPDEST PUSH2 0x15B PUSH32 0x7B8BB8356A3F32F5C111FF23F050D97F08988E0883529EA7BFF3B918887A6E0E DUP2 JUMP JUMPDEST PUSH2 0x15B PUSH32 0x482648E7878E9FA54C0A2F67FFD22D00EBC37CF7A03E060E428D2AB0CD6735CC DUP2 JUMP JUMPDEST PUSH2 0x17C PUSH2 0x2A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x862 JUMP JUMPDEST PUSH2 0x503 JUMP JUMPDEST PUSH2 0x15B PUSH32 0xEDE9DCDB0CE99DC7CEC9C7BE9246AD08B37853683AD91569C187B647DDF5E21C DUP2 JUMP JUMPDEST PUSH2 0x2D6 PUSH2 0x528 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x990 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x314 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x335 DUP2 PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x33F DUP4 DUP4 PUSH2 0x6BE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x36E JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x378 DUP3 DUP3 PUSH2 0x750 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x388 DUP2 PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x33F JUMPI PUSH2 0x3B7 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3A9 JUMPI PUSH2 0x3A9 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH2 0x503 JUMP JUMPDEST DUP1 PUSH2 0x3C1 DUP2 PUSH2 0x9EA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x38B JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x41A JUMPI PUSH2 0x3F9 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3EB JUMPI PUSH2 0x3EB PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH2 0x470 JUMP JUMPDEST ISZERO PUSH2 0x408 JUMPI PUSH1 0x1 SWAP2 POP POP PUSH2 0x314 JUMP JUMPDEST DUP1 PUSH2 0x412 DUP2 PUSH2 0x9EA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x3CD JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42F DUP2 PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x33F JUMPI PUSH2 0x45E DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x450 JUMPI PUSH2 0x450 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 PUSH2 0x31A JUMP JUMPDEST DUP1 PUSH2 0x468 DUP2 PUSH2 0x9EA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x432 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x4A4 PUSH2 0x528 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x4FB JUMPI PUSH2 0x4D6 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x4C8 JUMPI PUSH2 0x4C8 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP7 PUSH2 0x470 JUMP JUMPDEST ISZERO PUSH2 0x4E9 JUMPI DUP2 PUSH2 0x4E5 DUP2 PUSH2 0x9EA JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 PUSH2 0x4F3 DUP2 PUSH2 0x9EA JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4AA JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x51E DUP2 PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x33F DUP4 DUP4 PUSH2 0x750 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x6 DUP1 DUP3 MSTORE PUSH1 0xE0 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0xC0 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP PUSH1 0x0 DUP1 SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x562 JUMPI PUSH2 0x562 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x5A2 JUMPI PUSH2 0x5A2 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH32 0x482648E7878E9FA54C0A2F67FFD22D00EBC37CF7A03E060E428D2AB0CD6735CC DUP2 PUSH1 0x2 DUP2 MLOAD DUP2 LT PUSH2 0x5E2 JUMPI PUSH2 0x5E2 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH32 0xEDE9DCDB0CE99DC7CEC9C7BE9246AD08B37853683AD91569C187B647DDF5E21C DUP2 PUSH1 0x3 DUP2 MLOAD DUP2 LT PUSH2 0x622 JUMPI PUSH2 0x622 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH32 0x58223CDFB69946630D837D40B5C366A584F0217ADA7FDDD8318F2E08603CFA22 DUP2 PUSH1 0x4 DUP2 MLOAD DUP2 LT PUSH2 0x662 JUMPI PUSH2 0x662 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP PUSH32 0x7B8BB8356A3F32F5C111FF23F050D97F08988E0883529EA7BFF3B918887A6E0E DUP2 PUSH1 0x5 DUP2 MLOAD DUP2 LT PUSH2 0x6A2 JUMPI PUSH2 0x6A2 PUSH2 0x9D4 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP SWAP1 JUMP JUMPDEST PUSH2 0x6BB DUP2 CALLER PUSH2 0x7BB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6CA DUP4 DUP4 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x748 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x700 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x314 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x314 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x75C DUP4 DUP4 PUSH2 0x470 JUMP JUMPDEST ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP7 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP PUSH1 0x1 PUSH2 0x314 JUMP JUMPDEST PUSH2 0x7C5 DUP3 DUP3 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x7F8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x80E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x826 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x83F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x85D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x875 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x885 PUSH1 0x20 DUP5 ADD PUSH2 0x846 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x8B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8C0 DUP4 PUSH2 0x846 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP1 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x8DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x8F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x904 JUMPI PUSH2 0x904 PUSH2 0x88E JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH1 0x40 MLOAD PUSH1 0x1F NOT PUSH1 0x3F DUP4 ADD AND DUP2 ADD DUP2 DUP2 LT DUP6 DUP3 GT OR ISZERO PUSH2 0x929 JUMPI PUSH2 0x929 PUSH2 0x88E JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 DUP3 MSTORE DUP5 DUP3 ADD SWAP3 POP DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP10 DUP4 GT ISZERO PUSH2 0x947 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 DUP6 ADD SWAP4 JUMPDEST DUP3 DUP6 LT ISZERO PUSH2 0x965 JUMPI DUP5 CALLDATALOAD DUP5 MSTORE SWAP4 DUP6 ADD SWAP4 SWAP3 DUP6 ADD SWAP3 PUSH2 0x94C JUMP JUMPDEST DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x987 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x826 DUP3 PUSH2 0x846 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x9C8 JUMPI DUP4 MLOAD DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x9AC JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xA0A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 SGT SWAP13 0x2B 0x2B JUMP 0x2E 0xA8 0xC4 CREATE2 SGT 0x29 0xD6 0xAA 0xB0 CALLDATASIZE CALLVALUE 0xE4 GASLIMIT 0xB7 0x2A EXP 0xE1 0x5D 0xC2 0xFC 0xD MSTORE8 0xBA 0xDE 0x4B DUP13 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "227:2862:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2541:202:0;;;;;;:::i;:::-;;:::i;:::-;;;470:14:6;;463:22;445:41;;433:2;418:18;2541:202:0;;;;;;;;3786:120;;;;;;:::i;:::-;3851:7;3877:12;;;;;;;;;;:22;;;;3786:120;;;;828:25:6;;;816:2;801:18;3786:120:0;682:177:6;4202:136:0;;;;;;:::i;:::-;;:::i;:::-;;5304:245;;;;;;:::i;:::-;;:::i;1352:221:5:-;;;;;;:::i;:::-;;:::i;1816:271::-;;;;;;:::i;:::-;;:::i;306:60::-;;343:23;306:60;;960:219;;;;;;:::i;:::-;;:::i;2830:136:0:-;;;;;;:::i;:::-;;:::i;534:86:5:-;;584:36;534:86;;2196:49:0;;2241:4;2196:49;;2250:360:5;;;;;;:::i;:::-;;:::i;626:82::-;;674:34;626:82;;372:68;;413:27;372:68;;4618:138:0;;;;;;:::i;:::-;;:::i;446:82:5:-;;494:34;446:82;;2723:364;;;:::i;:::-;;;;;;;:::i;2541:202:0:-;2626:4;-1:-1:-1;;;;;;2649:47:0;;-1:-1:-1;;;2649:47:0;;:87;;-1:-1:-1;;;;;;;;;;829:40:3;;;2700:36:0;2642:94;2541:202;-1:-1:-1;;2541:202:0:o;4202:136::-;3851:7;3877:12;;;;;;;;;;:22;;;2473:16;2484:4;2473:10;:16::i;:::-;4306:25:::1;4317:4;4323:7;4306:10;:25::i;:::-;;4202:136:::0;;;:::o;5304:245::-;-1:-1:-1;;;;;5397:34:0;;735:10:2;5397:34:0;5393:102;;5454:30;;-1:-1:-1;;;5454:30:0;;;;;;;;;;;5393:102;5505:37;5517:4;5523:18;5505:11;:37::i;:::-;;5304:245;;:::o;1352:221:5:-;2241:4:0;2473:16;2241:4;2473:10;:16::i;:::-;1475:9:5::1;1470:97;1494:5;:12;1490:1;:16;1470:97;;;1527:29;1538:5;1544:1;1538:8;;;;;;;;:::i;:::-;;;;;;;1548:7;1527:10;:29::i;:::-;1508:3:::0;::::1;::::0;::::1;:::i;:::-;;;;1470:97;;1816:271:::0;1900:4;;1916:143;1940:5;:12;1936:1;:16;1916:143;;;1977:26;1985:5;1991:1;1985:8;;;;;;;;:::i;:::-;;;;;;;1995:7;1977;:26::i;:::-;1973:76;;;2030:4;2023:11;;;;;1973:76;1954:3;;;;:::i;:::-;;;;1916:143;;;-1:-1:-1;2075:5:5;;1816:271;-1:-1:-1;;;1816:271:5:o;960:219::-;2241:4:0;2473:16;2241:4;2473:10;:16::i;:::-;1082:9:5::1;1077:96;1101:5;:12;1097:1;:16;1077:96;;;1134:28;1144:5;1150:1;1144:8;;;;;;;;:::i;:::-;;;;;;;1154:7;1134:9;:28::i;:::-;1115:3:::0;::::1;::::0;::::1;:::i;:::-;;;;1077:96;;2830:136:0::0;2907:4;2930:12;;;;;;;;;;;-1:-1:-1;;;;;2930:29:0;;;;;;;;;;;;;;;2830:136::o;2250:360:5:-;2312:17;2341:25;2369:13;:11;:13::i;:::-;2341:41;;2392:13;2433:9;2428:145;2452:8;:15;2448:1;:19;2428:145;;;2492:29;2500:8;2509:1;2500:11;;;;;;;;:::i;:::-;;;;;;;2513:7;2492;:29::i;:::-;2488:75;;;2541:7;;;;:::i;:::-;;;;2488:75;2469:3;;;;:::i;:::-;;;;2428:145;;;-1:-1:-1;2598:5:5;2250:360;-1:-1:-1;;;2250:360:5:o;4618:138:0:-;3851:7;3877:12;;;;;;;;;;:22;;;2473:16;2484:4;2473:10;:16::i;:::-;4723:26:::1;4735:4;4741:7;4723:11;:26::i;2723:364:5:-:0;2809:16;;;2823:1;2809:16;;;;;;;;;2767:22;;2809:16;;;;;;;;;;-1:-1:-1;2809:16:5;2801:24;;2241:4:0;2846:18:5;;2835:5;2841:1;2835:8;;;;;;;;:::i;:::-;;;;;;:29;;;;;343:23;2874:5;2880:1;2874:8;;;;;;;;:::i;:::-;;;;;;:21;;;;;413:27;2905:5;2911:1;2905:8;;;;;;;;:::i;:::-;;;;;;:25;;;;;494:34;2940:5;2946:1;2940:8;;;;;;;;:::i;:::-;;;;;;:32;;;;;584:36;2982:5;2988:1;2982:8;;;;;;;;:::i;:::-;;;;;;:34;;;;;674;3026:5;3032:1;3026:8;;;;;;;;:::i;:::-;;;;;;:32;;;;;2723:364;:::o;3175:103:0:-;3241:30;3252:4;735:10:2;3241::0;:30::i;:::-;3175:103;:::o;6155:316::-;6232:4;6253:22;6261:4;6267:7;6253;:22::i;:::-;6248:217;;6291:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6291:29:0;;;;;;;;;:36;;-1:-1:-1;;6291:36:0;6323:4;6291:36;;;6373:12;735:10:2;;656:96;6373:12:0;-1:-1:-1;;;;;6346:40:0;6364:7;-1:-1:-1;;;;;6346:40:0;6358:4;6346:40;;;;;;;;;;-1:-1:-1;6407:4:0;6400:11;;6248:217;-1:-1:-1;6449:5:0;6442:12;;6708:317;6786:4;6806:22;6814:4;6820:7;6806;:22::i;:::-;6802:217;;;6876:5;6844:12;;;;;;;;;;;-1:-1:-1;;;;;6844:29:0;;;;;;;;;;:37;;-1:-1:-1;;6844:37:0;;;6900:40;735:10:2;;6844:12:0;;6900:40;;6876:5;6900:40;-1:-1:-1;6961:4:0;6954:11;;3408:197;3496:22;3504:4;3510:7;3496;:22::i;:::-;3491:108;;3541:47;;-1:-1:-1;;;3541:47:0;;-1:-1:-1;;;;;4198:32:6;;3541:47:0;;;4180:51:6;4247:18;;;4240:34;;;4153:18;;3541:47:0;;;;;;;3491:108;3408:197;;:::o;14:286:6:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:6;;209:43;;199:71;;266:1;263;256:12;199:71;289:5;14:286;-1:-1:-1;;;14:286:6:o;497:180::-;556:6;609:2;597:9;588:7;584:23;580:32;577:52;;;625:1;622;615:12;577:52;-1:-1:-1;648:23:6;;497:180;-1:-1:-1;497:180:6:o;864:173::-;932:20;;-1:-1:-1;;;;;981:31:6;;971:42;;961:70;;1027:1;1024;1017:12;961:70;864:173;;;:::o;1042:254::-;1110:6;1118;1171:2;1159:9;1150:7;1146:23;1142:32;1139:52;;;1187:1;1184;1177:12;1139:52;1223:9;1210:23;1200:33;;1252:38;1286:2;1275:9;1271:18;1252:38;:::i;:::-;1242:48;;1042:254;;;;;:::o;1301:127::-;1362:10;1357:3;1353:20;1350:1;1343:31;1393:4;1390:1;1383:15;1417:4;1414:1;1407:15;1433:1189;1526:6;1534;1587:2;1575:9;1566:7;1562:23;1558:32;1555:52;;;1603:1;1600;1593:12;1555:52;1626:29;1645:9;1626:29;:::i;:::-;1616:39;;1674:2;1727;1716:9;1712:18;1699:32;1750:18;1791:2;1783:6;1780:14;1777:34;;;1807:1;1804;1797:12;1777:34;1845:6;1834:9;1830:22;1820:32;;1890:7;1883:4;1879:2;1875:13;1871:27;1861:55;;1912:1;1909;1902:12;1861:55;1948:2;1935:16;1970:2;1966;1963:10;1960:36;;;1976:18;;:::i;:::-;2022:2;2019:1;2015:10;2054:2;2048:9;2117:2;2113:7;2108:2;2104;2100:11;2096:25;2088:6;2084:38;2172:6;2160:10;2157:22;2152:2;2140:10;2137:18;2134:46;2131:72;;;2183:18;;:::i;:::-;2219:2;2212:22;2269:18;;;2303:15;;;;-1:-1:-1;2345:11:6;;;2341:20;;;2373:19;;;2370:39;;;2405:1;2402;2395:12;2370:39;2429:11;;;;2449:142;2465:6;2460:3;2457:15;2449:142;;;2531:17;;2519:30;;2482:12;;;;2569;;;;2449:142;;;2610:6;2600:16;;;;;;;;1433:1189;;;;;:::o;2627:186::-;2686:6;2739:2;2727:9;2718:7;2714:23;2710:32;2707:52;;;2755:1;2752;2745:12;2707:52;2778:29;2797:9;2778:29;:::i;3000:632::-;3171:2;3223:21;;;3293:13;;3196:18;;;3315:22;;;3142:4;;3171:2;3394:15;;;;3368:2;3353:18;;;3142:4;3437:169;3451:6;3448:1;3445:13;3437:169;;;3512:13;;3500:26;;3581:15;;;;3546:12;;;;3473:1;3466:9;3437:169;;;-1:-1:-1;3623:3:6;;3000:632;-1:-1:-1;;;;;;3000:632:6:o;3637:127::-;3698:10;3693:3;3689:20;3686:1;3679:31;3729:4;3726:1;3719:15;3753:4;3750:1;3743:15;3769:232;3808:3;3829:17;;;3826:140;;3888:10;3883:3;3879:20;3876:1;3869:31;3923:4;3920:1;3913:15;3951:4;3948:1;3941:15;3826:140;-1:-1:-1;3993:1:6;3982:13;;3769:232::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "526200",
								"executionCost": "29245",
								"totalCost": "555445"
							},
							"external": {
								"ADMIN_ROLE()": "262",
								"AI_ORACLE_ROLE()": "239",
								"DEFAULT_ADMIN_ROLE()": "262",
								"DISPUTE_RESOLVER_ROLE()": "217",
								"MILESTONE_APPROVER_ROLE()": "240",
								"TREASURY_MANAGER_ROLE()": "283",
								"getAllRoles()": "infinite",
								"getRoleAdmin(bytes32)": "2493",
								"getRoleCount(address)": "infinite",
								"grantMultipleRoles(address,bytes32[])": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasAnyRole(address,bytes32[])": "infinite",
								"hasRole(bytes32,address)": "2674",
								"renounceRole(bytes32,address)": "29113",
								"revokeMultipleRoles(address,bytes32[])": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "450"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 227,
									"end": 3089,
									"name": "PUSH",
									"source": 5,
									"value": "80"
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 719,
									"end": 793,
									"name": "CALLVALUE",
									"source": 5
								},
								{
									"begin": 719,
									"end": 793,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 719,
									"end": 793,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 719,
									"end": 793,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 719,
									"end": 793,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 719,
									"end": 793,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 793,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 719,
									"end": 793,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 719,
									"end": 793,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 719,
									"end": 793,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 744,
									"end": 786,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 2241,
									"end": 2245,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 775,
									"end": 785,
									"name": "CALLER",
									"source": 5
								},
								{
									"begin": 744,
									"end": 754,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 744,
									"end": 786,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 744,
									"end": 786,
									"name": "tag",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 744,
									"end": 786,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 744,
									"end": 786,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6232,
									"end": 6236,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6297,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6323,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 2
								},
								{
									"begin": 735,
									"end": 745,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6364,
									"end": 6371,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 6358,
									"end": 6362,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6407,
									"end": 6411,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6449,
									"end": 6454,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "tag",
									"source": 5,
									"value": "6"
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122082139c2b2b562ea8c4f51329d6aab03634e445b72a0ae15dc2fc0d53bade4b8c64736f6c63430008140033",
									".code": [
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLVALUE",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "91D14854"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "BFE42A37"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "BFE42A37"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "C601F7AF"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "D547741F"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "EBDF690F"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "F2BCAC3D"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "91D14854"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "A02D72FB"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "A217FDDF"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "ACA5A8A7"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "4FE9D1F5"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "4FE9D1F5"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "68CA78F9"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "75B238FC"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "91B9F9D8"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "1FFC9A7"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "248A9CA3"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "2F2FF15D"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "36568ABE"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 828,
											"end": 853,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 828,
											"end": 853,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 828,
											"end": 853,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 816,
											"end": 818,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 801,
											"end": 819,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 682,
											"end": 859,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1573,
											"name": "tag",
											"source": 5,
											"value": "7"
										},
										{
											"begin": 1352,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1352,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 1352,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1352,
											"end": 1573,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1352,
											"end": 1573,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1352,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1352,
											"end": 1573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1352,
											"end": 1573,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 1352,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1352,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1352,
											"end": 1573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "tag",
											"source": 5,
											"value": "8"
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1816,
											"end": 2087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1816,
											"end": 2087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 306,
											"end": 366,
											"name": "tag",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 306,
											"end": 366,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 306,
											"end": 366,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 343,
											"end": 366,
											"name": "PUSH",
											"source": 5,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 306,
											"end": 366,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 306,
											"end": 366,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 960,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 960,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 960,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 960,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 960,
											"end": 1179,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 960,
											"end": 1179,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 960,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 960,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 960,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 960,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 960,
											"end": 1179,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 960,
											"end": 1179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 534,
											"end": 620,
											"name": "tag",
											"source": 5,
											"value": "12"
										},
										{
											"begin": 534,
											"end": 620,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 534,
											"end": 620,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 584,
											"end": 620,
											"name": "PUSH",
											"source": 5,
											"value": "58223CDFB69946630D837D40B5C366A584F0217ADA7FDDD8318F2E08603CFA22"
										},
										{
											"begin": 534,
											"end": 620,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 534,
											"end": 620,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2250,
											"end": 2610,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 2250,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 2250,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2250,
											"end": 2610,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2610,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2250,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2250,
											"end": 2610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2610,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 2250,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2610,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2250,
											"end": 2610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 626,
											"end": 708,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 626,
											"end": 708,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 626,
											"end": 708,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 674,
											"end": 708,
											"name": "PUSH",
											"source": 5,
											"value": "7B8BB8356A3F32F5C111FF23F050D97F08988E0883529EA7BFF3B918887A6E0E"
										},
										{
											"begin": 626,
											"end": 708,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 626,
											"end": 708,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 372,
											"end": 440,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 372,
											"end": 440,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 372,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 413,
											"end": 440,
											"name": "PUSH",
											"source": 5,
											"value": "482648E7878E9FA54C0A2F67FFD22D00EBC37CF7A03E060E428D2AB0CD6735CC"
										},
										{
											"begin": 372,
											"end": 440,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 372,
											"end": 440,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 446,
											"end": 528,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 446,
											"end": 528,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 446,
											"end": 528,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "29"
										},
										{
											"begin": 494,
											"end": 528,
											"name": "PUSH",
											"source": 5,
											"value": "EDE9DCDB0CE99DC7CEC9C7BE9246AD08B37853683AD91569C187B647DDF5E21C"
										},
										{
											"begin": 446,
											"end": 528,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 446,
											"end": 528,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2723,
											"end": 3087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 2723,
											"end": 3087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2626,
											"end": 2630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 829,
											"end": 869,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 829,
											"end": 869,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 829,
											"end": 869,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2642,
											"end": 2736,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4317,
											"end": 4321,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4323,
											"end": 4330,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4316,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4306,
											"end": 4331,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "334BD919"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 5517,
											"end": 5521,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 5505,
											"end": 5542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1573,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 1352,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1484,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1470,
											"end": 1567,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 1470,
											"end": 1567,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1494,
											"end": 1499,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1494,
											"end": 1506,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1490,
											"end": 1491,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1490,
											"end": 1506,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1470,
											"end": 1567,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1470,
											"end": 1567,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1470,
											"end": 1567,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1556,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1538,
											"end": 1543,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1544,
											"end": 1545,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1538,
											"end": 1546,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1538,
											"end": 1546,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1548,
											"end": 1555,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1537,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1527,
											"end": 1556,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1556,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 1527,
											"end": 1556,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1508,
											"end": 1511,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1508,
											"end": 1511,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 1508,
											"end": 1511,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1508,
											"end": 1511,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 1508,
											"end": 1511,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1508,
											"end": 1511,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 1508,
											"end": 1511,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1508,
											"end": 1511,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1508,
											"end": 1511,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1508,
											"end": 1511,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1470,
											"end": 1567,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 1470,
											"end": 1567,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1900,
											"end": 1904,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 1904,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1916,
											"end": 2059,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 1916,
											"end": 2059,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1945,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1952,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1936,
											"end": 1937,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1936,
											"end": 1952,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1916,
											"end": 2059,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1916,
											"end": 2059,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 1916,
											"end": 2059,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 1985,
											"end": 1990,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1991,
											"end": 1992,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1985,
											"end": 1993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1995,
											"end": 2002,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1977,
											"end": 2003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1977,
											"end": 2003,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 1977,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1973,
											"end": 2049,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1973,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1973,
											"end": 2049,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2030,
											"end": 2034,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2023,
											"end": 2034,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2023,
											"end": 2034,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2023,
											"end": 2034,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2023,
											"end": 2034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 2023,
											"end": 2034,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1973,
											"end": 2049,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 1973,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 1954,
											"end": 1957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1916,
											"end": 2059,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 1916,
											"end": 2059,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1916,
											"end": 2059,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 1916,
											"end": 2059,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2075,
											"end": 2080,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2075,
											"end": 2080,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1816,
											"end": 2087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 960,
											"end": 1179,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 960,
											"end": 1179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1091,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1173,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 1077,
											"end": 1173,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1106,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1101,
											"end": 1113,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1098,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1097,
											"end": 1113,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1077,
											"end": 1173,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1077,
											"end": 1173,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 1077,
											"end": 1173,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1162,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 1144,
											"end": 1149,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1150,
											"end": 1151,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 1144,
											"end": 1152,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1144,
											"end": 1152,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1154,
											"end": 1161,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1143,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "38"
										},
										{
											"begin": 1134,
											"end": 1162,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1134,
											"end": 1162,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 1134,
											"end": 1162,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1118,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1118,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 1115,
											"end": 1118,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1118,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 1115,
											"end": 1118,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1118,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 1115,
											"end": 1118,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1118,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1118,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1115,
											"end": 1118,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1077,
											"end": 1173,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 1077,
											"end": 1173,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2907,
											"end": 2911,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2250,
											"end": 2610,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 2250,
											"end": 2610,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2312,
											"end": 2329,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2341,
											"end": 2366,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2369,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2369,
											"end": 2382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2341,
											"end": 2382,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2341,
											"end": 2382,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2392,
											"end": 2405,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2433,
											"end": 2442,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2428,
											"end": 2573,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2428,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 2460,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2452,
											"end": 2467,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2448,
											"end": 2449,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2448,
											"end": 2467,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2428,
											"end": 2573,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2428,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2428,
											"end": 2573,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2500,
											"end": 2508,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2510,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2500,
											"end": 2511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2513,
											"end": 2520,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2499,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 2492,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2492,
											"end": 2521,
											"name": "tag",
											"source": 5,
											"value": "143"
										},
										{
											"begin": 2492,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 2563,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 2563,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2488,
											"end": 2563,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2541,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2488,
											"end": 2563,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 2488,
											"end": 2563,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2469,
											"end": 2472,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2469,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 2469,
											"end": 2472,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2469,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 2469,
											"end": 2472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2469,
											"end": 2472,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 2469,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2469,
											"end": 2472,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2469,
											"end": 2472,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2469,
											"end": 2472,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2428,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 2428,
											"end": 2573,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2428,
											"end": 2573,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2428,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2598,
											"end": 2603,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2250,
											"end": 2610,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2250,
											"end": 2610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4735,
											"end": 4739,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4741,
											"end": 4748,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4723,
											"end": 4749,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2823,
											"end": 2824,
											"name": "PUSH",
											"source": 5,
											"value": "6"
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2767,
											"end": 2789,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2767,
											"end": 2789,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "PUSH",
											"source": 5,
											"value": "C0"
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2809,
											"end": 2825,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2801,
											"end": 2825,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2801,
											"end": 2825,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2846,
											"end": 2864,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2846,
											"end": 2864,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2840,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2841,
											"end": 2842,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2835,
											"end": 2843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2843,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2864,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2864,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2864,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2864,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2835,
											"end": 2864,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 343,
											"end": 366,
											"name": "PUSH",
											"source": 5,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 2874,
											"end": 2879,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2880,
											"end": 2881,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2874,
											"end": 2882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2882,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2895,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2895,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2895,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2895,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2874,
											"end": 2895,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 413,
											"end": 440,
											"name": "PUSH",
											"source": 5,
											"value": "482648E7878E9FA54C0A2F67FFD22D00EBC37CF7A03E060E428D2AB0CD6735CC"
										},
										{
											"begin": 2905,
											"end": 2910,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2911,
											"end": 2912,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2905,
											"end": 2913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2905,
											"end": 2913,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2905,
											"end": 2930,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2905,
											"end": 2930,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2905,
											"end": 2930,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2905,
											"end": 2930,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2905,
											"end": 2930,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 494,
											"end": 528,
											"name": "PUSH",
											"source": 5,
											"value": "EDE9DCDB0CE99DC7CEC9C7BE9246AD08B37853683AD91569C187B647DDF5E21C"
										},
										{
											"begin": 2940,
											"end": 2945,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2946,
											"end": 2947,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2940,
											"end": 2948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2940,
											"end": 2948,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2940,
											"end": 2972,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2940,
											"end": 2972,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2940,
											"end": 2972,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2940,
											"end": 2972,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2940,
											"end": 2972,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 584,
											"end": 620,
											"name": "PUSH",
											"source": 5,
											"value": "58223CDFB69946630D837D40B5C366A584F0217ADA7FDDD8318F2E08603CFA22"
										},
										{
											"begin": 2982,
											"end": 2987,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2988,
											"end": 2989,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 2982,
											"end": 2990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2982,
											"end": 2990,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2982,
											"end": 3016,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2982,
											"end": 3016,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2982,
											"end": 3016,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2982,
											"end": 3016,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2982,
											"end": 3016,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 674,
											"end": 708,
											"name": "PUSH",
											"source": 5,
											"value": "7B8BB8356A3F32F5C111FF23F050D97F08988E0883529EA7BFF3B918887A6E0E"
										},
										{
											"begin": 3026,
											"end": 3031,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3032,
											"end": 3033,
											"name": "PUSH",
											"source": 5,
											"value": "5"
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 3026,
											"end": 3034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3026,
											"end": 3034,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3026,
											"end": 3058,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3026,
											"end": 3058,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3026,
											"end": 3058,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3026,
											"end": 3058,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3026,
											"end": 3058,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2723,
											"end": 3087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 3252,
											"end": 3256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 3241,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 3241,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6232,
											"end": 6236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 6261,
											"end": 6265,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6267,
											"end": 6274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6253,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 6253,
											"end": 6275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6297,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6323,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6364,
											"end": 6371,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6358,
											"end": 6362,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6407,
											"end": 6411,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6449,
											"end": 6454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6786,
											"end": 6790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 6814,
											"end": 6818,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6820,
											"end": 6827,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 6806,
											"end": 6828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6876,
											"end": 6881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6876,
											"end": 6881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6961,
											"end": 6965,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3504,
											"end": 3508,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3510,
											"end": 3517,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3496,
											"end": 3518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2517D3F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4198,
											"end": 4230,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4198,
											"end": 4230,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4180,
											"end": 4231,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4265,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4247,
											"end": 4265,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4247,
											"end": 4265,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4274,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4274,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4274,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4153,
											"end": 4171,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4153,
											"end": 4171,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3408,
											"end": 3605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 167,
											"end": 190,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 219,
											"end": 251,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 219,
											"end": 251,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 209,
											"end": 252,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 209,
											"end": 252,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 199,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 199,
											"end": 270,
											"name": "tag",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 289,
											"end": 294,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 14,
											"end": 300,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 497,
											"end": 677,
											"name": "tag",
											"source": 6,
											"value": "31"
										},
										{
											"begin": 497,
											"end": 677,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 556,
											"end": 562,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 609,
											"end": 611,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 597,
											"end": 606,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 588,
											"end": 595,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 584,
											"end": 607,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 580,
											"end": 612,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 577,
											"end": 629,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 577,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 577,
											"end": 629,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 625,
											"end": 626,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 623,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 615,
											"end": 627,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 577,
											"end": 629,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 577,
											"end": 629,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 648,
											"end": 671,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 648,
											"end": 671,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 497,
											"end": 677,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 497,
											"end": 677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 864,
											"end": 1037,
											"name": "tag",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 864,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 932,
											"end": 952,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 932,
											"end": 952,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 981,
											"end": 1012,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 981,
											"end": 1012,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1013,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 971,
											"end": 1013,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 961,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 961,
											"end": 1031,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1027,
											"end": 1028,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1024,
											"end": 1025,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1017,
											"end": 1029,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 961,
											"end": 1031,
											"name": "tag",
											"source": 6,
											"value": "202"
										},
										{
											"begin": 961,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 864,
											"end": 1037,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 864,
											"end": 1037,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 864,
											"end": 1037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 864,
											"end": 1037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1296,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 1042,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1110,
											"end": 1116,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1124,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1171,
											"end": 1173,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1159,
											"end": 1168,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1150,
											"end": 1157,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1146,
											"end": 1169,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1142,
											"end": 1174,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1139,
											"end": 1191,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1139,
											"end": 1191,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 1139,
											"end": 1191,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1187,
											"end": 1188,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1184,
											"end": 1185,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1177,
											"end": 1189,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1139,
											"end": 1191,
											"name": "tag",
											"source": 6,
											"value": "204"
										},
										{
											"begin": 1139,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1223,
											"end": 1232,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1210,
											"end": 1233,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1233,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1200,
											"end": 1233,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 1286,
											"end": 1288,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1275,
											"end": 1284,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1271,
											"end": 1289,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 1252,
											"end": 1290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 1252,
											"end": 1290,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1290,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1242,
											"end": 1290,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1296,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1296,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1296,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1296,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1296,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1042,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1428,
											"name": "tag",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1301,
											"end": 1428,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1362,
											"end": 1372,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 1357,
											"end": 1360,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1353,
											"end": 1373,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1350,
											"end": 1351,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1343,
											"end": 1374,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1393,
											"end": 1397,
											"name": "PUSH",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 1390,
											"end": 1391,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1383,
											"end": 1398,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1417,
											"end": 1421,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1414,
											"end": 1415,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 1422,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1433,
											"end": 2622,
											"name": "tag",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 1433,
											"end": 2622,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1526,
											"end": 1532,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1534,
											"end": 1540,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1587,
											"end": 1589,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1575,
											"end": 1584,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1566,
											"end": 1573,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1562,
											"end": 1585,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1558,
											"end": 1590,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1555,
											"end": 1607,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1555,
											"end": 1607,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 1555,
											"end": 1607,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1603,
											"end": 1604,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1600,
											"end": 1601,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1593,
											"end": 1605,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1555,
											"end": 1607,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 1555,
											"end": 1607,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1626,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 1645,
											"end": 1654,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1626,
											"end": 1655,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 1626,
											"end": 1655,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1626,
											"end": 1655,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 1626,
											"end": 1655,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1616,
											"end": 1655,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1616,
											"end": 1655,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1674,
											"end": 1676,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1727,
											"end": 1729,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1716,
											"end": 1725,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1712,
											"end": 1730,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1699,
											"end": 1731,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1750,
											"end": 1768,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1791,
											"end": 1793,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1783,
											"end": 1789,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1780,
											"end": 1794,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1777,
											"end": 1811,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1777,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 1777,
											"end": 1811,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1807,
											"end": 1808,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1804,
											"end": 1805,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1797,
											"end": 1809,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1777,
											"end": 1811,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 1777,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1845,
											"end": 1851,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1834,
											"end": 1843,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1830,
											"end": 1852,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1820,
											"end": 1852,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1820,
											"end": 1852,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1890,
											"end": 1897,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1883,
											"end": 1887,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1879,
											"end": 1881,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1875,
											"end": 1888,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1898,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1861,
											"end": 1916,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 1861,
											"end": 1916,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1909,
											"end": 1910,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1902,
											"end": 1914,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1861,
											"end": 1916,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 1861,
											"end": 1916,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1948,
											"end": 1950,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1935,
											"end": 1951,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1970,
											"end": 1972,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1966,
											"end": 1968,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1963,
											"end": 1973,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 1960,
											"end": 1996,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1976,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 1976,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 1976,
											"end": 1994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1976,
											"end": 1994,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 1976,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2022,
											"end": 2024,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "PUSH",
											"source": 6,
											"value": "5"
										},
										{
											"begin": 2015,
											"end": 2025,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2054,
											"end": 2056,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2057,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2117,
											"end": 2119,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2108,
											"end": 2110,
											"name": "PUSH",
											"source": 6,
											"value": "3F"
										},
										{
											"begin": 2104,
											"end": 2106,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2100,
											"end": 2111,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2096,
											"end": 2121,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2088,
											"end": 2094,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2084,
											"end": 2122,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2172,
											"end": 2178,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2160,
											"end": 2170,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2157,
											"end": 2179,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2152,
											"end": 2154,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2140,
											"end": 2150,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2137,
											"end": 2155,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2134,
											"end": 2180,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2203,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2203,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2131,
											"end": 2203,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2183,
											"end": 2201,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "157"
										},
										{
											"begin": 2183,
											"end": 2201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2183,
											"end": 2201,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 2183,
											"end": 2201,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2219,
											"end": 2221,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2212,
											"end": 2234,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2287,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2287,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2269,
											"end": 2287,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2318,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2318,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2318,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2318,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2345,
											"end": 2356,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2345,
											"end": 2356,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2345,
											"end": 2356,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2361,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2361,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2341,
											"end": 2361,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2392,
											"name": "DUP10",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2392,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2373,
											"end": 2392,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2405,
											"end": 2406,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2402,
											"end": 2403,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2395,
											"end": 2407,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 2370,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2440,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2440,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2440,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2429,
											"end": 2440,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2449,
											"end": 2591,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 2449,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2465,
											"end": 2471,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2463,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2457,
											"end": 2472,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 2449,
											"end": 2591,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2449,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 2449,
											"end": 2591,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2531,
											"end": 2548,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2531,
											"end": 2548,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2519,
											"end": 2549,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2519,
											"end": 2549,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2482,
											"end": 2494,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2569,
											"end": 2581,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2569,
											"end": 2581,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2569,
											"end": 2581,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2569,
											"end": 2581,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2449,
											"end": 2591,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 2449,
											"end": 2591,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2449,
											"end": 2591,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 2449,
											"end": 2591,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2610,
											"end": 2616,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2600,
											"end": 2616,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 2600,
											"end": 2616,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2600,
											"end": 2616,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2600,
											"end": 2616,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2600,
											"end": 2616,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2600,
											"end": 2616,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2600,
											"end": 2616,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2600,
											"end": 2616,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1433,
											"end": 2622,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1433,
											"end": 2622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1433,
											"end": 2622,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1433,
											"end": 2622,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1433,
											"end": 2622,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1433,
											"end": 2622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2627,
											"end": 2813,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 2627,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2686,
											"end": 2692,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2739,
											"end": 2741,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2727,
											"end": 2736,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2718,
											"end": 2725,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2714,
											"end": 2737,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2710,
											"end": 2742,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2759,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2759,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 2707,
											"end": 2759,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2755,
											"end": 2756,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2752,
											"end": 2753,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2745,
											"end": 2757,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2707,
											"end": 2759,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 2707,
											"end": 2759,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "196"
										},
										{
											"begin": 2797,
											"end": 2806,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2778,
											"end": 2807,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "192"
										},
										{
											"begin": 2778,
											"end": 2807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3000,
											"end": 3632,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 3000,
											"end": 3632,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3171,
											"end": 3173,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3223,
											"end": 3244,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3223,
											"end": 3244,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3223,
											"end": 3244,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3293,
											"end": 3306,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3293,
											"end": 3306,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3337,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3337,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3315,
											"end": 3337,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3146,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3142,
											"end": 3146,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3171,
											"end": 3173,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3409,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3409,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3409,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3394,
											"end": 3409,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3368,
											"end": 3370,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3353,
											"end": 3371,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3353,
											"end": 3371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3142,
											"end": 3146,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3606,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 3437,
											"end": 3606,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3451,
											"end": 3457,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3448,
											"end": 3449,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3445,
											"end": 3458,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3606,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 3437,
											"end": 3606,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3512,
											"end": 3525,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3512,
											"end": 3525,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3500,
											"end": 3526,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3500,
											"end": 3526,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3581,
											"end": 3596,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3581,
											"end": 3596,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3581,
											"end": 3596,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3581,
											"end": 3596,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3546,
											"end": 3558,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3546,
											"end": 3558,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3546,
											"end": 3558,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3546,
											"end": 3558,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3473,
											"end": 3474,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3466,
											"end": 3475,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3606,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 3437,
											"end": 3606,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3437,
											"end": 3606,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 3437,
											"end": 3606,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3623,
											"end": 3626,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3623,
											"end": 3626,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 3000,
											"end": 3632,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3000,
											"end": 3632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3637,
											"end": 3764,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3637,
											"end": 3764,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3698,
											"end": 3708,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 3693,
											"end": 3696,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3689,
											"end": 3709,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3686,
											"end": 3687,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3679,
											"end": 3710,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3729,
											"end": 3733,
											"name": "PUSH",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 3726,
											"end": 3727,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3719,
											"end": 3734,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3753,
											"end": 3757,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3750,
											"end": 3751,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3743,
											"end": 3758,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3769,
											"end": 4001,
											"name": "tag",
											"source": 6,
											"value": "117"
										},
										{
											"begin": 3769,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3811,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3829,
											"end": 3846,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3829,
											"end": 3846,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3829,
											"end": 3846,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 3826,
											"end": 3966,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3888,
											"end": 3898,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 3883,
											"end": 3886,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3879,
											"end": 3899,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3876,
											"end": 3877,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3869,
											"end": 3900,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3923,
											"end": 3927,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 3920,
											"end": 3921,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3913,
											"end": 3928,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3951,
											"end": 3955,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3948,
											"end": 3949,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3956,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3826,
											"end": 3966,
											"name": "tag",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 3826,
											"end": 3966,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3993,
											"end": 3994,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3982,
											"end": 3995,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3982,
											"end": 3995,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3769,
											"end": 4001,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ADMIN_ROLE()": "75b238fc",
							"AI_ORACLE_ROLE()": "c601f7af",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"DISPUTE_RESOLVER_ROLE()": "bfe42a37",
							"MILESTONE_APPROVER_ROLE()": "a02d72fb",
							"TREASURY_MANAGER_ROLE()": "ebdf690f",
							"getAllRoles()": "f2bcac3d",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleCount(address)": "aca5a8a7",
							"grantMultipleRoles(address,bytes32[])": "91b9f9d8",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasAnyRole(address,bytes32[])": "68ca78f9",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeMultipleRoles(address,bytes32[])": "4fe9d1f5",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"AI_ORACLE_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DISPUTE_RESOLVER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MILESTONE_APPROVER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TREASURY_MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllRoles\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getRoleCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"roleCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"}],\"name\":\"grantMultipleRoles\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"}],\"name\":\"hasAnyRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"}],\"name\":\"revokeMultipleRoles\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extended access control with custom roles for CrossFi Treasury Guard\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getAllRoles()\":{\"details\":\"Get all available roles\",\"returns\":{\"roles\":\"Array of all role identifiers\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleCount(address)\":{\"details\":\"Get all roles for an account\",\"params\":{\"account\":\"Account to check\"},\"returns\":{\"roleCount\":\"Number of roles the account has\"}},\"grantMultipleRoles(address,bytes32[])\":{\"details\":\"Grant multiple roles to an account\",\"params\":{\"account\":\"Account to grant roles to\",\"roles\":\"Array of role identifiers\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasAnyRole(address,bytes32[])\":{\"details\":\"Check if account has any of the specified roles\",\"params\":{\"account\":\"Account to check\",\"roles\":\"Array of role identifiers\"},\"returns\":{\"_0\":\"hasAnyRole True if account has at least one of the roles\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeMultipleRoles(address,bytes32[])\":{\"details\":\"Revoke multiple roles from an account\",\"params\":{\"account\":\"Account to revoke roles from\",\"roles\":\"Array of role identifiers\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"AccessControl\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":\"ExtendedAccessControl\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":{\"keccak256\":\"0x8b7cd81ef25f52c2cdffb0879b4c8d953d671eef13fa1ebdda28c0c2e16c52da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc0018431667094cdb37883ffc7417dfd2c552844692f1340143f4e7e4b903f3\",\"dweb:/ipfs/QmPdnh9tbMBQCaazQ2fzbQSKKxkERU75TcSDZ9KVfDhujb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol:ExtendedAccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)22_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)22_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)22_storage"
							},
							"t_struct(RoleData)22_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 19,
										"contract": "CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol:ExtendedAccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 21,
										"contract": "CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol:ExtendedAccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							296
						],
						"Context": [
							409
						],
						"ERC165": [
							433
						],
						"IAccessControl": [
							379
						],
						"IERC165": [
							445
						]
					},
					"id": 297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 380,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 379,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 410,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 409,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 434,
							"src": "233:66:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 445,
										"src": "241:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 7,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 433,
										"src": "250:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 10,
										"name": "Context",
										"nameLocations": [
											"1997:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 409,
										"src": "1997:7:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:7:0"
								},
								{
									"baseName": {
										"id": 12,
										"name": "IAccessControl",
										"nameLocations": [
											"2006:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 379,
										"src": "2006:14:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "2006:14:0"
								},
								{
									"baseName": {
										"id": 14,
										"name": "ERC165",
										"nameLocations": [
											"2022:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 433,
										"src": "2022:6:0"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "2022:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 9,
								"nodeType": "StructuredDocumentation",
								"src": "301:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 296,
							"linearizedBaseContracts": [
								296,
								433,
								445,
								379,
								409
							],
							"name": "AccessControl",
							"nameLocation": "1980:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 22,
									"members": [
										{
											"constant": false,
											"id": 19,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2094:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "2061:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 18,
												"keyName": "account",
												"keyNameLocation": "2077:7:0",
												"keyType": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2061:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2088:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 21,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2119:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "2111:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 20,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2111:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2042:8:0",
									"nodeType": "StructDefinition",
									"scope": 296,
									"src": "2035:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2183:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 296,
									"src": "2141:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 26,
										"keyName": "role",
										"keyNameLocation": "2157:4:0",
										"keyType": {
											"id": 23,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2149:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2141:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 25,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 24,
												"name": "RoleData",
												"nameLocations": [
													"2165:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 22,
												"src": "2165:8:0"
											},
											"referencedDeclaration": 22,
											"src": "2165:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$22_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 30,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2220:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 296,
									"src": "2196:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 28,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2196:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 29,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2241:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "2463:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 36,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "2484:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 35,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															94,
															115
														],
														"referencedDeclaration": 94,
														"src": "2473:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2473:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2473:16:0"
											},
											{
												"id": 39,
												"nodeType": "PlaceholderStatement",
												"src": "2499:1:0"
											}
										]
									},
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "2252:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 41,
									"name": "onlyRole",
									"nameLocation": "2440:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2457:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "2449:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 32,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2448:14:0"
									},
									"src": "2431:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										432
									],
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "2632:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 55,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 50,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "2649:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 52,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 379,
																		"src": "2669:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$379_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$379_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 51,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2664:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2664:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$379",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2685:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2664:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2649:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 58,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "2724:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 56,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2700:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$296_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2706:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 432,
															"src": "2700:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2700:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2649:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 49,
												"id": 61,
												"nodeType": "Return",
												"src": "2642:94:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "2513:23:0",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2550:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 46,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2608:8:0"
									},
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2575:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2568:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 43,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2567:20:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2626:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 47,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2626:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2625:6:0"
									},
									"scope": 296,
									"src": "2541:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										346
									],
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2913:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 73,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "2930:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 75,
															"indexExpression": {
																"id": 74,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "2937:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2930:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$22_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2943:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "2930:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 78,
													"indexExpression": {
														"id": 77,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "2951:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2930:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 72,
												"id": 79,
												"nodeType": "Return",
												"src": "2923:36:0"
											}
										]
									},
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "2749:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2839:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2855:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2847:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 65,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2869:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2861:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2861:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2846:31:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2907:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 70,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2907:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2906:6:0"
									},
									"scope": 296,
									"src": "2830:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "3231:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 88,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "3252:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 89,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 391,
																"src": "3258:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3258:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 87,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															94,
															115
														],
														"referencedDeclaration": 115,
														"src": "3241:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3241:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "3241:30:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2972:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3184:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3203:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "3195:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 83,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3194:14:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:0"
									},
									"scope": 296,
									"src": "3175:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "3481:124:0",
										"statements": [
											{
												"condition": {
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3495:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 103,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3504:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 104,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "3510:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 102,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "3496:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3496:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 113,
												"nodeType": "IfStatement",
												"src": "3491:108:0",
												"trueBody": {
													"id": 112,
													"nodeType": "Block",
													"src": "3520:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 108,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "3574:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 109,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "3583:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 107,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "3541:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$__$",
																		"typeString": "function (address,bytes32) pure"
																	}
																},
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3541:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 111,
															"nodeType": "RevertStatement",
															"src": "3534:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "3284:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3417:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3436:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3428:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 96,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3450:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3442:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3442:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3427:31:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3481:0:0"
									},
									"scope": 296,
									"src": "3408:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										354
									],
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "3860:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 123,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "3877:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 125,
														"indexExpression": {
															"id": 124,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "3884:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3877:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$22_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3890:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 21,
													"src": "3877:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 122,
												"id": 127,
												"nodeType": "Return",
												"src": "3870:29:0"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "3611:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3795:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3816:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3808:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 117,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:14:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3851:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 120,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:9:0"
									},
									"scope": 296,
									"src": "3786:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										362
									],
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "4296:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 143,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "4317:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 144,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "4323:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 142,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "4306:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4306:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "4306:25:0"
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "3912:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 138,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "4289:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 137,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4276:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 140,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 136,
												"name": "onlyRole",
												"nameLocations": [
													"4267:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "4267:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4267:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4211:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4229:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "4221:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4221:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4243:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "4235:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4235:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4220:31:0"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4296:0:0"
									},
									"scope": 296,
									"src": "4202:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										370
									],
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "4713:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 162,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "4735:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 163,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4741:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 161,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "4723:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4723:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "4723:26:0"
											}
										]
									},
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "4344:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 157,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "4706:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 156,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4693:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4693:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 159,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 155,
												"name": "onlyRole",
												"nameLocations": [
													"4684:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "4684:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4684:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4627:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4646:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4638:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 150,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4637:31:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4713:0:0"
									},
									"scope": 296,
									"src": "4618:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										378
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "5383:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 175,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "5397:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 176,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 391,
															"src": "5419:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5419:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5397:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 183,
												"nodeType": "IfStatement",
												"src": "5393:102:0",
												"trueBody": {
													"id": 182,
													"nodeType": "Block",
													"src": "5433:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 179,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 309,
																	"src": "5454:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5454:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 181,
															"nodeType": "RevertStatement",
															"src": "5447:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "5517:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 186,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "5523:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5505:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5505:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5505:37:0"
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "4762:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5313:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5334:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5326:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 169,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5348:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5340:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5325:42:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5383:0:0"
									},
									"scope": 296,
									"src": "5304:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "5747:174:0",
										"statements": [
											{
												"assignments": [
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5765:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 217,
														"src": "5757:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 198,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5757:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 203,
												"initialValue": {
													"arguments": [
														{
															"id": 201,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5798:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 200,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "5785:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5785:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5757:46:0"
											},
											{
												"expression": {
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 204,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "5813:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 206,
															"indexExpression": {
																"id": 205,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "5820:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5813:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$22_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5826:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "5813:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 208,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "5838:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5813:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "5813:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 212,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5879:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "5885:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 214,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "5904:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 211,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "5862:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5862:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "EmitStatement",
												"src": "5857:57:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5555:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5683:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5705:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5697:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5697:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5719:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5711:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 194,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5696:33:0"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5747:0:0"
									},
									"scope": 296,
									"src": "5674:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "6238:233:0",
										"statements": [
											{
												"condition": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6252:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 229,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "6261:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 230,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "6267:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 228,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "6253:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6253:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 254,
													"nodeType": "Block",
													"src": "6428:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6449:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 227,
															"id": 253,
															"nodeType": "Return",
															"src": "6442:12:0"
														}
													]
												},
												"id": 255,
												"nodeType": "IfStatement",
												"src": "6248:217:0",
												"trueBody": {
													"id": 251,
													"nodeType": "Block",
													"src": "6277:145:0",
													"statements": [
														{
															"expression": {
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 233,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 27,
																				"src": "6291:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 235,
																			"indexExpression": {
																				"id": 234,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 221,
																				"src": "6298:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6291:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$22_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 236,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6304:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 19,
																		"src": "6291:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 238,
																	"indexExpression": {
																		"id": 237,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 223,
																		"src": "6312:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6291:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6323:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6291:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 241,
															"nodeType": "ExpressionStatement",
															"src": "6291:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 243,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "6358:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 244,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 223,
																		"src": "6364:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 245,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 391,
																			"src": "6373:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6373:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 242,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "6346:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6346:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 248,
															"nodeType": "EmitStatement",
															"src": "6341:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6407:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 227,
															"id": 250,
															"nodeType": "Return",
															"src": "6400:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "5927:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6164:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6183:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6175:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 220,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6197:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6189:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6189:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6174:31:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6232:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6232:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6231:6:0"
									},
									"scope": 296,
									"src": "6155:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "6792:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 268,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "6814:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 269,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "6820:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 267,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "6806:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6806:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 292,
													"nodeType": "Block",
													"src": "6982:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7003:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 266,
															"id": 291,
															"nodeType": "Return",
															"src": "6996:12:0"
														}
													]
												},
												"id": 293,
												"nodeType": "IfStatement",
												"src": "6802:217:0",
												"trueBody": {
													"id": 289,
													"nodeType": "Block",
													"src": "6830:146:0",
													"statements": [
														{
															"expression": {
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 271,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 27,
																				"src": "6844:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 273,
																			"indexExpression": {
																				"id": 272,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 260,
																				"src": "6851:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6844:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$22_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 274,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6857:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 19,
																		"src": "6844:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 276,
																	"indexExpression": {
																		"id": 275,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "6865:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6844:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6876:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6844:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 279,
															"nodeType": "ExpressionStatement",
															"src": "6844:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 281,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "6912:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 282,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "6918:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 283,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 391,
																			"src": "6927:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6927:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 280,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "6900:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6900:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 286,
															"nodeType": "EmitStatement",
															"src": "6895:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 266,
															"id": 288,
															"nodeType": "Return",
															"src": "6954:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "6477:226:0",
										"text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6717:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6737:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6729:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 259,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6751:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6743:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6743:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6728:31:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6786:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6786:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6785:6:0"
									},
									"scope": 296,
									"src": "6708:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 297,
							"src": "1962:5065:0",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336
							]
						}
					],
					"src": "108:6920:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							379
						]
					},
					"id": 380,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 298,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 299,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 379,
							"linearizedBaseContracts": [
								379
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 306,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 303,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 309,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 318,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 311,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 313,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 315,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 327,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 320,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 336,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 329,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 346,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 338,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 379,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 354,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 348,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 351,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 379,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 356,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 379,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 370,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 364,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 379,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 372,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 379,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 380,
							"src": "226:3116:1",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							409
						]
					},
					"id": 410,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 381,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 382,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:2",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 409,
							"linearizedBaseContracts": [
								409
							],
							"name": "Context",
							"nameLocation": "642:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "718:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 387,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 386,
												"id": 389,
												"nodeType": "Return",
												"src": "728:17:2"
											}
										]
									},
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:2"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "709:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:2"
									},
									"scope": 409,
									"src": "656:96:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 399,
										"nodeType": "Block",
										"src": "825:32:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 396,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:2",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 395,
												"id": 398,
												"nodeType": "Return",
												"src": "835:15:2"
											}
										]
									},
									"id": 400,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:2"
									},
									"returnParameters": {
										"id": 395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "809:14:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 393,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:2"
									},
									"scope": 409,
									"src": "758:99:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "935:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 404,
												"id": 406,
												"nodeType": "Return",
												"src": "945:8:2"
											}
										]
									},
									"id": 408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:2"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:2"
									},
									"scope": 409,
									"src": "863:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 410,
							"src": "624:338:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							433
						],
						"IERC165": [
							445
						]
					},
					"id": 434,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 411,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 413,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 434,
							"sourceUnit": 446,
							"src": "140:38:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 412,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 445,
										"src": "148:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 415,
										"name": "IERC165",
										"nameLocations": [
											"688:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 445,
										"src": "688:7:3"
									},
									"id": 416,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:3"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 414,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:3",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 433,
							"linearizedBaseContracts": [
								433,
								445
							],
							"name": "ERC165",
							"nameLocation": "678:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										444
									],
									"body": {
										"id": 431,
										"nodeType": "Block",
										"src": "812:64:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 424,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 419,
														"src": "829:11:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 426,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "849:7:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$445_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$445_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 425,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "844:4:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "844:13:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$445",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 428,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "858:11:3",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "844:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "829:40:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 423,
												"id": 430,
												"nodeType": "Return",
												"src": "822:47:3"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "702:23:3",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 432,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "739:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "764:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "757:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 418,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "757:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:20:3"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 432,
												"src": "806:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 421,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "806:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "805:6:3"
									},
									"scope": 433,
									"src": "730:146:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 434,
							"src": "660:218:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:765:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							445
						]
					},
					"id": 446,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 435,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 436,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:4",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 445,
							"linearizedBaseContracts": [
								445
							],
							"name": "IERC165",
							"nameLocation": "433:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 437,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:4",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 444,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "819:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 438,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:4"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "862:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 441,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:4"
									},
									"scope": 445,
									"src": "792:76:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 446,
							"src": "423:447:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:4"
				},
				"id": 4
			},
			"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol": {
				"ast": {
					"absolutePath": "CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							296
						],
						"Context": [
							409
						],
						"ERC165": [
							433
						],
						"ExtendedAccessControl": [
							691
						],
						"IAccessControl": [
							379
						],
						"IERC165": [
							445
						]
					},
					"id": 692,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 447,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 448,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 692,
							"sourceUnit": 297,
							"src": "58:58:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 450,
										"name": "AccessControl",
										"nameLocations": [
											"261:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "261:13:5"
									},
									"id": 451,
									"nodeType": "InheritanceSpecifier",
									"src": "261:13:5"
								}
							],
							"canonicalName": "ExtendedAccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 449,
								"nodeType": "StructuredDocumentation",
								"src": "118:108:5",
								"text": " @title AccessControl\n @dev Extended access control with custom roles for CrossFi Treasury Guard"
							},
							"fullyImplemented": true,
							"id": 691,
							"linearizedBaseContracts": [
								691,
								296,
								433,
								445,
								379,
								409
							],
							"name": "ExtendedAccessControl",
							"nameLocation": "236:21:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "75b238fc",
									"id": 456,
									"mutability": "constant",
									"name": "ADMIN_ROLE",
									"nameLocation": "330:10:5",
									"nodeType": "VariableDeclaration",
									"scope": 691,
									"src": "306:60:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 452,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "306:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41444d494e5f524f4c45",
												"id": 454,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "353:12:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												},
												"value": "ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												}
											],
											"id": 453,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "343:9:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 455,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "343:23:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "c601f7af",
									"id": 461,
									"mutability": "constant",
									"name": "AI_ORACLE_ROLE",
									"nameLocation": "396:14:5",
									"nodeType": "VariableDeclaration",
									"scope": 691,
									"src": "372:68:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 457,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "372:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41495f4f5241434c455f524f4c45",
												"id": 459,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "423:16:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_482648e7878e9fa54c0a2f67ffd22d00ebc37cf7a03e060e428d2ab0cd6735cc",
													"typeString": "literal_string \"AI_ORACLE_ROLE\""
												},
												"value": "AI_ORACLE_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_482648e7878e9fa54c0a2f67ffd22d00ebc37cf7a03e060e428d2ab0cd6735cc",
													"typeString": "literal_string \"AI_ORACLE_ROLE\""
												}
											],
											"id": 458,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "413:9:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 460,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "413:27:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "ebdf690f",
									"id": 466,
									"mutability": "constant",
									"name": "TREASURY_MANAGER_ROLE",
									"nameLocation": "470:21:5",
									"nodeType": "VariableDeclaration",
									"scope": 691,
									"src": "446:82:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 462,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "446:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "54524541535552595f4d414e414745525f524f4c45",
												"id": 464,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "504:23:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_ede9dcdb0ce99dc7cec9c7be9246ad08b37853683ad91569c187b647ddf5e21c",
													"typeString": "literal_string \"TREASURY_MANAGER_ROLE\""
												},
												"value": "TREASURY_MANAGER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_ede9dcdb0ce99dc7cec9c7be9246ad08b37853683ad91569c187b647ddf5e21c",
													"typeString": "literal_string \"TREASURY_MANAGER_ROLE\""
												}
											],
											"id": 463,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "494:9:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 465,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "494:34:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a02d72fb",
									"id": 471,
									"mutability": "constant",
									"name": "MILESTONE_APPROVER_ROLE",
									"nameLocation": "558:23:5",
									"nodeType": "VariableDeclaration",
									"scope": 691,
									"src": "534:86:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 467,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "534:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d494c4553544f4e455f415050524f5645525f524f4c45",
												"id": 469,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "594:25:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_58223cdfb69946630d837d40b5c366a584f0217ada7fddd8318f2e08603cfa22",
													"typeString": "literal_string \"MILESTONE_APPROVER_ROLE\""
												},
												"value": "MILESTONE_APPROVER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_58223cdfb69946630d837d40b5c366a584f0217ada7fddd8318f2e08603cfa22",
													"typeString": "literal_string \"MILESTONE_APPROVER_ROLE\""
												}
											],
											"id": 468,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "584:9:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 470,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "584:36:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "bfe42a37",
									"id": 476,
									"mutability": "constant",
									"name": "DISPUTE_RESOLVER_ROLE",
									"nameLocation": "650:21:5",
									"nodeType": "VariableDeclaration",
									"scope": 691,
									"src": "626:82:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 472,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "626:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "444953505554455f5245534f4c5645525f524f4c45",
												"id": 474,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "684:23:5",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e",
													"typeString": "literal_string \"DISPUTE_RESOLVER_ROLE\""
												},
												"value": "DISPUTE_RESOLVER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e",
													"typeString": "literal_string \"DISPUTE_RESOLVER_ROLE\""
												}
											],
											"id": 473,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "674:9:5",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 475,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "674:34:5",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 485,
										"nodeType": "Block",
										"src": "733:60:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 480,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "755:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 481,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "775:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "779:6:5",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "775:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 479,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "744:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "744:42:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 484,
												"nodeType": "ExpressionStatement",
												"src": "744:42:5"
											}
										]
									},
									"id": 486,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "730:2:5"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "733:0:5"
									},
									"scope": 691,
									"src": "719:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "1067:112:5",
										"statements": [
											{
												"body": {
													"id": 516,
													"nodeType": "Block",
													"src": "1120:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 510,
																			"name": "roles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 492,
																			"src": "1144:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																				"typeString": "bytes32[] memory"
																			}
																		},
																		"id": 512,
																		"indexExpression": {
																			"id": 511,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 499,
																			"src": "1150:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1144:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 513,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 489,
																		"src": "1154:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 509,
																	"name": "grantRole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 148,
																	"src": "1134:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address)"
																	}
																},
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1134:28:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 515,
															"nodeType": "ExpressionStatement",
															"src": "1134:28:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 502,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 499,
														"src": "1097:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 503,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "1101:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 504,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1107:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1101:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1097:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 517,
												"initializationExpression": {
													"assignments": [
														499
													],
													"declarations": [
														{
															"constant": false,
															"id": 499,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1090:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 517,
															"src": "1082:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 498,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1082:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 501,
													"initialValue": {
														"hexValue": "30",
														"id": 500,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1094:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1082:13:5"
												},
												"loopExpression": {
													"expression": {
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1115:3:5",
														"subExpression": {
															"id": 506,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "1115:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 508,
													"nodeType": "ExpressionStatement",
													"src": "1115:3:5"
												},
												"nodeType": "ForStatement",
												"src": "1077:96:5"
											}
										]
									},
									"documentation": {
										"id": 487,
										"nodeType": "StructuredDocumentation",
										"src": "803:152:5",
										"text": " @dev Grant multiple roles to an account\n @param account Account to grant roles to\n @param roles Array of role identifiers"
									},
									"functionSelector": "91b9f9d8",
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 495,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 30,
													"src": "1047:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 496,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 494,
												"name": "onlyRole",
												"nameLocations": [
													"1038:8:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "1038:8:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1038:28:5"
										}
									],
									"name": "grantMultipleRoles",
									"nameLocation": "969:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "996:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "988:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "988:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "roles",
												"nameLocation": "1022:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "1005:22:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 490,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1005:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 491,
													"nodeType": "ArrayTypeName",
													"src": "1005:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "987:41:5"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1067:0:5"
									},
									"scope": 691,
									"src": "960:219:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 551,
										"nodeType": "Block",
										"src": "1460:113:5",
										"statements": [
											{
												"body": {
													"id": 549,
													"nodeType": "Block",
													"src": "1513:54:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 543,
																			"name": "roles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 525,
																			"src": "1538:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																				"typeString": "bytes32[] memory"
																			}
																		},
																		"id": 545,
																		"indexExpression": {
																			"id": 544,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 532,
																			"src": "1544:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1538:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 546,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 522,
																		"src": "1548:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 542,
																	"name": "revokeRole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "1527:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address)"
																	}
																},
																"id": 547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1527:29:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 548,
															"nodeType": "ExpressionStatement",
															"src": "1527:29:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 535,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "1490:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 536,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 525,
															"src": "1494:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 537,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1500:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1494:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1490:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 550,
												"initializationExpression": {
													"assignments": [
														532
													],
													"declarations": [
														{
															"constant": false,
															"id": 532,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1483:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 550,
															"src": "1475:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 531,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1475:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 534,
													"initialValue": {
														"hexValue": "30",
														"id": 533,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1475:13:5"
												},
												"loopExpression": {
													"expression": {
														"id": 540,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1508:3:5",
														"subExpression": {
															"id": 539,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "1508:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 541,
													"nodeType": "ExpressionStatement",
													"src": "1508:3:5"
												},
												"nodeType": "ForStatement",
												"src": "1470:97:5"
											}
										]
									},
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "1189:158:5",
										"text": " @dev Revoke multiple roles from an account\n @param account Account to revoke roles from\n @param roles Array of role identifiers"
									},
									"functionSelector": "4fe9d1f5",
									"id": 552,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 528,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 30,
													"src": "1440:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 529,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 527,
												"name": "onlyRole",
												"nameLocations": [
													"1431:8:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "1431:8:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "1431:28:5"
										}
									],
									"name": "revokeMultipleRoles",
									"nameLocation": "1361:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1389:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "1381:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1381:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "roles",
												"nameLocation": "1415:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "1398:22:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 523,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1398:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 524,
													"nodeType": "ArrayTypeName",
													"src": "1398:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1380:41:5"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1460:0:5"
									},
									"scope": 691,
									"src": "1352:221:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 588,
										"nodeType": "Block",
										"src": "1906:181:5",
										"statements": [
											{
												"body": {
													"id": 584,
													"nodeType": "Block",
													"src": "1959:100:5",
													"statements": [
														{
															"condition": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 575,
																			"name": "roles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 558,
																			"src": "1985:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																				"typeString": "bytes32[] memory"
																			}
																		},
																		"id": 577,
																		"indexExpression": {
																			"id": 576,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 564,
																			"src": "1991:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1985:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 578,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 555,
																		"src": "1995:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 574,
																	"name": "hasRole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 81,
																	"src": "1977:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (bytes32,address) view returns (bool)"
																	}
																},
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1977:26:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 583,
															"nodeType": "IfStatement",
															"src": "1973:76:5",
															"trueBody": {
																"id": 582,
																"nodeType": "Block",
																"src": "2005:44:5",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "74727565",
																			"id": 580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2030:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"functionReturnParameters": 562,
																		"id": 581,
																		"nodeType": "Return",
																		"src": "2023:11:5"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 567,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 564,
														"src": "1936:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 568,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "1940:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 569,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1946:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1940:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1936:16:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 585,
												"initializationExpression": {
													"assignments": [
														564
													],
													"declarations": [
														{
															"constant": false,
															"id": 564,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1929:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 585,
															"src": "1921:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 563,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1921:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 566,
													"initialValue": {
														"hexValue": "30",
														"id": 565,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1933:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1921:13:5"
												},
												"loopExpression": {
													"expression": {
														"id": 572,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1954:3:5",
														"subExpression": {
															"id": 571,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "1954:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 573,
													"nodeType": "ExpressionStatement",
													"src": "1954:3:5"
												},
												"nodeType": "ForStatement",
												"src": "1916:143:5"
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2075:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 562,
												"id": 587,
												"nodeType": "Return",
												"src": "2068:12:5"
											}
										]
									},
									"documentation": {
										"id": 553,
										"nodeType": "StructuredDocumentation",
										"src": "1583:228:5",
										"text": " @dev Check if account has any of the specified roles\n @param account Account to check\n @param roles Array of role identifiers\n @return hasAnyRole True if account has at least one of the roles"
									},
									"functionSelector": "68ca78f9",
									"id": 589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasAnyRole",
									"nameLocation": "1825:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1844:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "1836:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1836:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "roles",
												"nameLocation": "1870:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "1853:22:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 556,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1853:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 557,
													"nodeType": "ArrayTypeName",
													"src": "1853:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1835:41:5"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "1900:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 560,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1900:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1899:6:5"
									},
									"scope": 691,
									"src": "1816:271:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 635,
										"nodeType": "Block",
										"src": "2331:279:5",
										"statements": [
											{
												"assignments": [
													601
												],
												"declarations": [
													{
														"constant": false,
														"id": 601,
														"mutability": "mutable",
														"name": "allRoles",
														"nameLocation": "2358:8:5",
														"nodeType": "VariableDeclaration",
														"scope": 635,
														"src": "2341:25:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 599,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "2341:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 600,
															"nodeType": "ArrayTypeName",
															"src": "2341:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 604,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 602,
														"name": "getAllRoles",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 690,
														"src": "2369:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function () pure returns (bytes32[] memory)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2369:13:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2341:41:5"
											},
											{
												"assignments": [
													606
												],
												"declarations": [
													{
														"constant": false,
														"id": 606,
														"mutability": "mutable",
														"name": "count",
														"nameLocation": "2400:5:5",
														"nodeType": "VariableDeclaration",
														"scope": 635,
														"src": "2392:13:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 605,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2392:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 608,
												"initialValue": {
													"hexValue": "30",
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2408:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2392:17:5"
											},
											{
												"body": {
													"id": 631,
													"nodeType": "Block",
													"src": "2474:99:5",
													"statements": [
														{
															"condition": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 621,
																			"name": "allRoles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "2500:8:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																				"typeString": "bytes32[] memory"
																			}
																		},
																		"id": 623,
																		"indexExpression": {
																			"id": 622,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 610,
																			"src": "2509:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2500:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 624,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 592,
																		"src": "2513:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 620,
																	"name": "hasRole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 81,
																	"src": "2492:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (bytes32,address) view returns (bool)"
																	}
																},
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2492:29:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 630,
															"nodeType": "IfStatement",
															"src": "2488:75:5",
															"trueBody": {
																"id": 629,
																"nodeType": "Block",
																"src": "2523:40:5",
																"statements": [
																	{
																		"expression": {
																			"id": 627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "2541:7:5",
																			"subExpression": {
																				"id": 626,
																				"name": "count",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 606,
																				"src": "2541:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 628,
																		"nodeType": "ExpressionStatement",
																		"src": "2541:7:5"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 613,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "2448:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 614,
															"name": "allRoles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "2452:8:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2461:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2452:15:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2448:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 632,
												"initializationExpression": {
													"assignments": [
														610
													],
													"declarations": [
														{
															"constant": false,
															"id": 610,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2441:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 632,
															"src": "2433:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 609,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2433:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 612,
													"initialValue": {
														"hexValue": "30",
														"id": 611,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2445:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2433:13:5"
												},
												"loopExpression": {
													"expression": {
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2469:3:5",
														"subExpression": {
															"id": 617,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "2469:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 619,
													"nodeType": "ExpressionStatement",
													"src": "2469:3:5"
												},
												"nodeType": "ForStatement",
												"src": "2428:145:5"
											},
											{
												"expression": {
													"id": 633,
													"name": "count",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 606,
													"src": "2598:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 596,
												"id": 634,
												"nodeType": "Return",
												"src": "2591:12:5"
											}
										]
									},
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "2097:148:5",
										"text": " @dev Get all roles for an account\n @param account Account to check\n @return roleCount Number of roles the account has"
									},
									"functionSelector": "aca5a8a7",
									"id": 636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleCount",
									"nameLocation": "2259:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2280:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "2272:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2272:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2271:17:5"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "roleCount",
												"nameLocation": "2320:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 636,
												"src": "2312:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2312:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2311:19:5"
									},
									"scope": 691,
									"src": "2250:360:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "2791:296:5",
										"statements": [
											{
												"expression": {
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 643,
														"name": "roles",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 641,
														"src": "2801:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "36",
																"id": 647,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2823:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_6_by_1",
																	"typeString": "int_const 6"
																},
																"value": "6"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_6_by_1",
																	"typeString": "int_const 6"
																}
															],
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "2809:13:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (bytes32[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 644,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "2813:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"id": 645,
																"nodeType": "ArrayTypeName",
																"src": "2813:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																	"typeString": "bytes32[]"
																}
															}
														},
														"id": 648,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2809:16:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[] memory"
														}
													},
													"src": "2801:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"id": 650,
												"nodeType": "ExpressionStatement",
												"src": "2801:24:5"
											},
											{
												"expression": {
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 651,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "2835:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 653,
														"indexExpression": {
															"hexValue": "30",
															"id": 652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2841:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2835:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 654,
														"name": "DEFAULT_ADMIN_ROLE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "2846:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2835:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 656,
												"nodeType": "ExpressionStatement",
												"src": "2835:29:5"
											},
											{
												"expression": {
													"id": 661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 657,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "2874:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 659,
														"indexExpression": {
															"hexValue": "31",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2880:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2874:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 660,
														"name": "ADMIN_ROLE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 456,
														"src": "2885:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2874:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 662,
												"nodeType": "ExpressionStatement",
												"src": "2874:21:5"
											},
											{
												"expression": {
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 663,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "2905:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 665,
														"indexExpression": {
															"hexValue": "32",
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2911:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2905:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 666,
														"name": "AI_ORACLE_ROLE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "2916:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2905:25:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 668,
												"nodeType": "ExpressionStatement",
												"src": "2905:25:5"
											},
											{
												"expression": {
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 669,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "2940:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 671,
														"indexExpression": {
															"hexValue": "33",
															"id": 670,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2946:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2940:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 672,
														"name": "TREASURY_MANAGER_ROLE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "2951:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2940:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 674,
												"nodeType": "ExpressionStatement",
												"src": "2940:32:5"
											},
											{
												"expression": {
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 675,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "2982:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 677,
														"indexExpression": {
															"hexValue": "34",
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2988:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2982:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 678,
														"name": "MILESTONE_APPROVER_ROLE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 471,
														"src": "2993:23:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2982:34:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 680,
												"nodeType": "ExpressionStatement",
												"src": "2982:34:5"
											},
											{
												"expression": {
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 681,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "3026:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 683,
														"indexExpression": {
															"hexValue": "35",
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3032:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3026:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 684,
														"name": "DISPUTE_RESOLVER_ROLE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "3037:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3026:32:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 686,
												"nodeType": "ExpressionStatement",
												"src": "3026:32:5"
											},
											{
												"expression": {
													"id": 687,
													"name": "roles",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 641,
													"src": "3075:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 642,
												"id": 688,
												"nodeType": "Return",
												"src": "3068:12:5"
											}
										]
									},
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "2620:98:5",
										"text": " @dev Get all available roles\n @return roles Array of all role identifiers"
									},
									"functionSelector": "f2bcac3d",
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllRoles",
									"nameLocation": "2732:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2743:2:5"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "roles",
												"nameLocation": "2784:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "2767:22:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 639,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "2767:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 640,
													"nodeType": "ArrayTypeName",
													"src": "2767:9:5",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2766:24:5"
									},
									"scope": 691,
									"src": "2723:364:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 692,
							"src": "227:2862:5",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336
							]
						}
					],
					"src": "32:3057:5"
				},
				"id": 5
			}
		}
	}
}