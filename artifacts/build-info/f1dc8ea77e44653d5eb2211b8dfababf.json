{
	"id": "f1dc8ea77e44653d5eb2211b8dfababf",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"viaIR": true,
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		},
		"sources": {
			"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"./ProposalVoting.sol\";\nimport \"./interfaces/IProposalRegistry.sol\";\n\ncontract ProposalRegistry is IProposalRegistry, ProposalVoting {\n    constructor(address _aiScoreRegistry, address _treasuryEscrow)\n        ProposalRegistryBase(_aiScoreRegistry, _treasuryEscrow) {}\n\n    function submitProposal(IProposalRegistry.ProposalInput memory input)\n        external\n        payable\n        override(IProposalRegistry, ProposalSubmission)\n        returns (uint256)\n    {\n        require(msg.value >= 0.001 * 10**18, \"Insufficient proposal fee\"); // 0.001 XFI\n        return _submitProposal(input);\n    }\n\n    function castVote(uint256 proposalId, VoteType voteType)\n        external\n        override(IProposalRegistry, ProposalVoting)\n    {\n        _castVote(proposalId, voteType);\n    }\n\n    function executeProposal(uint256 proposalId)\n        external\n        override(IProposalRegistry, ProposalVoting)\n    {\n        _executeProposal(proposalId);\n    }\n\n    function getCurrentProposalId()\n        external\n        view\n        override(IProposalRegistry, ProposalRegistryBase)\n        returns (uint256)\n    {\n        return _currentProposalId;\n    }\n\n    function getVotingPower(address account)\n        external\n        view\n        override(IProposalRegistry, ProposalRegistryBase)\n        returns (uint256)\n    {\n        return account.balance;\n    }\n\n    function getProposal(uint256 proposalId) external view override returns (\n        uint256 id,\n        address proposer,\n        string memory title,\n        string memory summary,\n        uint256 requestedAmount,\n        ProposalStatus status,\n        uint256 aiScore,\n        uint256 votingStart,\n        uint256 votingEnd,\n        uint256 forVotes,\n        uint256 againstVotes,\n        uint256 abstainVotes\n    ) {\n        require(proposalId > 0 && proposalId <= _currentProposalId, \"Invalid proposal ID\");\n\n        Proposal storage p = proposals[proposalId];\n\n        return (\n            p.id,\n            p.proposer,\n            p.title,\n            p.summary,\n            p.requestedAmount,\n            p.status,\n            p.aiScore,\n            p.votingStart,\n            p.votingEnd,\n            p.forVotes,\n            p.againstVotes,\n            p.abstainVotes\n        );\n    }\n\n    function pause() external onlyRole(ADMIN_ROLE) {\n        _pause();\n    }\n\n    function unpause() external onlyRole(ADMIN_ROLE) {\n        _unpause();\n    }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
			},
			"CrossFi-Treasury-Guard/contracts/interfaces/IProposalRegistry.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\npragma experimental ABIEncoderV2;\n\ninterface IProposalRegistry {\n    enum ProposalStatus {\n        PendingAIReview,\n        Voting,\n        Approved,\n        RejectedByAI,\n        RejectedByDAO,\n        Executed,\n        Cancelled\n    }\n\n    enum VoteType {\n        Against,\n        For,\n        Abstain\n    }\n\n    struct Milestone {\n        string description;\n        uint256 amount;\n        bool completed;\n        uint256 completionTime;\n    }\n\n    struct Proposal {\n        uint256 id;\n        address proposer;\n        string title;\n        string summary;\n        string ipfsCID;\n        uint256 requestedAmount;\n        ProposalStatus status;\n        uint256 submissionTime;\n        uint256 votingPeriod;\n        uint256 votingStart;\n        uint256 votingEnd;\n        uint256 forVotes;\n        uint256 againstVotes;\n        uint256 abstainVotes;\n        uint256 aiScore;\n        string aiJustification;\n        Milestone[] milestones;\n        uint256 totalSupplyAtStart;\n    }\n\n    struct ProposalInput {\n        string title;\n        string summary;\n        string ipfsCID;\n        uint256 requestedAmount;\n        string[] milestoneDescriptions;\n        uint256[] milestoneAmounts;\n        uint256 votingPeriod;\n    }\n\n    function submitProposal(ProposalInput memory input) external payable returns (uint256);\n\n    function castVote(uint256 proposalId, VoteType voteType) external;\n    function executeProposal(uint256 proposalId) external;\n\n    function getProposal(uint256 proposalId) external view returns (\n        uint256 id,\n        address proposer,\n        string memory title,\n        string memory summary,\n        uint256 requestedAmount,\n        ProposalStatus status,\n        uint256 aiScore,\n        uint256 votingStart,\n        uint256 votingEnd,\n        uint256 forVotes,\n        uint256 againstVotes,\n        uint256 abstainVotes\n    );\n\n    function getCurrentProposalId() external view returns (uint256);\n    function getVotingPower(address account) external view returns (uint256);\n}\n"
			},
			"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"./ProposalSubmission.sol\";\n\nabstract contract ProposalVoting is ProposalSubmission {\n    \n    function castVote(uint256 proposalId, IProposalRegistry.VoteType voteType) external virtual whenNotPaused {\n        _castVote(proposalId, voteType);\n    }\n\n    function executeProposal(uint256 proposalId) external virtual nonReentrant {\n        _executeProposal(proposalId);\n    }\n\n    function _castVote(uint256 proposalId, IProposalRegistry.VoteType voteType) internal {\n        require(!hasVoted[proposalId][msg.sender], \"Already voted\");\n        \n        IProposalRegistry.Proposal storage proposal = proposals[proposalId];\n        require(proposal.status == IProposalRegistry.ProposalStatus.Voting, \"Not voting\");\n        \n        uint256 votingPower = msg.sender.balance; \n        hasVoted[proposalId][msg.sender] = true;\n        \n        // Update vote counts\n        _updateVoteCounts(proposal, voteType, votingPower);\n        \n        emit VoteCast(proposalId, msg.sender, voteType, votingPower);\n    }\n\n    function _updateVoteCounts(\n        IProposalRegistry.Proposal storage proposal,\n        IProposalRegistry.VoteType voteType,\n        uint256 votingPower\n    ) internal {\n        if (voteType == IProposalRegistry.VoteType.For) {\n            proposal.forVotes += votingPower;\n        } else if (voteType == IProposalRegistry.VoteType.Against) {\n            proposal.againstVotes += votingPower;\n        } else {\n            proposal.abstainVotes += votingPower;\n        }\n    }\n\n    function _executeProposal(uint256 proposalId) internal {\n        IProposalRegistry.Proposal storage proposal = proposals[proposalId];\n        require(proposal.status == IProposalRegistry.ProposalStatus.Voting, \"Not voting\");\n        require(block.timestamp > proposal.votingEnd, \"Voting active\");\n        \n        // Calculate voting results\n        (bool hasQuorum, bool approved) = _calculateVotingResults(proposal);\n        \n        // Update proposal status and handle results\n        _handleVotingResults(proposalId, proposal, hasQuorum, approved);\n        \n        emit ProposalExecuted(proposalId, proposal.status);\n    }\n\n    function _calculateVotingResults(IProposalRegistry.Proposal storage proposal) \n        internal \n        view \n        returns (bool hasQuorum, bool approved) \n    {\n        uint256 totalVotes = proposal.forVotes + proposal.againstVotes + proposal.abstainVotes;\n        hasQuorum = totalVotes >= 1000 * 10**18;\n        approved = hasQuorum && proposal.forVotes > proposal.againstVotes;\n    }\n\n    function _handleVotingResults(\n        uint256 proposalId,\n        IProposalRegistry.Proposal storage proposal,\n        bool hasQuorum,\n        bool approved\n    ) internal {\n        if (approved) {\n            proposal.status = IProposalRegistry.ProposalStatus.Approved;\n            treasuryEscrow.createEscrow(proposalId, proposal.proposer, proposal.requestedAmount, proposal.milestones.length);\n            emit ProposalApproved(proposalId, proposal.requestedAmount);\n        } else {\n            proposal.status = IProposalRegistry.ProposalStatus.RejectedByDAO;\n            emit ProposalRejected(proposalId, hasQuorum ? \"Majority voted against\" : \"Insufficient quorum\");\n        }\n    }\n}\n\n\n"
			},
			"CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"./ProposalRegistryBase.sol\";\nimport \"./interfaces/IProposalRegistry.sol\";\n\nabstract contract ProposalSubmission is ProposalRegistryBase {\n    function submitProposal(IProposalRegistry.ProposalInput memory input)\n        external\n        payable\n        virtual\n        whenNotPaused\n        nonReentrant\n        returns (uint256)\n    {\n        return _submitProposal(input);\n    }\n\n    function _submitProposal(IProposalRegistry.ProposalInput memory input)\n        internal\n        returns (uint256)\n    {\n        uint256 proposalId = _validateAndCreateId(\n            input.title,\n            input.requestedAmount,\n            input.votingPeriod,\n            input.milestoneDescriptions.length,\n            input.milestoneAmounts.length\n        );\n\n        _setBasicProposalInfo(proposalId, input.title, input.summary, input.ipfsCID);\n        _setAdditionalProposalInfo(proposalId, input.requestedAmount, input.votingPeriod);\n        _addMilestones(proposalId, input.milestoneDescriptions, input.milestoneAmounts);\n\n        emit ProposalSubmitted(proposalId, msg.sender, input.title, input.requestedAmount, input.ipfsCID, block.timestamp);\n        return proposalId;\n    }\n}\n\n\n"
			},
			"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"./interfaces/IProposalRegistry.sol\";\nimport \"./interfaces/IAIScoreRegistry.sol\";\nimport \"./interfaces/ITreasuryEscrow.sol\";\nimport \"./utils/ExtendedAccessControl.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\n\nabstract contract ProposalRegistryBase is ExtendedAccessControl, ReentrancyGuard, Pausable {\n    IAIScoreRegistry public aiScoreRegistry;\n    ITreasuryEscrow public treasuryEscrow;\n    \n    uint256 internal _currentProposalId;\n    \n    // Constants\n    uint256 public constant MIN_VOTING_PERIOD = 3 days;\n    uint256 public constant MAX_VOTING_PERIOD = 14 days;\n    uint256 public constant MIN_PROPOSAL_THRESHOLD = 1000 * 10**18; // Native XFI in wei\n    uint256 public constant QUORUM_PERCENTAGE = 15;\n    uint256 public constant APPROVAL_THRESHOLD = 51;\n    uint256 public constant AI_SCORE_THRESHOLD = 70;\n    uint256 public constant MAX_MILESTONES = 10;\n    uint256 public constant MAX_REQUESTED_AMOUNT = 1000000 * 10**18; // 1M XFI in wei\n    \n    // Mappings\n    mapping(uint256 => IProposalRegistry.Proposal) public proposals;\n    mapping(uint256 => mapping(address => bool)) public hasVoted;\n    mapping(uint256 => mapping(address => IProposalRegistry.VoteType)) public voterChoices;\n    mapping(address => uint256) public proposerReputation;\n    \n    // Events\n    event ProposalSubmitted(uint256 indexed proposalId, address indexed proposer, string title, uint256 requestedAmount, string ipfsCID, uint256 timestamp);\n    event VotingStarted(uint256 indexed proposalId, uint256 votingStart, uint256 votingEnd);\n    event VoteCast(uint256 indexed proposalId, address indexed voter, IProposalRegistry.VoteType voteType, uint256 weight);\n    event ProposalApproved(uint256 indexed proposalId, uint256 amount);\n    event ProposalRejected(uint256 indexed proposalId, string reason);\n    event ProposalExecuted(uint256 indexed proposalId, IProposalRegistry.ProposalStatus status);\n    event ProposalCancelled(uint256 indexed proposalId, address indexed proposer, uint256 timestamp);\n    event AIScoreProcessed(uint256 indexed proposalId, uint256 score, string justification);\n    event AIScoreRegistryUpdated(address newRegistry);\n    event TreasuryEscrowUpdated(address newEscrow);\n\n    constructor(address _aiScoreRegistry, address _treasuryEscrow) {\n        require(_aiScoreRegistry != address(0), \"Invalid AI registry\");\n        require(_treasuryEscrow != address(0), \"Invalid treasury escrow\");\n        \n        aiScoreRegistry = IAIScoreRegistry(_aiScoreRegistry);\n        treasuryEscrow = ITreasuryEscrow(_treasuryEscrow);\n        _currentProposalId = 0;\n        \n        _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n        _grantRole(ADMIN_ROLE, msg.sender);\n    }\n    \n    /**\n     * @dev Validate input and create new proposal ID\n     */\n    function _validateAndCreateId(\n        string memory title,\n        uint256 requestedAmount,\n        uint256 votingPeriod,\n        uint256 milestonesLength,\n        uint256 milestoneAmountsLength\n    ) internal returns (uint256) {\n        // Input validation\n        require(bytes(title).length > 0 && bytes(title).length <= 200, \"Invalid title length\");\n        require(requestedAmount > 0 && requestedAmount <= MAX_REQUESTED_AMOUNT, \"Invalid amount\");\n        require(votingPeriod >= MIN_VOTING_PERIOD && votingPeriod <= MAX_VOTING_PERIOD, \"Invalid voting period\");\n        require(milestonesLength == milestoneAmountsLength, \"Milestone arrays mismatch\");\n        require(milestonesLength > 0 && milestonesLength <= MAX_MILESTONES, \"Invalid milestone count\");\n        \n        // Check proposer eligibility (using native balance)\n        require(msg.sender.balance >= MIN_PROPOSAL_THRESHOLD, \"Insufficient XFI balance\");\n        \n        // Create new proposal ID\n        return _incrementProposalId();\n    }\n    \n    /**\n     * @dev Set basic proposal information\n     */\n    function _setBasicProposalInfo(\n        uint256 proposalId,\n        string memory title,\n        string memory summary,\n        string memory ipfsCID\n    ) internal {\n        require(bytes(summary).length > 0 && bytes(summary).length <= 1000, \"Invalid summary length\");\n        require(bytes(ipfsCID).length > 0, \"IPFS CID required\");\n        \n        IProposalRegistry.Proposal storage proposal = proposals[proposalId];\n        proposal.id = proposalId;\n        proposal.proposer = msg.sender;\n        proposal.title = title;\n        proposal.summary = summary;\n        proposal.ipfsCID = ipfsCID;\n        proposal.status = IProposalRegistry.ProposalStatus.PendingAIReview;\n        proposal.submissionTime = block.timestamp;\n    }\n    \n    /**\n     * @dev Set additional proposal information\n     */\n    function _setAdditionalProposalInfo(\n        uint256 proposalId,\n        uint256 requestedAmount,\n        uint256 votingPeriod\n    ) internal {\n        IProposalRegistry.Proposal storage proposal = proposals[proposalId];\n        proposal.requestedAmount = requestedAmount;\n        proposal.votingPeriod = votingPeriod;\n        proposal.totalSupplyAtStart = 0; \n    }\n    \n    /**\n     * @dev Add milestones to proposal\n     */\n    function _addMilestones(\n        uint256 proposalId,\n        string[] memory descriptions,\n        uint256[] memory amounts\n    ) internal {\n        // Validate milestone amounts sum to requested amount\n        uint256 totalMilestoneAmount = 0;\n        for (uint256 i = 0; i < amounts.length; i++) {\n            require(amounts[i] > 0, \"Milestone amount must be positive\");\n            require(bytes(descriptions[i]).length > 0, \"Milestone description required\");\n            totalMilestoneAmount += amounts[i];\n        }\n        \n        IProposalRegistry.Proposal storage proposal = proposals[proposalId];\n        require(totalMilestoneAmount == proposal.requestedAmount, \"Milestone amounts don't sum to requested amount\");\n        \n        // Add milestones\n        for (uint256 i = 0; i < descriptions.length; i++) {\n            proposal.milestones.push(IProposalRegistry.Milestone({\n                description: descriptions[i],\n                amount: amounts[i],\n                completed: false,\n                completionTime: 0\n            }));\n        }\n    }\n\n    function getCurrentProposalId() external view virtual returns (uint256) {\n        return _currentProposalId;\n    }\n\n    function getVotingPower(address account) external view virtual returns (uint256) {\n        return account.balance; // Native XFI balance\n    }\n\n    function _incrementProposalId() internal returns (uint256) {\n        _currentProposalId++;\n        return _currentProposalId;\n    }\n    \n    // Modifiers\n    modifier onlyValidProposal(uint256 proposalId) {\n        require(proposalId > 0 && proposalId <= _currentProposalId, \"Invalid proposal ID\");\n        _;\n    }\n    \n    modifier onlyProposer(uint256 proposalId) {\n        require(proposals[proposalId].proposer == msg.sender, \"Not the proposer\");\n        _;\n    }\n    \n    modifier onlyDuringVoting(uint256 proposalId) {\n        IProposalRegistry.Proposal storage proposal = proposals[proposalId];\n        require(proposal.status == IProposalRegistry.ProposalStatus.Voting, \"Not in voting phase\");\n        require(block.timestamp >= proposal.votingStart && block.timestamp <= proposal.votingEnd, \"Voting period invalid\");\n        _;\n    }\n    \n    function updateAIScoreRegistry(address newRegistry) external onlyRole(ADMIN_ROLE) {\n        require(newRegistry != address(0), \"Invalid address\");\n        aiScoreRegistry = IAIScoreRegistry(newRegistry);\n        emit AIScoreRegistryUpdated(newRegistry);\n    }\n\n    function updateTreasuryEscrow(address newEscrow) external onlyRole(ADMIN_ROLE) {\n        require(newEscrow != address(0), \"Invalid address\");\n        treasuryEscrow = ITreasuryEscrow(newEscrow);\n        emit TreasuryEscrowUpdated(newEscrow);\n    }\n}\n\n\n\n\n\n\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\n\n/**\n * @title AccessControl\n * @dev Extended access control with custom roles for CrossFi Treasury Guard\n */\ncontract ExtendedAccessControl is AccessControl {\n    \n    // Custom roles\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\n    bytes32 public constant AI_ORACLE_ROLE = keccak256(\"AI_ORACLE_ROLE\");\n    bytes32 public constant TREASURY_MANAGER_ROLE = keccak256(\"TREASURY_MANAGER_ROLE\");\n    bytes32 public constant MILESTONE_APPROVER_ROLE = keccak256(\"MILESTONE_APPROVER_ROLE\");\n    bytes32 public constant DISPUTE_RESOLVER_ROLE = keccak256(\"DISPUTE_RESOLVER_ROLE\");\n    \n    constructor() {\n         _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\n    }\n    \n    /**\n     * @dev Grant multiple roles to an account\n     * @param account Account to grant roles to\n     * @param roles Array of role identifiers\n     */\n    function grantMultipleRoles(address account, bytes32[] memory roles) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        for (uint256 i = 0; i < roles.length; i++) {\n            grantRole(roles[i], account);\n        }\n    }\n    \n    /**\n     * @dev Revoke multiple roles from an account\n     * @param account Account to revoke roles from\n     * @param roles Array of role identifiers\n     */\n    function revokeMultipleRoles(address account, bytes32[] memory roles) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        for (uint256 i = 0; i < roles.length; i++) {\n            revokeRole(roles[i], account);\n        }\n    }\n    \n    /**\n     * @dev Check if account has any of the specified roles\n     * @param account Account to check\n     * @param roles Array of role identifiers\n     * @return hasAnyRole True if account has at least one of the roles\n     */\n    function hasAnyRole(address account, bytes32[] memory roles) external view returns (bool) {\n        for (uint256 i = 0; i < roles.length; i++) {\n            if (hasRole(roles[i], account)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    \n    /**\n     * @dev Get all roles for an account\n     * @param account Account to check\n     * @return roleCount Number of roles the account has\n     */\n    function getRoleCount(address account) external view returns (uint256 roleCount) {\n        bytes32[] memory allRoles = getAllRoles();\n        uint256 count = 0;\n        \n        for (uint256 i = 0; i < allRoles.length; i++) {\n            if (hasRole(allRoles[i], account)) {\n                count++;\n            }\n        }\n        \n        return count;\n    }\n    \n    /**\n     * @dev Get all available roles\n     * @return roles Array of all role identifiers\n     */\n    function getAllRoles() public pure returns (bytes32[] memory roles) {\n        roles = new bytes32[](6);\n        roles[0] = DEFAULT_ADMIN_ROLE;\n        roles[1] = ADMIN_ROLE;\n        roles[2] = AI_ORACLE_ROLE;\n        roles[3] = TREASURY_MANAGER_ROLE;\n        roles[4] = MILESTONE_APPROVER_ROLE;\n        roles[5] = DISPUTE_RESOLVER_ROLE;\n        return roles;\n    }\n}"
			},
			"CrossFi-Treasury-Guard/contracts/interfaces/ITreasuryEscrow.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n/**\n * @title ITreasuryEscrow\n * @dev Interface for TreasuryEscrow contract handling native XFI coin\n */\ninterface ITreasuryEscrow {\n    \n    enum EscrowStatus {\n        Active,\n        Completed,\n        Cancelled\n    }\n    \n    // Events\n    event EscrowCreated(\n        uint256 indexed proposalId,\n        address indexed beneficiary,\n        uint256 totalAmount,\n        uint256 milestoneCount\n    );\n    \n    event FundsReleased(\n        uint256 indexed proposalId,\n        uint256 indexed milestoneIndex,\n        uint256 amount,\n        address indexed beneficiary\n    );\n    \n    function createEscrow(\n        uint256 proposalId,\n        address beneficiary,\n        uint256 totalAmount,\n        uint256 milestoneCount\n    ) external payable;\n    \n    function getEscrow(uint256 proposalId) external view returns (\n        address beneficiary,\n        uint256 totalAmount,\n        uint256 releasedAmount,\n        uint256 milestoneCount,\n        EscrowStatus status,\n        uint256 creationTime\n    );\n    \n    function escrowExists(uint256 proposalId) external view returns (bool);\n}"
			},
			"CrossFi-Treasury-Guard/contracts/interfaces/IAIScoreRegistry.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n/**\n * @title IAIScoreRegistry\n * @dev Interface for AIScoreRegistry contract\n */\ninterface IAIScoreRegistry {\n    \n    struct ScoringBreakdown {\n        uint8 ecosystemScore;\n        uint8 feasibilityScore;\n        uint8 riskScore;\n        uint8 teamScore;\n        uint8 innovationScore;\n    }\n    \n    // Events\n    event AIScoreSubmitted(\n        uint256 indexed proposalId,\n        uint256 overallScore,\n        string justificationIPFS,\n        string modelVersion,\n        address indexed oracle,\n        uint256 timestamp\n    );\n    \n    // Functions\n    function submitAIScore(\n        uint256 proposalId,\n        uint256 overallScore,\n        string memory justificationIPFS,\n        string memory modelVersion,\n        ScoringBreakdown memory breakdown\n    ) external;\n    \n    function getAIScore(uint256 proposalId) external view returns (\n        uint256 score,\n        string memory justification,\n        bool exists\n    );\n    \n    function hasAIScore(uint256 proposalId) external view returns (bool exists);\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\n\npragma solidity >=0.8.4;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)22_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)22_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)22_storage"
							},
							"t_struct(RoleData)22_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 19,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 21,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 397,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 498,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol": {
				"ProposalRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_aiScoreRegistry",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_treasuryEscrow",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "score",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "justification",
									"type": "string"
								}
							],
							"name": "AIScoreProcessed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newRegistry",
									"type": "address"
								}
							],
							"name": "AIScoreRegistryUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ProposalApproved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "proposer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "ProposalCancelled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum IProposalRegistry.ProposalStatus",
									"name": "status",
									"type": "uint8"
								}
							],
							"name": "ProposalExecuted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"name": "ProposalRejected",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "proposer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "title",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "requestedAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "ipfsCID",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "ProposalSubmitted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newEscrow",
									"type": "address"
								}
							],
							"name": "TreasuryEscrowUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "voter",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "enum IProposalRegistry.VoteType",
									"name": "voteType",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								}
							],
							"name": "VoteCast",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "votingStart",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "votingEnd",
									"type": "uint256"
								}
							],
							"name": "VotingStarted",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "AI_ORACLE_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "AI_SCORE_THRESHOLD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "APPROVAL_THRESHOLD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DISPUTE_RESOLVER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_MILESTONES",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_REQUESTED_AMOUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_VOTING_PERIOD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MILESTONE_APPROVER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MIN_PROPOSAL_THRESHOLD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MIN_VOTING_PERIOD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "QUORUM_PERCENTAGE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TREASURY_MANAGER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "aiScoreRegistry",
							"outputs": [
								{
									"internalType": "contract IAIScoreRegistry",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"internalType": "enum IProposalRegistry.VoteType",
									"name": "voteType",
									"type": "uint8"
								}
							],
							"name": "castVote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "executeProposal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllRoles",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentProposalId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "getProposal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "proposer",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "title",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "summary",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "requestedAmount",
									"type": "uint256"
								},
								{
									"internalType": "enum IProposalRegistry.ProposalStatus",
									"name": "status",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "aiScore",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "votingStart",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "votingEnd",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "forVotes",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "againstVotes",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "abstainVotes",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getRoleCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "roleCount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getVotingPower",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								}
							],
							"name": "grantMultipleRoles",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								}
							],
							"name": "hasAnyRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "hasVoted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "proposals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "proposer",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "title",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "summary",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "ipfsCID",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "requestedAmount",
									"type": "uint256"
								},
								{
									"internalType": "enum IProposalRegistry.ProposalStatus",
									"name": "status",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "submissionTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "votingPeriod",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "votingStart",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "votingEnd",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "forVotes",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "againstVotes",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "abstainVotes",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "aiScore",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "aiJustification",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "totalSupplyAtStart",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "proposerReputation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								}
							],
							"name": "revokeMultipleRoles",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "title",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "summary",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "ipfsCID",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "requestedAmount",
											"type": "uint256"
										},
										{
											"internalType": "string[]",
											"name": "milestoneDescriptions",
											"type": "string[]"
										},
										{
											"internalType": "uint256[]",
											"name": "milestoneAmounts",
											"type": "uint256[]"
										},
										{
											"internalType": "uint256",
											"name": "votingPeriod",
											"type": "uint256"
										}
									],
									"internalType": "struct IProposalRegistry.ProposalInput",
									"name": "input",
									"type": "tuple"
								}
							],
							"name": "submitProposal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasuryEscrow",
							"outputs": [
								{
									"internalType": "contract ITreasuryEscrow",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newRegistry",
									"type": "address"
								}
							],
							"name": "updateAIScoreRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newEscrow",
									"type": "address"
								}
							],
							"name": "updateTreasuryEscrow",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "voterChoices",
							"outputs": [
								{
									"internalType": "enum IProposalRegistry.VoteType",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"getAllRoles()": {
								"details": "Get all available roles",
								"returns": {
									"roles": "Array of all role identifiers"
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleCount(address)": {
								"details": "Get all roles for an account",
								"params": {
									"account": "Account to check"
								},
								"returns": {
									"roleCount": "Number of roles the account has"
								}
							},
							"grantMultipleRoles(address,bytes32[])": {
								"details": "Grant multiple roles to an account",
								"params": {
									"account": "Account to grant roles to",
									"roles": "Array of role identifiers"
								}
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasAnyRole(address,bytes32[])": {
								"details": "Check if account has any of the specified roles",
								"params": {
									"account": "Account to check",
									"roles": "Array of role identifiers"
								},
								"returns": {
									"_0": "hasAnyRole True if account has at least one of the roles"
								}
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeMultipleRoles(address,bytes32[])": {
								"details": "Revoke multiple roles from an account",
								"params": {
									"account": "Account to revoke roles from",
									"roles": "Array of role identifiers"
								}
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n  0x80\n  jumpi(tag_8, callvalue)\n  0x1f\n  bytecodeSize\n  codesize\n  dup2\n  swap1\n  sub\n  swap2\n  dup3\n  add\n  not(0x1f)\n  and\n  dup4\n  add\n  swap2\n  sub(shl(0x40, 0x01), 0x01)\n  dup4\n  gt\n  dup5\n  dup5\n  lt\n  or\n  tag_6\n  jumpi\n  dup1\n  dup5\n  swap3\n  0x40\n  swap5\n  dup6\n  mstore\n  dup4\n  codecopy\n  dup2\n  add\n  sub\n  slt\n  tag_8\n  jumpi\n  tag_10\n  0x20\n  tag_11\n  dup4\n  tag_1\n  jump\t// in\ntag_11:\n  swap3\n  add\n  tag_1\n  jump\t// in\ntag_10:\n    /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":744:786  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_12\n    /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":775:785  msg.sender */\n  caller\n    /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":744:786  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_2\n  jump\t// in\ntag_12:\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n  dup1\n  sstore\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  0x02\n    /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n  sload\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n    /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":2426:2456  _aiScoreRegistry != address(0) */\n  iszero\n    /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n  tag_13\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  swap2\n    /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":2498:2527  _treasuryEscrow != address(0) */\n  dup3\n  iszero\n    /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n  tag_15\n  jumpi\n  not(sub(shl(0xa8, 0x01), 0x01))\n  swap1\n  swap2\n  and\n  0x08\n  swap2\n  swap1\n  swap2\n  shl\n  sub(shl(0xa8, 0x01), 0x0100)\n  and\n  or\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  0x02\n    /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n  sstore\n    /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":2636:2685  treasuryEscrow = ITreasuryEscrow(_treasuryEscrow) */\n  0x03\n    /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n  0x00\n    /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":2695:2717  _currentProposalId = 0 */\n  0x04\n    /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n  sstore\n    /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":2736:2778  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_17\n    /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":775:785  msg.sender */\n  caller\n    /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":2736:2778  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_2\n  jump\t// in\ntag_17:\n  pop\n    /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":2788:2822  _grantRole(ADMIN_ROLE, msg.sender) */\n  tag_18\n    /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":775:785  msg.sender */\n  caller\n    /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":2788:2822  _grantRole(ADMIN_ROLE, msg.sender) */\n  tag_3\n  jump\t// in\ntag_18:\n  pop\n    /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n  mload(0x40)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_15:\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x17\n  0x24\n  dup3\n  add\n  mstore\n  0x496e76616c696420747265617375727920657363726f77000000000000000000\n  0x44\n  dup3\n  add\n  mstore\n  0x64\n  swap1\n  revert\ntag_13:\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x13\n  0x24\n  dup3\n  add\n  mstore\n  0x496e76616c696420414920726567697374727900000000000000000000000000\n  0x44\n  dup3\n  add\n  mstore\n  0x64\n  swap1\n  revert\ntag_8:\n  0x00\n  dup1\n  revert\ntag_6:\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x41)\n  revert(0x00, 0x24)\ntag_1:\n  mload\n  swap1\n  sub(shl(0xa0, 0x01), 0x01)\n  dup3\n  and\n  dup3\n  sub\n  tag_8\n  jumpi\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_2:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n  0x00\n    /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n  swap1\n  dup2\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_f0df3dcda05b4fbd9c655cde3d5ceb211e019e72ec816e127a59e7195f2cd7f5\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n  tag_21\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n  0x00\n    /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n  dup2\n  dup2\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_f0df3dcda05b4fbd9c655cde3d5ceb211e019e72ec816e127a59e7195f2cd7f5\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  0x20\n  mstore\n  0x40\n  dup2\n  keccak256\n  dup1\n  sload\n  not(0xff)\n  and\n  0x01\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  swap2\n    /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n  swap1\n  0x00\n  dup1\n  mload\n  0x20\n  data_01400fe2f234cf888b5e4c66700c7903f33f31bfc9675e51cb0119f915eb534d\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n  dup2\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6323:6327  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\ntag_21:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_3:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n  dup2\n  and\n  0x00\n  swap1\n  dup2\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_27ad65e758a22f2fe9f0d501da4e2a54eb635546ab8210118501a36d81e3b048\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n  tag_21\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n  0x00\n  dup2\n  dup2\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_27ad65e758a22f2fe9f0d501da4e2a54eb635546ab8210118501a36d81e3b048\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  0x20\n  mstore\n  0x40\n  dup2\n  keccak256\n  dup1\n  sload\n  not(0xff)\n  and\n  0x01\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  swap2\n    /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n  swap1\n    /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":343:366  keccak256(\"ADMIN_ROLE\") */\n  0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n  swap1\n  0x00\n  dup1\n  mload\n  0x20\n  data_01400fe2f234cf888b5e4c66700c7903f33f31bfc9675e51cb0119f915eb534d\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  swap1\n    /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6323:6327  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n  swap1\n  jump\t// out\nstop\ndata_01400fe2f234cf888b5e4c66700c7903f33f31bfc9675e51cb0119f915eb534d 2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\ndata_27ad65e758a22f2fe9f0d501da4e2a54eb635546ab8210118501a36d81e3b048 7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec\ndata_f0df3dcda05b4fbd9c655cde3d5ceb211e019e72ec816e127a59e7195f2cd7f5 ad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5\n\nsub_0: assembly {\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      mstore(0x40, 0x0100)\n      jumpi(tag_26, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_26:\n      0x00\n      dup1\n      calldataload\n      0xe0\n      shr\n      dup1\n      0x013cf08b\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_30\n      jumpi\n      dup1\n      0x08d256af\n      eq\n      tag_32\n      jumpi\n      dup1\n      0x0d61b519\n      eq\n      tag_34\n      jumpi\n      dup1\n      0x1d9dfd4e\n      eq\n      tag_36\n      jumpi\n      dup1\n      0x215809ca\n      eq\n      tag_38\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_40\n      jumpi\n      dup1\n      0x2d142b76\n      eq\n      tag_42\n      jumpi\n      dup1\n      0x2d75ae0e\n      eq\n      tag_44\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_46\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_48\n      jumpi\n      dup1\n      0x39c854fa\n      eq\n      tag_50\n      jumpi\n      dup1\n      0x3ab34290\n      eq\n      tag_52\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_54\n      jumpi\n      dup1\n      0x43859632\n      eq\n      tag_56\n      jumpi\n      dup1\n      0x4c05abeb\n      eq\n      tag_58\n      jumpi\n      dup1\n      0x4fe9d1f5\n      eq\n      tag_60\n      jumpi\n      dup1\n      0x56781388\n      eq\n      tag_62\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_64\n      jumpi\n      dup1\n      0x6807fc21\n      eq\n      tag_66\n      jumpi\n      dup1\n      0x68ca78f9\n      eq\n      tag_68\n      jumpi\n      dup1\n      0x75b238fc\n      eq\n      tag_70\n      jumpi\n      dup1\n      0x791f5d23\n      eq\n      tag_72\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_74\n      jumpi\n      dup1\n      0x91b9f9d8\n      eq\n      tag_76\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_78\n      jumpi\n      dup1\n      0x96479e19\n      eq\n      tag_80\n      jumpi\n      dup1\n      0xa02d72fb\n      eq\n      tag_82\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_84\n      jumpi\n      dup1\n      0xa64e024a\n      eq\n      tag_86\n      jumpi\n      dup1\n      0xabd98fb0\n      eq\n      tag_88\n      jumpi\n      dup1\n      0xaca5a8a7\n      eq\n      tag_90\n      jumpi\n      dup1\n      0xbb4d4436\n      eq\n      tag_92\n      jumpi\n      dup1\n      0xbfe42a37\n      eq\n      tag_94\n      jumpi\n      dup1\n      0xc601f7af\n      eq\n      tag_96\n      jumpi\n      dup1\n      0xc7f758a8\n      eq\n      tag_98\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_100\n      jumpi\n      dup1\n      0xdb994b4f\n      eq\n      tag_102\n      jumpi\n      dup1\n      0xebdf690f\n      eq\n      tag_104\n      jumpi\n      dup1\n      0xee8a7c15\n      eq\n      tag_106\n      jumpi\n      dup1\n      0xf2bcac3d\n      eq\n      tag_108\n      jumpi\n      0xfe10226d\n      eq\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      jumpi(tag_114, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_114\n      jumpi\n      0x20\n      sload(0x04)\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_114:\n      dup1\n      revert\n    tag_108:\n      pop\n      jumpi(tag_114, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_114\n      jumpi\n      tag_120\n      tag_18\n      jump\t// in\n    tag_120:\n      swap1\n      mload(0x40)\n      swap2\n      dup3\n      swap2\n      0x20\n      dup4\n      add\n      0x20\n      dup5\n      mstore\n      dup3\n      mload\n      dup1\n      swap2\n      mstore\n      0x20\n      0x40\n      dup6\n      add\n      swap4\n      add\n      swap2\n    tag_121:\n      dup2\n      dup2\n      lt\n      tag_122\n      jumpi\n      pop\n      pop\n      pop\n      sub\n      swap1\n      return\n    tag_122:\n      dup3\n      mload\n      dup5\n      mstore\n      dup6\n      swap5\n      pop\n      0x20\n      swap4\n      dup5\n      add\n      swap4\n      swap1\n      swap3\n      add\n      swap2\n      0x01\n      add\n      jump(tag_121)\n    tag_106:\n      pop\n      jumpi(tag_114, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_114\n      jumpi\n      0x20\n      mload(0x40)\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":853:855  15 */\n      0x0f\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup2\n      mstore\n      return\n    tag_104:\n      pop\n      jumpi(tag_114, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_114\n      jumpi\n      0x20\n      mload(0x40)\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":494:528  keccak256(\"TREASURY_MANAGER_ROLE\") */\n      0xede9dcdb0ce99dc7cec9c7be9246ad08b37853683ad91569c187b647ddf5e21c\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup2\n      mstore\n      return\n    tag_102:\n      pop\n      jumpi(tag_114, callvalue)\n      jumpi(tag_114, slt(add(not(0x03), calldatasize), 0x40))\n      0x40\n      tag_136\n      tag_9\n      jump\t// in\n    tag_136:\n      swap2\n      calldataload(0x04)\n      dup2\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":1258:1344  mapping(uint256 => mapping(address => IProposalRegistry.VoteType)) public voterChoices */\n      0x07\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x20\n      mstore\n      keccak256\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":1258:1344  mapping(uint256 => mapping(address => IProposalRegistry.VoteType)) public voterChoices */\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      0x20\n      and(sload(keccak256(0x00, 0x40)), 0xff)\n      tag_137\n      mload(0x40)\n      dup1\n      swap3\n      tag_11\n      jump\t// in\n    tag_137:\n      return\n    tag_100:\n      pop\n      jumpi(tag_114, callvalue)\n      jumpi(tag_114, slt(add(not(0x03), calldatasize), 0x40))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      tag_142\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      calldataload(0x04)\n      tag_143\n      tag_9\n      jump\t// in\n    tag_143:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_144\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n      tag_145\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      0x01\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap1\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n    tag_145:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_22\n      jump\t// in\n    tag_144:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      tag_24\n      jump\t// in\n    tag_142:\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup1\n      return\n    tag_98:\n      pop\n      jumpi(tag_114, callvalue)\n      jumpi(tag_114, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":1857:1871  proposalId > 0 */\n      dup1\n      iszero\n      iszero\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":1857:1907  proposalId > 0 && proposalId <= _currentProposalId */\n      dup1\n      tag_150\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n    tag_151:\n      iszero\n      tag_152\n      jumpi\n      dup2\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":1963:1972  proposals */\n      0x05\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      shl(0xa0, 0x01)\n      0x01\n      swap1\n      sub\n      0x01\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":2034:2044  p.proposer */\n      dup4\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n      and\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":2102:2119  p.requestedAmount */\n      swap2\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":1963:1972  proposals */\n      0x05\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":2102:2119  p.requestedAmount */\n      dup2\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":2133:2141  p.status */\n      swap1\n      0x06\n      dup2\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n      0xff\n      and\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":2155:2164  p.aiScore */\n      0x0e\n      dup3\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":2178:2191  p.votingStart */\n      0x09\n      dup4\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":2205:2216  p.votingEnd */\n      0x0a\n      dup5\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":2230:2240  p.forVotes */\n      swap1\n      0x0b\n      dup6\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":2254:2268  p.againstVotes */\n      swap3\n      0x0c\n      dup7\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":2282:2296  p.abstainVotes */\n      swap5\n      0x0d\n      dup8\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":2058:2065  p.title */\n      swap7\n      0x02\n      dup2\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      tag_154\n      swap1\n      tag_3\n      jump\t// in\n    tag_154:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":2079:2088  p.summary */\n      swap1\n      0x03\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      tag_155\n      swap1\n      tag_3\n      jump\t// in\n    tag_155:\n      swap1\n      mload(0x40)\n      swap12\n      dup13\n      swap12\n      dup13\n      mstore\n      0x20\n      dup13\n      add\n      mstore\n      0x40\n      dup12\n      add\n      0x0180\n      swap1\n      mstore\n      0x0180\n      dup12\n      add\n      tag_156\n      swap2\n      tag_4\n      jump\t// in\n    tag_156:\n      dup11\n      dup2\n      sub\n      0x60\n      dup13\n      add\n      mstore\n      tag_157\n      swap2\n      tag_4\n      jump\t// in\n    tag_157:\n      swap8\n      0x80\n      dup11\n      add\n      mstore\n      0xa0\n      dup10\n      add\n      tag_158\n      swap2\n      tag_5\n      jump\t// in\n    tag_158:\n      0xc0\n      dup9\n      add\n      mstore\n      0xe0\n      dup8\n      add\n      mstore\n      0x0100\n      dup7\n      add\n      mstore\n      0x0120\n      dup6\n      add\n      mstore\n      0x0140\n      dup5\n      add\n      mstore\n      0x0160\n      dup4\n      add\n      mstore\n      sub\n      swap1\n      return\n    tag_152:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x6a, 0x125b9d985b1a59081c1c9bdc1bdcd85b081251)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":1857:1907  proposalId > 0 && proposalId <= _currentProposalId */\n    tag_150:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      pop\n      sload(0x04)\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":1875:1907  proposalId <= _currentProposalId */\n      dup2\n      gt\n      iszero\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":1857:1907  proposalId > 0 && proposalId <= _currentProposalId */\n      jump(tag_151)\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n    tag_96:\n      pop\n      jumpi(tag_114, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_114\n      jumpi\n      0x20\n      mload(0x40)\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":413:440  keccak256(\"AI_ORACLE_ROLE\") */\n      0x482648e7878e9fa54c0a2f67ffd22d00ebc37cf7a03e060e428d2ab0cd6735cc\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup2\n      mstore\n      return\n    tag_94:\n      pop\n      jumpi(tag_114, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_114\n      jumpi\n      0x20\n      mload(0x40)\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":674:708  keccak256(\"DISPUTE_RESOLVER_ROLE\") */\n      0x7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup2\n      mstore\n      return\n    tag_92:\n      pop\n      jumpi(tag_114, callvalue)\n      jumpi(tag_114, slt(add(not(0x03), calldatasize), 0x20))\n      0x20\n      tag_171\n      tag_8\n      jump\t// in\n    tag_171:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":1395:1410  account.balance */\n      balance\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_90:\n      pop\n      jumpi(tag_114, callvalue)\n      jumpi(tag_114, slt(add(not(0x03), calldatasize), 0x20))\n      tag_176\n      tag_8\n      jump\t// in\n    tag_176:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2369:2382  getAllRoles() */\n      tag_177\n      tag_18\n      jump\t// in\n    tag_177:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2392:2409  uint256 count = 0 */\n      swap1\n      dup3\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2469:2472  i++ */\n    tag_178:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup3\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2448:2467  i < allRoles.length */\n      dup2\n      lt\n      iszero\n      tag_179\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2492:2521  hasRole(allRoles[i], account) */\n      tag_181\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2500:2511  allRoles[i] */\n      dup3\n      tag_182\n      dup4\n      dup7\n      tag_13\n      jump\t// in\n    tag_182:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      mload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x20\n      mstore\n      0x40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      and(sload(keccak256(0x00, 0x40)), 0xff)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap1\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2492:2521  hasRole(allRoles[i], account) */\n    tag_181:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2488:2563  if (hasRole(allRoles[i], account)) {... */\n      tag_183\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2469:2472  i++ */\n    tag_184:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x01\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2433:2446  uint256 i = 0 */\n      jump(tag_178)\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2488:2563  if (hasRole(allRoles[i], account)) {... */\n    tag_183:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2541:2548  count++ */\n      swap3\n      tag_185\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x01\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2541:2548  count++ */\n      swap2\n      tag_17\n      jump\t// in\n    tag_185:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2488:2563  if (hasRole(allRoles[i], account)) {... */\n      swap4\n      swap1\n      pop\n      jump(tag_184)\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2448:2467  i < allRoles.length */\n    tag_179:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x20\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2448:2467  i < allRoles.length */\n      dup5\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_88:\n      pop\n      jumpi(tag_114, callvalue)\n      jumpi(tag_114, slt(add(not(0x03), calldatasize), 0x20))\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":7894:7926  TreasuryEscrowUpdated(newEscrow) */\n      0xb0375a2ebcfdc355daf31c17062233e587a73c013fde410d569cf8167b1d4098\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x20\n      tag_190\n      tag_8\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_191\n      tag_20\n      jump\t// in\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      and\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":7775:7826  require(newEscrow != address(0), \"Invalid address\") */\n      tag_192\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":7783:7806  newEscrow != address(0) */\n      dup2\n      iszero\n      iszero\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":7775:7826  require(newEscrow != address(0), \"Invalid address\") */\n      tag_14\n      jump\t// in\n    tag_192:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":7836:7879  treasuryEscrow = ITreasuryEscrow(newEscrow) */\n      0x03\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      dup3\n      or\n      swap1\n      sstore\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":7894:7926  TreasuryEscrowUpdated(newEscrow) */\n      log1\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup1\n      return\n    tag_86:\n      pop\n      jumpi(tag_114, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_114\n      jumpi\n      0x20\n      mload(0x40)\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":707:714  14 days */\n      0x127500\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup2\n      mstore\n      return\n    tag_84:\n      pop\n      jumpi(tag_114, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_114\n      jumpi\n      0x20\n      swap1\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_82:\n      pop\n      jumpi(tag_114, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_114\n      jumpi\n      0x20\n      mload(0x40)\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":584:620  keccak256(\"MILESTONE_APPROVER_ROLE\") */\n      0x58223cdfb69946630d837d40b5c366a584f0217ada7fddd8318f2e08603cfa22\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup2\n      mstore\n      return\n    tag_80:\n      pop\n      jumpi(tag_114, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_114\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":451:490  IAIScoreRegistry public aiScoreRegistry */\n      0x02\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n      mload(0x40)\n      0x08\n      swap2\n      swap1\n      swap2\n      shr\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_78:\n      pop\n      jumpi(tag_114, callvalue)\n      jumpi(tag_114, slt(add(not(0x03), calldatasize), 0x40))\n      0x40\n      tag_213\n      tag_9\n      jump\t// in\n    tag_213:\n      swap2\n      calldataload(0x04)\n      dup2\n      mstore\n      dup1\n      0x20\n      mstore\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      0x20\n      and(sload(keccak256(0x00, 0x40)), 0xff)\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_76:\n      pop\n      jumpi(tag_114, callvalue)\n      tag_216\n      calldatasize\n      tag_10\n      jump\t// in\n    tag_216:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_217\n      swap3\n      swap2\n      swap3\n      tag_21\n      jump\t// in\n    tag_217:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1082:1095  uint256 i = 0 */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1115:1118  i++ */\n    tag_218:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup2\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1097:1113  i < roles.length */\n      dup2\n      lt\n      iszero\n      tag_219\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1144:1152  roles[i] */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      tag_221\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1144:1152  roles[i] */\n      dup6\n      tag_222\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x01\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1144:1152  roles[i] */\n      swap5\n      dup7\n      tag_13\n      jump\t// in\n    tag_222:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      mload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_223\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4294  getRoleAdmin(role) */\n      tag_145\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      0x01\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap1\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n    tag_223:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      tag_23\n      jump\t// in\n    tag_221:\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1082:1095  uint256 i = 0 */\n      jump(tag_218)\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1097:1113  i < roles.length */\n    tag_219:\n      dup3\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup1\n      return\n    tag_74:\n      pop\n      jumpi(tag_114, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_114\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_229\n      tag_20\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x02\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n      0xff\n      dup2\n      and\n      tag_230\n      jumpi\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      swap1\n      not(0xff)\n      and\n      or\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x02\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x20\n      mload(0x40)\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      log1\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup1\n      return\n    tag_230:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x10\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_72:\n      pop\n      jumpi(tag_114, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_114\n      jumpi\n      0x20\n      mload(0x40)\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":769:782  1000 * 10**18 */\n      0x3635c9adc5dea00000\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup2\n      mstore\n      return\n    tag_70:\n      pop\n      jumpi(tag_114, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_114\n      jumpi\n      0x20\n      mload(0x40)\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":343:366  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup2\n      mstore\n      return\n    tag_68:\n      pop\n      jumpi(tag_114, callvalue)\n      0x20\n      tag_242\n      tag_243\n      calldatasize\n      tag_10\n      jump\t// in\n    tag_243:\n      swap1\n      tag_15\n      jump\t// in\n    tag_242:\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_66:\n      pop\n      jumpi(tag_114, callvalue)\n      jumpi(tag_114, slt(add(not(0x03), calldatasize), 0x20))\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":7638:7673  AIScoreRegistryUpdated(newRegistry) */\n      0x12cb47b190a758acbe916b2a7c5a734b023ce60f4d93ec2b3159160163c9291a\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x20\n      tag_248\n      tag_8\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_249\n      tag_20\n      jump\t// in\n    tag_249:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup2\n      and\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":7513:7566  require(newRegistry != address(0), \"Invalid address\") */\n      tag_250\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":7521:7546  newRegistry != address(0) */\n      dup3\n      iszero\n      iszero\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":7513:7566  require(newRegistry != address(0), \"Invalid address\") */\n      tag_14\n      jump\t// in\n    tag_250:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":7576:7623  aiScoreRegistry = IAIScoreRegistry(newRegistry) */\n      0x02\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup1\n      sload\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      and\n      0x08\n      swap3\n      swap1\n      swap3\n      shl\n      sub(shl(0xa8, 0x01), 0x0100)\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":7638:7673  AIScoreRegistryUpdated(newRegistry) */\n      log1\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup1\n      return\n    tag_64:\n      pop\n      jumpi(tag_114, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_114\n      jumpi\n      0x20\n      0xff\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x02\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n      and\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_62:\n      pop\n      jumpi(tag_114, callvalue)\n      jumpi(tag_114, slt(add(not(0x03), calldatasize), 0x40))\n      calldataload(0x24)\n      calldataload(0x04)\n      0x03\n      dup3\n      lt\n      iszero\n      tag_259\n      jumpi\n      dup1\n      dup4\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":550:558  hasVoted */\n      0x06\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":571:581  msg.sender */\n      caller\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      swap1\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      tag_261\n      jumpi\n      dup1\n      dup4\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":665:674  proposals */\n      0x05\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x20\n      mstore\n      0x40\n      dup4\n      keccak256\n      0xff\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":550:558  hasVoted */\n      0x06\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":704:719  proposal.status */\n      dup3\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n      and\n      0x07\n      dup2\n      lt\n      iszero\n      tag_263\n      jumpi\n      0x01\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":696:777  require(proposal.status == IProposalRegistry.ProposalStatus.Voting, \"Not voting\") */\n      tag_265\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":704:762  proposal.status == IProposalRegistry.ProposalStatus.Voting */\n      swap2\n      eq\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":696:777  require(proposal.status == IProposalRegistry.ProposalStatus.Voting, \"Not voting\") */\n      tag_19\n      jump\t// in\n    tag_265:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":571:581  msg.sender */\n      caller\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":818:836  msg.sender.balance */\n      balance\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      swap1\n      dup3\n      dup6\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":550:558  hasVoted */\n      0x06\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x20\n      mstore\n      0x40\n      dup6\n      keccak256\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":571:581  msg.sender */\n      caller\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n      0x01\n      not(0xff)\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n      0x01\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":1260:1302  voteType == IProposalRegistry.VoteType.For */\n      dup5\n      eq\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":1256:1547  if (voteType == IProposalRegistry.VoteType.For) {... */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      eq\n      tag_266\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":1318:1335  proposal.forVotes */\n      0x0b\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":1318:1350  proposal.forVotes += votingPower */\n      tag_268\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup3\n      dup3\n      sload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":1318:1350  proposal.forVotes += votingPower */\n      tag_25\n      jump\t// in\n    tag_268:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      swap1\n      sstore\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":1256:1547  if (voteType == IProposalRegistry.VoteType.For) {... */\n    tag_269:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      tag_270\n      mload(0x40)\n      dup1\n      swap5\n      tag_11\n      jump\t// in\n    tag_270:\n      0x20\n      dup4\n      add\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":1009:1064  VoteCast(proposalId, msg.sender, voteType, votingPower) */\n      0xb83d25c6a5d258561330739951487acb4bd09ba5190b5d32c4f261817d906792\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x40\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":571:581  msg.sender */\n      caller\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":1009:1064  VoteCast(proposalId, msg.sender, voteType, votingPower) */\n      swap4\n      log3\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup1\n      return\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":1256:1547  if (voteType == IProposalRegistry.VoteType.For) {... */\n    tag_266:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":1371:1417  voteType == IProposalRegistry.VoteType.Against */\n      dup4\n      tag_271\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":1433:1454  proposal.againstVotes */\n      0x0c\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":1433:1469  proposal.againstVotes += votingPower */\n      tag_273\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup3\n      dup3\n      sload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":1433:1469  proposal.againstVotes += votingPower */\n      tag_25\n      jump\t// in\n    tag_273:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      swap1\n      sstore\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":1256:1547  if (voteType == IProposalRegistry.VoteType.For) {... */\n      jump(tag_269)\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":1367:1547  if (voteType == IProposalRegistry.VoteType.Against) {... */\n    tag_271:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":1500:1521  proposal.abstainVotes */\n      0x0d\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":1500:1536  proposal.abstainVotes += votingPower */\n      tag_273\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup3\n      dup3\n      sload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":1500:1536  proposal.abstainVotes += votingPower */\n      tag_25\n      jump\t// in\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n    tag_263:\n      shl(0xe0, 0x4e487b71)\n      dup6\n      mstore\n      mstore(0x04, 0x21)\n      0x24\n      dup6\n      revert\n    tag_261:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0d\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x9a, 0x105b1c9958591e481d9bdd1959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_259:\n      dup3\n      dup1\n      revert\n    tag_60:\n      pop\n      jumpi(tag_114, callvalue)\n      tag_278\n      calldatasize\n      tag_10\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_279\n      swap3\n      swap2\n      swap3\n      tag_21\n      jump\t// in\n    tag_279:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1475:1488  uint256 i = 0 */\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1508:1511  i++ */\n    tag_280:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup2\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1490:1506  i < roles.length */\n      dup2\n      lt\n      iszero\n      tag_219\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1538:1546  roles[i] */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      tag_283\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1538:1546  roles[i] */\n      dup6\n      tag_284\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x01\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1538:1546  roles[i] */\n      swap5\n      dup7\n      tag_13\n      jump\t// in\n    tag_284:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      mload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_144\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n      tag_145\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      0x01\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap1\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n    tag_283:\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1475:1488  uint256 i = 0 */\n      jump(tag_280)\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n    tag_58:\n      pop\n      jumpi(tag_114, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_114\n      jumpi\n      0x20\n      mload(0x40)\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":1008:1010  10 */\n      0x0a\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup2\n      mstore\n      return\n    tag_56:\n      pop\n      jumpi(tag_114, callvalue)\n      jumpi(tag_114, slt(add(not(0x03), calldatasize), 0x40))\n      0x40\n      tag_295\n      tag_9\n      jump\t// in\n    tag_295:\n      swap2\n      calldataload(0x04)\n      dup2\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":1192:1252  mapping(uint256 => mapping(address => bool)) public hasVoted */\n      0x06\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x20\n      mstore\n      keccak256\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":1192:1252  mapping(uint256 => mapping(address => bool)) public hasVoted */\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      0x20\n      and(sload(keccak256(0x00, 0x40)), 0xff)\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_54:\n      pop\n      jumpi(tag_114, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_114\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_300\n      tag_20\n      jump\t// in\n    tag_300:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x02\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n      0xff\n      dup2\n      and\n      iszero\n      tag_301\n      jumpi\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x02\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x20\n      mload(0x40)\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      log1\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup1\n      return\n    tag_301:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_52:\n      pop\n      jumpi(tag_114, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_114\n      jumpi\n      0x20\n      mload(0x40)\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":906:908  51 */\n      0x33\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup2\n      mstore\n      return\n    tag_50:\n      pop\n      jumpi(tag_114, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_114\n      jumpi\n      0x20\n      mload(0x40)\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":959:961  70 */\n      0x46\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup2\n      mstore\n      return\n    tag_48:\n      pop\n      jumpi(tag_114, callvalue)\n      jumpi(tag_114, slt(add(not(0x03), calldatasize), 0x40))\n      tag_315\n      tag_9\n      jump\t// in\n    tag_315:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      sub\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n      tag_316\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      tag_142\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      swap1\n      calldataload(0x04)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      tag_24\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n    tag_316:\n      shl(0xe1, 0x334bd919)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5454:5484  AccessControlBadConfirmation() */\n      dup3\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x04\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5454:5484  AccessControlBadConfirmation() */\n      dup3\n      revert\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n    tag_46:\n      pop\n      jumpi(tag_114, callvalue)\n      jumpi(tag_114, slt(add(not(0x03), calldatasize), 0x40))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      tag_142\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      calldataload(0x04)\n      tag_324\n      tag_9\n      jump\t// in\n    tag_324:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4294  getRoleAdmin(role) */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_223\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4294  getRoleAdmin(role) */\n      tag_145\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      0x01\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap1\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n    tag_44:\n      pop\n      jumpi(tag_114, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_114\n      jumpi\n      0x20\n      mload(0x40)\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":1063:1079  1000000 * 10**18 */\n      0xd3c21bcecceda1000000\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup2\n      mstore\n      return\n    tag_42:\n      pop\n      jumpi(tag_114, callvalue)\n      jumpi(tag_114, slt(add(not(0x03), calldatasize), 0x20))\n      0x20\n      swap1\n      0x40\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      tag_335\n      tag_8\n      jump\t// in\n    tag_335:\n      and\n      dup2\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":1350:1403  mapping(address => uint256) public proposerReputation */\n      0x08\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup4\n      mstore\n      keccak256\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_40:\n      pop\n      jumpi(tag_114, callvalue)\n      jumpi(tag_114, slt(add(not(0x03), calldatasize), 0x20))\n      0x20\n      tag_340\n      calldataload(0x04)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      0x01\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap1\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n    tag_340:\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_38:\n      pop\n      jumpi(tag_114, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_114\n      jumpi\n      0x20\n      mload(0x40)\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":651:657  3 days */\n      0x03f480\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup2\n      mstore\n      return\n    tag_36:\n      pop\n      jumpi(tag_114, callvalue)\n      dup1\n      add(calldatasize, not(0x03))\n      slt\n      tag_114\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":496:533  ITreasuryEscrow public treasuryEscrow */\n      0x03\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      dup2\n      mstore\n      0x20\n      swap1\n      return\n    tag_34:\n      pop\n      jumpi(tag_364, callvalue)\n      jumpi(tag_364, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      dup1\n      0x00\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":1670:1679  proposals */\n      0x05\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x20\n      mstore\n      keccak256(0x00, 0x40)\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":1709:1724  proposal.status */\n      0x06\n      dup2\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      swap1\n      0xff\n      dup3\n      sload\n      and\n      0x07\n      dup2\n      lt\n      iszero\n      tag_353\n      jumpi\n      0x01\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":1701:1782  require(proposal.status == IProposalRegistry.ProposalStatus.Voting, \"Not voting\") */\n      tag_355\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":1709:1767  proposal.status == IProposalRegistry.ProposalStatus.Voting */\n      swap2\n      eq\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":1701:1782  require(proposal.status == IProposalRegistry.ProposalStatus.Voting, \"Not voting\") */\n      tag_19\n      jump\t// in\n    tag_355:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":1818:1836  proposal.votingEnd */\n      0x0a\n      dup2\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":1800:1815  block.timestamp */\n      timestamp\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":1800:1836  block.timestamp > proposal.votingEnd */\n      gt\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      iszero\n      tag_356\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":2388:2405  proposal.forVotes */\n      0x0b\n      dup2\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":2408:2429  proposal.againstVotes */\n      0x0c\n      dup3\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":2388:2429  proposal.forVotes + proposal.againstVotes */\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":2489:2502  1000 * 10**18 */\n      0x3635c9adc5dea00000\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":2388:2453  proposal.forVotes + proposal.againstVotes + proposal.abstainVotes */\n      tag_358\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":2388:2429  proposal.forVotes + proposal.againstVotes */\n      tag_359\n      dup5\n      dup5\n      tag_25\n      jump\t// in\n    tag_359:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":2432:2453  proposal.abstainVotes */\n      0x0d\n      dup7\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":2388:2453  proposal.forVotes + proposal.againstVotes + proposal.abstainVotes */\n      swap1\n      tag_25\n      jump\t// in\n    tag_358:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":2475:2502  totalVotes >= 1000 * 10**18 */\n      lt\n      iszero\n      swap2\n      dup3\n      swap2\n      dup3\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":2523:2577  hasQuorum && proposal.forVotes > proposal.againstVotes */\n      tag_360\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n    tag_361:\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":2773:3274  if (approved) {... */\n      iszero\n      tag_362\n      jumpi\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup2\n      sload\n      not(0xff)\n      and\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":2819:2860  IProposalRegistry.ProposalStatus.Approved */\n      0x02\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      or\n      dup3\n      sstore\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":2874:2888  treasuryEscrow */\n      0x03\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n      0x01\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":2914:2931  proposal.proposer */\n      dup3\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":1670:1679  proposals */\n      0x05\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":2933:2957  proposal.requestedAmount */\n      dup4\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup1\n      sload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":2959:2978  proposal.milestones */\n      0x10\n      swap1\n      swap5\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":2933:2957  proposal.requestedAmount */\n      swap1\n      swap4\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      swap1\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      dup4\n      and\n      swap3\n      and\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":2874:2986  treasuryEscrow.createEscrow(proposalId, proposal.proposer, proposal.requestedAmount, proposal.milestones.length) */\n      dup1\n      extcodesize\n      iszero\n      tag_364\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x00\n      swap3\n      dup4\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":2874:2986  treasuryEscrow.createEscrow(proposalId, proposal.proposer, proposal.requestedAmount, proposal.milestones.length) */\n      0x84\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      swap3\n      mload(0x40)\n      swap7\n      dup8\n      swap6\n      dup7\n      swap5\n      shl(0xe5, 0x07d519c9)\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":2874:2986  treasuryEscrow.createEscrow(proposalId, proposal.proposer, proposal.requestedAmount, proposal.milestones.length) */\n      dup7\n      mstore\n      dup13\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x04\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":2874:2986  treasuryEscrow.createEscrow(proposalId, proposal.proposer, proposal.requestedAmount, proposal.milestones.length) */\n      dup8\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      mstore\n      0x24\n      dup7\n      add\n      mstore\n      0x44\n      dup6\n      add\n      mstore\n      0x64\n      dup5\n      add\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":2874:2986  treasuryEscrow.createEscrow(proposalId, proposal.proposer, proposal.requestedAmount, proposal.milestones.length) */\n      gas\n      call\n      dup1\n      iszero\n      tag_366\n      jumpi\n      tag_368\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":2773:3274  if (approved) {... */\n    tag_369:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      pop\n      0xff\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":2135:2180  ProposalExecuted(proposalId, proposal.status) */\n      0x5b9614f21773d68c0b149bda804ff3d491c8bc8795f7ed236cc97804cd005389\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      swap3\n      dup5\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":3005:3059  ProposalApproved(proposalId, proposal.requestedAmount) */\n      0xc6a4fd4a703d2a2fe3167ce7f6d62bf96458b7e55042cfaa85d5c7ef3ac56eea\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x20\n      dup1\n      swap6\n      sload\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":3005:3059  ProposalApproved(proposalId, proposal.requestedAmount) */\n      log2\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":2773:3274  if (approved) {... */\n    tag_370:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n      and\n      tag_371\n      mload(0x40)\n      dup1\n      swap3\n      tag_5\n      jump\t// in\n    tag_371:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":2135:2180  ProposalExecuted(proposalId, proposal.status) */\n      log2\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup1\n      return\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":2874:2986  treasuryEscrow.createEscrow(proposalId, proposal.proposer, proposal.requestedAmount, proposal.milestones.length) */\n    tag_368:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x20\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":2874:2986  treasuryEscrow.createEscrow(proposalId, proposal.proposer, proposal.requestedAmount, proposal.milestones.length) */\n      swap2\n      swap5\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":2135:2180  ProposalExecuted(proposalId, proposal.status) */\n      0x5b9614f21773d68c0b149bda804ff3d491c8bc8795f7ed236cc97804cd005389\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":2874:2986  treasuryEscrow.createEscrow(proposalId, proposal.proposer, proposal.requestedAmount, proposal.milestones.length) */\n      swap3\n      tag_372\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x00\n      0xff\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":2874:2986  treasuryEscrow.createEscrow(proposalId, proposal.proposer, proposal.requestedAmount, proposal.milestones.length) */\n      swap4\n      tag_2\n      jump\t// in\n    tag_372:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x00\n      swap6\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":2874:2986  treasuryEscrow.createEscrow(proposalId, proposal.proposer, proposal.requestedAmount, proposal.milestones.length) */\n      swap1\n      swap4\n      pop\n      swap2\n      pop\n      jump(tag_369)\n    tag_366:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      mload(0x40)\n      returndatasize\n      0x00\n      dup3\n      returndatacopy\n      returndatasize\n      swap1\n      revert\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":2874:2986  treasuryEscrow.createEscrow(proposalId, proposal.proposer, proposal.requestedAmount, proposal.milestones.length) */\n    tag_364:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x00\n      dup1\n      revert\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":2773:3274  if (approved) {... */\n    tag_362:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup3\n      sload\n      not(0xff)\n      and\n      0x04\n      or\n      dup4\n      sstore\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":2135:2180  ProposalExecuted(proposalId, proposal.status) */\n      0x5b9614f21773d68c0b149bda804ff3d491c8bc8795f7ed236cc97804cd005389\n      swap3\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x20\n      swap3\n      pop\n      0xff\n      swap2\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":3202:3262  hasQuorum ? \"Majority voted against\" : \"Insufficient quorum\" */\n      iszero\n      tag_373\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup5\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":3173:3263  ProposalRejected(proposalId, hasQuorum ? \"Majority voted against\" : \"Insufficient quorum\") */\n      0xe5f9059dc551d2dcf73c3bc69f282e134799b450f062c909d9f7ff45951327bd\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      tag_375\n      mload(0x40)\n      tag_376\n      0x40\n      dup3\n      tag_2\n      jump\t// in\n    tag_376:\n      0x16\n      dup2\n      mstore\n      shl(0x52, 0x13585a9bdc9a5d1e481d9bdd1959081859d85a5b9cdd)\n      dup8\n      dup3\n      add\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":3202:3262  hasQuorum ? \"Majority voted against\" : \"Insufficient quorum\" */\n    tag_377:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      mload(0x40)\n      swap2\n      dup3\n      swap2\n      dup9\n      dup4\n      mstore\n      dup9\n      dup4\n      add\n      swap1\n      tag_4\n      jump\t// in\n    tag_375:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":3173:3263  ProposalRejected(proposalId, hasQuorum ? \"Majority voted against\" : \"Insufficient quorum\") */\n      sub\n      swap1\n      log2\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":2773:3274  if (approved) {... */\n      jump(tag_370)\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":3202:3262  hasQuorum ? \"Majority voted against\" : \"Insufficient quorum\" */\n    tag_373:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup5\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":3173:3263  ProposalRejected(proposalId, hasQuorum ? \"Majority voted against\" : \"Insufficient quorum\") */\n      0xe5f9059dc551d2dcf73c3bc69f282e134799b450f062c909d9f7ff45951327bd\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      tag_375\n      mload(0x40)\n      tag_378\n      0x40\n      dup3\n      tag_2\n      jump\t// in\n    tag_378:\n      0x13\n      dup2\n      mstore\n      shl(0x68, 0x496e73756666696369656e742071756f72756d)\n      dup8\n      dup3\n      add\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":3202:3262  hasQuorum ? \"Majority voted against\" : \"Insufficient quorum\" */\n      jump(tag_377)\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":2523:2577  hasQuorum && proposal.forVotes > proposal.againstVotes */\n    tag_360:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":2536:2577  proposal.forVotes > proposal.againstVotes */\n      gt\n      swap1\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":2523:2577  hasQuorum && proposal.forVotes > proposal.againstVotes */\n      0x00\n      dup1\n      jump(tag_361)\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n    tag_356:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0d\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x98, 0x566f74696e6720616374697665)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_353:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x21)\n      revert(0x00, 0x24)\n    tag_32:\n      jumpi(tag_364, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      gt\n      tag_364\n      jumpi\n      0xe0\n      not(0x03)\n      dup3\n      calldatasize\n      sub\n      add\n      slt\n      tag_364\n      jumpi\n      mload(0x40)\n      swap1\n      0xe0\n      dup3\n      add\n      dup3\n      dup2\n      lt\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      or\n      tag_501\n      jumpi\n      0x40\n      mstore\n      dup1\n      0x04\n      add\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      gt\n      tag_364\n      jumpi\n      tag_389\n      swap1\n      0x04\n      calldatasize\n      swap2\n      dup5\n      add\n      add\n      tag_6\n      jump\t// in\n    tag_389:\n      dup3\n      mstore\n      0x24\n      dup2\n      add\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      gt\n      tag_364\n      jumpi\n      tag_392\n      swap1\n      0x04\n      calldatasize\n      swap2\n      dup5\n      add\n      add\n      tag_6\n      jump\t// in\n    tag_392:\n      0x20\n      dup4\n      add\n      swap1\n      dup2\n      mstore\n      0x44\n      dup3\n      add\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      gt\n      tag_364\n      jumpi\n      tag_395\n      swap1\n      0x04\n      calldatasize\n      swap2\n      dup6\n      add\n      add\n      tag_6\n      jump\t// in\n    tag_395:\n      swap2\n      0x40\n      dup5\n      add\n      swap3\n      dup4\n      mstore\n      0x60\n      dup5\n      add\n      swap4\n      0x64\n      dup3\n      add\n      calldataload\n      dup6\n      mstore\n      0x84\n      dup3\n      add\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      gt\n      tag_364\n      jumpi\n      dup3\n      add\n      calldatasize\n      0x23\n      dup3\n      add\n      slt\n      iszero\n      tag_364\n      jumpi\n      0x04\n      dup2\n      add\n      calldataload\n      tag_400\n      dup2\n      tag_7\n      jump\t// in\n    tag_400:\n      swap2\n      tag_401\n      mload(0x40)\n      swap4\n      dup5\n      tag_2\n      jump\t// in\n    tag_401:\n      dup2\n      dup4\n      mstore\n      0x20\n      0x04\n      dup2\n      dup6\n      add\n      swap4\n      0x05\n      shl\n      dup4\n      add\n      add\n      add\n      swap1\n      calldatasize\n      dup3\n      gt\n      tag_364\n      jumpi\n      0x24\n      dup2\n      add\n      swap3\n    tag_404:\n      dup3\n      dup5\n      lt\n      tag_405\n      jumpi\n      pop\n      pop\n      pop\n      pop\n      0x80\n      dup3\n      add\n      swap1\n      dup2\n      mstore\n      0xa4\n      dup4\n      add\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      gt\n      tag_364\n      jumpi\n      dup4\n      add\n      swap3\n      calldatasize\n      0x23\n      dup6\n      add\n      slt\n      iszero\n      tag_364\n      jumpi\n      0x04\n      dup5\n      add\n      calldataload\n      swap4\n      tag_411\n      dup6\n      tag_7\n      jump\t// in\n    tag_411:\n      swap5\n      tag_412\n      mload(0x40)\n      swap7\n      dup8\n      tag_2\n      jump\t// in\n    tag_412:\n      dup1\n      dup7\n      mstore\n      0x20\n      0x04\n      dup2\n      dup9\n      add\n      swap3\n      0x05\n      shl\n      dup5\n      add\n      add\n      add\n      swap2\n      calldatasize\n      dup4\n      gt\n      tag_364\n      jumpi\n      0x24\n      add\n      swap1\n    tag_415:\n      dup3\n      dup3\n      lt\n      tag_416\n      jumpi\n      pop\n      pop\n      pop\n      0xa0\n      dup4\n      add\n      swap4\n      dup5\n      mstore\n      0xc4\n      0xc0\n      dup5\n      add\n      swap2\n      add\n      calldataload\n      dup2\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":559:573  0.001 * 10**18 */\n      0x038d7ea4c68000\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":546:555  msg.value */\n      callvalue\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":546:573  msg.value >= 0.001 * 10**18 */\n      lt\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      tag_418\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol\":635:646  input.title */\n      dup3\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup8\n      mload\n      swap1\n      dup3\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol\":727:754  input.milestoneDescriptions */\n      dup5\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol\":775:797  input.milestoneAmounts */\n      swap3\n      dup8\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      mload\n      swap3\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":3184:3207  bytes(title).length > 0 */\n      dup1\n      iszero\n      iszero\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":3184:3237  bytes(title).length > 0 && bytes(title).length <= 200 */\n      swap1\n      dup2\n      tag_420\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n    tag_421:\n      pop\n      iszero\n      tag_422\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":3280:3299  requestedAmount > 0 */\n      dup1\n      iszero\n      iszero\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":3280:3342  requestedAmount > 0 && requestedAmount <= MAX_REQUESTED_AMOUNT */\n      swap1\n      dup2\n      tag_424\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n    tag_425:\n      pop\n      iszero\n      tag_426\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":651:657  3 days */\n      0x03f480\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":3379:3412  votingPeriod >= MIN_VOTING_PERIOD */\n      dup2\n      lt\n      iszero\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":3379:3449  votingPeriod >= MIN_VOTING_PERIOD && votingPeriod <= MAX_VOTING_PERIOD */\n      swap1\n      dup2\n      tag_428\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n    tag_429:\n      pop\n      iszero\n      tag_430\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":3493:3535  milestonesLength == milestoneAmountsLength */\n      dup2\n      sub\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      tag_432\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":3583:3603  milestonesLength > 0 */\n      dup1\n      iszero\n      iszero\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":3583:3641  milestonesLength > 0 && milestonesLength <= MAX_MILESTONES */\n      swap1\n      dup2\n      tag_434\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n    tag_435:\n      pop\n      iszero\n      tag_436\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":769:782  1000 * 10**18 */\n      0x3635c9adc5dea00000\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":3757:3767  msg.sender */\n      caller\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":3757:3775  msg.sender.balance */\n      balance\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":3757:3801  msg.sender.balance >= MIN_PROPOSAL_THRESHOLD */\n      lt\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      tag_438\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":6637:6657  _currentProposalId++ */\n      tag_440\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload(0x04)\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":6637:6657  _currentProposalId++ */\n      tag_17\n      jump\t// in\n    tag_440:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      swap5\n      dup6\n      0x04\n      sstore\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol\":859:870  input.title */\n      dup4\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol\":872:885  input.summary */\n      swap1\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol\":887:900  input.ipfsCID */\n      dup8\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      swap1\n      dup1\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":4171:4196  bytes(summary).length > 0 */\n      dup1\n      iszero\n      iszero\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":4171:4229  bytes(summary).length > 0 && bytes(summary).length <= 1000 */\n      swap1\n      dup2\n      tag_441\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n    tag_442:\n      pop\n      iszero\n      tag_443\n      jumpi\n      dup2\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":4274:4299  bytes(ipfsCID).length > 0 */\n      iszero\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      tag_445\n      jumpi\n      dup8\n      0x00\n      mstore\n      mstore(0x20, 0x05)\n      keccak256(0x00, 0x40)\n      swap3\n      dup9\n      dup5\n      sstore\n      0x01\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":4451:4468  proposal.proposer */\n      dup5\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":3757:3767  msg.sender */\n      caller\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      shl(0xa0, 0xffffffffffffffffffffffff)\n      dup3\n      sload\n      and\n      or\n      swap1\n      sstore\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":4491:4505  proposal.title */\n      0x02\n      dup5\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      swap1\n      dup1\n      mload\n      swap1\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      tag_501\n      jumpi\n      dup2\n      swap1\n      tag_449\n      dup5\n      sload\n      tag_1\n      jump\t// in\n    tag_449:\n      0x1f\n      dup2\n      gt\n      tag_450\n      jumpi\n    tag_451:\n      pop\n      0x20\n      swap1\n      0x1f\n      dup4\n      gt\n      0x01\n      eq\n      tag_452\n      jumpi\n      0x00\n      swap3\n      tag_454\n      jumpi\n    tag_455:\n      pop\n      pop\n      dup2\n      0x01\n      shl\n      swap2\n      not(0x00)\n      swap1\n      0x03\n      shl\n      shr\n      not\n      and\n      or\n      swap1\n      sstore\n    tag_456:\n      dup1\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":4523:4539  proposal.summary */\n      0x03\n      dup5\n      add\n      swap2\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup3\n      gt\n      tag_501\n      jumpi\n      dup2\n      swap1\n      tag_459\n      dup5\n      sload\n      tag_1\n      jump\t// in\n    tag_459:\n      0x1f\n      dup2\n      gt\n      tag_460\n      jumpi\n    tag_461:\n      pop\n      0x20\n      swap1\n      0x1f\n      dup4\n      gt\n      0x01\n      eq\n      tag_462\n      jumpi\n      0x00\n      swap3\n      tag_464\n      jumpi\n    tag_465:\n      pop\n      pop\n      dup2\n      0x01\n      shl\n      swap2\n      not(0x00)\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":4523:4539  proposal.summary */\n      0x03\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      shl\n      shr\n      not\n      and\n      or\n      swap1\n      sstore\n    tag_466:\n      dup1\n      mload\n      0x04\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":4559:4575  proposal.ipfsCID */\n      dup4\n      add\n      swap2\n      sub(shl(0x40, 0x01), 0x01)\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup3\n      gt\n      tag_501\n      jumpi\n      tag_469\n      dup4\n      sload\n      tag_1\n      jump\t// in\n    tag_469:\n      0x1f\n      dup2\n      gt\n      tag_470\n      jumpi\n    tag_471:\n      pop\n      0x20\n      swap1\n      0x1f\n      dup4\n      gt\n      0x01\n      eq\n      tag_472\n      jumpi\n      swap2\n      dup1\n      0x00\n      swap7\n      swap5\n      swap3\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":5120:5147  proposal.totalSupplyAtStart */\n      0x11\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      swap7\n      swap5\n      dup9\n      swap3\n      tag_474\n      jumpi\n    tag_475:\n      pop\n      pop\n      dup2\n      0x01\n      shl\n      swap2\n      dup8\n      not\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":4523:4539  proposal.summary */\n      0x03\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      shl\n      shr\n      not\n      and\n      or\n      swap1\n      sstore\n    tag_476:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":4595:4610  proposal.status */\n      0x06\n      dup2\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      not(0xff)\n      dup2\n      sload\n      and\n      swap1\n      sstore\n      0x07\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":4697:4712  block.timestamp */\n      timestamp\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":4671:4694  proposal.submissionTime */\n      swap2\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sstore\n      dup9\n      mload\n      swap1\n      mload\n      dup8\n      dup5\n      mstore\n      mstore(0x20, 0x05)\n      0x40\n      dup5\n      keccak256\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":5022:5046  proposal.requestedAmount */\n      swap2\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x05\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":5022:5046  proposal.requestedAmount */\n      dup4\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sstore\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":5074:5095  proposal.votingPeriod */\n      0x08\n      dup3\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sstore\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":5120:5147  proposal.totalSupplyAtStart */\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sstore\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol\":1029:1056  input.milestoneDescriptions */\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol\":1058:1080  input.milestoneAmounts */\n      swap2\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":5435:5467  uint256 totalMilestoneAmount = 0 */\n      swap3\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":5482:5495  uint256 i = 0 */\n      swap6\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":5477:5745  for (uint256 i = 0; i < amounts.length; i++) {... */\n      swap7\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":5517:5520  i++ */\n    tag_477:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup6\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":5497:5515  i < amounts.length */\n      dup9\n      lt\n      iszero\n      tag_478\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":5544:5554  amounts[i] */\n      tag_480\n      dup9\n      dup8\n      tag_13\n      jump\t// in\n    tag_480:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":5544:5558  amounts[i] > 0 */\n      iszero\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      tag_481\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":5624:5639  descriptions[i] */\n      tag_483\n      dup9\n      dup7\n      tag_13\n      jump\t// in\n    tag_483:\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":5618:5651  bytes(descriptions[i]).length > 0 */\n      iszero\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      tag_484\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":5700:5734  totalMilestoneAmount += amounts[i] */\n      tag_486\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x01\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":5724:5734  amounts[i] */\n      swap2\n      tag_487\n      dup11\n      dup10\n      tag_13\n      jump\t// in\n    tag_487:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":5700:5734  totalMilestoneAmount += amounts[i] */\n      swap1\n      tag_25\n      jump\t// in\n    tag_486:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":5517:5520  i++ */\n      swap8\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":5482:5495  uint256 i = 0 */\n      swap7\n      jump(tag_477)\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n    tag_484:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1e\n      0x24\n      dup3\n      add\n      mstore\n      0x4d696c6573746f6e65206465736372697074696f6e2072657175697265640000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_481:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x21\n      0x24\n      dup3\n      add\n      mstore\n      0x4d696c6573746f6e6520616d6f756e74206d75737420626520706f7369746976\n      0x44\n      dup3\n      add\n      mstore\n      shl(0xf8, 0x65)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":5497:5515  i < amounts.length */\n    tag_478:\n      swap5\n      swap4\n      swap3\n      swap6\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup3\n      0x00\n      mstore\n      mstore(0x20, 0x05)\n      keccak256(0x00, 0x40)\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":5872:5896  proposal.requestedAmount */\n      swap6\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x05\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":5872:5896  proposal.requestedAmount */\n      dup8\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":5848:5896  totalMilestoneAmount == proposal.requestedAmount */\n      sub\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      tag_488\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":6057:6076  proposal.milestones */\n      0x10\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":5998:6011  uint256 i = 0 */\n      swap8\n      swap7\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":6057:6076  proposal.milestones */\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":5993:6288  for (uint256 i = 0; i < descriptions.length; i++) {... */\n      swap7\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":6038:6041  i++ */\n    tag_490:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup5\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":6013:6036  i < descriptions.length */\n      dup2\n      lt\n      iszero\n      tag_491\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":6141:6156  descriptions[i] */\n      tag_493\n      dup2\n      dup7\n      tag_13\n      jump\t// in\n    tag_493:\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":6182:6192  amounts[i] */\n      tag_494\n      dup3\n      dup9\n      tag_13\n      jump\t// in\n    tag_494:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      mload\n      mload(0x40)\n      swap2\n      0x80\n      dup4\n      add\n      dup4\n      dup2\n      lt\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      or\n      tag_501\n      jumpi\n      0x40\n      mstore\n      dup3\n      mstore\n      0x20\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":6082:6276  IProposalRegistry.Milestone({... */\n      dup3\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      swap1\n      dup2\n      mstore\n      0x40\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":6082:6276  IProposalRegistry.Milestone({... */\n      dup3\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x00\n      dup2\n      mstore\n      0x60\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":6082:6276  IProposalRegistry.Milestone({... */\n      dup4\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      swap2\n      0x00\n      dup4\n      mstore\n      dup12\n      sload\n      0x010000000000000000\n      dup2\n      lt\n      iszero\n      tag_501\n      jumpi\n      0x01\n      dup2\n      add\n      dup1\n      dup15\n      sstore\n      dup2\n      lt\n      iszero\n      tag_499\n      jumpi\n      dup13\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":4491:4505  proposal.title */\n      0x02\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      shl\n      add\n      swap4\n      mload\n      dup1\n      mload\n      swap1\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      tag_501\n      jumpi\n      tag_503\n      dup7\n      sload\n      tag_1\n      jump\t// in\n    tag_503:\n      0x1f\n      dup2\n      gt\n      tag_504\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":6038:6041  i++ */\n    tag_505:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      pop\n      0x20\n      swap1\n      0x1f\n      dup4\n      gt\n      0x01\n      eq\n      tag_506\n      jumpi\n      swap2\n      dup1\n      0x01\n      swap9\n      swap8\n      swap7\n      swap5\n      swap3\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":4523:4539  proposal.summary */\n      0x03\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      swap7\n      swap5\n      0x00\n      swap3\n      tag_508\n      jumpi\n    tag_509:\n      pop\n      pop\n      not(0x00)\n      dup3\n      dup8\n      shl\n      shr\n      not\n      and\n      swap1\n      dup9\n      shl\n      or\n      dup6\n      sstore\n    tag_510:\n      mload\n      dup7\n      dup6\n      add\n      sstore\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":4491:4505  proposal.title */\n      0x02\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup5\n      add\n      swap1\n      mload\n      iszero\n      iszero\n      0xff\n      dup1\n      not\n      dup4\n      sload\n      and\n      swap2\n      and\n      or\n      swap1\n      sstore\n      mload\n      swap2\n      add\n      sstore\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":5998:6011  uint256 i = 0 */\n      jump(tag_490)\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n    tag_508:\n      add\n      mload\n      swap1\n      pop\n      0x00\n      dup1\n      jump(tag_509)\n    tag_506:\n      swap1\n      not(0x1f)\n      dup4\n      and\n      swap2\n      dup8\n      0x00\n      mstore\n      dup2\n      0x00\n      keccak256\n      swap3\n      0x00\n    tag_511:\n      dup2\n      dup2\n      lt\n      tag_512\n      jumpi\n      pop\n      swap3\n      0x01\n      swap10\n      swap9\n      swap8\n      swap6\n      swap4\n      swap3\n      dup6\n      swap3\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":4523:4539  proposal.summary */\n      0x03\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      swap9\n      swap7\n      dup13\n      swap6\n      lt\n      tag_514\n      jumpi\n    tag_515:\n      pop\n      pop\n      pop\n      dup2\n      shl\n      add\n      dup6\n      sstore\n      jump(tag_510)\n    tag_514:\n      add\n      mload\n      not(0x00)\n      dup4\n      dup10\n      shl\n      0xf8\n      and\n      shr\n      not\n      and\n      swap1\n      sstore\n      0x00\n      dup1\n      dup1\n      jump(tag_515)\n    tag_512:\n      swap3\n      swap4\n      0x20\n      0x01\n      dup2\n      swap3\n      dup8\n      dup7\n      add\n      mload\n      dup2\n      sstore\n      add\n      swap6\n      add\n      swap4\n      add\n      jump(tag_511)\n    tag_504:\n      dup7\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      0x1f\n      dup5\n      add\n      0x05\n      shr\n      dup2\n      add\n      swap2\n      0x20\n      dup6\n      lt\n      tag_516\n      jumpi\n    tag_517:\n      0x1f\n      add\n      0x05\n      shr\n      add\n      swap1\n    tag_518:\n      dup2\n      dup2\n      lt\n      tag_519\n      jumpi\n      pop\n      jump(tag_505)\n    tag_519:\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_518)\n    tag_516:\n      swap1\n      swap2\n      pop\n      dup2\n      swap1\n      jump(tag_517)\n    tag_501:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_499:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":6013:6036  i < descriptions.length */\n    tag_491:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x20\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":6013:6036  i < descriptions.length */\n      dup5\n      dup5\n      dup2\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol\":1097:1206  ProposalSubmitted(proposalId, msg.sender, input.title, input.requestedAmount, input.ipfsCID, block.timestamp) */\n      0x5ad01c818e42f77c2c5123d4d295c39799cf1cac9125682a8c90c7ce9d9bf6b4\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      tag_521\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":6013:6036  i < descriptions.length */\n      dup8\n      dup14\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol\":1139:1150  input.title */\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      swap5\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol\":1175:1188  input.ipfsCID */\n      swap1\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      tag_522\n      mload(0x40)\n      swap7\n      0x80\n      dup9\n      mstore\n      0x80\n      dup9\n      add\n      swap1\n      tag_4\n      jump\t// in\n    tag_522:\n      swap2\n      dup9\n      dup8\n      add\n      mstore\n      dup6\n      dup3\n      sub\n      0x40\n      dup8\n      add\n      mstore\n      tag_4\n      jump\t// in\n    tag_521:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":4697:4712  block.timestamp */\n      swap3\n      timestamp\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x60\n      dup3\n      add\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":3757:3767  msg.sender */\n      dup1\n      caller\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol\":1097:1206  ProposalSubmitted(proposalId, msg.sender, input.title, input.requestedAmount, input.ipfsCID, block.timestamp) */\n      swap5\n      sub\n      swap1\n      log3\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_488:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x2f\n      0x24\n      dup3\n      add\n      mstore\n      0x4d696c6573746f6e6520616d6f756e747320646f6e27742073756d20746f2072\n      0x44\n      dup3\n      add\n      mstore\n      shl(0x8a, 0x195c5d595cdd195908185b5bdd5b9d)\n      0x64\n      dup3\n      add\n      mstore\n      0x84\n      swap1\n      revert\n    tag_474:\n      add\n      mload\n      swap1\n      pop\n      dup14\n      dup1\n      jump(tag_475)\n    tag_472:\n      swap1\n      not(0x1f)\n      dup4\n      and\n      swap2\n      dup5\n      0x00\n      mstore\n      dup2\n      0x00\n      keccak256\n      swap3\n      0x00\n    tag_523:\n      dup2\n      dup2\n      lt\n      tag_524\n      jumpi\n      pop\n      swap3\n      0x01\n      swap3\n      dup6\n      swap3\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":5120:5147  proposal.totalSupplyAtStart */\n      0x11\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      swap9\n      swap7\n      0x00\n      swap11\n      swap9\n      swap7\n      lt\n      tag_526\n      jumpi\n    tag_527:\n      pop\n      pop\n      pop\n      dup2\n      shl\n      add\n      swap1\n      sstore\n      jump(tag_476)\n    tag_526:\n      add\n      mload\n      dup9\n      not\n      0xf8\n      dup5\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":4523:4539  proposal.summary */\n      0x03\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      shl\n      and\n      shr\n      not\n      and\n      swap1\n      sstore\n      dup14\n      dup1\n      dup1\n      jump(tag_527)\n    tag_524:\n      swap3\n      swap4\n      0x20\n      0x01\n      dup2\n      swap3\n      dup8\n      dup7\n      add\n      mload\n      dup2\n      sstore\n      add\n      swap6\n      add\n      swap4\n      add\n      jump(tag_523)\n    tag_470:\n      dup4\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      0x1f\n      dup5\n      add\n      0x05\n      shr\n      dup2\n      add\n      swap2\n      0x20\n      dup6\n      lt\n      tag_528\n      jumpi\n    tag_529:\n      0x1f\n      add\n      0x05\n      shr\n      add\n      swap1\n    tag_530:\n      dup2\n      dup2\n      lt\n      tag_531\n      jumpi\n      pop\n      jump(tag_471)\n    tag_531:\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_530)\n    tag_528:\n      swap1\n      swap2\n      pop\n      dup2\n      swap1\n      jump(tag_529)\n    tag_464:\n      add\n      mload\n      swap1\n      pop\n      dup13\n      dup1\n      jump(tag_465)\n    tag_462:\n      0x00\n      dup6\n      dup2\n      mstore\n      dup3\n      dup2\n      keccak256\n      swap4\n      pop\n      not(0x1f)\n      dup6\n      and\n      swap1\n    tag_533:\n      dup2\n      dup2\n      lt\n      tag_534\n      jumpi\n      pop\n      swap1\n      dup5\n      0x01\n      swap6\n      swap5\n      swap4\n      swap3\n      lt\n      tag_536\n      jumpi\n    tag_537:\n      pop\n      pop\n      pop\n      dup2\n      shl\n      add\n      swap1\n      sstore\n      jump(tag_466)\n    tag_536:\n      add\n      mload\n      not(0x00)\n      0xf8\n      dup5\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":4523:4539  proposal.summary */\n      0x03\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      shl\n      and\n      shr\n      not\n      and\n      swap1\n      sstore\n      dup13\n      dup1\n      dup1\n      jump(tag_537)\n    tag_534:\n      swap3\n      swap4\n      0x20\n      0x01\n      dup2\n      swap3\n      dup8\n      dup7\n      add\n      mload\n      dup2\n      sstore\n      add\n      swap6\n      add\n      swap4\n      add\n      jump(tag_533)\n    tag_460:\n      swap1\n      swap2\n      pop\n      dup4\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      0x1f\n      dup5\n      add\n      0x05\n      shr\n      dup2\n      add\n      swap2\n      0x20\n      dup6\n      lt\n      tag_538\n      jumpi\n    tag_539:\n      swap1\n      0x1f\n      dup6\n      swap5\n      swap4\n      swap3\n      add\n      0x05\n      shr\n      add\n      swap1\n    tag_540:\n      dup2\n      dup2\n      lt\n      tag_541\n      jumpi\n      pop\n      jump(tag_461)\n    tag_541:\n      0x00\n      dup2\n      sstore\n      dup5\n      swap4\n      pop\n      0x01\n      add\n      jump(tag_540)\n    tag_538:\n      swap1\n      swap2\n      pop\n      dup2\n      swap1\n      jump(tag_539)\n    tag_454:\n      add\n      mload\n      swap1\n      pop\n      dup14\n      dup1\n      jump(tag_455)\n    tag_452:\n      0x00\n      dup6\n      dup2\n      mstore\n      dup3\n      dup2\n      keccak256\n      swap4\n      pop\n      not(0x1f)\n      dup6\n      and\n      swap1\n    tag_543:\n      dup2\n      dup2\n      lt\n      tag_544\n      jumpi\n      pop\n      swap1\n      dup5\n      0x01\n      swap6\n      swap5\n      swap4\n      swap3\n      lt\n      tag_546\n      jumpi\n    tag_547:\n      pop\n      pop\n      pop\n      dup2\n      shl\n      add\n      swap1\n      sstore\n      jump(tag_456)\n    tag_546:\n      add\n      mload\n      not(0x00)\n      0xf8\n      dup5\n      0x03\n      shl\n      and\n      shr\n      not\n      and\n      swap1\n      sstore\n      dup14\n      dup1\n      dup1\n      jump(tag_547)\n    tag_544:\n      swap3\n      swap4\n      0x20\n      0x01\n      dup2\n      swap3\n      dup8\n      dup7\n      add\n      mload\n      dup2\n      sstore\n      add\n      swap6\n      add\n      swap4\n      add\n      jump(tag_543)\n    tag_450:\n      swap1\n      swap2\n      pop\n      dup4\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      0x1f\n      dup5\n      add\n      0x05\n      shr\n      dup2\n      add\n      swap2\n      0x20\n      dup6\n      lt\n      tag_548\n      jumpi\n    tag_549:\n      swap1\n      0x1f\n      dup6\n      swap5\n      swap4\n      swap3\n      add\n      0x05\n      shr\n      add\n      swap1\n    tag_550:\n      dup2\n      dup2\n      lt\n      tag_551\n      jumpi\n      pop\n      jump(tag_451)\n    tag_551:\n      0x00\n      dup2\n      sstore\n      dup5\n      swap4\n      pop\n      0x01\n      add\n      jump(tag_550)\n    tag_548:\n      swap1\n      swap2\n      pop\n      dup2\n      swap1\n      jump(tag_549)\n    tag_445:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x11\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x7a, 0x12541194c810d251081c995c5d5a5c9959)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_443:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x16\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x53, 0x092dcecc2d8d2c840e6eadadac2e4f240d8cadccee8d)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":4171:4229  bytes(summary).length > 0 && bytes(summary).length <= 1000 */\n    tag_441:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":4225:4229  1000 */\n      0x03e8\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":4200:4229  bytes(summary).length <= 1000 */\n      swap2\n      pop\n      gt\n      iszero\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":4171:4229  bytes(summary).length > 0 && bytes(summary).length <= 1000 */\n      dup12\n      jump(tag_442)\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n    tag_438:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x18\n      0x24\n      dup3\n      add\n      mstore\n      0x496e73756666696369656e74205846492062616c616e63650000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_436:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x17\n      0x24\n      dup3\n      add\n      mstore\n      0x496e76616c6964206d696c6573746f6e6520636f756e74000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":3583:3641  milestonesLength > 0 && milestonesLength <= MAX_MILESTONES */\n    tag_434:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":1008:1010  10 */\n      0x0a\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":3607:3641  milestonesLength <= MAX_MILESTONES */\n      swap2\n      pop\n      gt\n      iszero\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":3583:3641  milestonesLength > 0 && milestonesLength <= MAX_MILESTONES */\n      dup9\n      jump(tag_435)\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n    tag_432:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x19\n      0x24\n      dup3\n      add\n      mstore\n      0x4d696c6573746f6e6520617272617973206d69736d6174636800000000000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_430:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x5a, 0x125b9d985b1a59081d9bdd1a5b99c81c195c9a5bd9)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":3379:3449  votingPeriod >= MIN_VOTING_PERIOD && votingPeriod <= MAX_VOTING_PERIOD */\n    tag_428:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":707:714  14 days */\n      0x127500\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":3416:3449  votingPeriod <= MAX_VOTING_PERIOD */\n      swap2\n      pop\n      gt\n      iszero\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":3379:3449  votingPeriod >= MIN_VOTING_PERIOD && votingPeriod <= MAX_VOTING_PERIOD */\n      dup11\n      jump(tag_429)\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n    tag_426:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0e\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x92, 0x125b9d985b1a5908185b5bdd5b9d)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":3280:3342  requestedAmount > 0 && requestedAmount <= MAX_REQUESTED_AMOUNT */\n    tag_424:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":1063:1079  1000000 * 10**18 */\n      0xd3c21bcecceda1000000\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":3303:3342  requestedAmount <= MAX_REQUESTED_AMOUNT */\n      swap2\n      pop\n      gt\n      iszero\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":3280:3342  requestedAmount > 0 && requestedAmount <= MAX_REQUESTED_AMOUNT */\n      dup12\n      jump(tag_425)\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n    tag_422:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x63, 0x092dcecc2d8d2c840e8d2e8d8ca40d8cadccee8d)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":3184:3237  bytes(title).length > 0 && bytes(title).length <= 200 */\n    tag_420:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":3234:3237  200 */\n      0xc8\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":3211:3237  bytes(title).length <= 200 */\n      swap2\n      pop\n      gt\n      iszero\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":3184:3237  bytes(title).length > 0 && bytes(title).length <= 200 */\n      dup13\n      jump(tag_421)\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n    tag_418:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x19\n      0x24\n      dup3\n      add\n      mstore\n      0x496e73756666696369656e742070726f706f73616c2066656500000000000000\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n    tag_416:\n      dup2\n      calldataload\n      dup2\n      mstore\n      0x20\n      swap2\n      dup3\n      add\n      swap2\n      add\n      jump(tag_415)\n    tag_405:\n      dup4\n      calldataload\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      gt\n      tag_364\n      jumpi\n      0x20\n      swap2\n      tag_555\n      dup4\n      swap3\n      dup4\n      0x04\n      calldatasize\n      swap3\n      dup9\n      add\n      add\n      add\n      tag_6\n      jump\t// in\n    tag_555:\n      dup2\n      mstore\n      add\n      swap4\n      add\n      swap3\n      jump(tag_404)\n    tag_30:\n      jumpi(tag_364, callvalue)\n      jumpi(tag_364, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      shl(0xe0, 0xffffffff)\n      dup2\n      and\n      dup1\n      swap2\n      sub\n      tag_364\n      jumpi\n      0x20\n      swap1\n      shl(0xe0, 0x7965db0b)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2696  interfaceId == type(IAccessControl).interfaceId */\n      dup2\n      eq\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup2\n      iszero\n      tag_562\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n    tag_563:\n      pop\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_562:\n      shl(0xe0, 0x01ffc9a7)\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:869  interfaceId == type(IERC165).interfaceId */\n      eq\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup3\n      jump(tag_563)\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n    tag_28:\n      jumpi(tag_364, callvalue)\n      jumpi(tag_364, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":1123:1186  mapping(uint256 => IProposalRegistry.Proposal) public proposals */\n      0x05\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":1123:1186  mapping(uint256 => IProposalRegistry.Proposal) public proposals */\n      dup3\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      0xa0\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":1123:1186  mapping(uint256 => IProposalRegistry.Proposal) public proposals */\n      tag_568\n      0x02\n      dup4\n      add\n      tag_3\n      jump\t// in\n    tag_568:\n      0xe0\n      mstore\n      dup2\n      tag_569\n      0x03\n      dup3\n      add\n      tag_3\n      jump\t// in\n    tag_569:\n      swap2\n      tag_570\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x04\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":1123:1186  mapping(uint256 => IProposalRegistry.Proposal) public proposals */\n      dup4\n      add\n      tag_3\n      jump\t// in\n    tag_570:\n      swap3\n      0x05\n      dup4\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":1123:1186  mapping(uint256 => IProposalRegistry.Proposal) public proposals */\n      swap4\n      0x06\n      dup5\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n      0xff\n      and\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":1123:1186  mapping(uint256 => IProposalRegistry.Proposal) public proposals */\n      0x07\n      dup6\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":1123:1186  mapping(uint256 => IProposalRegistry.Proposal) public proposals */\n      0x08\n      dup7\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":1123:1186  mapping(uint256 => IProposalRegistry.Proposal) public proposals */\n      0x09\n      dup8\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":1123:1186  mapping(uint256 => IProposalRegistry.Proposal) public proposals */\n      swap2\n      0x0a\n      dup9\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":1123:1186  mapping(uint256 => IProposalRegistry.Proposal) public proposals */\n      swap4\n      0x0b\n      dup10\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":1123:1186  mapping(uint256 => IProposalRegistry.Proposal) public proposals */\n      swap6\n      0x0c\n      dup11\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":1123:1186  mapping(uint256 => IProposalRegistry.Proposal) public proposals */\n      swap8\n      0x0d\n      dup12\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":1123:1186  mapping(uint256 => IProposalRegistry.Proposal) public proposals */\n      swap10\n      0x0e\n      dup13\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":1123:1186  mapping(uint256 => IProposalRegistry.Proposal) public proposals */\n      swap12\n      0x0f\n      add\n      tag_571\n      swap1\n      tag_3\n      jump\t// in\n    tag_571:\n      swap14\n      0x11\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      sload\n      0x80\n      mstore\n      mstore(0xc0, mload(0x40))\n      mload(0xc0)\n      mstore\n      mstore(add(0x20, mload(0xc0)), mload(0xa0))\n      add(0x40, mload(0xc0))\n      0x0220\n      swap1\n      mstore\n      add(0x0220, mload(0xc0))\n      mload(0xe0)\n      swap1\n      tag_572\n      swap2\n      tag_4\n      jump\t// in\n    tag_572:\n      mload(0xc0)\n      dup2\n      sub\n      add(0x60, mload(0xc0))\n      mstore\n      tag_573\n      swap2\n      tag_4\n      jump\t// in\n    tag_573:\n      mload(0xc0)\n      dup2\n      sub\n      add(0x80, mload(0xc0))\n      mstore\n      tag_574\n      swap2\n      tag_4\n      jump\t// in\n    tag_574:\n      swap10\n      add(0xa0, mload(0xc0))\n      mstore\n      add(0xc0, mload(0xc0))\n      tag_575\n      swap2\n      tag_5\n      jump\t// in\n    tag_575:\n      add(0xe0, mload(0xc0))\n      mstore\n      add(0x0100, mload(0xc0))\n      mstore\n      add(0x0120, mload(0xc0))\n      mstore\n      add(0x0140, mload(0xc0))\n      mstore\n      add(0x0160, mload(0xc0))\n      mstore\n      add(0x0180, mload(0xc0))\n      mstore\n      add(0x01a0, mload(0xc0))\n      mstore\n      add(0x01c0, mload(0xc0))\n      mstore\n      mload(0xc0)\n      dup2\n      sub\n      add(0x01e0, mload(0xc0))\n      mstore\n      tag_576\n      swap2\n      tag_4\n      jump\t// in\n    tag_576:\n      mstore(add(0x0200, mload(0xc0)), mload(0x80))\n      mload(0xc0)\n      swap1\n      sub\n      mload(0xc0)\n      return\n    tag_1:\n      swap1\n      0x01\n      dup3\n      dup2\n      shr\n      swap3\n      and\n      dup1\n      iszero\n      tag_577\n      jumpi\n    tag_578:\n      0x20\n      dup4\n      lt\n      eq\n      tag_579\n      jumpi\n      jump\t// out\n    tag_579:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x22)\n      revert(0x00, 0x24)\n    tag_577:\n      swap2\n      0x7f\n      and\n      swap2\n      jump(tag_578)\n    tag_2:\n      swap1\n      0x1f\n      dup1\n      not\n      swap2\n      add\n      and\n      dup2\n      add\n      swap1\n      dup2\n      lt\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      or\n      tag_501\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_3:\n      swap1\n      mload(0x40)\n      swap2\n      dup3\n      0x00\n      dup3\n      sload\n      swap3\n      tag_583\n      dup5\n      tag_1\n      jump\t// in\n    tag_583:\n      dup1\n      dup5\n      mstore\n      swap4\n      0x01\n      dup2\n      and\n      swap1\n      dup2\n      iszero\n      tag_584\n      jumpi\n      pop\n      0x01\n      eq\n      tag_586\n      jumpi\n    tag_587:\n      pop\n      tag_588\n      swap3\n      pop\n      sub\n      dup4\n      tag_2\n      jump\t// in\n    tag_588:\n      jump\t// out\n    tag_586:\n      swap1\n      pop\n      0x00\n      swap3\n      swap2\n      swap3\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x00\n      swap2\n    tag_589:\n      dup2\n      dup4\n      lt\n      tag_590\n      jumpi\n      pop\n      pop\n      swap1\n      0x20\n      tag_588\n      swap3\n      dup3\n      add\n      add\n      0x00\n      jump(tag_587)\n    tag_590:\n      0x20\n      swap2\n      swap4\n      pop\n      dup1\n      0x01\n      swap2\n      sload\n      dup4\n      dup6\n      dup10\n      add\n      add\n      mstore\n      add\n      swap2\n      add\n      swap1\n      swap2\n      dup5\n      swap3\n      jump(tag_589)\n    tag_584:\n      swap1\n      pop\n      0x20\n      swap3\n      pop\n      tag_588\n      swap5\n      swap2\n      pop\n      not(0xff)\n      and\n      dup3\n      dup5\n      add\n      mstore\n      iszero\n      iszero\n      0x05\n      shl\n      dup3\n      add\n      add\n      0x00\n      jump(tag_587)\n    tag_4:\n      dup1\n      mload\n      dup1\n      dup4\n      mstore\n      0x20\n      swap3\n      swap2\n      dup2\n      swap1\n      dup5\n      add\n      dup5\n      dup5\n      add\n      mcopy\n      0x00\n      dup3\n      dup3\n      add\n      dup5\n      add\n      mstore\n      0x1f\n      add\n      not(0x1f)\n      and\n      add\n      add\n      swap1\n      jump\t// out\n    tag_5:\n      swap1\n      0x07\n      dup3\n      lt\n      iszero\n      tag_353\n      jumpi\n      mstore\n      jump\t// out\n    tag_6:\n      dup2\n      0x1f\n      dup3\n      add\n      slt\n      iszero\n      tag_364\n      jumpi\n      dup1\n      calldataload\n      swap1\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      tag_501\n      jumpi\n      mload(0x40)\n      swap3\n      tag_598\n      0x1f\n      dup5\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup6\n      tag_2\n      jump\t// in\n    tag_598:\n      dup3\n      dup5\n      mstore\n      0x20\n      dup4\n      dup4\n      add\n      add\n      gt\n      tag_364\n      jumpi\n      dup2\n      0x00\n      swap3\n      0x20\n      dup1\n      swap4\n      add\n      dup4\n      dup7\n      add\n      calldatacopy\n      dup4\n      add\n      add\n      mstore\n      swap1\n      jump\t// out\n    tag_7:\n      sub(shl(0x40, 0x01), 0x01)\n      dup2\n      gt\n      tag_501\n      jumpi\n      0x05\n      shl\n      0x20\n      add\n      swap1\n      jump\t// out\n    tag_8:\n      calldataload(0x04)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_364\n      jumpi\n      jump\t// out\n    tag_9:\n      calldataload(0x24)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_364\n      jumpi\n      jump\t// out\n    tag_10:\n      swap1\n      0x40\n      not(0x03)\n      dup4\n      add\n      slt\n      tag_364\n      jumpi\n      calldataload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_364\n      jumpi\n      swap2\n      calldataload(0x24)\n      swap1\n      sub(shl(0x40, 0x01), 0x01)\n      dup3\n      gt\n      tag_364\n      jumpi\n      dup1\n      0x23\n      dup4\n      add\n      slt\n      iszero\n      tag_364\n      jumpi\n      dup2\n      0x04\n      add\n      calldataload\n      tag_615\n      dup2\n      tag_7\n      jump\t// in\n    tag_615:\n      swap3\n      tag_616\n      mload(0x40)\n      swap5\n      dup6\n      tag_2\n      jump\t// in\n    tag_616:\n      dup2\n      dup5\n      mstore\n      0x24\n      0x20\n      dup6\n      add\n      swap3\n      0x05\n      shl\n      dup3\n      add\n      add\n      swap3\n      dup4\n      gt\n      tag_364\n      jumpi\n      0x24\n      add\n      swap1\n    tag_619:\n      dup3\n      dup3\n      lt\n      tag_620\n      jumpi\n      pop\n      pop\n      pop\n      swap1\n      jump\t// out\n    tag_620:\n      dup2\n      calldataload\n      dup2\n      mstore\n      0x20\n      swap2\n      dup3\n      add\n      swap2\n      add\n      jump(tag_619)\n    tag_11:\n      swap1\n      0x03\n      dup3\n      lt\n      iszero\n      tag_353\n      jumpi\n      mstore\n      jump\t// out\n    tag_13:\n      dup1\n      mload\n      dup3\n      lt\n      iszero\n      tag_499\n      jumpi\n      0x20\n      swap2\n      0x05\n      shl\n      add\n      add\n      swap1\n      jump\t// out\n    tag_14:\n      iszero\n      tag_626\n      jumpi\n      jump\t// out\n    tag_626:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x88, 0x496e76616c69642061646472657373)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1816:2087  function hasAnyRole(address account, bytes32[] memory roles) external view returns (bool) {... */\n    tag_15:\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1954:1957  i++ */\n    tag_628:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup2\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1936:1952  i < roles.length */\n      dup2\n      lt\n      iszero\n      tag_629\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1977:2003  hasRole(roles[i], account) */\n      tag_631\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1985:1993  roles[i] */\n      dup4\n      tag_182\n      dup4\n      dup6\n      tag_13\n      jump\t// in\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1977:2003  hasRole(roles[i], account) */\n    tag_631:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1973:2049  if (hasRole(roles[i], account)) {... */\n      tag_633\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x01\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1921:1934  uint256 i = 0 */\n      jump(tag_628)\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1973:2049  if (hasRole(roles[i], account)) {... */\n    tag_633:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2023:2034  return true */\n      pop\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x01\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2023:2034  return true */\n      swap1\n      jump\t// out\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1936:1952  i < roles.length */\n    tag_629:\n      pop\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1816:2087  function hasAnyRole(address account, bytes32[] memory roles) external view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n    tag_17:\n      not(0x00)\n      dup2\n      eq\n      tag_635\n      jumpi\n      0x01\n      add\n      swap1\n      jump\t// out\n    tag_635:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2723:3087  function getAllRoles() public pure returns (bytes32[] memory roles) {... */\n    tag_18:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      mload(0x40)\n      tag_637\n      0xe0\n      dup3\n      tag_2\n      jump\t// in\n    tag_637:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2823:2824  6 */\n      0x06\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      0xc0\n      calldatasize\n      dup3\n      calldatacopy\n      dup2\n      mload\n      iszero\n      tag_499\n      jumpi\n      0x00\n      swap1\n      mstore\n      dup1\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2880:2881  1 */\n      0x01\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      lt\n      iszero\n      tag_499\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":343:366  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x40\n      dup3\n      add\n      mstore\n      dup1\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2911:2912  2 */\n      0x02\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      lt\n      iszero\n      tag_499\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":413:440  keccak256(\"AI_ORACLE_ROLE\") */\n      0x482648e7878e9fa54c0a2f67ffd22d00ebc37cf7a03e060e428d2ab0cd6735cc\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x60\n      dup3\n      add\n      mstore\n      dup1\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2946:2947  3 */\n      0x03\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      lt\n      iszero\n      tag_499\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":494:528  keccak256(\"TREASURY_MANAGER_ROLE\") */\n      0xede9dcdb0ce99dc7cec9c7be9246ad08b37853683ad91569c187b647ddf5e21c\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x80\n      dup3\n      add\n      mstore\n      dup1\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2988:2989  4 */\n      0x04\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      lt\n      iszero\n      tag_499\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":584:620  keccak256(\"MILESTONE_APPROVER_ROLE\") */\n      0x58223cdfb69946630d837d40b5c366a584f0217ada7fddd8318f2e08603cfa22\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0xa0\n      dup3\n      add\n      mstore\n      dup1\n      mload\n      0x05\n      lt\n      iszero\n      tag_499\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":674:708  keccak256(\"DISPUTE_RESOLVER_ROLE\") */\n      0x7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0xc0\n      dup3\n      add\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2723:3087  function getAllRoles() public pure returns (bytes32[] memory roles) {... */\n      swap1\n      jump\t// out\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n    tag_19:\n      iszero\n      tag_650\n      jumpi\n      jump\t// out\n    tag_650:\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0a\n      0x24\n      dup3\n      add\n      mstore\n      shl(0xb0, 0x4e6f7420766f74696e67)\n      0x44\n      dup3\n      add\n      mstore\n      0x64\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_20:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      swap1\n      dup2\n      mstore\n      mstore(0x20, 0x7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec)\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3495:3518  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n      tag_652\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n    tag_652:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      shl(0xe0, 0xe2517d3f)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":343:366  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x24\n      mstore\n      0x44\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_21:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x00\n      swap1\n      dup2\n      mstore\n      mstore(0x20, 0xad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5)\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3495:3518  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n      tag_654\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n    tag_654:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      shl(0xe0, 0xe2517d3f)\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      mstore\n      mstore(0x24, 0x00)\n      0x44\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_22:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3495:3518  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n      tag_656\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n    tag_656:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      shl(0xe0, 0xe2517d3f)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      mstore\n      0x24\n      mstore\n      0x44\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_23:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x00\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      tag_658\n      jumpi\n      0x00\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      swap6\n      swap1\n      swap6\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      dup1\n      sload\n      not(0xff)\n      and\n      0x01\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap3\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      swap2\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6323:6327  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n    tag_658:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6708:7025  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_24:\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x00\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      iszero\n      tag_658\n      jumpi\n      0x00\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      swap6\n      swap1\n      swap6\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap3\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      swap2\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      log4\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6954:6965  return true */\n      swap1\n      jump\t// out\n        /* \"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":135:2475  contract ProposalRegistry is IProposalRegistry, ProposalVoting {... */\n    tag_25:\n      swap2\n      swap1\n      dup3\n      add\n      dup1\n      swap3\n      gt\n      tag_635\n      jumpi\n      jump\t// out\n\n    auxdata: 0xa264697066735822122026b431b828a1feefa7c0217c0469dd90007f76aa475f29d338cdb7a925945af664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"abi_decode_address_fromMemory": {
									"entryPoint": 384,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_grantRole": {
									"entryPoint": 404,
									"id": 257,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_grantRole_1807": {
									"entryPoint": 522,
									"id": 257,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60803461016857601f61286838819003918201601f19168301916001600160401b0383118484101761016c57808492604094855283398101031261016857610052602061004b83610180565b9201610180565b61005b33610194565b5060018055600254906001600160a01b03831615610123576001600160a01b03169182156100de576001600160a81b031990911660089190911b610100600160a81b031617600255600380546001600160a01b0319169190911790555f6004556100c433610194565b506100ce3361020a565b5060405161256a908161029e8239f35b60405162461bcd60e51b815260206004820152601760248201527f496e76616c696420747265617375727920657363726f770000000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601360248201527f496e76616c6964204149207265676973747279000000000000000000000000006044820152606490fd5b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b51906001600160a01b038216820361016857565b6001600160a01b0381165f9081525f80516020612848833981519152602052604090205460ff16610205576001600160a01b03165f8181525f8051602061284883398151915260205260408120805460ff191660011790553391905f805160206128088339815191528180a4600190565b505f90565b6001600160a01b0381165f9081525f80516020612828833981519152602052604090205460ff16610205576001600160a01b03165f8181525f8051602061282883398151915260205260408120805460ff191660011790553391907fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775905f805160206128088339815191529080a460019056fe6101006040526004361015610012575f80fd5b5f803560e01c8063013cf08b14611d4157806301ffc9a714611ceb57806308d256af146110835780630d61b51914610d7e5780631d9dfd4e14610d55578063215809ca14610d37578063248a9ca314610d045780632d142b7614610ccb5780632d75ae0e14610ca65780632f2ff15d14610c6d57806336568abe14610c2857806339c854fa14610c0c5780633ab3429014610bf05780633f4ba83a14610b5b5780634385963214610b115780634c05abeb14610af55780634fe9d1f514610a9f578063567813881461093e5780635c975abb1461091b5780636807fc211461089157806368ca78f91461086d57806375b238fc14610832578063791f5d231461080e5780638456cb591461077a57806391b9f9d81461071b57806391d14854146106d257806396479e19146106a5578063a02d72fb1461066a578063a217fddf1461064e578063a64e024a14610630578063abd98fb0146105bb578063aca5a8a71461052f578063bb4d44361461050a578063bfe42a37146104cf578063c601f7af14610494578063c7f758a814610354578063d547741f1461030d578063db994b4f146102be578063ebdf690f14610283578063ee8a7c1514610267578063f2bcac3d146102095763fe10226d146101e9575f80fd5b346102065780600319360112610206576020600454604051908152f35b80fd5b50346102065780600319360112610206576102226121d8565b90604051918291602083016020845282518091526020604085019301915b81811061024e575050500390f35b8251845285945060209384019390920191600101610240565b50346102065780600319360112610206576020604051600f8152f35b503461020657806003193601126102065760206040517fede9dcdb0ce99dc7cec9c7be9246ad08b37853683ad91569c187b647ddf5e21c8152f35b50346102065760403660031901126102065760406102da612079565b9160043581526007602052209060018060a01b03165f52602052602060ff60405f20541661030b6040518092612122565bf35b50346102065760403660031901126102065761035060043561032d612079565b9061034b610346825f525f602052600160405f20015490565b6123e7565b6124a7565b5080f35b50346102065760203660031901126102065760043580151580610488575b1561044d5781526005602052604090208054600160a01b6001900360018301541691600581015490600681015460ff16600e8201546009830154600a84015490600b85015492600c86015494600d87015496600281016103d190611f26565b906003016103de90611f26565b906040519b8c9b8c5260208c015260408b0161018090526101808b0161040391611fc6565b8a810360608c015261041491611fc6565b9760808a015260a0890161042791611fea565b60c088015260e08701526101008601526101208501526101408401526101608301520390f35b60405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a59081c1c9bdc1bdcd85b081251606a1b6044820152606490fd5b50600454811115610372565b503461020657806003193601126102065760206040517f482648e7878e9fa54c0a2f67ffd22d00ebc37cf7a03e060e428d2ab0cd6735cc8152f35b503461020657806003193601126102065760206040517f7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e8152f35b5034610206576020366003190112610206576020610526612063565b31604051908152f35b503461020657602036600319011261020657610549612063565b6105516121d8565b90825b82518110156105b05761058f8261056b838661212f565b515f525f60205260405f209060018060a01b03165f5260205260ff60405f20541690565b61059c575b600101610554565b926105a86001916121b6565b939050610594565b602084604051908152f35b5034610206576020366003190112610206577fb0375a2ebcfdc355daf31c17062233e587a73c013fde410d569cf8167b1d409860206105f8612063565b610600612329565b6001600160a01b0316610614811515612143565b600380546001600160a01b03191682179055604051908152a180f35b50346102065780600319360112610206576020604051621275008152f35b5034610206578060031936011261020657602090604051908152f35b503461020657806003193601126102065760206040517f58223cdfb69946630d837d40b5c366a584f0217ada7fddd8318f2e08603cfa228152f35b503461020657806003193601126102065760025460405160089190911c6001600160a01b03168152602090f35b50346102065760403660031901126102065760406106ee612079565b91600435815280602052209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b50346102065761072a3661208f565b610735929192612398565b815b8151811015610776578061076f856107516001948661212f565b5161076a610346825f525f602052600160405f20015490565b61241f565b5001610737565b8280f35b5034610206578060031936011261020657610793612329565b60025460ff81166107d65760019060ff1916176002557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a180f35b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b50346102065780600319360112610206576020604051683635c9adc5dea000008152f35b503461020657806003193601126102065760206040517fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217758152f35b50346102065760206108876108813661208f565b90612181565b6040519015158152f35b5034610206576020366003190112610206577f12cb47b190a758acbe916b2a7c5a734b023ce60f4d93ec2b3159160163c9291a60206108ce612063565b6108d6612329565b6001600160a01b038116906108ec821515612143565b60028054610100600160a81b03191660089290921b610100600160a81b0316919091179055604051908152a180f35b5034610206578060031936011261020657602060ff600254166040519015158152f35b5034610206576040366003190112610206576024356004356003821015610a9b57808352600660209081526040808520335f908152925290205460ff16610a665780835260056020526040832060ff6006820154166007811015610a525760016109a891146122f0565b33319082855260066020526040852060018060a01b0333165f5260205260405f20600160ff19825416179055600184145f14610a2a57600b016109ec828254612527565b90555b6109fc6040518094612122565b60208301527fb83d25c6a5d258561330739951487acb4bd09ba5190b5d32c4f261817d90679260403393a380f35b83610a4457600c01610a3d828254612527565b90556109ef565b600d01610a3d828254612527565b634e487b7160e01b85526021600452602485fd5b60405162461bcd60e51b815260206004820152600d60248201526c105b1c9958591e481d9bdd1959609a1b6044820152606490fd5b8280fd5b503461020657610aae3661208f565b610ab9929192612398565b815b81518110156107765780610aee85610ad56001948661212f565b5161034b610346825f525f602052600160405f20015490565b5001610abb565b50346102065780600319360112610206576020604051600a8152f35b5034610206576040366003190112610206576040610b2d612079565b9160043581526006602052209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b5034610206578060031936011261020657610b74612329565b60025460ff811615610bb45760ff19166002557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a180f35b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b5034610206578060031936011261020657602060405160338152f35b5034610206578060031936011261020657602060405160468152f35b503461020657604036600319011261020657610c42612079565b336001600160a01b03821603610c5e57610350906004356124a7565b63334bd91960e11b8252600482fd5b503461020657604036600319011261020657610350600435610c8d612079565b9061076a610346825f525f602052600160405f20015490565b5034610206578060031936011261020657602060405169d3c21bcecceda10000008152f35b5034610206576020366003190112610206576020906040906001600160a01b03610cf3612063565b168152600883522054604051908152f35b5034610206576020366003190112610206576020610d2f6004355f525f602052600160405f20015490565b604051908152f35b503461020657806003193601126102065760206040516203f4808152f35b50346102065780600319360112610206576003546040516001600160a01b039091168152602090f35b5034610f2c576020366003190112610f2c57600435805f52600560205260405f20600681019060ff825416600781101561106f576001610dbe91146122f0565b600a81015442111561103a57600b810154600c82015490683635c9adc5dea00000610df7610dec8484612527565b600d86015490612527565b101591829182611030575b505015610f305750815460ff191660021782556003546001820154600583018054601090940154909390926001600160a01b039283169216803b15610f2c575f928360849260405196879586946307d519c960e51b86528c60048701526024860152604485015260648401525af18015610f2157610ee2575b5060ff7f5b9614f21773d68c0b149bda804ff3d491c8bc8795f7ed236cc97804cd00538992847fc6a4fd4a703d2a2fe3167ce7f6d62bf96458b7e55042cfaa85d5c7ef3ac56eea6020809554604051908152a25b5416610ede6040518092611fea565ba280f35b60209194507f5b9614f21773d68c0b149bda804ff3d491c8bc8795f7ed236cc97804cd00538992610f155f60ff93611f05565b5f959093509150610e7b565b6040513d5f823e3d90fd5b5f80fd5b825460ff191660041783557f5b9614f21773d68c0b149bda804ff3d491c8bc8795f7ed236cc97804cd005389926020925060ff9115610fd957847fe5f9059dc551d2dcf73c3bc69f282e134799b450f062c909d9f7ff45951327bd610fd1604051610f9c604082611f05565b601681527513585a9bdc9a5d1e481d9bdd1959081859d85a5b9cdd60521b878201525b60405191829188835288830190611fc6565b0390a2610ecf565b847fe5f9059dc551d2dcf73c3bc69f282e134799b450f062c909d9f7ff45951327bd610fd160405161100c604082611f05565b6013815272496e73756666696369656e742071756f72756d60681b87820152610fbf565b1190505f80610e02565b60405162461bcd60e51b815260206004820152600d60248201526c566f74696e672061637469766560981b6044820152606490fd5b634e487b7160e01b5f52602160045260245ffd5b6020366003190112610f2c576004356001600160401b038111610f2c5760e06003198236030112610f2c576040519060e082018281106001600160401b038211176117025760405280600401356001600160401b038111610f2c576110ee9060043691840101611ff7565b825260248101356001600160401b038111610f2c576111139060043691840101611ff7565b6020830190815260448201356001600160401b038111610f2c5761113d9060043691850101611ff7565b916040840192835260608401936064820135855260848201356001600160401b038111610f2c57820136602382011215610f2c57600481013561117f8161204c565b9161118d6040519384611f05565b818352602060048185019360051b8301010190368211610f2c5760248101925b828410611cba57505050506080820190815260a48301356001600160401b038111610f2c5783019236602385011215610f2c576004840135936111ef8561204c565b946111fd6040519687611f05565b808652602060048188019260051b8401010191368311610f2c57602401905b828210611caa5750505060a0830193845260c460c08401910135815266038d7ea4c680003410611c6557825187519082518451519287515192518015159081611c59575b5015611c1d578015159081611c08575b5015611bd2576203f4808110159081611bc4575b5015611b87578103611b42578015159081611b36575b5015611af157683635c9adc5dea00000333110611aac576112bc6004546121b6565b94856004558351905187519080518015159081611a9f575b5015611a6157815115611a2857875f52600560205260405f209288845560018401336bffffffffffffffffffffffff60a01b82541617905560028401908051906001600160401b03821161170257819061132e8454611ecd565b601f81116119d8575b50602090601f8311600114611975575f9261196a575b50508160011b915f199060031b1c19161790555b805160038401916001600160401b0382116117025781906113828454611ecd565b601f811161191a575b50602090601f83116001146118b7575f926118ac575b50508160011b915f199060031b1c19161790555b805160048301916001600160401b038211611702576113d48354611ecd565b601f8111611867575b50602090601f83116001146117fe5791805f9694926011969488926117f3575b50508160011b9187199060031b1c19161790555b6006810160ff1981541690556007429101558851905187845260056020526040842091600583015560088201550155519151925f955f965b85518810156115265761145c888761212f565b51156114d75761146c888661212f565b5151156114925761148a6001916114838a8961212f565b5190612527565b970196611449565b60405162461bcd60e51b815260206004820152601e60248201527f4d696c6573746f6e65206465736372697074696f6e20726571756972656400006044820152606490fd5b60405162461bcd60e51b815260206004820152602160248201527f4d696c6573746f6e6520616d6f756e74206d75737420626520706f73697469766044820152606560f81b6064820152608490fd5b94939295825f52600560205260405f20956005870154036117965760105f979601965b845181101561172a5761155c818661212f565b51611567828861212f565b5160405191608083018381106001600160401b0382111761170257604052825260208201908152604082015f815260608301915f83528b54680100000000000000008110156117025760018101808e55811015611716578c5f5260205f209060021b0193518051906001600160401b038211611702576115e78654611ecd565b601f81116116bd575b50602090601f831160011461165257918060019897969492600396945f92611647575b50505f1982871b1c191690881b1785555b5186850155600284019051151560ff801983541691161790555191015501611549565b015190505f80611613565b90601f19831691875f52815f20925f5b8181106116a557509260019998979593928592600398968c951061168e575b505050811b018555611624565b01515f1983891b60f8161c191690555f8080611681565b92936020600181928786015181550195019301611662565b865f5260205f20601f840160051c810191602085106116f8575b601f0160051c01905b8181106116ed57506115f0565b5f81556001016116e0565b90915081906116d7565b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b60208484817f5ad01c818e42f77c2c5123d4d295c39799cf1cac9125682a8c90c7ce9d9bf6b4611781878d519451905161176f60405196608088526080880190611fc6565b91888701528582036040870152611fc6565b924260608201528033940390a3604051908152f35b60405162461bcd60e51b815260206004820152602f60248201527f4d696c6573746f6e6520616d6f756e747320646f6e27742073756d20746f207260448201526e195c5d595cdd195908185b5bdd5b9d608a1b6064820152608490fd5b015190508d806113fd565b90601f19831691845f52815f20925f5b81811061184f5750926001928592601198965f9a989610611837575b505050811b019055611411565b0151881960f88460031b161c191690558d808061182a565b9293602060018192878601518155019501930161180e565b835f5260205f20601f840160051c810191602085106118a2575b601f0160051c01905b81811061189757506113dd565b5f815560010161188a565b9091508190611881565b015190508c806113a1565b5f8581528281209350601f198516905b81811061190257509084600195949392106118ea575b505050811b0190556113b5565b01515f1960f88460031b161c191690558c80806118dd565b929360206001819287860151815501950193016118c7565b909150835f5260205f20601f840160051c81019160208510611960575b90601f859493920160051c01905b818110611952575061138b565b5f8155849350600101611945565b9091508190611937565b015190508d8061134d565b5f8581528281209350601f198516905b8181106119c057509084600195949392106119a8575b505050811b019055611361565b01515f1960f88460031b161c191690558d808061199b565b92936020600181928786015181550195019301611985565b909150835f5260205f20601f840160051c81019160208510611a1e575b90601f859493920160051c01905b818110611a105750611337565b5f8155849350600101611a03565b90915081906119f5565b60405162461bcd60e51b815260206004820152601160248201527012541194c810d251081c995c5d5a5c9959607a1b6044820152606490fd5b60405162461bcd60e51b8152602060048201526016602482015275092dcecc2d8d2c840e6eadadac2e4f240d8cadccee8d60531b6044820152606490fd5b6103e8915011158b6112d4565b60405162461bcd60e51b815260206004820152601860248201527f496e73756666696369656e74205846492062616c616e636500000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601760248201527f496e76616c6964206d696c6573746f6e6520636f756e740000000000000000006044820152606490fd5b600a915011158861129a565b60405162461bcd60e51b815260206004820152601960248201527f4d696c6573746f6e6520617272617973206d69736d61746368000000000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081d9bdd1a5b99c81c195c9a5bd9605a1b6044820152606490fd5b62127500915011158a611284565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a5908185b5bdd5b9d60921b6044820152606490fd5b69d3c21bcecceda1000000915011158b611270565b60405162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840e8d2e8d8ca40d8cadccee8d60631b6044820152606490fd5b60c8915011158c611260565b60405162461bcd60e51b815260206004820152601960248201527f496e73756666696369656e742070726f706f73616c20666565000000000000006044820152606490fd5b813581526020918201910161121c565b83356001600160401b038111610f2c57602091611ce08392836004369288010101611ff7565b8152019301926111ad565b34610f2c576020366003190112610f2c5760043563ffffffff60e01b8116809103610f2c57602090637965db0b60e01b8114908115611d30575b506040519015158152f35b6301ffc9a760e01b14905082611d25565b34610f2c576020366003190112610f2c576004355f908152600560205260409020805460018201546001600160a01b031660a052611d8160028301611f26565b60e05281611d9160038201611f26565b91611d9e60048301611f26565b92600583015493600684015460ff1660078501546008860154600987015491600a88015493600b89015495600c8a015497600d8b015499600e8c01549b600f01611de790611f26565b9d6011015460805260405160c05260c0515260a05160c0516020015260c051604001610220905260c0516102200160e05190611e2291611fc6565b60c051810360c05160600152611e3791611fc6565b60c051810360c05160800152611e4c91611fc6565b9960c05160a0015260c05160c001611e6391611fea565b60c05160e0015260c051610100015260c051610120015260c051610140015260c051610160015260c051610180015260c0516101a0015260c0516101c0015260c051810360c0516101e00152611eb891611fc6565b60805160c051610200015260c051900360c051f35b90600182811c92168015611efb575b6020831014611ee757565b634e487b7160e01b5f52602260045260245ffd5b91607f1691611edc565b90601f801991011681019081106001600160401b0382111761170257604052565b9060405191825f825492611f3984611ecd565b8084529360018116908115611fa45750600114611f60575b50611f5e92500383611f05565b565b90505f9291925260205f20905f915b818310611f88575050906020611f5e928201015f611f51565b6020919350806001915483858901015201910190918492611f6f565b905060209250611f5e94915060ff191682840152151560051b8201015f611f51565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b90600782101561106f5752565b81601f82011215610f2c578035906001600160401b038211611702576040519261202b601f8401601f191660200185611f05565b82845260208383010111610f2c57815f926020809301838601378301015290565b6001600160401b0381116117025760051b60200190565b600435906001600160a01b0382168203610f2c57565b602435906001600160a01b0382168203610f2c57565b906040600319830112610f2c576004356001600160a01b0381168103610f2c5791602435906001600160401b038211610f2c5780602383011215610f2c5781600401356120db8161204c565b926120e96040519485611f05565b8184526024602085019260051b820101928311610f2c57602401905b8282106121125750505090565b8135815260209182019101612105565b90600382101561106f5752565b80518210156117165760209160051b010190565b1561214a57565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b905f5b81518110156121af5761219b8361056b838561212f565b6121a757600101612184565b505050600190565b5050505f90565b5f1981146121c45760010190565b634e487b7160e01b5f52601160045260245ffd5b6040516121e660e082611f05565b600681526020810160c0368237815115611716575f9052805160011015611716577fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217756040820152805160021015611716577f482648e7878e9fa54c0a2f67ffd22d00ebc37cf7a03e060e428d2ab0cd6735cc6060820152805160031015611716577fede9dcdb0ce99dc7cec9c7be9246ad08b37853683ad91569c187b647ddf5e21c6080820152805160041015611716577f58223cdfb69946630d837d40b5c366a584f0217ada7fddd8318f2e08603cfa2260a0820152805160051015611716577f7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e60c082015290565b156122f757565b60405162461bcd60e51b815260206004820152600a6024820152694e6f7420766f74696e6760b01b6044820152606490fd5b335f9081527f7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec602052604090205460ff161561236157565b63e2517d3f60e01b5f52336004527fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177560245260445ffd5b335f9081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604090205460ff16156123d057565b63e2517d3f60e01b5f52336004525f60245260445ffd5b5f8181526020818152604080832033845290915290205460ff16156124095750565b63e2517d3f60e01b5f523360045260245260445ffd5b5f818152602081815260408083206001600160a01b038616845290915290205460ff166124a1575f818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19166001179055339291907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b50505f90565b5f818152602081815260408083206001600160a01b038616845290915290205460ff16156124a1575f818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19169055339291907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a4600190565b919082018092116121c45756fea264697066735822122026b431b828a1feefa7c0217c0469dd90007f76aa475f29d338cdb7a925945af664736f6c634300081a00332f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ecad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5",
							"opcodes": "PUSH1 0x80 CALLVALUE PUSH2 0x168 JUMPI PUSH1 0x1F PUSH2 0x2868 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x16C JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x168 JUMPI PUSH2 0x52 PUSH1 0x20 PUSH2 0x4B DUP4 PUSH2 0x180 JUMP JUMPDEST SWAP3 ADD PUSH2 0x180 JUMP JUMPDEST PUSH2 0x5B CALLER PUSH2 0x194 JUMP JUMPDEST POP PUSH1 0x1 DUP1 SSTORE PUSH1 0x2 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x123 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 DUP3 ISZERO PUSH2 0xDE JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT SWAP1 SWAP2 AND PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND OR PUSH1 0x2 SSTORE PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH0 PUSH1 0x4 SSTORE PUSH2 0xC4 CALLER PUSH2 0x194 JUMP JUMPDEST POP PUSH2 0xCE CALLER PUSH2 0x20A JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x256A SWAP1 DUP2 PUSH2 0x29E DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420747265617375727920657363726F77000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420414920726567697374727900000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x168 JUMPI JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2848 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x205 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2848 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP2 SWAP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2808 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH0 SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2828 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x205 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2828 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP2 SWAP1 PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 SWAP1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2808 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP INVALID PUSH2 0x100 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x13CF08B EQ PUSH2 0x1D41 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1CEB JUMPI DUP1 PUSH4 0x8D256AF EQ PUSH2 0x1083 JUMPI DUP1 PUSH4 0xD61B519 EQ PUSH2 0xD7E JUMPI DUP1 PUSH4 0x1D9DFD4E EQ PUSH2 0xD55 JUMPI DUP1 PUSH4 0x215809CA EQ PUSH2 0xD37 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0xD04 JUMPI DUP1 PUSH4 0x2D142B76 EQ PUSH2 0xCCB JUMPI DUP1 PUSH4 0x2D75AE0E EQ PUSH2 0xCA6 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0xC6D JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0xC28 JUMPI DUP1 PUSH4 0x39C854FA EQ PUSH2 0xC0C JUMPI DUP1 PUSH4 0x3AB34290 EQ PUSH2 0xBF0 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0xB5B JUMPI DUP1 PUSH4 0x43859632 EQ PUSH2 0xB11 JUMPI DUP1 PUSH4 0x4C05ABEB EQ PUSH2 0xAF5 JUMPI DUP1 PUSH4 0x4FE9D1F5 EQ PUSH2 0xA9F JUMPI DUP1 PUSH4 0x56781388 EQ PUSH2 0x93E JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x91B JUMPI DUP1 PUSH4 0x6807FC21 EQ PUSH2 0x891 JUMPI DUP1 PUSH4 0x68CA78F9 EQ PUSH2 0x86D JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x832 JUMPI DUP1 PUSH4 0x791F5D23 EQ PUSH2 0x80E JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x77A JUMPI DUP1 PUSH4 0x91B9F9D8 EQ PUSH2 0x71B JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x6D2 JUMPI DUP1 PUSH4 0x96479E19 EQ PUSH2 0x6A5 JUMPI DUP1 PUSH4 0xA02D72FB EQ PUSH2 0x66A JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x64E JUMPI DUP1 PUSH4 0xA64E024A EQ PUSH2 0x630 JUMPI DUP1 PUSH4 0xABD98FB0 EQ PUSH2 0x5BB JUMPI DUP1 PUSH4 0xACA5A8A7 EQ PUSH2 0x52F JUMPI DUP1 PUSH4 0xBB4D4436 EQ PUSH2 0x50A JUMPI DUP1 PUSH4 0xBFE42A37 EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0xC601F7AF EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0xC7F758A8 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0xDB994B4F EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0xEBDF690F EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0xEE8A7C15 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xF2BCAC3D EQ PUSH2 0x209 JUMPI PUSH4 0xFE10226D EQ PUSH2 0x1E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH2 0x222 PUSH2 0x21D8 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP5 MSTORE DUP3 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x20 PUSH1 0x40 DUP6 ADD SWAP4 ADD SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x24E JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x240 JUMP JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xF DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xEDE9DCDB0CE99DC7CEC9C7BE9246AD08B37853683AD91569C187B647DDF5E21C DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x206 JUMPI PUSH1 0x40 PUSH2 0x2DA PUSH2 0x2079 JUMP JUMPDEST SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH2 0x30B PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0x2122 JUMP JUMPDEST RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x206 JUMPI PUSH2 0x350 PUSH1 0x4 CALLDATALOAD PUSH2 0x32D PUSH2 0x2079 JUMP JUMPDEST SWAP1 PUSH2 0x34B PUSH2 0x346 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x23E7 JUMP JUMPDEST PUSH2 0x24A7 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x206 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x488 JUMPI JUMPDEST ISZERO PUSH2 0x44D JUMPI DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB PUSH1 0x1 DUP4 ADD SLOAD AND SWAP2 PUSH1 0x5 DUP2 ADD SLOAD SWAP1 PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH1 0xE DUP3 ADD SLOAD PUSH1 0x9 DUP4 ADD SLOAD PUSH1 0xA DUP5 ADD SLOAD SWAP1 PUSH1 0xB DUP6 ADD SLOAD SWAP3 PUSH1 0xC DUP7 ADD SLOAD SWAP5 PUSH1 0xD DUP8 ADD SLOAD SWAP7 PUSH1 0x2 DUP2 ADD PUSH2 0x3D1 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST SWAP1 PUSH1 0x3 ADD PUSH2 0x3DE SWAP1 PUSH2 0x1F26 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP12 DUP13 SWAP12 DUP13 MSTORE PUSH1 0x20 DUP13 ADD MSTORE PUSH1 0x40 DUP12 ADD PUSH2 0x180 SWAP1 MSTORE PUSH2 0x180 DUP12 ADD PUSH2 0x403 SWAP2 PUSH2 0x1FC6 JUMP JUMPDEST DUP11 DUP2 SUB PUSH1 0x60 DUP13 ADD MSTORE PUSH2 0x414 SWAP2 PUSH2 0x1FC6 JUMP JUMPDEST SWAP8 PUSH1 0x80 DUP11 ADD MSTORE PUSH1 0xA0 DUP10 ADD PUSH2 0x427 SWAP2 PUSH2 0x1FEA JUMP JUMPDEST PUSH1 0xC0 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0x140 DUP5 ADD MSTORE PUSH2 0x160 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125B9D985B1A59081C1C9BDC1BDCD85B081251 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD DUP2 GT ISZERO PUSH2 0x372 JUMP JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x482648E7878E9FA54C0A2F67FFD22D00EBC37CF7A03E060E428D2AB0CD6735CC DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x7B8BB8356A3F32F5C111FF23F050D97F08988E0883529EA7BFF3B918887A6E0E DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x206 JUMPI PUSH1 0x20 PUSH2 0x526 PUSH2 0x2063 JUMP JUMPDEST BALANCE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x206 JUMPI PUSH2 0x549 PUSH2 0x2063 JUMP JUMPDEST PUSH2 0x551 PUSH2 0x21D8 JUMP JUMPDEST SWAP1 DUP3 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x5B0 JUMPI PUSH2 0x58F DUP3 PUSH2 0x56B DUP4 DUP7 PUSH2 0x212F JUMP JUMPDEST MLOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH2 0x59C JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x554 JUMP JUMPDEST SWAP3 PUSH2 0x5A8 PUSH1 0x1 SWAP2 PUSH2 0x21B6 JUMP JUMPDEST SWAP4 SWAP1 POP PUSH2 0x594 JUMP JUMPDEST PUSH1 0x20 DUP5 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x206 JUMPI PUSH32 0xB0375A2EBCFDC355DAF31C17062233E587A73C013FDE410D569CF8167B1D4098 PUSH1 0x20 PUSH2 0x5F8 PUSH2 0x2063 JUMP JUMPDEST PUSH2 0x600 PUSH2 0x2329 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x614 DUP2 ISZERO ISZERO PUSH2 0x2143 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x127500 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x58223CDFB69946630D837D40B5C366A584F0217ADA7FDDD8318F2E08603CFA22 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x206 JUMPI PUSH1 0x40 PUSH2 0x6EE PUSH2 0x2079 JUMP JUMPDEST SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI PUSH2 0x72A CALLDATASIZE PUSH2 0x208F JUMP JUMPDEST PUSH2 0x735 SWAP3 SWAP2 SWAP3 PUSH2 0x2398 JUMP JUMPDEST DUP2 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x776 JUMPI DUP1 PUSH2 0x76F DUP6 PUSH2 0x751 PUSH1 0x1 SWAP5 DUP7 PUSH2 0x212F JUMP JUMPDEST MLOAD PUSH2 0x76A PUSH2 0x346 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x241F JUMP JUMPDEST POP ADD PUSH2 0x737 JUMP JUMPDEST DUP3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH2 0x793 PUSH2 0x2329 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF DUP2 AND PUSH2 0x7D6 JUMPI PUSH1 0x1 SWAP1 PUSH1 0xFF NOT AND OR PUSH1 0x2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x3635C9ADC5DEA00000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI PUSH1 0x20 PUSH2 0x887 PUSH2 0x881 CALLDATASIZE PUSH2 0x208F JUMP JUMPDEST SWAP1 PUSH2 0x2181 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x206 JUMPI PUSH32 0x12CB47B190A758ACBE916B2A7C5A734B023CE60F4D93EC2B3159160163C9291A PUSH1 0x20 PUSH2 0x8CE PUSH2 0x2063 JUMP JUMPDEST PUSH2 0x8D6 PUSH2 0x2329 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH2 0x8EC DUP3 ISZERO ISZERO PUSH2 0x2143 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x206 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x3 DUP3 LT ISZERO PUSH2 0xA9B JUMPI DUP1 DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER PUSH0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xA66 JUMPI DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF PUSH1 0x6 DUP3 ADD SLOAD AND PUSH1 0x7 DUP2 LT ISZERO PUSH2 0xA52 JUMPI PUSH1 0x1 PUSH2 0x9A8 SWAP2 EQ PUSH2 0x22F0 JUMP JUMPDEST CALLER BALANCE SWAP1 DUP3 DUP6 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x1 DUP5 EQ PUSH0 EQ PUSH2 0xA2A JUMPI PUSH1 0xB ADD PUSH2 0x9EC DUP3 DUP3 SLOAD PUSH2 0x2527 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST PUSH2 0x9FC PUSH1 0x40 MLOAD DUP1 SWAP5 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0xB83D25C6A5D258561330739951487ACB4BD09BA5190B5D32C4F261817D906792 PUSH1 0x40 CALLER SWAP4 LOG3 DUP1 RETURN JUMPDEST DUP4 PUSH2 0xA44 JUMPI PUSH1 0xC ADD PUSH2 0xA3D DUP3 DUP3 SLOAD PUSH2 0x2527 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x9EF JUMP JUMPDEST PUSH1 0xD ADD PUSH2 0xA3D DUP3 DUP3 SLOAD PUSH2 0x2527 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x105B1C9958591E481D9BDD1959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI PUSH2 0xAAE CALLDATASIZE PUSH2 0x208F JUMP JUMPDEST PUSH2 0xAB9 SWAP3 SWAP2 SWAP3 PUSH2 0x2398 JUMP JUMPDEST DUP2 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x776 JUMPI DUP1 PUSH2 0xAEE DUP6 PUSH2 0xAD5 PUSH1 0x1 SWAP5 DUP7 PUSH2 0x212F JUMP JUMPDEST MLOAD PUSH2 0x34B PUSH2 0x346 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST POP ADD PUSH2 0xABB JUMP JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xA DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x206 JUMPI PUSH1 0x40 PUSH2 0xB2D PUSH2 0x2079 JUMP JUMPDEST SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH2 0xB74 PUSH2 0x2329 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0xBB4 JUMPI PUSH1 0xFF NOT AND PUSH1 0x2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x33 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x46 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x206 JUMPI PUSH2 0xC42 PUSH2 0x2079 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0xC5E JUMPI PUSH2 0x350 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x24A7 JUMP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x206 JUMPI PUSH2 0x350 PUSH1 0x4 CALLDATALOAD PUSH2 0xC8D PUSH2 0x2079 JUMP JUMPDEST SWAP1 PUSH2 0x76A PUSH2 0x346 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH10 0xD3C21BCECCEDA1000000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x206 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xCF3 PUSH2 0x2063 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x8 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x206 JUMPI PUSH1 0x20 PUSH2 0xD2F PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x3F480 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0xF2C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF2C JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x6 DUP2 ADD SWAP1 PUSH1 0xFF DUP3 SLOAD AND PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x106F JUMPI PUSH1 0x1 PUSH2 0xDBE SWAP2 EQ PUSH2 0x22F0 JUMP JUMPDEST PUSH1 0xA DUP2 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x103A JUMPI PUSH1 0xB DUP2 ADD SLOAD PUSH1 0xC DUP3 ADD SLOAD SWAP1 PUSH9 0x3635C9ADC5DEA00000 PUSH2 0xDF7 PUSH2 0xDEC DUP5 DUP5 PUSH2 0x2527 JUMP JUMPDEST PUSH1 0xD DUP7 ADD SLOAD SWAP1 PUSH2 0x2527 JUMP JUMPDEST LT ISZERO SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1030 JUMPI JUMPDEST POP POP ISZERO PUSH2 0xF30 JUMPI POP DUP2 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR DUP3 SSTORE PUSH1 0x3 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x5 DUP4 ADD DUP1 SLOAD PUSH1 0x10 SWAP1 SWAP5 ADD SLOAD SWAP1 SWAP4 SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 AND DUP1 EXTCODESIZE ISZERO PUSH2 0xF2C JUMPI PUSH0 SWAP3 DUP4 PUSH1 0x84 SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH4 0x7D519C9 PUSH1 0xE5 SHL DUP7 MSTORE DUP13 PUSH1 0x4 DUP8 ADD MSTORE PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x64 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0xF21 JUMPI PUSH2 0xEE2 JUMPI JUMPDEST POP PUSH1 0xFF PUSH32 0x5B9614F21773D68C0B149BDA804FF3D491C8BC8795F7ED236CC97804CD005389 SWAP3 DUP5 PUSH32 0xC6A4FD4A703D2A2FE3167CE7F6D62BF96458B7E55042CFAA85D5C7EF3AC56EEA PUSH1 0x20 DUP1 SWAP6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 JUMPDEST SLOAD AND PUSH2 0xEDE PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0x1FEA JUMP JUMPDEST LOG2 DUP1 RETURN JUMPDEST PUSH1 0x20 SWAP2 SWAP5 POP PUSH32 0x5B9614F21773D68C0B149BDA804FF3D491C8BC8795F7ED236CC97804CD005389 SWAP3 PUSH2 0xF15 PUSH0 PUSH1 0xFF SWAP4 PUSH2 0x1F05 JUMP JUMPDEST PUSH0 SWAP6 SWAP1 SWAP4 POP SWAP2 POP PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST DUP3 SLOAD PUSH1 0xFF NOT AND PUSH1 0x4 OR DUP4 SSTORE PUSH32 0x5B9614F21773D68C0B149BDA804FF3D491C8BC8795F7ED236CC97804CD005389 SWAP3 PUSH1 0x20 SWAP3 POP PUSH1 0xFF SWAP2 ISZERO PUSH2 0xFD9 JUMPI DUP5 PUSH32 0xE5F9059DC551D2DCF73C3BC69F282E134799B450F062C909D9F7FF45951327BD PUSH2 0xFD1 PUSH1 0x40 MLOAD PUSH2 0xF9C PUSH1 0x40 DUP3 PUSH2 0x1F05 JUMP JUMPDEST PUSH1 0x16 DUP2 MSTORE PUSH22 0x13585A9BDC9A5D1E481D9BDD1959081859D85A5B9CDD PUSH1 0x52 SHL DUP8 DUP3 ADD MSTORE JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP9 DUP4 MSTORE DUP9 DUP4 ADD SWAP1 PUSH2 0x1FC6 JUMP JUMPDEST SUB SWAP1 LOG2 PUSH2 0xECF JUMP JUMPDEST DUP5 PUSH32 0xE5F9059DC551D2DCF73C3BC69F282E134799B450F062C909D9F7FF45951327BD PUSH2 0xFD1 PUSH1 0x40 MLOAD PUSH2 0x100C PUSH1 0x40 DUP3 PUSH2 0x1F05 JUMP JUMPDEST PUSH1 0x13 DUP2 MSTORE PUSH19 0x496E73756666696369656E742071756F72756D PUSH1 0x68 SHL DUP8 DUP3 ADD MSTORE PUSH2 0xFBF JUMP JUMPDEST GT SWAP1 POP PUSH0 DUP1 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x566F74696E6720616374697665 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF2C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xF2C JUMPI PUSH1 0xE0 PUSH1 0x3 NOT DUP3 CALLDATASIZE SUB ADD SLT PUSH2 0xF2C JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH1 0xE0 DUP3 ADD DUP3 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1702 JUMPI PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xF2C JUMPI PUSH2 0x10EE SWAP1 PUSH1 0x4 CALLDATASIZE SWAP2 DUP5 ADD ADD PUSH2 0x1FF7 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x24 DUP2 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xF2C JUMPI PUSH2 0x1113 SWAP1 PUSH1 0x4 CALLDATASIZE SWAP2 DUP5 ADD ADD PUSH2 0x1FF7 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x44 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xF2C JUMPI PUSH2 0x113D SWAP1 PUSH1 0x4 CALLDATASIZE SWAP2 DUP6 ADD ADD PUSH2 0x1FF7 JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP5 ADD SWAP3 DUP4 MSTORE PUSH1 0x60 DUP5 ADD SWAP4 PUSH1 0x64 DUP3 ADD CALLDATALOAD DUP6 MSTORE PUSH1 0x84 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xF2C JUMPI DUP3 ADD CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0xF2C JUMPI PUSH1 0x4 DUP2 ADD CALLDATALOAD PUSH2 0x117F DUP2 PUSH2 0x204C JUMP JUMPDEST SWAP2 PUSH2 0x118D PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1F05 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP2 DUP6 ADD SWAP4 PUSH1 0x5 SHL DUP4 ADD ADD ADD SWAP1 CALLDATASIZE DUP3 GT PUSH2 0xF2C JUMPI PUSH1 0x24 DUP2 ADD SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x1CBA JUMPI POP POP POP POP PUSH1 0x80 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0xA4 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xF2C JUMPI DUP4 ADD SWAP3 CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0xF2C JUMPI PUSH1 0x4 DUP5 ADD CALLDATALOAD SWAP4 PUSH2 0x11EF DUP6 PUSH2 0x204C JUMP JUMPDEST SWAP5 PUSH2 0x11FD PUSH1 0x40 MLOAD SWAP7 DUP8 PUSH2 0x1F05 JUMP JUMPDEST DUP1 DUP7 MSTORE PUSH1 0x20 PUSH1 0x4 DUP2 DUP9 ADD SWAP3 PUSH1 0x5 SHL DUP5 ADD ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0xF2C JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1CAA JUMPI POP POP POP PUSH1 0xA0 DUP4 ADD SWAP4 DUP5 MSTORE PUSH1 0xC4 PUSH1 0xC0 DUP5 ADD SWAP2 ADD CALLDATALOAD DUP2 MSTORE PUSH7 0x38D7EA4C68000 CALLVALUE LT PUSH2 0x1C65 JUMPI DUP3 MLOAD DUP8 MLOAD SWAP1 DUP3 MLOAD DUP5 MLOAD MLOAD SWAP3 DUP8 MLOAD MLOAD SWAP3 MLOAD DUP1 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x1C59 JUMPI JUMPDEST POP ISZERO PUSH2 0x1C1D JUMPI DUP1 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x1C08 JUMPI JUMPDEST POP ISZERO PUSH2 0x1BD2 JUMPI PUSH3 0x3F480 DUP2 LT ISZERO SWAP1 DUP2 PUSH2 0x1BC4 JUMPI JUMPDEST POP ISZERO PUSH2 0x1B87 JUMPI DUP2 SUB PUSH2 0x1B42 JUMPI DUP1 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x1B36 JUMPI JUMPDEST POP ISZERO PUSH2 0x1AF1 JUMPI PUSH9 0x3635C9ADC5DEA00000 CALLER BALANCE LT PUSH2 0x1AAC JUMPI PUSH2 0x12BC PUSH1 0x4 SLOAD PUSH2 0x21B6 JUMP JUMPDEST SWAP5 DUP6 PUSH1 0x4 SSTORE DUP4 MLOAD SWAP1 MLOAD DUP8 MLOAD SWAP1 DUP1 MLOAD DUP1 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x1A9F JUMPI JUMPDEST POP ISZERO PUSH2 0x1A61 JUMPI DUP2 MLOAD ISZERO PUSH2 0x1A28 JUMPI DUP8 PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP3 DUP9 DUP5 SSTORE PUSH1 0x1 DUP5 ADD CALLER PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x2 DUP5 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1702 JUMPI DUP2 SWAP1 PUSH2 0x132E DUP5 SLOAD PUSH2 0x1ECD JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x19D8 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1975 JUMPI PUSH0 SWAP3 PUSH2 0x196A JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST DUP1 MLOAD PUSH1 0x3 DUP5 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1702 JUMPI DUP2 SWAP1 PUSH2 0x1382 DUP5 SLOAD PUSH2 0x1ECD JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x191A JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x18B7 JUMPI PUSH0 SWAP3 PUSH2 0x18AC JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST DUP1 MLOAD PUSH1 0x4 DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1702 JUMPI PUSH2 0x13D4 DUP4 SLOAD PUSH2 0x1ECD JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1867 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x17FE JUMPI SWAP2 DUP1 PUSH0 SWAP7 SWAP5 SWAP3 PUSH1 0x11 SWAP7 SWAP5 DUP9 SWAP3 PUSH2 0x17F3 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 DUP8 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x6 DUP2 ADD PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x7 TIMESTAMP SWAP2 ADD SSTORE DUP9 MLOAD SWAP1 MLOAD DUP8 DUP5 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SWAP2 PUSH1 0x5 DUP4 ADD SSTORE PUSH1 0x8 DUP3 ADD SSTORE ADD SSTORE MLOAD SWAP2 MLOAD SWAP3 PUSH0 SWAP6 PUSH0 SWAP7 JUMPDEST DUP6 MLOAD DUP9 LT ISZERO PUSH2 0x1526 JUMPI PUSH2 0x145C DUP9 DUP8 PUSH2 0x212F JUMP JUMPDEST MLOAD ISZERO PUSH2 0x14D7 JUMPI PUSH2 0x146C DUP9 DUP7 PUSH2 0x212F JUMP JUMPDEST MLOAD MLOAD ISZERO PUSH2 0x1492 JUMPI PUSH2 0x148A PUSH1 0x1 SWAP2 PUSH2 0x1483 DUP11 DUP10 PUSH2 0x212F JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2527 JUMP JUMPDEST SWAP8 ADD SWAP7 PUSH2 0x1449 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696C6573746F6E65206465736372697074696F6E2072657175697265640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696C6573746F6E6520616D6F756E74206D75737420626520706F7369746976 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP5 SWAP4 SWAP3 SWAP6 DUP3 PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP6 PUSH1 0x5 DUP8 ADD SLOAD SUB PUSH2 0x1796 JUMPI PUSH1 0x10 PUSH0 SWAP8 SWAP7 ADD SWAP7 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x172A JUMPI PUSH2 0x155C DUP2 DUP7 PUSH2 0x212F JUMP JUMPDEST MLOAD PUSH2 0x1567 DUP3 DUP9 PUSH2 0x212F JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x80 DUP4 ADD DUP4 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1702 JUMPI PUSH1 0x40 MSTORE DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 ADD PUSH0 DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 PUSH0 DUP4 MSTORE DUP12 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x1702 JUMPI PUSH1 0x1 DUP2 ADD DUP1 DUP15 SSTORE DUP2 LT ISZERO PUSH2 0x1716 JUMPI DUP13 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP4 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1702 JUMPI PUSH2 0x15E7 DUP7 SLOAD PUSH2 0x1ECD JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x16BD JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1652 JUMPI SWAP2 DUP1 PUSH1 0x1 SWAP9 SWAP8 SWAP7 SWAP5 SWAP3 PUSH1 0x3 SWAP7 SWAP5 PUSH0 SWAP3 PUSH2 0x1647 JUMPI JUMPDEST POP POP PUSH0 NOT DUP3 DUP8 SHL SHR NOT AND SWAP1 DUP9 SHL OR DUP6 SSTORE JUMPDEST MLOAD DUP7 DUP6 ADD SSTORE PUSH1 0x2 DUP5 ADD SWAP1 MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE MLOAD SWAP2 ADD SSTORE ADD PUSH2 0x1549 JUMP JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0x1613 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP8 PUSH0 MSTORE DUP2 PUSH0 KECCAK256 SWAP3 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x16A5 JUMPI POP SWAP3 PUSH1 0x1 SWAP10 SWAP9 SWAP8 SWAP6 SWAP4 SWAP3 DUP6 SWAP3 PUSH1 0x3 SWAP9 SWAP7 DUP13 SWAP6 LT PUSH2 0x168E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP6 SSTORE PUSH2 0x1624 JUMP JUMPDEST ADD MLOAD PUSH0 NOT DUP4 DUP10 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x1681 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x1662 JUMP JUMPDEST DUP7 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x16F8 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x16ED JUMPI POP PUSH2 0x15F0 JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x16E0 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP5 DUP5 DUP2 PUSH32 0x5AD01C818E42F77C2C5123D4D295C39799CF1CAC9125682A8C90C7CE9D9BF6B4 PUSH2 0x1781 DUP8 DUP14 MLOAD SWAP5 MLOAD SWAP1 MLOAD PUSH2 0x176F PUSH1 0x40 MLOAD SWAP7 PUSH1 0x80 DUP9 MSTORE PUSH1 0x80 DUP9 ADD SWAP1 PUSH2 0x1FC6 JUMP JUMPDEST SWAP2 DUP9 DUP8 ADD MSTORE DUP6 DUP3 SUB PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x1FC6 JUMP JUMPDEST SWAP3 TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE DUP1 CALLER SWAP5 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696C6573746F6E6520616D6F756E747320646F6E27742073756D20746F2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x195C5D595CDD195908185B5BDD5B9D PUSH1 0x8A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP14 DUP1 PUSH2 0x13FD JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH0 MSTORE DUP2 PUSH0 KECCAK256 SWAP3 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x184F JUMPI POP SWAP3 PUSH1 0x1 SWAP3 DUP6 SWAP3 PUSH1 0x11 SWAP9 SWAP7 PUSH0 SWAP11 SWAP9 SWAP7 LT PUSH2 0x1837 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1411 JUMP JUMPDEST ADD MLOAD DUP9 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP14 DUP1 DUP1 PUSH2 0x182A JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x180E JUMP JUMPDEST DUP4 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x18A2 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1897 JUMPI POP PUSH2 0x13DD JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x188A JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1881 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP13 DUP1 PUSH2 0x13A1 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1902 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x18EA JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x13B5 JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP13 DUP1 DUP1 PUSH2 0x18DD JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x18C7 JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x1960 JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1952 JUMPI POP PUSH2 0x138B JUMP JUMPDEST PUSH0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x1945 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1937 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP14 DUP1 PUSH2 0x134D JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x19C0 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x19A8 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1361 JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP14 DUP1 DUP1 PUSH2 0x199B JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x1985 JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x1A1E JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1A10 JUMPI POP PUSH2 0x1337 JUMP JUMPDEST PUSH0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x1A03 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x19F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x12541194C810D251081C995C5D5A5C9959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x92DCECC2D8D2C840E6EADADAC2E4F240D8CADCCEE8D PUSH1 0x53 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3E8 SWAP2 POP GT ISZERO DUP12 PUSH2 0x12D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74205846492062616C616E63650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206D696C6573746F6E6520636F756E74000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xA SWAP2 POP GT ISZERO DUP9 PUSH2 0x129A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696C6573746F6E6520617272617973206D69736D6174636800000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x125B9D985B1A59081D9BDD1A5B99C81C195C9A5BD9 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH3 0x127500 SWAP2 POP GT ISZERO DUP11 PUSH2 0x1284 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A5908185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 SWAP2 POP GT ISZERO DUP12 PUSH2 0x1270 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x92DCECC2D8D2C840E8D2E8D8CA40D8CADCCEE8D PUSH1 0x63 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xC8 SWAP2 POP GT ISZERO DUP13 PUSH2 0x1260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742070726F706F73616C2066656500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x121C JUMP JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xF2C JUMPI PUSH1 0x20 SWAP2 PUSH2 0x1CE0 DUP4 SWAP3 DUP4 PUSH1 0x4 CALLDATASIZE SWAP3 DUP9 ADD ADD ADD PUSH2 0x1FF7 JUMP JUMPDEST DUP2 MSTORE ADD SWAP4 ADD SWAP3 PUSH2 0x11AD JUMP JUMPDEST CALLVALUE PUSH2 0xF2C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF2C JUMPI PUSH1 0x4 CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0xF2C JUMPI PUSH1 0x20 SWAP1 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x1D30 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP3 PUSH2 0x1D25 JUMP JUMPDEST CALLVALUE PUSH2 0xF2C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF2C JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 MSTORE PUSH2 0x1D81 PUSH1 0x2 DUP4 ADD PUSH2 0x1F26 JUMP JUMPDEST PUSH1 0xE0 MSTORE DUP2 PUSH2 0x1D91 PUSH1 0x3 DUP3 ADD PUSH2 0x1F26 JUMP JUMPDEST SWAP2 PUSH2 0x1D9E PUSH1 0x4 DUP4 ADD PUSH2 0x1F26 JUMP JUMPDEST SWAP3 PUSH1 0x5 DUP4 ADD SLOAD SWAP4 PUSH1 0x6 DUP5 ADD SLOAD PUSH1 0xFF AND PUSH1 0x7 DUP6 ADD SLOAD PUSH1 0x8 DUP7 ADD SLOAD PUSH1 0x9 DUP8 ADD SLOAD SWAP2 PUSH1 0xA DUP9 ADD SLOAD SWAP4 PUSH1 0xB DUP10 ADD SLOAD SWAP6 PUSH1 0xC DUP11 ADD SLOAD SWAP8 PUSH1 0xD DUP12 ADD SLOAD SWAP10 PUSH1 0xE DUP13 ADD SLOAD SWAP12 PUSH1 0xF ADD PUSH2 0x1DE7 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST SWAP14 PUSH1 0x11 ADD SLOAD PUSH1 0x80 MSTORE PUSH1 0x40 MLOAD PUSH1 0xC0 MSTORE PUSH1 0xC0 MLOAD MSTORE PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0xC0 MLOAD PUSH1 0x40 ADD PUSH2 0x220 SWAP1 MSTORE PUSH1 0xC0 MLOAD PUSH2 0x220 ADD PUSH1 0xE0 MLOAD SWAP1 PUSH2 0x1E22 SWAP2 PUSH2 0x1FC6 JUMP JUMPDEST PUSH1 0xC0 MLOAD DUP2 SUB PUSH1 0xC0 MLOAD PUSH1 0x60 ADD MSTORE PUSH2 0x1E37 SWAP2 PUSH2 0x1FC6 JUMP JUMPDEST PUSH1 0xC0 MLOAD DUP2 SUB PUSH1 0xC0 MLOAD PUSH1 0x80 ADD MSTORE PUSH2 0x1E4C SWAP2 PUSH2 0x1FC6 JUMP JUMPDEST SWAP10 PUSH1 0xC0 MLOAD PUSH1 0xA0 ADD MSTORE PUSH1 0xC0 MLOAD PUSH1 0xC0 ADD PUSH2 0x1E63 SWAP2 PUSH2 0x1FEA JUMP JUMPDEST PUSH1 0xC0 MLOAD PUSH1 0xE0 ADD MSTORE PUSH1 0xC0 MLOAD PUSH2 0x100 ADD MSTORE PUSH1 0xC0 MLOAD PUSH2 0x120 ADD MSTORE PUSH1 0xC0 MLOAD PUSH2 0x140 ADD MSTORE PUSH1 0xC0 MLOAD PUSH2 0x160 ADD MSTORE PUSH1 0xC0 MLOAD PUSH2 0x180 ADD MSTORE PUSH1 0xC0 MLOAD PUSH2 0x1A0 ADD MSTORE PUSH1 0xC0 MLOAD PUSH2 0x1C0 ADD MSTORE PUSH1 0xC0 MLOAD DUP2 SUB PUSH1 0xC0 MLOAD PUSH2 0x1E0 ADD MSTORE PUSH2 0x1EB8 SWAP2 PUSH2 0x1FC6 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x200 ADD MSTORE PUSH1 0xC0 MLOAD SWAP1 SUB PUSH1 0xC0 MLOAD RETURN JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1EFB JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1EE7 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1EDC JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1702 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH0 DUP3 SLOAD SWAP3 PUSH2 0x1F39 DUP5 PUSH2 0x1ECD JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1FA4 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1F60 JUMPI JUMPDEST POP PUSH2 0x1F5E SWAP3 POP SUB DUP4 PUSH2 0x1F05 JUMP JUMPDEST JUMP JUMPDEST SWAP1 POP PUSH0 SWAP3 SWAP2 SWAP3 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1F88 JUMPI POP POP SWAP1 PUSH1 0x20 PUSH2 0x1F5E SWAP3 DUP3 ADD ADD PUSH0 PUSH2 0x1F51 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 POP DUP1 PUSH1 0x1 SWAP2 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x1F6F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0x1F5E SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD PUSH0 PUSH2 0x1F51 JUMP JUMPDEST DUP1 MLOAD DUP1 DUP4 MSTORE PUSH1 0x20 SWAP3 SWAP2 DUP2 SWAP1 DUP5 ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x7 DUP3 LT ISZERO PUSH2 0x106F JUMPI MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xF2C JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1702 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x202B PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x1F05 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0xF2C JUMPI DUP2 PUSH0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1702 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xF2C JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xF2C JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0xF2C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0xF2C JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xF2C JUMPI DUP1 PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0xF2C JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x20DB DUP2 PUSH2 0x204C JUMP JUMPDEST SWAP3 PUSH2 0x20E9 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1F05 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x24 PUSH1 0x20 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0xF2C JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2112 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2105 JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x106F JUMPI MSTORE JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1716 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x214A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x21AF JUMPI PUSH2 0x219B DUP4 PUSH2 0x56B DUP4 DUP6 PUSH2 0x212F JUMP JUMPDEST PUSH2 0x21A7 JUMPI PUSH1 0x1 ADD PUSH2 0x2184 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH0 NOT DUP2 EQ PUSH2 0x21C4 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E6 PUSH1 0xE0 DUP3 PUSH2 0x1F05 JUMP JUMPDEST PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD PUSH1 0xC0 CALLDATASIZE DUP3 CALLDATACOPY DUP2 MLOAD ISZERO PUSH2 0x1716 JUMPI PUSH0 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x1 LT ISZERO PUSH2 0x1716 JUMPI PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH1 0x40 DUP3 ADD MSTORE DUP1 MLOAD PUSH1 0x2 LT ISZERO PUSH2 0x1716 JUMPI PUSH32 0x482648E7878E9FA54C0A2F67FFD22D00EBC37CF7A03E060E428D2AB0CD6735CC PUSH1 0x60 DUP3 ADD MSTORE DUP1 MLOAD PUSH1 0x3 LT ISZERO PUSH2 0x1716 JUMPI PUSH32 0xEDE9DCDB0CE99DC7CEC9C7BE9246AD08B37853683AD91569C187B647DDF5E21C PUSH1 0x80 DUP3 ADD MSTORE DUP1 MLOAD PUSH1 0x4 LT ISZERO PUSH2 0x1716 JUMPI PUSH32 0x58223CDFB69946630D837D40B5C366A584F0217ADA7FDDD8318F2E08603CFA22 PUSH1 0xA0 DUP3 ADD MSTORE DUP1 MLOAD PUSH1 0x5 LT ISZERO PUSH2 0x1716 JUMPI PUSH32 0x7B8BB8356A3F32F5C111FF23F050D97F08988E0883529EA7BFF3B918887A6E0E PUSH1 0xC0 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x22F7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x4E6F7420766F74696E67 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x7D7FFB7A348E1C6A02869081A26547B49160DD3DF72D1D75A570EB9B698292EC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2361 JUMPI JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x23D0 JUMPI JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH0 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2409 JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x24A1 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x24A1 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x21C4 JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xB4 BALANCE 0xB8 0x28 LOG1 INVALID 0xEF 0xA7 0xC0 0x21 PUSH29 0x469DD90007F76AA475F29D338CDB7A925945AF664736F6C634300081A STOP CALLER 0x2F DUP8 DUP9 GT PUSH31 0x7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D7D7FFB7A CALLVALUE DUP15 SHR PUSH11 0x2869081A26547B49160DD RETURNDATASIZE 0xF7 0x2D SAR PUSH22 0xA570EB9B698292ECAD3228B676F7D3CD4284A5443F17 CALL SWAP7 0x2B CALLDATASIZE 0xE4 SWAP2 0xB3 EXP BLOCKHASH 0xB2 BLOCKHASH PC BLOBHASH 0xE5 SWAP8 0xBA PUSH0 0xB5 ",
							"sourceMap": "135:2340:7:-:0;;;;;;;;;;;;;-1:-1:-1;;135:2340:7;;;;-1:-1:-1;;;;;135:2340:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;744:42:14;775:10;744:42;:::i;:::-;-1:-1:-1;1716:1:3;135:2340:7;;996:15:2;135:2340:7;;-1:-1:-1;;;;;135:2340:7;;2426:30:8;135:2340:7;;-1:-1:-1;;;;;135:2340:7;;2498:29:8;;135:2340:7;;-1:-1:-1;;;;;;135:2340:7;;;;;;;;-1:-1:-1;;;;;135:2340:7;;996:15:2;135:2340:7;2636:49:8;135:2340:7;;-1:-1:-1;;;;;;135:2340:7;;;;;;;-1:-1:-1;2695:22:8;135:2340:7;2736:42:8;775:10:14;2736:42:8;:::i;:::-;;2788:34;775:10:14;2788:34:8;:::i;:::-;;135:2340:7;;;;;;;;;;;;-1:-1:-1;;;135:2340:7;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;135:2340:7;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;135:2340:7;;;;;;-1:-1:-1;135:2340:7;;;;;-1:-1:-1;135:2340:7;;;;-1:-1:-1;;;;;135:2340:7;;;;;;:::o;6155:316:0:-;-1:-1:-1;;;;;135:2340:7;;2241:4:0;135:2340:7;;;-1:-1:-1;;;;;;;;;;;135:2340:7;;;;;;;;;;-1:-1:-1;;;;;135:2340:7;2241:4:0;135:2340:7;;;-1:-1:-1;;;;;;;;;;;135:2340:7;;;;;;;-1:-1:-1;;135:2340:7;;;;;735:10:4;;135:2340:7;-1:-1:-1;;;;;;;;;;;2241:4:0;;6346:40;6323:4;6400:11;:::o;6248:217::-;6442:12;2241:4;6442:12;:::o;6155:316::-;-1:-1:-1;;;;;135:2340:7;;;;;;-1:-1:-1;;;;;;;;;;;135:2340:7;;;;;;;;;;-1:-1:-1;;;;;135:2340:7;;;;;-1:-1:-1;;;;;;;;;;;135:2340:7;;;;;;;-1:-1:-1;;135:2340:7;;;;;735:10:4;;135:2340:7;343:23:14;;-1:-1:-1;;;;;;;;;;;6346:40:0;135:2340:7;6346:40:0;6323:4;6400:11;:::o"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 8313,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_address_27675": {
									"entryPoint": 8291,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_addresst_array_bytes32_dyn": {
									"entryPoint": 8335,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"abi_decode_string": {
									"entryPoint": 8183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_enum_ProposalStatus": {
									"entryPoint": 8170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_enum_VoteType": {
									"entryPoint": 8482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_string": {
									"entryPoint": 8134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_allocation_size_array_string_dyn": {
									"entryPoint": 8268,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_uint256": {
									"entryPoint": 9511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_array_from_storage_to_memory_string": {
									"entryPoint": 7974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 7885,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 7941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"fun_checkRole": {
									"entryPoint": 9191,
									"id": 94,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_checkRole_27678": {
									"entryPoint": 9001,
									"id": 94,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_checkRole_27681": {
									"entryPoint": 9112,
									"id": 94,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_getAllRoles": {
									"entryPoint": 8664,
									"id": 2430,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_getRoleAdmin": {
									"entryPoint": null,
									"id": 129,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_grantRole": {
									"entryPoint": 9247,
									"id": 257,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_hasAnyRole": {
									"entryPoint": 8577,
									"id": 2329,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_hasRole": {
									"entryPoint": null,
									"id": 81,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_revokeRole": {
									"entryPoint": 9383,
									"id": 295,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_uint256": {
									"entryPoint": 8630,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"memory_array_index_access_bytes32_dyn": {
									"entryPoint": 8495,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"require_helper_stringliteral": {
									"entryPoint": 8515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"require_helper_stringliteral_da93": {
									"entryPoint": 8944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6101006040526004361015610012575f80fd5b5f803560e01c8063013cf08b14611d4157806301ffc9a714611ceb57806308d256af146110835780630d61b51914610d7e5780631d9dfd4e14610d55578063215809ca14610d37578063248a9ca314610d045780632d142b7614610ccb5780632d75ae0e14610ca65780632f2ff15d14610c6d57806336568abe14610c2857806339c854fa14610c0c5780633ab3429014610bf05780633f4ba83a14610b5b5780634385963214610b115780634c05abeb14610af55780634fe9d1f514610a9f578063567813881461093e5780635c975abb1461091b5780636807fc211461089157806368ca78f91461086d57806375b238fc14610832578063791f5d231461080e5780638456cb591461077a57806391b9f9d81461071b57806391d14854146106d257806396479e19146106a5578063a02d72fb1461066a578063a217fddf1461064e578063a64e024a14610630578063abd98fb0146105bb578063aca5a8a71461052f578063bb4d44361461050a578063bfe42a37146104cf578063c601f7af14610494578063c7f758a814610354578063d547741f1461030d578063db994b4f146102be578063ebdf690f14610283578063ee8a7c1514610267578063f2bcac3d146102095763fe10226d146101e9575f80fd5b346102065780600319360112610206576020600454604051908152f35b80fd5b50346102065780600319360112610206576102226121d8565b90604051918291602083016020845282518091526020604085019301915b81811061024e575050500390f35b8251845285945060209384019390920191600101610240565b50346102065780600319360112610206576020604051600f8152f35b503461020657806003193601126102065760206040517fede9dcdb0ce99dc7cec9c7be9246ad08b37853683ad91569c187b647ddf5e21c8152f35b50346102065760403660031901126102065760406102da612079565b9160043581526007602052209060018060a01b03165f52602052602060ff60405f20541661030b6040518092612122565bf35b50346102065760403660031901126102065761035060043561032d612079565b9061034b610346825f525f602052600160405f20015490565b6123e7565b6124a7565b5080f35b50346102065760203660031901126102065760043580151580610488575b1561044d5781526005602052604090208054600160a01b6001900360018301541691600581015490600681015460ff16600e8201546009830154600a84015490600b85015492600c86015494600d87015496600281016103d190611f26565b906003016103de90611f26565b906040519b8c9b8c5260208c015260408b0161018090526101808b0161040391611fc6565b8a810360608c015261041491611fc6565b9760808a015260a0890161042791611fea565b60c088015260e08701526101008601526101208501526101408401526101608301520390f35b60405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a59081c1c9bdc1bdcd85b081251606a1b6044820152606490fd5b50600454811115610372565b503461020657806003193601126102065760206040517f482648e7878e9fa54c0a2f67ffd22d00ebc37cf7a03e060e428d2ab0cd6735cc8152f35b503461020657806003193601126102065760206040517f7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e8152f35b5034610206576020366003190112610206576020610526612063565b31604051908152f35b503461020657602036600319011261020657610549612063565b6105516121d8565b90825b82518110156105b05761058f8261056b838661212f565b515f525f60205260405f209060018060a01b03165f5260205260ff60405f20541690565b61059c575b600101610554565b926105a86001916121b6565b939050610594565b602084604051908152f35b5034610206576020366003190112610206577fb0375a2ebcfdc355daf31c17062233e587a73c013fde410d569cf8167b1d409860206105f8612063565b610600612329565b6001600160a01b0316610614811515612143565b600380546001600160a01b03191682179055604051908152a180f35b50346102065780600319360112610206576020604051621275008152f35b5034610206578060031936011261020657602090604051908152f35b503461020657806003193601126102065760206040517f58223cdfb69946630d837d40b5c366a584f0217ada7fddd8318f2e08603cfa228152f35b503461020657806003193601126102065760025460405160089190911c6001600160a01b03168152602090f35b50346102065760403660031901126102065760406106ee612079565b91600435815280602052209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b50346102065761072a3661208f565b610735929192612398565b815b8151811015610776578061076f856107516001948661212f565b5161076a610346825f525f602052600160405f20015490565b61241f565b5001610737565b8280f35b5034610206578060031936011261020657610793612329565b60025460ff81166107d65760019060ff1916176002557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586020604051338152a180f35b60405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606490fd5b50346102065780600319360112610206576020604051683635c9adc5dea000008152f35b503461020657806003193601126102065760206040517fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217758152f35b50346102065760206108876108813661208f565b90612181565b6040519015158152f35b5034610206576020366003190112610206577f12cb47b190a758acbe916b2a7c5a734b023ce60f4d93ec2b3159160163c9291a60206108ce612063565b6108d6612329565b6001600160a01b038116906108ec821515612143565b60028054610100600160a81b03191660089290921b610100600160a81b0316919091179055604051908152a180f35b5034610206578060031936011261020657602060ff600254166040519015158152f35b5034610206576040366003190112610206576024356004356003821015610a9b57808352600660209081526040808520335f908152925290205460ff16610a665780835260056020526040832060ff6006820154166007811015610a525760016109a891146122f0565b33319082855260066020526040852060018060a01b0333165f5260205260405f20600160ff19825416179055600184145f14610a2a57600b016109ec828254612527565b90555b6109fc6040518094612122565b60208301527fb83d25c6a5d258561330739951487acb4bd09ba5190b5d32c4f261817d90679260403393a380f35b83610a4457600c01610a3d828254612527565b90556109ef565b600d01610a3d828254612527565b634e487b7160e01b85526021600452602485fd5b60405162461bcd60e51b815260206004820152600d60248201526c105b1c9958591e481d9bdd1959609a1b6044820152606490fd5b8280fd5b503461020657610aae3661208f565b610ab9929192612398565b815b81518110156107765780610aee85610ad56001948661212f565b5161034b610346825f525f602052600160405f20015490565b5001610abb565b50346102065780600319360112610206576020604051600a8152f35b5034610206576040366003190112610206576040610b2d612079565b9160043581526006602052209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b5034610206578060031936011261020657610b74612329565b60025460ff811615610bb45760ff19166002557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6020604051338152a180f35b60405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606490fd5b5034610206578060031936011261020657602060405160338152f35b5034610206578060031936011261020657602060405160468152f35b503461020657604036600319011261020657610c42612079565b336001600160a01b03821603610c5e57610350906004356124a7565b63334bd91960e11b8252600482fd5b503461020657604036600319011261020657610350600435610c8d612079565b9061076a610346825f525f602052600160405f20015490565b5034610206578060031936011261020657602060405169d3c21bcecceda10000008152f35b5034610206576020366003190112610206576020906040906001600160a01b03610cf3612063565b168152600883522054604051908152f35b5034610206576020366003190112610206576020610d2f6004355f525f602052600160405f20015490565b604051908152f35b503461020657806003193601126102065760206040516203f4808152f35b50346102065780600319360112610206576003546040516001600160a01b039091168152602090f35b5034610f2c576020366003190112610f2c57600435805f52600560205260405f20600681019060ff825416600781101561106f576001610dbe91146122f0565b600a81015442111561103a57600b810154600c82015490683635c9adc5dea00000610df7610dec8484612527565b600d86015490612527565b101591829182611030575b505015610f305750815460ff191660021782556003546001820154600583018054601090940154909390926001600160a01b039283169216803b15610f2c575f928360849260405196879586946307d519c960e51b86528c60048701526024860152604485015260648401525af18015610f2157610ee2575b5060ff7f5b9614f21773d68c0b149bda804ff3d491c8bc8795f7ed236cc97804cd00538992847fc6a4fd4a703d2a2fe3167ce7f6d62bf96458b7e55042cfaa85d5c7ef3ac56eea6020809554604051908152a25b5416610ede6040518092611fea565ba280f35b60209194507f5b9614f21773d68c0b149bda804ff3d491c8bc8795f7ed236cc97804cd00538992610f155f60ff93611f05565b5f959093509150610e7b565b6040513d5f823e3d90fd5b5f80fd5b825460ff191660041783557f5b9614f21773d68c0b149bda804ff3d491c8bc8795f7ed236cc97804cd005389926020925060ff9115610fd957847fe5f9059dc551d2dcf73c3bc69f282e134799b450f062c909d9f7ff45951327bd610fd1604051610f9c604082611f05565b601681527513585a9bdc9a5d1e481d9bdd1959081859d85a5b9cdd60521b878201525b60405191829188835288830190611fc6565b0390a2610ecf565b847fe5f9059dc551d2dcf73c3bc69f282e134799b450f062c909d9f7ff45951327bd610fd160405161100c604082611f05565b6013815272496e73756666696369656e742071756f72756d60681b87820152610fbf565b1190505f80610e02565b60405162461bcd60e51b815260206004820152600d60248201526c566f74696e672061637469766560981b6044820152606490fd5b634e487b7160e01b5f52602160045260245ffd5b6020366003190112610f2c576004356001600160401b038111610f2c5760e06003198236030112610f2c576040519060e082018281106001600160401b038211176117025760405280600401356001600160401b038111610f2c576110ee9060043691840101611ff7565b825260248101356001600160401b038111610f2c576111139060043691840101611ff7565b6020830190815260448201356001600160401b038111610f2c5761113d9060043691850101611ff7565b916040840192835260608401936064820135855260848201356001600160401b038111610f2c57820136602382011215610f2c57600481013561117f8161204c565b9161118d6040519384611f05565b818352602060048185019360051b8301010190368211610f2c5760248101925b828410611cba57505050506080820190815260a48301356001600160401b038111610f2c5783019236602385011215610f2c576004840135936111ef8561204c565b946111fd6040519687611f05565b808652602060048188019260051b8401010191368311610f2c57602401905b828210611caa5750505060a0830193845260c460c08401910135815266038d7ea4c680003410611c6557825187519082518451519287515192518015159081611c59575b5015611c1d578015159081611c08575b5015611bd2576203f4808110159081611bc4575b5015611b87578103611b42578015159081611b36575b5015611af157683635c9adc5dea00000333110611aac576112bc6004546121b6565b94856004558351905187519080518015159081611a9f575b5015611a6157815115611a2857875f52600560205260405f209288845560018401336bffffffffffffffffffffffff60a01b82541617905560028401908051906001600160401b03821161170257819061132e8454611ecd565b601f81116119d8575b50602090601f8311600114611975575f9261196a575b50508160011b915f199060031b1c19161790555b805160038401916001600160401b0382116117025781906113828454611ecd565b601f811161191a575b50602090601f83116001146118b7575f926118ac575b50508160011b915f199060031b1c19161790555b805160048301916001600160401b038211611702576113d48354611ecd565b601f8111611867575b50602090601f83116001146117fe5791805f9694926011969488926117f3575b50508160011b9187199060031b1c19161790555b6006810160ff1981541690556007429101558851905187845260056020526040842091600583015560088201550155519151925f955f965b85518810156115265761145c888761212f565b51156114d75761146c888661212f565b5151156114925761148a6001916114838a8961212f565b5190612527565b970196611449565b60405162461bcd60e51b815260206004820152601e60248201527f4d696c6573746f6e65206465736372697074696f6e20726571756972656400006044820152606490fd5b60405162461bcd60e51b815260206004820152602160248201527f4d696c6573746f6e6520616d6f756e74206d75737420626520706f73697469766044820152606560f81b6064820152608490fd5b94939295825f52600560205260405f20956005870154036117965760105f979601965b845181101561172a5761155c818661212f565b51611567828861212f565b5160405191608083018381106001600160401b0382111761170257604052825260208201908152604082015f815260608301915f83528b54680100000000000000008110156117025760018101808e55811015611716578c5f5260205f209060021b0193518051906001600160401b038211611702576115e78654611ecd565b601f81116116bd575b50602090601f831160011461165257918060019897969492600396945f92611647575b50505f1982871b1c191690881b1785555b5186850155600284019051151560ff801983541691161790555191015501611549565b015190505f80611613565b90601f19831691875f52815f20925f5b8181106116a557509260019998979593928592600398968c951061168e575b505050811b018555611624565b01515f1983891b60f8161c191690555f8080611681565b92936020600181928786015181550195019301611662565b865f5260205f20601f840160051c810191602085106116f8575b601f0160051c01905b8181106116ed57506115f0565b5f81556001016116e0565b90915081906116d7565b634e487b7160e01b5f52604160045260245ffd5b634e487b7160e01b5f52603260045260245ffd5b60208484817f5ad01c818e42f77c2c5123d4d295c39799cf1cac9125682a8c90c7ce9d9bf6b4611781878d519451905161176f60405196608088526080880190611fc6565b91888701528582036040870152611fc6565b924260608201528033940390a3604051908152f35b60405162461bcd60e51b815260206004820152602f60248201527f4d696c6573746f6e6520616d6f756e747320646f6e27742073756d20746f207260448201526e195c5d595cdd195908185b5bdd5b9d608a1b6064820152608490fd5b015190508d806113fd565b90601f19831691845f52815f20925f5b81811061184f5750926001928592601198965f9a989610611837575b505050811b019055611411565b0151881960f88460031b161c191690558d808061182a565b9293602060018192878601518155019501930161180e565b835f5260205f20601f840160051c810191602085106118a2575b601f0160051c01905b81811061189757506113dd565b5f815560010161188a565b9091508190611881565b015190508c806113a1565b5f8581528281209350601f198516905b81811061190257509084600195949392106118ea575b505050811b0190556113b5565b01515f1960f88460031b161c191690558c80806118dd565b929360206001819287860151815501950193016118c7565b909150835f5260205f20601f840160051c81019160208510611960575b90601f859493920160051c01905b818110611952575061138b565b5f8155849350600101611945565b9091508190611937565b015190508d8061134d565b5f8581528281209350601f198516905b8181106119c057509084600195949392106119a8575b505050811b019055611361565b01515f1960f88460031b161c191690558d808061199b565b92936020600181928786015181550195019301611985565b909150835f5260205f20601f840160051c81019160208510611a1e575b90601f859493920160051c01905b818110611a105750611337565b5f8155849350600101611a03565b90915081906119f5565b60405162461bcd60e51b815260206004820152601160248201527012541194c810d251081c995c5d5a5c9959607a1b6044820152606490fd5b60405162461bcd60e51b8152602060048201526016602482015275092dcecc2d8d2c840e6eadadac2e4f240d8cadccee8d60531b6044820152606490fd5b6103e8915011158b6112d4565b60405162461bcd60e51b815260206004820152601860248201527f496e73756666696369656e74205846492062616c616e636500000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601760248201527f496e76616c6964206d696c6573746f6e6520636f756e740000000000000000006044820152606490fd5b600a915011158861129a565b60405162461bcd60e51b815260206004820152601960248201527f4d696c6573746f6e6520617272617973206d69736d61746368000000000000006044820152606490fd5b60405162461bcd60e51b8152602060048201526015602482015274125b9d985b1a59081d9bdd1a5b99c81c195c9a5bd9605a1b6044820152606490fd5b62127500915011158a611284565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a5908185b5bdd5b9d60921b6044820152606490fd5b69d3c21bcecceda1000000915011158b611270565b60405162461bcd60e51b8152602060048201526014602482015273092dcecc2d8d2c840e8d2e8d8ca40d8cadccee8d60631b6044820152606490fd5b60c8915011158c611260565b60405162461bcd60e51b815260206004820152601960248201527f496e73756666696369656e742070726f706f73616c20666565000000000000006044820152606490fd5b813581526020918201910161121c565b83356001600160401b038111610f2c57602091611ce08392836004369288010101611ff7565b8152019301926111ad565b34610f2c576020366003190112610f2c5760043563ffffffff60e01b8116809103610f2c57602090637965db0b60e01b8114908115611d30575b506040519015158152f35b6301ffc9a760e01b14905082611d25565b34610f2c576020366003190112610f2c576004355f908152600560205260409020805460018201546001600160a01b031660a052611d8160028301611f26565b60e05281611d9160038201611f26565b91611d9e60048301611f26565b92600583015493600684015460ff1660078501546008860154600987015491600a88015493600b89015495600c8a015497600d8b015499600e8c01549b600f01611de790611f26565b9d6011015460805260405160c05260c0515260a05160c0516020015260c051604001610220905260c0516102200160e05190611e2291611fc6565b60c051810360c05160600152611e3791611fc6565b60c051810360c05160800152611e4c91611fc6565b9960c05160a0015260c05160c001611e6391611fea565b60c05160e0015260c051610100015260c051610120015260c051610140015260c051610160015260c051610180015260c0516101a0015260c0516101c0015260c051810360c0516101e00152611eb891611fc6565b60805160c051610200015260c051900360c051f35b90600182811c92168015611efb575b6020831014611ee757565b634e487b7160e01b5f52602260045260245ffd5b91607f1691611edc565b90601f801991011681019081106001600160401b0382111761170257604052565b9060405191825f825492611f3984611ecd565b8084529360018116908115611fa45750600114611f60575b50611f5e92500383611f05565b565b90505f9291925260205f20905f915b818310611f88575050906020611f5e928201015f611f51565b6020919350806001915483858901015201910190918492611f6f565b905060209250611f5e94915060ff191682840152151560051b8201015f611f51565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b90600782101561106f5752565b81601f82011215610f2c578035906001600160401b038211611702576040519261202b601f8401601f191660200185611f05565b82845260208383010111610f2c57815f926020809301838601378301015290565b6001600160401b0381116117025760051b60200190565b600435906001600160a01b0382168203610f2c57565b602435906001600160a01b0382168203610f2c57565b906040600319830112610f2c576004356001600160a01b0381168103610f2c5791602435906001600160401b038211610f2c5780602383011215610f2c5781600401356120db8161204c565b926120e96040519485611f05565b8184526024602085019260051b820101928311610f2c57602401905b8282106121125750505090565b8135815260209182019101612105565b90600382101561106f5752565b80518210156117165760209160051b010190565b1561214a57565b60405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b6044820152606490fd5b905f5b81518110156121af5761219b8361056b838561212f565b6121a757600101612184565b505050600190565b5050505f90565b5f1981146121c45760010190565b634e487b7160e01b5f52601160045260245ffd5b6040516121e660e082611f05565b600681526020810160c0368237815115611716575f9052805160011015611716577fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217756040820152805160021015611716577f482648e7878e9fa54c0a2f67ffd22d00ebc37cf7a03e060e428d2ab0cd6735cc6060820152805160031015611716577fede9dcdb0ce99dc7cec9c7be9246ad08b37853683ad91569c187b647ddf5e21c6080820152805160041015611716577f58223cdfb69946630d837d40b5c366a584f0217ada7fddd8318f2e08603cfa2260a0820152805160051015611716577f7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e60c082015290565b156122f757565b60405162461bcd60e51b815260206004820152600a6024820152694e6f7420766f74696e6760b01b6044820152606490fd5b335f9081527f7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec602052604090205460ff161561236157565b63e2517d3f60e01b5f52336004527fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177560245260445ffd5b335f9081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604090205460ff16156123d057565b63e2517d3f60e01b5f52336004525f60245260445ffd5b5f8181526020818152604080832033845290915290205460ff16156124095750565b63e2517d3f60e01b5f523360045260245260445ffd5b5f818152602081815260408083206001600160a01b038616845290915290205460ff166124a1575f818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19166001179055339291907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b50505f90565b5f818152602081815260408083206001600160a01b038616845290915290205460ff16156124a1575f818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19169055339291907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a4600190565b919082018092116121c45756fea264697066735822122026b431b828a1feefa7c0217c0469dd90007f76aa475f29d338cdb7a925945af664736f6c634300081a0033",
							"opcodes": "PUSH2 0x100 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x13CF08B EQ PUSH2 0x1D41 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1CEB JUMPI DUP1 PUSH4 0x8D256AF EQ PUSH2 0x1083 JUMPI DUP1 PUSH4 0xD61B519 EQ PUSH2 0xD7E JUMPI DUP1 PUSH4 0x1D9DFD4E EQ PUSH2 0xD55 JUMPI DUP1 PUSH4 0x215809CA EQ PUSH2 0xD37 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0xD04 JUMPI DUP1 PUSH4 0x2D142B76 EQ PUSH2 0xCCB JUMPI DUP1 PUSH4 0x2D75AE0E EQ PUSH2 0xCA6 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0xC6D JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0xC28 JUMPI DUP1 PUSH4 0x39C854FA EQ PUSH2 0xC0C JUMPI DUP1 PUSH4 0x3AB34290 EQ PUSH2 0xBF0 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0xB5B JUMPI DUP1 PUSH4 0x43859632 EQ PUSH2 0xB11 JUMPI DUP1 PUSH4 0x4C05ABEB EQ PUSH2 0xAF5 JUMPI DUP1 PUSH4 0x4FE9D1F5 EQ PUSH2 0xA9F JUMPI DUP1 PUSH4 0x56781388 EQ PUSH2 0x93E JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x91B JUMPI DUP1 PUSH4 0x6807FC21 EQ PUSH2 0x891 JUMPI DUP1 PUSH4 0x68CA78F9 EQ PUSH2 0x86D JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x832 JUMPI DUP1 PUSH4 0x791F5D23 EQ PUSH2 0x80E JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x77A JUMPI DUP1 PUSH4 0x91B9F9D8 EQ PUSH2 0x71B JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x6D2 JUMPI DUP1 PUSH4 0x96479E19 EQ PUSH2 0x6A5 JUMPI DUP1 PUSH4 0xA02D72FB EQ PUSH2 0x66A JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x64E JUMPI DUP1 PUSH4 0xA64E024A EQ PUSH2 0x630 JUMPI DUP1 PUSH4 0xABD98FB0 EQ PUSH2 0x5BB JUMPI DUP1 PUSH4 0xACA5A8A7 EQ PUSH2 0x52F JUMPI DUP1 PUSH4 0xBB4D4436 EQ PUSH2 0x50A JUMPI DUP1 PUSH4 0xBFE42A37 EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0xC601F7AF EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0xC7F758A8 EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0xDB994B4F EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0xEBDF690F EQ PUSH2 0x283 JUMPI DUP1 PUSH4 0xEE8A7C15 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xF2BCAC3D EQ PUSH2 0x209 JUMPI PUSH4 0xFE10226D EQ PUSH2 0x1E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH1 0x20 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH2 0x222 PUSH2 0x21D8 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP5 MSTORE DUP3 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x20 PUSH1 0x40 DUP6 ADD SWAP4 ADD SWAP2 JUMPDEST DUP2 DUP2 LT PUSH2 0x24E JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x240 JUMP JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xF DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xEDE9DCDB0CE99DC7CEC9C7BE9246AD08B37853683AD91569C187B647DDF5E21C DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x206 JUMPI PUSH1 0x40 PUSH2 0x2DA PUSH2 0x2079 JUMP JUMPDEST SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH2 0x30B PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0x2122 JUMP JUMPDEST RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x206 JUMPI PUSH2 0x350 PUSH1 0x4 CALLDATALOAD PUSH2 0x32D PUSH2 0x2079 JUMP JUMPDEST SWAP1 PUSH2 0x34B PUSH2 0x346 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x23E7 JUMP JUMPDEST PUSH2 0x24A7 JUMP JUMPDEST POP DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x206 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x488 JUMPI JUMPDEST ISZERO PUSH2 0x44D JUMPI DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL PUSH1 0x1 SWAP1 SUB PUSH1 0x1 DUP4 ADD SLOAD AND SWAP2 PUSH1 0x5 DUP2 ADD SLOAD SWAP1 PUSH1 0x6 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH1 0xE DUP3 ADD SLOAD PUSH1 0x9 DUP4 ADD SLOAD PUSH1 0xA DUP5 ADD SLOAD SWAP1 PUSH1 0xB DUP6 ADD SLOAD SWAP3 PUSH1 0xC DUP7 ADD SLOAD SWAP5 PUSH1 0xD DUP8 ADD SLOAD SWAP7 PUSH1 0x2 DUP2 ADD PUSH2 0x3D1 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST SWAP1 PUSH1 0x3 ADD PUSH2 0x3DE SWAP1 PUSH2 0x1F26 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP12 DUP13 SWAP12 DUP13 MSTORE PUSH1 0x20 DUP13 ADD MSTORE PUSH1 0x40 DUP12 ADD PUSH2 0x180 SWAP1 MSTORE PUSH2 0x180 DUP12 ADD PUSH2 0x403 SWAP2 PUSH2 0x1FC6 JUMP JUMPDEST DUP11 DUP2 SUB PUSH1 0x60 DUP13 ADD MSTORE PUSH2 0x414 SWAP2 PUSH2 0x1FC6 JUMP JUMPDEST SWAP8 PUSH1 0x80 DUP11 ADD MSTORE PUSH1 0xA0 DUP10 ADD PUSH2 0x427 SWAP2 PUSH2 0x1FEA JUMP JUMPDEST PUSH1 0xC0 DUP9 ADD MSTORE PUSH1 0xE0 DUP8 ADD MSTORE PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x120 DUP6 ADD MSTORE PUSH2 0x140 DUP5 ADD MSTORE PUSH2 0x160 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x125B9D985B1A59081C1C9BDC1BDCD85B081251 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x4 SLOAD DUP2 GT ISZERO PUSH2 0x372 JUMP JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x482648E7878E9FA54C0A2F67FFD22D00EBC37CF7A03E060E428D2AB0CD6735CC DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x7B8BB8356A3F32F5C111FF23F050D97F08988E0883529EA7BFF3B918887A6E0E DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x206 JUMPI PUSH1 0x20 PUSH2 0x526 PUSH2 0x2063 JUMP JUMPDEST BALANCE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x206 JUMPI PUSH2 0x549 PUSH2 0x2063 JUMP JUMPDEST PUSH2 0x551 PUSH2 0x21D8 JUMP JUMPDEST SWAP1 DUP3 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x5B0 JUMPI PUSH2 0x58F DUP3 PUSH2 0x56B DUP4 DUP7 PUSH2 0x212F JUMP JUMPDEST MLOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH2 0x59C JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x554 JUMP JUMPDEST SWAP3 PUSH2 0x5A8 PUSH1 0x1 SWAP2 PUSH2 0x21B6 JUMP JUMPDEST SWAP4 SWAP1 POP PUSH2 0x594 JUMP JUMPDEST PUSH1 0x20 DUP5 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x206 JUMPI PUSH32 0xB0375A2EBCFDC355DAF31C17062233E587A73C013FDE410D569CF8167B1D4098 PUSH1 0x20 PUSH2 0x5F8 PUSH2 0x2063 JUMP JUMPDEST PUSH2 0x600 PUSH2 0x2329 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x614 DUP2 ISZERO ISZERO PUSH2 0x2143 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND DUP3 OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x127500 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x58223CDFB69946630D837D40B5C366A584F0217ADA7FDDD8318F2E08603CFA22 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x8 SWAP2 SWAP1 SWAP2 SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x206 JUMPI PUSH1 0x40 PUSH2 0x6EE PUSH2 0x2079 JUMP JUMPDEST SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE DUP1 PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI PUSH2 0x72A CALLDATASIZE PUSH2 0x208F JUMP JUMPDEST PUSH2 0x735 SWAP3 SWAP2 SWAP3 PUSH2 0x2398 JUMP JUMPDEST DUP2 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x776 JUMPI DUP1 PUSH2 0x76F DUP6 PUSH2 0x751 PUSH1 0x1 SWAP5 DUP7 PUSH2 0x212F JUMP JUMPDEST MLOAD PUSH2 0x76A PUSH2 0x346 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x241F JUMP JUMPDEST POP ADD PUSH2 0x737 JUMP JUMPDEST DUP3 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH2 0x793 PUSH2 0x2329 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF DUP2 AND PUSH2 0x7D6 JUMPI PUSH1 0x1 SWAP1 PUSH1 0xFF NOT AND OR PUSH1 0x2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH9 0x3635C9ADC5DEA00000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI PUSH1 0x20 PUSH2 0x887 PUSH2 0x881 CALLDATASIZE PUSH2 0x208F JUMP JUMPDEST SWAP1 PUSH2 0x2181 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x206 JUMPI PUSH32 0x12CB47B190A758ACBE916B2A7C5A734B023CE60F4D93EC2B3159160163C9291A PUSH1 0x20 PUSH2 0x8CE PUSH2 0x2063 JUMP JUMPDEST PUSH2 0x8D6 PUSH2 0x2329 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SWAP1 PUSH2 0x8EC DUP3 ISZERO ISZERO PUSH2 0x2143 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND PUSH1 0x8 SWAP3 SWAP1 SWAP3 SHL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH1 0x20 PUSH1 0xFF PUSH1 0x2 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x206 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x3 DUP3 LT ISZERO PUSH2 0xA9B JUMPI DUP1 DUP4 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER PUSH0 SWAP1 DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xA66 JUMPI DUP1 DUP4 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP4 KECCAK256 PUSH1 0xFF PUSH1 0x6 DUP3 ADD SLOAD AND PUSH1 0x7 DUP2 LT ISZERO PUSH2 0xA52 JUMPI PUSH1 0x1 PUSH2 0x9A8 SWAP2 EQ PUSH2 0x22F0 JUMP JUMPDEST CALLER BALANCE SWAP1 DUP3 DUP6 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP6 KECCAK256 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB CALLER AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x1 DUP5 EQ PUSH0 EQ PUSH2 0xA2A JUMPI PUSH1 0xB ADD PUSH2 0x9EC DUP3 DUP3 SLOAD PUSH2 0x2527 JUMP JUMPDEST SWAP1 SSTORE JUMPDEST PUSH2 0x9FC PUSH1 0x40 MLOAD DUP1 SWAP5 PUSH2 0x2122 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH32 0xB83D25C6A5D258561330739951487ACB4BD09BA5190B5D32C4F261817D906792 PUSH1 0x40 CALLER SWAP4 LOG3 DUP1 RETURN JUMPDEST DUP4 PUSH2 0xA44 JUMPI PUSH1 0xC ADD PUSH2 0xA3D DUP3 DUP3 SLOAD PUSH2 0x2527 JUMP JUMPDEST SWAP1 SSTORE PUSH2 0x9EF JUMP JUMPDEST PUSH1 0xD ADD PUSH2 0xA3D DUP3 DUP3 SLOAD PUSH2 0x2527 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP6 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x105B1C9958591E481D9BDD1959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI PUSH2 0xAAE CALLDATASIZE PUSH2 0x208F JUMP JUMPDEST PUSH2 0xAB9 SWAP3 SWAP2 SWAP3 PUSH2 0x2398 JUMP JUMPDEST DUP2 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x776 JUMPI DUP1 PUSH2 0xAEE DUP6 PUSH2 0xAD5 PUSH1 0x1 SWAP5 DUP7 PUSH2 0x212F JUMP JUMPDEST MLOAD PUSH2 0x34B PUSH2 0x346 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST POP ADD PUSH2 0xABB JUMP JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0xA DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x206 JUMPI PUSH1 0x40 PUSH2 0xB2D PUSH2 0x2079 JUMP JUMPDEST SWAP2 PUSH1 0x4 CALLDATALOAD DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH2 0xB74 PUSH2 0x2329 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0xFF DUP2 AND ISZERO PUSH2 0xBB4 JUMPI PUSH1 0xFF NOT AND PUSH1 0x2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH1 0x20 PUSH1 0x40 MLOAD CALLER DUP2 MSTORE LOG1 DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x33 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x46 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x206 JUMPI PUSH2 0xC42 PUSH2 0x2079 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0xC5E JUMPI PUSH2 0x350 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x24A7 JUMP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP3 MSTORE PUSH1 0x4 DUP3 REVERT JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x206 JUMPI PUSH2 0x350 PUSH1 0x4 CALLDATALOAD PUSH2 0xC8D PUSH2 0x2079 JUMP JUMPDEST SWAP1 PUSH2 0x76A PUSH2 0x346 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH10 0xD3C21BCECCEDA1000000 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x206 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0xCF3 PUSH2 0x2063 JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x8 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x206 JUMPI PUSH1 0x20 PUSH2 0xD2F PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x3F480 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x206 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x206 JUMPI PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0xF2C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF2C JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x6 DUP2 ADD SWAP1 PUSH1 0xFF DUP3 SLOAD AND PUSH1 0x7 DUP2 LT ISZERO PUSH2 0x106F JUMPI PUSH1 0x1 PUSH2 0xDBE SWAP2 EQ PUSH2 0x22F0 JUMP JUMPDEST PUSH1 0xA DUP2 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x103A JUMPI PUSH1 0xB DUP2 ADD SLOAD PUSH1 0xC DUP3 ADD SLOAD SWAP1 PUSH9 0x3635C9ADC5DEA00000 PUSH2 0xDF7 PUSH2 0xDEC DUP5 DUP5 PUSH2 0x2527 JUMP JUMPDEST PUSH1 0xD DUP7 ADD SLOAD SWAP1 PUSH2 0x2527 JUMP JUMPDEST LT ISZERO SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x1030 JUMPI JUMPDEST POP POP ISZERO PUSH2 0xF30 JUMPI POP DUP2 SLOAD PUSH1 0xFF NOT AND PUSH1 0x2 OR DUP3 SSTORE PUSH1 0x3 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x5 DUP4 ADD DUP1 SLOAD PUSH1 0x10 SWAP1 SWAP5 ADD SLOAD SWAP1 SWAP4 SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP3 AND DUP1 EXTCODESIZE ISZERO PUSH2 0xF2C JUMPI PUSH0 SWAP3 DUP4 PUSH1 0x84 SWAP3 PUSH1 0x40 MLOAD SWAP7 DUP8 SWAP6 DUP7 SWAP5 PUSH4 0x7D519C9 PUSH1 0xE5 SHL DUP7 MSTORE DUP13 PUSH1 0x4 DUP8 ADD MSTORE PUSH1 0x24 DUP7 ADD MSTORE PUSH1 0x44 DUP6 ADD MSTORE PUSH1 0x64 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0xF21 JUMPI PUSH2 0xEE2 JUMPI JUMPDEST POP PUSH1 0xFF PUSH32 0x5B9614F21773D68C0B149BDA804FF3D491C8BC8795F7ED236CC97804CD005389 SWAP3 DUP5 PUSH32 0xC6A4FD4A703D2A2FE3167CE7F6D62BF96458B7E55042CFAA85D5C7EF3AC56EEA PUSH1 0x20 DUP1 SWAP6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE LOG2 JUMPDEST SLOAD AND PUSH2 0xEDE PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0x1FEA JUMP JUMPDEST LOG2 DUP1 RETURN JUMPDEST PUSH1 0x20 SWAP2 SWAP5 POP PUSH32 0x5B9614F21773D68C0B149BDA804FF3D491C8BC8795F7ED236CC97804CD005389 SWAP3 PUSH2 0xF15 PUSH0 PUSH1 0xFF SWAP4 PUSH2 0x1F05 JUMP JUMPDEST PUSH0 SWAP6 SWAP1 SWAP4 POP SWAP2 POP PUSH2 0xE7B JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST DUP3 SLOAD PUSH1 0xFF NOT AND PUSH1 0x4 OR DUP4 SSTORE PUSH32 0x5B9614F21773D68C0B149BDA804FF3D491C8BC8795F7ED236CC97804CD005389 SWAP3 PUSH1 0x20 SWAP3 POP PUSH1 0xFF SWAP2 ISZERO PUSH2 0xFD9 JUMPI DUP5 PUSH32 0xE5F9059DC551D2DCF73C3BC69F282E134799B450F062C909D9F7FF45951327BD PUSH2 0xFD1 PUSH1 0x40 MLOAD PUSH2 0xF9C PUSH1 0x40 DUP3 PUSH2 0x1F05 JUMP JUMPDEST PUSH1 0x16 DUP2 MSTORE PUSH22 0x13585A9BDC9A5D1E481D9BDD1959081859D85A5B9CDD PUSH1 0x52 SHL DUP8 DUP3 ADD MSTORE JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP9 DUP4 MSTORE DUP9 DUP4 ADD SWAP1 PUSH2 0x1FC6 JUMP JUMPDEST SUB SWAP1 LOG2 PUSH2 0xECF JUMP JUMPDEST DUP5 PUSH32 0xE5F9059DC551D2DCF73C3BC69F282E134799B450F062C909D9F7FF45951327BD PUSH2 0xFD1 PUSH1 0x40 MLOAD PUSH2 0x100C PUSH1 0x40 DUP3 PUSH2 0x1F05 JUMP JUMPDEST PUSH1 0x13 DUP2 MSTORE PUSH19 0x496E73756666696369656E742071756F72756D PUSH1 0x68 SHL DUP8 DUP3 ADD MSTORE PUSH2 0xFBF JUMP JUMPDEST GT SWAP1 POP PUSH0 DUP1 PUSH2 0xE02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x566F74696E6720616374697665 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF2C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xF2C JUMPI PUSH1 0xE0 PUSH1 0x3 NOT DUP3 CALLDATASIZE SUB ADD SLT PUSH2 0xF2C JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH1 0xE0 DUP3 ADD DUP3 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1702 JUMPI PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xF2C JUMPI PUSH2 0x10EE SWAP1 PUSH1 0x4 CALLDATASIZE SWAP2 DUP5 ADD ADD PUSH2 0x1FF7 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x24 DUP2 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xF2C JUMPI PUSH2 0x1113 SWAP1 PUSH1 0x4 CALLDATASIZE SWAP2 DUP5 ADD ADD PUSH2 0x1FF7 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x44 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xF2C JUMPI PUSH2 0x113D SWAP1 PUSH1 0x4 CALLDATASIZE SWAP2 DUP6 ADD ADD PUSH2 0x1FF7 JUMP JUMPDEST SWAP2 PUSH1 0x40 DUP5 ADD SWAP3 DUP4 MSTORE PUSH1 0x60 DUP5 ADD SWAP4 PUSH1 0x64 DUP3 ADD CALLDATALOAD DUP6 MSTORE PUSH1 0x84 DUP3 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xF2C JUMPI DUP3 ADD CALLDATASIZE PUSH1 0x23 DUP3 ADD SLT ISZERO PUSH2 0xF2C JUMPI PUSH1 0x4 DUP2 ADD CALLDATALOAD PUSH2 0x117F DUP2 PUSH2 0x204C JUMP JUMPDEST SWAP2 PUSH2 0x118D PUSH1 0x40 MLOAD SWAP4 DUP5 PUSH2 0x1F05 JUMP JUMPDEST DUP2 DUP4 MSTORE PUSH1 0x20 PUSH1 0x4 DUP2 DUP6 ADD SWAP4 PUSH1 0x5 SHL DUP4 ADD ADD ADD SWAP1 CALLDATASIZE DUP3 GT PUSH2 0xF2C JUMPI PUSH1 0x24 DUP2 ADD SWAP3 JUMPDEST DUP3 DUP5 LT PUSH2 0x1CBA JUMPI POP POP POP POP PUSH1 0x80 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0xA4 DUP4 ADD CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xF2C JUMPI DUP4 ADD SWAP3 CALLDATASIZE PUSH1 0x23 DUP6 ADD SLT ISZERO PUSH2 0xF2C JUMPI PUSH1 0x4 DUP5 ADD CALLDATALOAD SWAP4 PUSH2 0x11EF DUP6 PUSH2 0x204C JUMP JUMPDEST SWAP5 PUSH2 0x11FD PUSH1 0x40 MLOAD SWAP7 DUP8 PUSH2 0x1F05 JUMP JUMPDEST DUP1 DUP7 MSTORE PUSH1 0x20 PUSH1 0x4 DUP2 DUP9 ADD SWAP3 PUSH1 0x5 SHL DUP5 ADD ADD ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0xF2C JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1CAA JUMPI POP POP POP PUSH1 0xA0 DUP4 ADD SWAP4 DUP5 MSTORE PUSH1 0xC4 PUSH1 0xC0 DUP5 ADD SWAP2 ADD CALLDATALOAD DUP2 MSTORE PUSH7 0x38D7EA4C68000 CALLVALUE LT PUSH2 0x1C65 JUMPI DUP3 MLOAD DUP8 MLOAD SWAP1 DUP3 MLOAD DUP5 MLOAD MLOAD SWAP3 DUP8 MLOAD MLOAD SWAP3 MLOAD DUP1 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x1C59 JUMPI JUMPDEST POP ISZERO PUSH2 0x1C1D JUMPI DUP1 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x1C08 JUMPI JUMPDEST POP ISZERO PUSH2 0x1BD2 JUMPI PUSH3 0x3F480 DUP2 LT ISZERO SWAP1 DUP2 PUSH2 0x1BC4 JUMPI JUMPDEST POP ISZERO PUSH2 0x1B87 JUMPI DUP2 SUB PUSH2 0x1B42 JUMPI DUP1 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x1B36 JUMPI JUMPDEST POP ISZERO PUSH2 0x1AF1 JUMPI PUSH9 0x3635C9ADC5DEA00000 CALLER BALANCE LT PUSH2 0x1AAC JUMPI PUSH2 0x12BC PUSH1 0x4 SLOAD PUSH2 0x21B6 JUMP JUMPDEST SWAP5 DUP6 PUSH1 0x4 SSTORE DUP4 MLOAD SWAP1 MLOAD DUP8 MLOAD SWAP1 DUP1 MLOAD DUP1 ISZERO ISZERO SWAP1 DUP2 PUSH2 0x1A9F JUMPI JUMPDEST POP ISZERO PUSH2 0x1A61 JUMPI DUP2 MLOAD ISZERO PUSH2 0x1A28 JUMPI DUP8 PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP3 DUP9 DUP5 SSTORE PUSH1 0x1 DUP5 ADD CALLER PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x2 DUP5 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1702 JUMPI DUP2 SWAP1 PUSH2 0x132E DUP5 SLOAD PUSH2 0x1ECD JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x19D8 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1975 JUMPI PUSH0 SWAP3 PUSH2 0x196A JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST DUP1 MLOAD PUSH1 0x3 DUP5 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1702 JUMPI DUP2 SWAP1 PUSH2 0x1382 DUP5 SLOAD PUSH2 0x1ECD JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x191A JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x18B7 JUMPI PUSH0 SWAP3 PUSH2 0x18AC JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST DUP1 MLOAD PUSH1 0x4 DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1702 JUMPI PUSH2 0x13D4 DUP4 SLOAD PUSH2 0x1ECD JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x1867 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x17FE JUMPI SWAP2 DUP1 PUSH0 SWAP7 SWAP5 SWAP3 PUSH1 0x11 SWAP7 SWAP5 DUP9 SWAP3 PUSH2 0x17F3 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 DUP8 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR SWAP1 SSTORE JUMPDEST PUSH1 0x6 DUP2 ADD PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x7 TIMESTAMP SWAP2 ADD SSTORE DUP9 MLOAD SWAP1 MLOAD DUP8 DUP5 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP5 KECCAK256 SWAP2 PUSH1 0x5 DUP4 ADD SSTORE PUSH1 0x8 DUP3 ADD SSTORE ADD SSTORE MLOAD SWAP2 MLOAD SWAP3 PUSH0 SWAP6 PUSH0 SWAP7 JUMPDEST DUP6 MLOAD DUP9 LT ISZERO PUSH2 0x1526 JUMPI PUSH2 0x145C DUP9 DUP8 PUSH2 0x212F JUMP JUMPDEST MLOAD ISZERO PUSH2 0x14D7 JUMPI PUSH2 0x146C DUP9 DUP7 PUSH2 0x212F JUMP JUMPDEST MLOAD MLOAD ISZERO PUSH2 0x1492 JUMPI PUSH2 0x148A PUSH1 0x1 SWAP2 PUSH2 0x1483 DUP11 DUP10 PUSH2 0x212F JUMP JUMPDEST MLOAD SWAP1 PUSH2 0x2527 JUMP JUMPDEST SWAP8 ADD SWAP7 PUSH2 0x1449 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696C6573746F6E65206465736372697074696F6E2072657175697265640000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696C6573746F6E6520616D6F756E74206D75737420626520706F7369746976 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST SWAP5 SWAP4 SWAP3 SWAP6 DUP3 PUSH0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP6 PUSH1 0x5 DUP8 ADD SLOAD SUB PUSH2 0x1796 JUMPI PUSH1 0x10 PUSH0 SWAP8 SWAP7 ADD SWAP7 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x172A JUMPI PUSH2 0x155C DUP2 DUP7 PUSH2 0x212F JUMP JUMPDEST MLOAD PUSH2 0x1567 DUP3 DUP9 PUSH2 0x212F JUMP JUMPDEST MLOAD PUSH1 0x40 MLOAD SWAP2 PUSH1 0x80 DUP4 ADD DUP4 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1702 JUMPI PUSH1 0x40 MSTORE DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 ADD PUSH0 DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP2 PUSH0 DUP4 MSTORE DUP12 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x1702 JUMPI PUSH1 0x1 DUP2 ADD DUP1 DUP15 SSTORE DUP2 LT ISZERO PUSH2 0x1716 JUMPI DUP13 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 SHL ADD SWAP4 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1702 JUMPI PUSH2 0x15E7 DUP7 SLOAD PUSH2 0x1ECD JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x16BD JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x1652 JUMPI SWAP2 DUP1 PUSH1 0x1 SWAP9 SWAP8 SWAP7 SWAP5 SWAP3 PUSH1 0x3 SWAP7 SWAP5 PUSH0 SWAP3 PUSH2 0x1647 JUMPI JUMPDEST POP POP PUSH0 NOT DUP3 DUP8 SHL SHR NOT AND SWAP1 DUP9 SHL OR DUP6 SSTORE JUMPDEST MLOAD DUP7 DUP6 ADD SSTORE PUSH1 0x2 DUP5 ADD SWAP1 MLOAD ISZERO ISZERO PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE MLOAD SWAP2 ADD SSTORE ADD PUSH2 0x1549 JUMP JUMPDEST ADD MLOAD SWAP1 POP PUSH0 DUP1 PUSH2 0x1613 JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP8 PUSH0 MSTORE DUP2 PUSH0 KECCAK256 SWAP3 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x16A5 JUMPI POP SWAP3 PUSH1 0x1 SWAP10 SWAP9 SWAP8 SWAP6 SWAP4 SWAP3 DUP6 SWAP3 PUSH1 0x3 SWAP9 SWAP7 DUP13 SWAP6 LT PUSH2 0x168E JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP6 SSTORE PUSH2 0x1624 JUMP JUMPDEST ADD MLOAD PUSH0 NOT DUP4 DUP10 SHL PUSH1 0xF8 AND SHR NOT AND SWAP1 SSTORE PUSH0 DUP1 DUP1 PUSH2 0x1681 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x1662 JUMP JUMPDEST DUP7 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x16F8 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x16ED JUMPI POP PUSH2 0x15F0 JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x16E0 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x16D7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP5 DUP5 DUP2 PUSH32 0x5AD01C818E42F77C2C5123D4D295C39799CF1CAC9125682A8C90C7CE9D9BF6B4 PUSH2 0x1781 DUP8 DUP14 MLOAD SWAP5 MLOAD SWAP1 MLOAD PUSH2 0x176F PUSH1 0x40 MLOAD SWAP7 PUSH1 0x80 DUP9 MSTORE PUSH1 0x80 DUP9 ADD SWAP1 PUSH2 0x1FC6 JUMP JUMPDEST SWAP2 DUP9 DUP8 ADD MSTORE DUP6 DUP3 SUB PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x1FC6 JUMP JUMPDEST SWAP3 TIMESTAMP PUSH1 0x60 DUP3 ADD MSTORE DUP1 CALLER SWAP5 SUB SWAP1 LOG3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696C6573746F6E6520616D6F756E747320646F6E27742073756D20746F2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x195C5D595CDD195908185B5BDD5B9D PUSH1 0x8A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP14 DUP1 PUSH2 0x13FD JUMP JUMPDEST SWAP1 PUSH1 0x1F NOT DUP4 AND SWAP2 DUP5 PUSH0 MSTORE DUP2 PUSH0 KECCAK256 SWAP3 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x184F JUMPI POP SWAP3 PUSH1 0x1 SWAP3 DUP6 SWAP3 PUSH1 0x11 SWAP9 SWAP7 PUSH0 SWAP11 SWAP9 SWAP7 LT PUSH2 0x1837 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1411 JUMP JUMPDEST ADD MLOAD DUP9 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP14 DUP1 DUP1 PUSH2 0x182A JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x180E JUMP JUMPDEST DUP4 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x18A2 JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1897 JUMPI POP PUSH2 0x13DD JUMP JUMPDEST PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x188A JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1881 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP13 DUP1 PUSH2 0x13A1 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1902 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x18EA JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x13B5 JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP13 DUP1 DUP1 PUSH2 0x18DD JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x18C7 JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x1960 JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1952 JUMPI POP PUSH2 0x138B JUMP JUMPDEST PUSH0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x1945 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1937 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP14 DUP1 PUSH2 0x134D JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE DUP3 DUP2 KECCAK256 SWAP4 POP PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x19C0 JUMPI POP SWAP1 DUP5 PUSH1 0x1 SWAP6 SWAP5 SWAP4 SWAP3 LT PUSH2 0x19A8 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD SWAP1 SSTORE PUSH2 0x1361 JUMP JUMPDEST ADD MLOAD PUSH0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP14 DUP1 DUP1 PUSH2 0x199B JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x1985 JUMP JUMPDEST SWAP1 SWAP2 POP DUP4 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP6 LT PUSH2 0x1A1E JUMPI JUMPDEST SWAP1 PUSH1 0x1F DUP6 SWAP5 SWAP4 SWAP3 ADD PUSH1 0x5 SHR ADD SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x1A10 JUMPI POP PUSH2 0x1337 JUMP JUMPDEST PUSH0 DUP2 SSTORE DUP5 SWAP4 POP PUSH1 0x1 ADD PUSH2 0x1A03 JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x19F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x12541194C810D251081C995C5D5A5C9959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x92DCECC2D8D2C840E6EADADAC2E4F240D8CADCCEE8D PUSH1 0x53 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH2 0x3E8 SWAP2 POP GT ISZERO DUP12 PUSH2 0x12D4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E74205846492062616C616E63650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C6964206D696C6573746F6E6520636F756E74000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xA SWAP2 POP GT ISZERO DUP9 PUSH2 0x129A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696C6573746F6E6520617272617973206D69736D6174636800000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x125B9D985B1A59081D9BDD1A5B99C81C195C9A5BD9 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH3 0x127500 SWAP2 POP GT ISZERO DUP11 PUSH2 0x1284 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A5908185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 SWAP2 POP GT ISZERO DUP12 PUSH2 0x1270 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x92DCECC2D8D2C840E8D2E8D8CA40D8CADCCEE8D PUSH1 0x63 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xC8 SWAP2 POP GT ISZERO DUP13 PUSH2 0x1260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742070726F706F73616C2066656500000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x121C JUMP JUMPDEST DUP4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xF2C JUMPI PUSH1 0x20 SWAP2 PUSH2 0x1CE0 DUP4 SWAP3 DUP4 PUSH1 0x4 CALLDATASIZE SWAP3 DUP9 ADD ADD ADD PUSH2 0x1FF7 JUMP JUMPDEST DUP2 MSTORE ADD SWAP4 ADD SWAP3 PUSH2 0x11AD JUMP JUMPDEST CALLVALUE PUSH2 0xF2C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF2C JUMPI PUSH1 0x4 CALLDATALOAD PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 AND DUP1 SWAP2 SUB PUSH2 0xF2C JUMPI PUSH1 0x20 SWAP1 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x1D30 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP3 PUSH2 0x1D25 JUMP JUMPDEST CALLVALUE PUSH2 0xF2C JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xF2C JUMPI PUSH1 0x4 CALLDATALOAD PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 MSTORE PUSH2 0x1D81 PUSH1 0x2 DUP4 ADD PUSH2 0x1F26 JUMP JUMPDEST PUSH1 0xE0 MSTORE DUP2 PUSH2 0x1D91 PUSH1 0x3 DUP3 ADD PUSH2 0x1F26 JUMP JUMPDEST SWAP2 PUSH2 0x1D9E PUSH1 0x4 DUP4 ADD PUSH2 0x1F26 JUMP JUMPDEST SWAP3 PUSH1 0x5 DUP4 ADD SLOAD SWAP4 PUSH1 0x6 DUP5 ADD SLOAD PUSH1 0xFF AND PUSH1 0x7 DUP6 ADD SLOAD PUSH1 0x8 DUP7 ADD SLOAD PUSH1 0x9 DUP8 ADD SLOAD SWAP2 PUSH1 0xA DUP9 ADD SLOAD SWAP4 PUSH1 0xB DUP10 ADD SLOAD SWAP6 PUSH1 0xC DUP11 ADD SLOAD SWAP8 PUSH1 0xD DUP12 ADD SLOAD SWAP10 PUSH1 0xE DUP13 ADD SLOAD SWAP12 PUSH1 0xF ADD PUSH2 0x1DE7 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST SWAP14 PUSH1 0x11 ADD SLOAD PUSH1 0x80 MSTORE PUSH1 0x40 MLOAD PUSH1 0xC0 MSTORE PUSH1 0xC0 MLOAD MSTORE PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0x20 ADD MSTORE PUSH1 0xC0 MLOAD PUSH1 0x40 ADD PUSH2 0x220 SWAP1 MSTORE PUSH1 0xC0 MLOAD PUSH2 0x220 ADD PUSH1 0xE0 MLOAD SWAP1 PUSH2 0x1E22 SWAP2 PUSH2 0x1FC6 JUMP JUMPDEST PUSH1 0xC0 MLOAD DUP2 SUB PUSH1 0xC0 MLOAD PUSH1 0x60 ADD MSTORE PUSH2 0x1E37 SWAP2 PUSH2 0x1FC6 JUMP JUMPDEST PUSH1 0xC0 MLOAD DUP2 SUB PUSH1 0xC0 MLOAD PUSH1 0x80 ADD MSTORE PUSH2 0x1E4C SWAP2 PUSH2 0x1FC6 JUMP JUMPDEST SWAP10 PUSH1 0xC0 MLOAD PUSH1 0xA0 ADD MSTORE PUSH1 0xC0 MLOAD PUSH1 0xC0 ADD PUSH2 0x1E63 SWAP2 PUSH2 0x1FEA JUMP JUMPDEST PUSH1 0xC0 MLOAD PUSH1 0xE0 ADD MSTORE PUSH1 0xC0 MLOAD PUSH2 0x100 ADD MSTORE PUSH1 0xC0 MLOAD PUSH2 0x120 ADD MSTORE PUSH1 0xC0 MLOAD PUSH2 0x140 ADD MSTORE PUSH1 0xC0 MLOAD PUSH2 0x160 ADD MSTORE PUSH1 0xC0 MLOAD PUSH2 0x180 ADD MSTORE PUSH1 0xC0 MLOAD PUSH2 0x1A0 ADD MSTORE PUSH1 0xC0 MLOAD PUSH2 0x1C0 ADD MSTORE PUSH1 0xC0 MLOAD DUP2 SUB PUSH1 0xC0 MLOAD PUSH2 0x1E0 ADD MSTORE PUSH2 0x1EB8 SWAP2 PUSH2 0x1FC6 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x200 ADD MSTORE PUSH1 0xC0 MLOAD SWAP1 SUB PUSH1 0xC0 MLOAD RETURN JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1EFB JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x1EE7 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1EDC JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x1702 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH0 DUP3 SLOAD SWAP3 PUSH2 0x1F39 DUP5 PUSH2 0x1ECD JUMP JUMPDEST DUP1 DUP5 MSTORE SWAP4 PUSH1 0x1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x1FA4 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1F60 JUMPI JUMPDEST POP PUSH2 0x1F5E SWAP3 POP SUB DUP4 PUSH2 0x1F05 JUMP JUMPDEST JUMP JUMPDEST SWAP1 POP PUSH0 SWAP3 SWAP2 SWAP3 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x1F88 JUMPI POP POP SWAP1 PUSH1 0x20 PUSH2 0x1F5E SWAP3 DUP3 ADD ADD PUSH0 PUSH2 0x1F51 JUMP JUMPDEST PUSH1 0x20 SWAP2 SWAP4 POP DUP1 PUSH1 0x1 SWAP2 SLOAD DUP4 DUP6 DUP10 ADD ADD MSTORE ADD SWAP2 ADD SWAP1 SWAP2 DUP5 SWAP3 PUSH2 0x1F6F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 SWAP3 POP PUSH2 0x1F5E SWAP5 SWAP2 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD PUSH0 PUSH2 0x1F51 JUMP JUMPDEST DUP1 MLOAD DUP1 DUP4 MSTORE PUSH1 0x20 SWAP3 SWAP2 DUP2 SWAP1 DUP5 ADD DUP5 DUP5 ADD MCOPY PUSH0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x7 DUP3 LT ISZERO PUSH2 0x106F JUMPI MSTORE JUMP JUMPDEST DUP2 PUSH1 0x1F DUP3 ADD SLT ISZERO PUSH2 0xF2C JUMPI DUP1 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x1702 JUMPI PUSH1 0x40 MLOAD SWAP3 PUSH2 0x202B PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP6 PUSH2 0x1F05 JUMP JUMPDEST DUP3 DUP5 MSTORE PUSH1 0x20 DUP4 DUP4 ADD ADD GT PUSH2 0xF2C JUMPI DUP2 PUSH0 SWAP3 PUSH1 0x20 DUP1 SWAP4 ADD DUP4 DUP7 ADD CALLDATACOPY DUP4 ADD ADD MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x1702 JUMPI PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xF2C JUMPI JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xF2C JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x40 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0xF2C JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0xF2C JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0xF2C JUMPI DUP1 PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0xF2C JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD PUSH2 0x20DB DUP2 PUSH2 0x204C JUMP JUMPDEST SWAP3 PUSH2 0x20E9 PUSH1 0x40 MLOAD SWAP5 DUP6 PUSH2 0x1F05 JUMP JUMPDEST DUP2 DUP5 MSTORE PUSH1 0x24 PUSH1 0x20 DUP6 ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0xF2C JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x2112 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2105 JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x106F JUMPI MSTORE JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x1716 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x214A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x496E76616C69642061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x21AF JUMPI PUSH2 0x219B DUP4 PUSH2 0x56B DUP4 DUP6 PUSH2 0x212F JUMP JUMPDEST PUSH2 0x21A7 JUMPI PUSH1 0x1 ADD PUSH2 0x2184 JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH0 NOT DUP2 EQ PUSH2 0x21C4 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E6 PUSH1 0xE0 DUP3 PUSH2 0x1F05 JUMP JUMPDEST PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD PUSH1 0xC0 CALLDATASIZE DUP3 CALLDATACOPY DUP2 MLOAD ISZERO PUSH2 0x1716 JUMPI PUSH0 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x1 LT ISZERO PUSH2 0x1716 JUMPI PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH1 0x40 DUP3 ADD MSTORE DUP1 MLOAD PUSH1 0x2 LT ISZERO PUSH2 0x1716 JUMPI PUSH32 0x482648E7878E9FA54C0A2F67FFD22D00EBC37CF7A03E060E428D2AB0CD6735CC PUSH1 0x60 DUP3 ADD MSTORE DUP1 MLOAD PUSH1 0x3 LT ISZERO PUSH2 0x1716 JUMPI PUSH32 0xEDE9DCDB0CE99DC7CEC9C7BE9246AD08B37853683AD91569C187B647DDF5E21C PUSH1 0x80 DUP3 ADD MSTORE DUP1 MLOAD PUSH1 0x4 LT ISZERO PUSH2 0x1716 JUMPI PUSH32 0x58223CDFB69946630D837D40B5C366A584F0217ADA7FDDD8318F2E08603CFA22 PUSH1 0xA0 DUP3 ADD MSTORE DUP1 MLOAD PUSH1 0x5 LT ISZERO PUSH2 0x1716 JUMPI PUSH32 0x7B8BB8356A3F32F5C111FF23F050D97F08988E0883529EA7BFF3B918887A6E0E PUSH1 0xC0 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x22F7 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x4E6F7420766F74696E67 PUSH1 0xB0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0x7D7FFB7A348E1C6A02869081A26547B49160DD3DF72D1D75A570EB9B698292EC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2361 JUMPI JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x23D0 JUMPI JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH0 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x2409 JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x24A1 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x24A1 JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x21C4 JUMPI JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xB4 BALANCE 0xB8 0x28 LOG1 INVALID 0xEF 0xA7 0xC0 0x21 PUSH29 0x469DD90007F76AA475F29D338CDB7A925945AF664736F6C634300081A STOP CALLER ",
							"sourceMap": "135:2340:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;135:2340:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;853:2:8;135:2340:7;;;;;;;;;;;;;;;;;;;494:34:14;135:2340:7;;;;;;;;;;-1:-1:-1;;135:2340:7;;;;;;;:::i;:::-;;;;;;1258:86:8;135:2340:7;;;1258:86:8;135:2340:7;;;;;;-1:-1:-1;135:2340:7;;;;;;-1:-1:-1;135:2340:7;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;135:2340:7;;;;4723:26:0;135:2340:7;;;;:::i;:::-;4693:18:0;2484:4;4693:18;;3877:6;135:2340:7;3877:6:0;135:2340:7;;3877:22:0;135:2340:7;3877:6:0;135:2340:7;3877:22:0;135:2340:7;3786:120:0;;4693:18;2484:4;:::i;:::-;4723:26;:::i;:::-;;135:2340:7;;;;;;;;;-1:-1:-1;;135:2340:7;;;;;;1857:14;;;:50;;;135:2340;;;;;;1963:9;135:2340;;;;;;;;;;;;;;2034:10;;135:2340;;2102:17;1963:9;2102:17;;135:2340;2133:8;;;;135:2340;;;2155:9;;;135:2340;2178:13;;;135:2340;2205:11;;;135:2340;2230:10;;;;135:2340;2254:14;;;;135:2340;2282:14;;;;135:2340;2058:7;;;;135:2340;;;:::i;:::-;2079:9;;;135:2340;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;135:2340:7;;;;;;;;;;;;-1:-1:-1;;;135:2340:7;;;;;;;1857:50;135:2340;;;1875:32;;;1857:50;;135:2340;;;;;;;;;;;;;;;;413:27:14;135:2340:7;;;;;;;;;;;;;;;;;;;674:34:14;135:2340:7;;;;;;;;;;-1:-1:-1;;135:2340:7;;;;;;;:::i;:::-;1395:15;135:2340;;;;;;;;;;;;;-1:-1:-1;;135:2340:7;;;;;;:::i;:::-;2369:13:14;;:::i;:::-;2392:17;;2469:3;135:2340:7;;2448:19:14;;;;;2492:29;2500:11;;;;;:::i;:::-;135:2340:7;2930:6:0;135:2340:7;2930:6:0;135:2340:7;;;2930:6:0;135:2340:7;2930:29:0;135:2340:7;;;;;;-1:-1:-1;135:2340:7;;;;;-1:-1:-1;135:2340:7;;;2830:136:0;;2492:29:14;2488:75;;2469:3;135:2340:7;;2433:13:14;;2488:75;2541:7;;135:2340:7;2541:7:14;;:::i;:::-;2488:75;;;;;2448:19;135:2340:7;2448:19:14;135:2340:7;;;;;;;;;;;;;-1:-1:-1;;135:2340:7;;;;7894:32:8;135:2340:7;;;:::i;:::-;2484:4:0;;:::i;:::-;-1:-1:-1;;;;;135:2340:7;7775:51:8;7783:23;;;7775:51;:::i;:::-;7836:43;135:2340:7;;-1:-1:-1;;;;;;135:2340:7;;;;;;;;;;7894:32:8;135:2340:7;;;;;;;;;;;;;;;;;;707:7:8;135:2340:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;584:36:14;135:2340:7;;;;;;;;;;;;;;;;451:39:8;135:2340:7;;;;;;;;-1:-1:-1;;;;;135:2340:7;;;;;;;;;;;;;-1:-1:-1;;135:2340:7;;;;;;;:::i;:::-;;;;;;;;;;2930:29:0;135:2340:7;;;;;;-1:-1:-1;135:2340:7;;;;;;-1:-1:-1;135:2340:7;;;;;;;;;;;;;;;;;;;:::i;:::-;2484:4:0;;;;;:::i;:::-;1082:13:14;1115:3;135:2340:7;;1097:16:14;;;;;1144:8;4306:25:0;1144:8:14;;135:2340:7;1144:8:14;;;:::i;:::-;135:2340:7;2484:4:0;4276:18;;3877:6;135:2340:7;3877:6:0;135:2340:7;;3877:22:0;135:2340:7;3877:6:0;135:2340:7;3877:22:0;135:2340:7;3786:120:0;;2484:4;4306:25;:::i;:::-;;135:2340:7;1082:13:14;;1097:16;;135:2340:7;;;;;;;;;;;;;;;2484:4:0;;:::i;:::-;1685:7:2;135:2340:7;;;;;;2255:4:2;135:2340:7;;;;;1685:7:2;135:2340:7;2274:20:2;135:2340:7;;;735:10:4;135:2340:7;;2274:20:2;135:2340:7;;;;;-1:-1:-1;;;135:2340:7;;;;;;;;;;;;-1:-1:-1;;;135:2340:7;;;;;;;;;;;;;;;;;;;;;;;769:13:8;135:2340:7;;;;;;;;;;;;;;;;;;;343:23:14;135:2340:7;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;135:2340:7;;;;7638:35:8;135:2340:7;;;:::i;:::-;2484:4:0;;:::i;:::-;-1:-1:-1;;;;;135:2340:7;;;7513:53:8;7521:25;;;7513:53;:::i;:::-;7576:47;135:2340:7;;-1:-1:-1;;;;;;135:2340:7;;;;;;-1:-1:-1;;;;;135:2340:7;;;;;;;;;;;;7638:35:8;135:2340:7;;;;;;;;;;;;;;;;;1685:7:2;135:2340:7;;;;;;;;;;;;;;;;;-1:-1:-1;;135:2340:7;;;;;;;;;;;;;;;;;550:8:10;135:2340:7;;;;;;;;571:10:10;-1:-1:-1;135:2340:7;;;;;;;;;;;;;;;665:9:10;135:2340:7;;;;;;550:8:10;704:15;;135:2340:7;;;;;;;;;696:81:10;704:58;;696:81;:::i;:::-;571:10;818:18;135:2340:7;;;;550:8:10;135:2340:7;;;;;;;;;;571:10:10;135:2340:7;-1:-1:-1;135:2340:7;;;;-1:-1:-1;135:2340:7;;;;;;;;;;;1260:42:10;;1256:291;135:2340:7;;;1318:17:10;;:32;135:2340:7;;;1318:32:10;:::i;:::-;135:2340:7;;1256:291:10;135:2340:7;;;;;;:::i;:::-;;;;;1009:55:10;135:2340:7;571:10:10;1009:55;;135:2340:7;;1256:291:10;1371:46;;;1433:21;;:36;135:2340:7;;;1433:36:10;:::i;:::-;135:2340:7;;1256:291:10;;1367:180;1500:21;;:36;135:2340:7;;;1500:36:10;:::i;135:2340:7:-;-1:-1:-1;;;135:2340:7;;;;;;;;;;;-1:-1:-1;;;135:2340:7;;;;;;;;;;;;-1:-1:-1;;;135:2340:7;;;;;;;;;;;;;;;;;;;:::i;:::-;2484:4:0;;;;;:::i;:::-;1475:13:14;1508:3;135:2340:7;;1490:16:14;;;;;1538:8;4723:26:0;1538:8:14;;135:2340:7;1538:8:14;;;:::i;:::-;135:2340:7;2484:4:0;4693:18;;3877:6;135:2340:7;3877:6:0;135:2340:7;;3877:22:0;135:2340:7;3877:6:0;135:2340:7;3877:22:0;135:2340:7;3786:120:0;;4723:26;;135:2340:7;1475:13:14;;135:2340:7;;;;;;;;;;;;;;;;1008:2:8;135:2340:7;;;;;;;;;;-1:-1:-1;;135:2340:7;;;;;;;:::i;:::-;;;;;;1192:60:8;135:2340:7;;;1192:60:8;135:2340:7;;;;;;-1:-1:-1;135:2340:7;;;;;;-1:-1:-1;135:2340:7;;;;;;;;;;;;;;;;;;;;;;;;2484:4:0;;:::i;:::-;1685:7:2;135:2340:7;;;;;;;;;;1685:7:2;135:2340:7;2521:22:2;135:2340:7;;;735:10:4;135:2340:7;;2521:22:2;135:2340:7;;;;;-1:-1:-1;;;135:2340:7;;;;;;;;;;;;-1:-1:-1;;;135:2340:7;;;;;;;;;;;;;;;;;;;;;;;906:2:8;135:2340:7;;;;;;;;;;;;;;;;;;;959:2:8;135:2340:7;;;;;;;;;;-1:-1:-1;;135:2340:7;;;;;;:::i;:::-;735:10:4;-1:-1:-1;;;;;135:2340:7;;5397:34:0;5393:102;;5505:37;135:2340:7;;;5505:37:0;:::i;5393:102::-;-1:-1:-1;;;5454:30:0;;135:2340:7;5454:30:0;;135:2340:7;;;;;;;-1:-1:-1;;135:2340:7;;;;4306:25:0;135:2340:7;;;;:::i;:::-;4276:18:0;2484:4;4276:18;;3877:6;135:2340:7;3877:6:0;135:2340:7;;3877:22:0;135:2340:7;3877:6:0;135:2340:7;3877:22:0;135:2340:7;3786:120:0;;135:2340:7;;;;;;;;;;;;;;;;1063:16:8;135:2340:7;;;;;;;;;;-1:-1:-1;;135:2340:7;;;;;;;;-1:-1:-1;;;;;135:2340:7;;:::i;:::-;;;;1350:53:8;135:2340:7;;;;;;;;;;;;;;;;;-1:-1:-1;;135:2340:7;;;;;;;;3877:6:0;135:2340:7;3877:6:0;135:2340:7;;3877:22:0;135:2340:7;3877:6:0;135:2340:7;3877:22:0;135:2340:7;3786:120:0;;135:2340:7;;;;;;;;;;;;;;;;;;;;;;;651:6:8;135:2340:7;;;;;;;;;;;;;;;;496:37:8;135:2340:7;;;-1:-1:-1;;;;;135:2340:7;;;;;;;;;;;;;;;-1:-1:-1;;135:2340:7;;;;;;;;;1670:9:10;135:2340:7;;;;;1709:15:10;;;135:2340:7;;;;;;;;;;;;1701:81:10;1709:58;;1701:81;:::i;:::-;1818:18;;;135:2340:7;1800:15:10;:36;135:2340:7;;;2388:17:10;;;135:2340:7;2408:21:10;;;135:2340:7;2388:41:10;2489:13;2388:65;:41;;;;:::i;:::-;2432:21;;;135:2340:7;2388:65:10;;:::i;:::-;2475:27;;;;;;2523:54;;135:2340:7;-1:-1:-1;;2773:501:10;;;-1:-1:-1;135:2340:7;;-1:-1:-1;;135:2340:7;2819:41:10;135:2340:7;;;2874:14:10;135:2340:7;-1:-1:-1;2914:17:10;;135:2340:7;1670:9:10;2933:24;;135:2340:7;;2959:19:10;;;;135:2340:7;2933:24:10;;135:2340:7;;-1:-1:-1;;;;;135:2340:7;;;;;2874:112:10;;;;;135:2340:7;;;2874:112:10;135:2340:7;;;;;;;;;;;2874:112:10;;;135:2340:7;2874:112:10;;135:2340:7;;;;;;;;;;;;;2874:112:10;;;;;;;;2773:501;135:2340:7;;2135:45:10;135:2340:7;;3005:54:10;135:2340:7;;;;;;;;;3005:54:10;2773:501;135:2340:7;;;;;;;;:::i;:::-;2135:45:10;135:2340:7;;2874:112:10;135:2340:7;2874:112:10;;;2135:45;2874:112;;135:2340:7;;2874:112:10;;:::i;:::-;135:2340:7;;2874:112:10;;-1:-1:-1;2874:112:10;-1:-1:-1;2874:112:10;;;135:2340:7;;;;;;;;;2874:112:10;135:2340:7;;;2773:501:10;135:2340:7;;-1:-1:-1;;135:2340:7;;;;;2135:45:10;;135:2340:7;;-1:-1:-1;135:2340:7;;3202:60:10;;;135:2340:7;3173:90:10;135:2340:7;;;;;;;:::i;:::-;;;;-1:-1:-1;;;135:2340:7;;;;3202:60:10;135:2340:7;;;;;;;;;;;;;:::i;:::-;3173:90:10;;;2773:501;;3202:60;135:2340:7;3173:90:10;135:2340:7;;;;;;;:::i;:::-;;;;-1:-1:-1;;;135:2340:7;;;;3202:60:10;;2523:54;2536:41;;-1:-1:-1;2523:54:10;;;;135:2340:7;;;-1:-1:-1;;;135:2340:7;;;;;;;;;;;;-1:-1:-1;;;135:2340:7;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;135:2340:7;;;;;;-1:-1:-1;;;;;135:2340:7;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;135:2340:7;;;;;;;;;;;-1:-1:-1;;;;;135:2340:7;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;135:2340:7;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;135:2340:7;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;135:2340:7;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;135:2340:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;559:14;546:9;:27;135:2340;;635:11:9;;135:2340:7;;;;;727:27:9;;135:2340:7;775:22:9;;;135:2340:7;;;3184:23:8;;;:53;;;;135:2340:7;;;;;3280:19:8;;;:62;;;;135:2340:7;;;;;651:6:8;3379:33;;;:70;;;;135:2340:7;;;;;3493:42:8;;135:2340:7;;3583:20:8;;;:58;;;;135:2340:7;;;;;769:13:8;3757:10;:18;:44;135:2340:7;;6637:20:8;135:2340:7;;6637:20:8;:::i;:::-;135:2340:7;;;;859:11:9;;872:13;;887;;135:2340:7;;;4171:25:8;;;:58;;;;135:2340:7;;;;;;;4274:25:8;135:2340:7;;;;;;;;;;;;;;;;4451:17:8;;3757:10;135:2340:7;;;;;;;;;4491:14:8;;;135:2340:7;;;;-1:-1:-1;;;;;135:2340:7;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4523:16:8;;;;-1:-1:-1;;;;;135:2340:7;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4523:16:8;135:2340:7;;;;;;;;;;;4559:16:8;;;-1:-1:-1;;;;;135:2340:7;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5120:27:8;135:2340:7;;;;;;;;;;;;;;;;4523:16:8;135:2340:7;;;;;;;;4595:15:8;;;135:2340:7;;;;;;;;4697:15:8;4671:23;;135:2340:7;;;;;;;;;;;;;;5022:24:8;135:2340:7;5022:24:8;;135:2340:7;5074:21:8;;;135:2340:7;5120:27:8;135:2340:7;1029:27:9;1058:22;;5435:32:8;135:2340:7;5482:13:8;135:2340:7;5477:268:8;5517:3;135:2340:7;;5497:18:8;;;;;5544:10;;;;:::i;:::-;135:2340:7;5544:14:8;135:2340:7;;5624:15:8;;;;:::i;:::-;;135:2340:7;5618:33:8;135:2340:7;;5700:34:8;135:2340:7;5724:10:8;;;;;:::i;:::-;135:2340:7;5700:34:8;;:::i;:::-;5517:3;135:2340:7;5482:13:8;;;135:2340:7;;;-1:-1:-1;;;135:2340:7;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;135:2340:7;;;;;;;;;;;;;;;;;-1:-1:-1;;;135:2340:7;;;;;;;5497:18:8;;;;;135:2340:7;;;;;;;;;5872:24:8;135:2340:7;5872:24:8;;135:2340:7;5848:48:8;135:2340:7;;6057:19:8;135:2340:7;5998:13:8;;6057:19;5993:295;6038:3;135:2340:7;;6013:23:8;;;;;6141:15;;;;:::i;:::-;;6182:10;;;;:::i;:::-;135:2340:7;;;;;;;;;;-1:-1:-1;;;;;135:2340:7;;;;;;;;;;6082:194:8;;135:2340:7;;;;6082:194:8;;135:2340:7;;;;6082:194:8;;135:2340:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4491:14:8;135:2340:7;;;;;;;-1:-1:-1;;;;;135:2340:7;;;;;;;;:::i;:::-;;;;;;6038:3:8;135:2340:7;;;;;;;;;;;;;;;;;;4523:16:8;135:2340:7;;;;;;;-1:-1:-1;;;;135:2340:7;;;;;;;;;;;;;;;;;;4491:14:8;135:2340:7;;;;;;;;;;;;;;;;;;;;;;5998:13:8;;135:2340:7;;;;-1:-1:-1;135:2340:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4523:16:8;135:2340:7;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;135:2340:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;135:2340:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;6013:23:8;135:2340:7;6013:23:8;;;1097:109:9;135:2340:7;6013:23:8;;1139:11:9;135:2340:7;;1175:13:9;;135:2340:7;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;4697:15:8;;135:2340:7;;;;3757:10:8;;1097:109:9;;;;135:2340:7;;;;;;;;;-1:-1:-1;;;135:2340:7;;;;;;;;;;;;;;;;;-1:-1:-1;;;135:2340:7;;;;;;;;;;;-1:-1:-1;135:2340:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5120:27:8;135:2340:7;;;;;;;;;;;;;;;;;;;;;;;;;;;4523:16:8;135:2340:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;135:2340:7;;;;;;;;-1:-1:-1;135:2340:7;;;;;;;;;;;;;-1:-1:-1;;;135:2340:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4523:16:8;135:2340:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;135:2340:7;;;;;;;-1:-1:-1;135:2340:7;;;;;;;;-1:-1:-1;135:2340:7;;;;;;;;;;;;;-1:-1:-1;;;135:2340:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;135:2340:7;;;;;;;-1:-1:-1;135:2340:7;;;;;;;-1:-1:-1;;;135:2340:7;;;;;;;;;;;;-1:-1:-1;;;135:2340:7;;;;;;;;;;-1:-1:-1;;;135:2340:7;;;;;;;;;;;;-1:-1:-1;;;135:2340:7;;;;;;;4171:58:8;4225:4;4200:29;;;;4171:58;;;135:2340:7;;;-1:-1:-1;;;135:2340:7;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;135:2340:7;;;;;;;;;;;;;;;;;;;;3583:58:8;1008:2;3607:34;;;;3583:58;;;135:2340:7;;;-1:-1:-1;;;135:2340:7;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;135:2340:7;;;;;;;;;;;;-1:-1:-1;;;135:2340:7;;;;;;;3379:70:8;707:7;3416:33;;;;3379:70;;;135:2340:7;;;-1:-1:-1;;;135:2340:7;;;;;;;;;;;;-1:-1:-1;;;135:2340:7;;;;;;;3280:62:8;1063:16;3303:39;;;;3280:62;;;135:2340:7;;;-1:-1:-1;;;135:2340:7;;;;;;;;;;;;-1:-1:-1;;;135:2340:7;;;;;;;3184:53:8;3234:3;3211:26;;;;3184:53;;;135:2340:7;;;-1:-1:-1;;;135:2340:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;135:2340:7;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;135:2340:7;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2649:47:0;;;:87;;;;135:2340:7;;;;;;;;;;2649:87:0;-1:-1:-1;;;829:40:5;;-1:-1:-1;2649:87:0;;;135:2340:7;;;;;;-1:-1:-1;;135:2340:7;;;;;;;;;;1123:63:8;135:2340:7;;;;;;;;1123:63:8;;135:2340:7;-1:-1:-1;;;;;135:2340:7;;;1123:63:8;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;135:2340:7;1123:63:8;;;:::i;:::-;;;;;135:2340:7;1123:63:8;;;;135:2340:7;;;1123:63:8;;;135:2340:7;1123:63:8;;;135:2340:7;1123:63:8;;;135:2340:7;1123:63:8;;;;135:2340:7;1123:63:8;;;;135:2340:7;1123:63:8;;;;135:2340:7;1123:63:8;;;;135:2340:7;1123:63:8;;;;135:2340:7;1123:63:8;;;;;;:::i;:::-;;;;135:2340:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;135:2340:7;;;;;;;:::o;:::-;;;;;;-1:-1:-1;135:2340:7;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;-1:-1:-1;135:2340:7;;;;;-1:-1:-1;135:2340:7;;-1:-1:-1;135:2340:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;135:2340:7;;;;;;;;-1:-1:-1;;135:2340:7;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;-1:-1:-1;;;;;135:2340:7;;;;;;;;;;;-1:-1:-1;;135:2340:7;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;135:2340:7;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;;;135:2340:7;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;135:2340:7;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;135:2340:7;;;;;;:::o;:::-;;;-1:-1:-1;;135:2340:7;;;;;;;-1:-1:-1;;;;;135:2340:7;;;;;;;;;;-1:-1:-1;;;;;135:2340:7;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;135:2340:7;;;;;;;;;;;;-1:-1:-1;;;135:2340:7;;;;;;;1816:271:14;;135:2340:7;1954:3:14;135:2340:7;;1936:16:14;;;;;1977:26;1985:8;;;;;:::i;1977:26::-;1973:76;;135:2340:7;;1921:13:14;;1973:76;2023:11;;;135:2340:7;2023:11:14;:::o;1936:16::-;;;;135:2340:7;1816:271:14;:::o;135:2340:7:-;-1:-1:-1;;135:2340:7;;;;;;;:::o;:::-;;;;;;;;;;;;2723:364:14;135:2340:7;;;;;;:::i;:::-;2823:1:14;135:2340:7;;;;;;;;;;;;;;-1:-1:-1;135:2340:7;;;;2880:1:14;135:2340:7;;;;343:23:14;135:2340:7;;;;;;2911:1:14;135:2340:7;;;;413:27:14;135:2340:7;;;;;;2946:1:14;135:2340:7;;;;494:34:14;135:2340:7;;;;;;2988:1:14;135:2340:7;;;;584:36:14;135:2340:7;;;;;;;;;;;674:34:14;135:2340:7;;;;2723:364:14;:::o;135:2340:7:-;;;;:::o;:::-;;;-1:-1:-1;;;135:2340:7;;;;;;;;;;;;-1:-1:-1;;;135:2340:7;;;;;;;3175:103:0;735:10:4;2930:6:0;135:2340:7;;;;;;;;;;;;3495:23:0;3491:108;;3175:103::o;3491:108::-;3541:47;;;2930:6;3541:47;735:10:4;3541:47:0;135:2340:7;343:23:14;135:2340:7;;;2930:6:0;3541:47;3175:103;735:10:4;135:2340:7;;;;;;;;;;;;;3495:23:0;3491:108;;3175:103::o;3491:108::-;3541:47;;;135:2340:7;3541:47:0;735:10:4;3541:47:0;135:2340:7;;;;;;3541:47:0;3175:103;2930:6;135:2340:7;;;;;;;;;;;735:10:4;135:2340:7;;;;;;;;;;3495:23:0;3491:108;;3175:103;:::o;3491:108::-;3541:47;;;2930:6;3541:47;735:10:4;3541:47:0;135:2340:7;;;;2930:6:0;3541:47;6155:316;135:2340:7;;;;;;;;;;;;-1:-1:-1;;;;;135:2340:7;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;135:2340:7;;;;;;;;;;;;;;;-1:-1:-1;;135:2340:7;;;;;735:10:4;;135:2340:7;;6346:40:0;;135:2340:7;6346:40:0;6323:4;6400:11;:::o;6248:217::-;6442:12;;135:2340:7;6442:12:0;:::o;6708:317::-;135:2340:7;;;;;;;;;;;;-1:-1:-1;;;;;135:2340:7;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;135:2340:7;;;;;;;;;;;;;;;-1:-1:-1;;135:2340:7;;;735:10:4;;135:2340:7;;6900:40:0;;135:2340:7;6900:40:0;135:2340:7;6954:11:0;:::o;135:2340:7:-;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1915600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ADMIN_ROLE()": "625",
								"AI_ORACLE_ROLE()": "911",
								"AI_SCORE_THRESHOLD()": "405",
								"APPROVAL_THRESHOLD()": "427",
								"DEFAULT_ADMIN_ROLE()": "782",
								"DISPUTE_RESOLVER_ROLE()": "889",
								"MAX_MILESTONES()": "493",
								"MAX_REQUESTED_AMOUNT()": "339",
								"MAX_VOTING_PERIOD()": "801",
								"MILESTONE_APPROVER_ROLE()": "757",
								"MIN_PROPOSAL_THRESHOLD()": "647",
								"MIN_VOTING_PERIOD()": "273",
								"QUORUM_PERCENTAGE()": "1021",
								"TREASURY_MANAGER_ROLE()": "999",
								"aiScoreRegistry()": "2871",
								"castVote(uint256,uint8)": "58477",
								"executeProposal(uint256)": "infinite",
								"getAllRoles()": "infinite",
								"getCurrentProposalId()": "3163",
								"getProposal(uint256)": "infinite",
								"getRoleAdmin(bytes32)": "2482",
								"getRoleCount(address)": "infinite",
								"getVotingPower(address)": "3540",
								"grantMultipleRoles(address,bytes32[])": "infinite",
								"grantRole(bytes32,address)": "33467",
								"hasAnyRole(address,bytes32[])": "infinite",
								"hasRole(bytes32,address)": "3046",
								"hasVoted(uint256,address)": "2804",
								"pause()": "28142",
								"paused()": "2674",
								"proposals(uint256)": "infinite",
								"proposerReputation(address)": "2574",
								"renounceRole(bytes32,address)": "29057",
								"revokeMultipleRoles(address,bytes32[])": "infinite",
								"revokeRole(bytes32,address)": "34058",
								"submitProposal((string,string,string,uint256,string[],uint256[],uint256))": "infinite",
								"supportsInterface(bytes4)": "307",
								"treasuryEscrow()": "2378",
								"unpause()": "27916",
								"updateAIScoreRegistry(address)": "28230",
								"updateTreasuryEscrow(address)": "28427",
								"voterChoices(uint256,address)": "3356"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "1F"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSHSIZE",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "CODESIZE",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "GT",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "LT",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP5",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SWAP5",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP6",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SLT",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 135,
									"end": 2475,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "tag",
									"source": 7,
									"value": "11"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SWAP3",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 135,
									"end": 2475,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "tag",
									"source": 7,
									"value": "10"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 744,
									"end": 786,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "12"
								},
								{
									"begin": 775,
									"end": 785,
									"name": "CALLER",
									"source": 14
								},
								{
									"begin": 744,
									"end": 786,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 744,
									"end": 786,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 744,
									"end": 786,
									"name": "tag",
									"source": 14,
									"value": "12"
								},
								{
									"begin": 744,
									"end": 786,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2426,
									"end": 2456,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 2498,
									"end": 2527,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 2498,
									"end": 2527,
									"name": "ISZERO",
									"source": 8
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2636,
									"end": 2685,
									"name": "PUSH",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SWAP2",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 2695,
									"end": 2717,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 2736,
									"end": 2778,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 775,
									"end": 785,
									"name": "CALLER",
									"source": 14
								},
								{
									"begin": 2736,
									"end": 2778,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "2"
								},
								{
									"begin": 2736,
									"end": 2778,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2736,
									"end": 2778,
									"name": "tag",
									"source": 8,
									"value": "17"
								},
								{
									"begin": 2736,
									"end": 2778,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2736,
									"end": 2778,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 2788,
									"end": 2822,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 775,
									"end": 785,
									"name": "CALLER",
									"source": 14
								},
								{
									"begin": 2788,
									"end": 2822,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "3"
								},
								{
									"begin": 2788,
									"end": 2822,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 8
								},
								{
									"begin": 2788,
									"end": 2822,
									"name": "tag",
									"source": 8,
									"value": "18"
								},
								{
									"begin": 2788,
									"end": 2822,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 2788,
									"end": 2822,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "RETURN",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "tag",
									"source": 7,
									"value": "15"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "17"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "496E76616C696420747265617375727920657363726F77000000000000000000"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "tag",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "13"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "496E76616C696420414920726567697374727900000000000000000000000000"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "44"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "ADD",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "64"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "tag",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "tag",
									"source": 7,
									"value": "6"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B71"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "E0"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SHL",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "41"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SUB",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "8"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 7
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2241,
									"end": 2245,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "F0DF3DCDA05B4FBD9C655CDE3D5CEB211E019E72EC816E127A59E7195F2CD7F5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 2241,
									"end": 2245,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "F0DF3DCDA05B4FBD9C655CDE3D5CEB211E019E72EC816E127A59E7195F2CD7F5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 735,
									"end": 745,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "1400FE2F234CF888B5E4C66700C7903F33F31BFC9675E51CB0119F915EB534D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 2241,
									"end": 2245,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2241,
									"end": 2245,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6323,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6400,
									"end": 6411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6442,
									"end": 6454,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2241,
									"end": 2245,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6442,
									"end": 6454,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6442,
									"end": 6454,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "27AD65E758A22F2FE9F0D501DA4E2A54EB635546AB8210118501A36D81E3B048"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "21"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "27AD65E758A22F2FE9F0D501DA4E2A54EB635546AB8210118501A36D81E3B048"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "20"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "KECCAK256",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 735,
									"end": 745,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 343,
									"end": 366,
									"name": "PUSH",
									"source": 14,
									"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
								},
								{
									"begin": 343,
									"end": 366,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "1400FE2F234CF888B5E4C66700C7903F33F31BFC9675E51CB0119F915EB534D"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 135,
									"end": 2475,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6323,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6400,
									"end": 6411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122026b431b828a1feefa7c0217c0469dd90007f76aa475f29d338cdb7a925945af664736f6c634300081a0033",
									".code": [
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "13CF08B"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1FFC9A7"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "8D256AF"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "D61B519"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1D9DFD4E"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "215809CA"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "248A9CA3"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "2D142B76"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "2D75AE0E"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "2F2FF15D"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "36568ABE"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "39C854FA"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "3AB34290"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "3F4BA83A"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "43859632"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4C05ABEB"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4FE9D1F5"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "56781388"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "5C975ABB"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "6807FC21"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "68CA78F9"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "75B238FC"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "791F5D23"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "8456CB59"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "91B9F9D8"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "91D14854"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "96479E19"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "A02D72FB"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "A217FDDF"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "A64E024A"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "ABD98FB0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "ACA5A8A7"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "BB4D4436"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "BFE42A37"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "C601F7AF"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "C7F758A8"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "D547741F"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "DB994B4F"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "EBDF690F"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "EE8A7C15"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "F2BCAC3D"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "FE10226D"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "106"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 853,
											"end": 855,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "104"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 494,
											"end": 528,
											"name": "PUSH",
											"source": 14,
											"value": "EDE9DCDB0CE99DC7CEC9C7BE9246AD08B37853683AD91569C187B647DDF5E21C"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "102"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "136"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1344,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1258,
											"end": 1344,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "137"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4723,
											"end": 4749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "143"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4723,
											"end": 4749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 4723,
											"end": 4749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "98"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1871,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1871,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1871,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1907,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 1857,
											"end": 1907,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 1972,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2044,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2034,
											"end": 2044,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2102,
											"end": 2119,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1963,
											"end": 1972,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 2102,
											"end": 2119,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2102,
											"end": 2119,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2141,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2141,
											"name": "PUSH",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 2133,
											"end": 2141,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2133,
											"end": 2141,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2164,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 2155,
											"end": 2164,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2155,
											"end": 2164,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2178,
											"end": 2191,
											"name": "PUSH",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 2178,
											"end": 2191,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2178,
											"end": 2191,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2205,
											"end": 2216,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 2205,
											"end": 2216,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2205,
											"end": 2216,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2230,
											"end": 2240,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2230,
											"end": 2240,
											"name": "PUSH",
											"source": 7,
											"value": "B"
										},
										{
											"begin": 2230,
											"end": 2240,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2230,
											"end": 2240,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2254,
											"end": 2268,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2254,
											"end": 2268,
											"name": "PUSH",
											"source": 7,
											"value": "C"
										},
										{
											"begin": 2254,
											"end": 2268,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2254,
											"end": 2268,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2282,
											"end": 2296,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 2282,
											"end": 2296,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 2282,
											"end": 2296,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2282,
											"end": 2296,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2065,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2065,
											"name": "PUSH",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 2058,
											"end": 2065,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2065,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "154"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2079,
											"end": 2088,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2079,
											"end": 2088,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 2079,
											"end": 2088,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP12",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP12",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "156"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP11",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "158"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59081C1C9BDC1BDCD85B081251"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1907,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 1857,
											"end": 1907,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1875,
											"end": 1907,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1875,
											"end": 1907,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 1875,
											"end": 1907,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1857,
											"end": 1907,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "151"
										},
										{
											"begin": 1857,
											"end": 1907,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "96"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 413,
											"end": 440,
											"name": "PUSH",
											"source": 14,
											"value": "482648E7878E9FA54C0A2F67FFD22D00EBC37CF7A03E060E428D2AB0CD6735CC"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "94"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 674,
											"end": 708,
											"name": "PUSH",
											"source": 14,
											"value": "7B8BB8356A3F32F5C111FF23F050D97F08988E0883529EA7BFF3B918887A6E0E"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "92"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1395,
											"end": 1410,
											"name": "BALANCE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "90"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "176"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "177"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 2369,
											"end": 2382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "tag",
											"source": 14,
											"value": "177"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2392,
											"end": 2409,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2392,
											"end": 2409,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2469,
											"end": 2472,
											"name": "tag",
											"source": 14,
											"value": "178"
										},
										{
											"begin": 2469,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2448,
											"end": 2467,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2448,
											"end": 2467,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 2448,
											"end": 2467,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2448,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "179"
										},
										{
											"begin": 2448,
											"end": 2467,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2492,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "181"
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "182"
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 2500,
											"end": 2511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "tag",
											"source": 14,
											"value": "182"
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2492,
											"end": 2521,
											"name": "tag",
											"source": 14,
											"value": "181"
										},
										{
											"begin": 2492,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2488,
											"end": 2563,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "183"
										},
										{
											"begin": 2488,
											"end": 2563,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2469,
											"end": 2472,
											"name": "tag",
											"source": 14,
											"value": "184"
										},
										{
											"begin": 2469,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2433,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "178"
										},
										{
											"begin": 2433,
											"end": 2446,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2488,
											"end": 2563,
											"name": "tag",
											"source": 14,
											"value": "183"
										},
										{
											"begin": 2488,
											"end": 2563,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "185"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 2541,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "tag",
											"source": 14,
											"value": "185"
										},
										{
											"begin": 2541,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2488,
											"end": 2563,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 2488,
											"end": 2563,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2488,
											"end": 2563,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2488,
											"end": 2563,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "184"
										},
										{
											"begin": 2488,
											"end": 2563,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2448,
											"end": 2467,
											"name": "tag",
											"source": 14,
											"value": "179"
										},
										{
											"begin": 2448,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2467,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "88"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7894,
											"end": 7926,
											"name": "PUSH",
											"source": 8,
											"value": "B0375A2EBCFDC355DAF31C17062233E587A73C013FDE410D569CF8167B1D4098"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "190"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 7775,
											"end": 7826,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 7783,
											"end": 7806,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7783,
											"end": 7806,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7783,
											"end": 7806,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7775,
											"end": 7826,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 7775,
											"end": 7826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7775,
											"end": 7826,
											"name": "tag",
											"source": 8,
											"value": "192"
										},
										{
											"begin": 7775,
											"end": 7826,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7836,
											"end": 7879,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7894,
											"end": 7926,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "86"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 707,
											"end": 714,
											"name": "PUSH",
											"source": 8,
											"value": "127500"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "82"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 584,
											"end": 620,
											"name": "PUSH",
											"source": 14,
											"value": "58223CDFB69946630D837D40B5C366A584F0217ADA7FDDD8318F2E08603CFA22"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 451,
											"end": 490,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "213"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "76"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1082,
											"end": 1095,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1115,
											"end": 1118,
											"name": "tag",
											"source": 14,
											"value": "218"
										},
										{
											"begin": 1115,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1097,
											"end": 1113,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1097,
											"end": 1113,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 1097,
											"end": 1113,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1097,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "219"
										},
										{
											"begin": 1097,
											"end": 1113,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1144,
											"end": 1152,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4306,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 1144,
											"end": 1152,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1144,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "222"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1144,
											"end": 1152,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 1144,
											"end": 1152,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1144,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 1144,
											"end": 1152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1144,
											"end": 1152,
											"name": "tag",
											"source": 14,
											"value": "222"
										},
										{
											"begin": 1144,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4306,
											"end": 4331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 4306,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1082,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "218"
										},
										{
											"begin": 1082,
											"end": 1095,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1097,
											"end": 1113,
											"name": "tag",
											"source": 14,
											"value": "219"
										},
										{
											"begin": 1097,
											"end": 1113,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1097,
											"end": 1113,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "74"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2255,
											"end": 2259,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2274,
											"end": 2294,
											"name": "PUSH",
											"source": 2,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2274,
											"end": 2294,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "72"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 769,
											"end": 782,
											"name": "PUSH",
											"source": 8,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 343,
											"end": 366,
											"name": "PUSH",
											"source": 14,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "68"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "242"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 7638,
											"end": 7673,
											"name": "PUSH",
											"source": 8,
											"value": "12CB47B190A758ACBE916B2A7C5A734B023CE60F4D93EC2B3159160163C9291A"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "248"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7513,
											"end": 7566,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 7521,
											"end": 7546,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7521,
											"end": 7546,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7521,
											"end": 7546,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7513,
											"end": 7566,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "14"
										},
										{
											"begin": 7513,
											"end": 7566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7513,
											"end": 7566,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 7513,
											"end": 7566,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7576,
											"end": 7623,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7638,
											"end": 7673,
											"name": "LOG1",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "62"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 550,
											"end": 558,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 571,
											"end": 581,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 665,
											"end": 674,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 550,
											"end": 558,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 704,
											"end": 719,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 704,
											"end": 719,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 696,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 704,
											"end": 762,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 704,
											"end": 762,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 696,
											"end": 777,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 696,
											"end": 777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 696,
											"end": 777,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 696,
											"end": 777,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 571,
											"end": 581,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 818,
											"end": 836,
											"name": "BALANCE",
											"source": 10
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 550,
											"end": 558,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 571,
											"end": 581,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1260,
											"end": 1302,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1256,
											"end": 1547,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1318,
											"end": 1335,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 1318,
											"end": 1335,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 1318,
											"end": 1350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "tag",
											"source": 10,
											"value": "268"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1256,
											"end": 1547,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 1256,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "PUSH",
											"source": 10,
											"value": "B83D25C6A5D258561330739951487ACB4BD09BA5190B5D32C4F261817D906792"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 581,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1009,
											"end": 1064,
											"name": "LOG3",
											"source": 10
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 1256,
											"end": 1547,
											"name": "tag",
											"source": 10,
											"value": "266"
										},
										{
											"begin": 1256,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1371,
											"end": 1417,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1371,
											"end": 1417,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 1371,
											"end": 1417,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1433,
											"end": 1454,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 1433,
											"end": 1454,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1433,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1433,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 1433,
											"end": 1469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1433,
											"end": 1469,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 1433,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1256,
											"end": 1547,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 1256,
											"end": 1547,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1367,
											"end": 1547,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 1367,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1521,
											"name": "PUSH",
											"source": 10,
											"value": "D"
										},
										{
											"begin": 1500,
											"end": 1521,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1500,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1500,
											"end": 1536,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 1500,
											"end": 1536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "263"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E487B71"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "105B1C9958591E481D9BDD1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "278"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1475,
											"end": 1488,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1508,
											"end": 1511,
											"name": "tag",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 1508,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1490,
											"end": 1506,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1490,
											"end": 1506,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 1490,
											"end": 1506,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1490,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "219"
										},
										{
											"begin": 1490,
											"end": 1506,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1538,
											"end": 1546,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4723,
											"end": 4749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 1538,
											"end": 1546,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1538,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1538,
											"end": 1546,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 1538,
											"end": 1546,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1538,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 1538,
											"end": 1546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1538,
											"end": 1546,
											"name": "tag",
											"source": 14,
											"value": "284"
										},
										{
											"begin": 1538,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 4723,
											"end": 4749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1475,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "280"
										},
										{
											"begin": 1475,
											"end": 1488,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "58"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1008,
											"end": 1010,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "56"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1192,
											"end": 1252,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1192,
											"end": 1252,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "54"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "PUSH",
											"source": 2,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2521,
											"end": 2543,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "301"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "52"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 906,
											"end": 908,
											"name": "PUSH",
											"source": 8,
											"value": "33"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 959,
											"end": 961,
											"name": "PUSH",
											"source": 8,
											"value": "46"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5505,
											"end": 5542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "334BD919"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4306,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1063,
											"end": 1079,
											"name": "PUSH",
											"source": 8,
											"value": "D3C21BCECCEDA1000000"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "42"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1350,
											"end": 1403,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 651,
											"end": 657,
											"name": "PUSH",
											"source": 8,
											"value": "3F480"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "36"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "114"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 496,
											"end": 533,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "34"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 1709,
											"end": 1724,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1709,
											"end": 1724,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1709,
											"end": 1724,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1701,
											"end": 1782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 1709,
											"end": 1767,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1709,
											"end": 1767,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1782,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 1701,
											"end": 1782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1701,
											"end": 1782,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 1701,
											"end": 1782,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1818,
											"end": 1836,
											"name": "PUSH",
											"source": 10,
											"value": "A"
										},
										{
											"begin": 1818,
											"end": 1836,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1818,
											"end": 1836,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1800,
											"end": 1815,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 1800,
											"end": 1836,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2388,
											"end": 2405,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 2388,
											"end": 2405,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2405,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2408,
											"end": 2429,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 2408,
											"end": 2429,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2408,
											"end": 2429,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2388,
											"end": 2429,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2489,
											"end": 2502,
											"name": "PUSH",
											"source": 10,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 2388,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 2388,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 2388,
											"end": 2429,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2429,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 2388,
											"end": 2429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2429,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 2388,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2453,
											"name": "PUSH",
											"source": 10,
											"value": "D"
										},
										{
											"begin": 2432,
											"end": 2453,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2432,
											"end": 2453,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2388,
											"end": 2453,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 2388,
											"end": 2453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2388,
											"end": 2453,
											"name": "tag",
											"source": 10,
											"value": "358"
										},
										{
											"begin": 2388,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2475,
											"end": 2502,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2475,
											"end": 2502,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2475,
											"end": 2502,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2475,
											"end": 2502,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2475,
											"end": 2502,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2475,
											"end": 2502,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2523,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 2523,
											"end": 2577,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2773,
											"end": 3274,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2773,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 2773,
											"end": 3274,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2819,
											"end": 2860,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2888,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2914,
											"end": 2931,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2914,
											"end": 2931,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1670,
											"end": 1679,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2933,
											"end": 2957,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2933,
											"end": 2957,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2959,
											"end": 2978,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 2959,
											"end": 2978,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2959,
											"end": 2978,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2959,
											"end": 2978,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2933,
											"end": 2957,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2933,
											"end": 2957,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "PUSH",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "7D519C9"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "E5"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "DUP13",
											"source": 10
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "CALL",
											"source": 10
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2773,
											"end": 3274,
											"name": "tag",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 2773,
											"end": 3274,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2135,
											"end": 2180,
											"name": "PUSH",
											"source": 10,
											"value": "5B9614F21773D68C0B149BDA804FF3D491C8BC8795F7ED236CC97804CD005389"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3005,
											"end": 3059,
											"name": "PUSH",
											"source": 10,
											"value": "C6A4FD4A703D2A2FE3167CE7F6D62BF96458B7E55042CFAA85D5C7EF3AC56EEA"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3005,
											"end": 3059,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 2773,
											"end": 3274,
											"name": "tag",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 2773,
											"end": 3274,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2135,
											"end": 2180,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2135,
											"end": 2180,
											"name": "PUSH",
											"source": 10,
											"value": "5B9614F21773D68C0B149BDA804FF3D491C8BC8795F7ED236CC97804CD005389"
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 2874,
											"end": 2986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "tag",
											"source": 10,
											"value": "372"
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "369"
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "tag",
											"source": 10,
											"value": "366"
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 2874,
											"end": 2986,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2773,
											"end": 3274,
											"name": "tag",
											"source": 10,
											"value": "362"
										},
										{
											"begin": 2773,
											"end": 3274,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2135,
											"end": 2180,
											"name": "PUSH",
											"source": 10,
											"value": "5B9614F21773D68C0B149BDA804FF3D491C8BC8795F7ED236CC97804CD005389"
										},
										{
											"begin": 2135,
											"end": 2180,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3262,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3202,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 3202,
											"end": 3262,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3173,
											"end": 3263,
											"name": "PUSH",
											"source": 10,
											"value": "E5F9059DC551D2DCF73C3BC69F282E134799B450F062C909D9F7FF45951327BD"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13585A9BDC9A5D1E481D9BDD1959081859D85A5B9CDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3262,
											"name": "tag",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 3202,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3173,
											"end": 3263,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3173,
											"end": 3263,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3173,
											"end": 3263,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 2773,
											"end": 3274,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "370"
										},
										{
											"begin": 2773,
											"end": 3274,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3202,
											"end": 3262,
											"name": "tag",
											"source": 10,
											"value": "373"
										},
										{
											"begin": 3202,
											"end": 3262,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3173,
											"end": 3263,
											"name": "PUSH",
											"source": 10,
											"value": "E5F9059DC551D2DCF73C3BC69F282E134799B450F062C909D9F7FF45951327BD"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "375"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E742071756F72756D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3202,
											"end": 3262,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "377"
										},
										{
											"begin": 3202,
											"end": 3262,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2523,
											"end": 2577,
											"name": "tag",
											"source": 10,
											"value": "360"
										},
										{
											"begin": 2523,
											"end": 2577,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2577,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2536,
											"end": 2577,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2523,
											"end": 2577,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2523,
											"end": 2577,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2523,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "361"
										},
										{
											"begin": 2523,
											"end": 2577,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "D"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "566F74696E6720616374697665"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "98"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "A4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "C4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 559,
											"end": 573,
											"name": "PUSH",
											"source": 7,
											"value": "38D7EA4C68000"
										},
										{
											"begin": 546,
											"end": 555,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 546,
											"end": 573,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 635,
											"end": 646,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 635,
											"end": 646,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 727,
											"end": 754,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 727,
											"end": 754,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 775,
											"end": 797,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 775,
											"end": 797,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 775,
											"end": 797,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3184,
											"end": 3207,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3184,
											"end": 3207,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3184,
											"end": 3207,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3184,
											"end": 3237,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3184,
											"end": 3237,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3184,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 3184,
											"end": 3237,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3280,
											"end": 3299,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3280,
											"end": 3299,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3280,
											"end": 3299,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3280,
											"end": 3342,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3280,
											"end": 3342,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3280,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 3280,
											"end": 3342,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 651,
											"end": 657,
											"name": "PUSH",
											"source": 8,
											"value": "3F480"
										},
										{
											"begin": 3379,
											"end": 3412,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3379,
											"end": 3412,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 3379,
											"end": 3412,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3379,
											"end": 3449,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3379,
											"end": 3449,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3379,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 3379,
											"end": 3449,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3493,
											"end": 3535,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3493,
											"end": 3535,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3603,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3583,
											"end": 3603,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3583,
											"end": 3603,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3583,
											"end": 3641,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3583,
											"end": 3641,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3583,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 3583,
											"end": 3641,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 769,
											"end": 782,
											"name": "PUSH",
											"source": 8,
											"value": "3635C9ADC5DEA00000"
										},
										{
											"begin": 3757,
											"end": 3767,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3775,
											"name": "BALANCE",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3801,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6637,
											"end": 6657,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 6637,
											"end": 6657,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "17"
										},
										{
											"begin": 6637,
											"end": 6657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6637,
											"end": 6657,
											"name": "tag",
											"source": 8,
											"value": "440"
										},
										{
											"begin": 6637,
											"end": 6657,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 859,
											"end": 870,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 859,
											"end": 870,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 872,
											"end": 885,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 872,
											"end": 885,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 887,
											"end": 900,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 887,
											"end": 900,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4196,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 4171,
											"end": 4196,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4171,
											"end": 4196,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4171,
											"end": 4229,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4171,
											"end": 4229,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4171,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 4171,
											"end": 4229,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4274,
											"end": 4299,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 4451,
											"end": 4468,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4451,
											"end": 4468,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3767,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4505,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 4491,
											"end": 4505,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4491,
											"end": 4505,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 4523,
											"end": 4539,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 4523,
											"end": 4539,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4523,
											"end": 4539,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4523,
											"end": 4539,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4523,
											"end": 4539,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4559,
											"end": 4575,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4559,
											"end": 4575,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4559,
											"end": 4575,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5120,
											"end": 5147,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4523,
											"end": 4539,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4595,
											"end": 4610,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 4595,
											"end": 4610,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4595,
											"end": 4610,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 4697,
											"end": 4712,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5022,
											"end": 5046,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5022,
											"end": 5046,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5022,
											"end": 5046,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5074,
											"end": 5095,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 5074,
											"end": 5095,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5074,
											"end": 5095,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 5120,
											"end": 5147,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 1029,
											"end": 1056,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1058,
											"end": 1080,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1058,
											"end": 1080,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5435,
											"end": 5467,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5482,
											"end": 5495,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5477,
											"end": 5745,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 5517,
											"end": 5520,
											"name": "tag",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 5517,
											"end": 5520,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5497,
											"end": 5515,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 5497,
											"end": 5515,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5497,
											"end": 5515,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5497,
											"end": 5515,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 5497,
											"end": 5515,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5544,
											"end": 5554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 5544,
											"end": 5554,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 5544,
											"end": 5554,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5544,
											"end": 5554,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 5544,
											"end": 5554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5544,
											"end": 5554,
											"name": "tag",
											"source": 8,
											"value": "480"
										},
										{
											"begin": 5544,
											"end": 5554,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5544,
											"end": 5558,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5624,
											"end": 5639,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 5624,
											"end": 5639,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 5624,
											"end": 5639,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 5624,
											"end": 5639,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 5624,
											"end": 5639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5624,
											"end": 5639,
											"name": "tag",
											"source": 8,
											"value": "483"
										},
										{
											"begin": 5624,
											"end": 5639,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5624,
											"end": 5639,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5618,
											"end": 5651,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5700,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5724,
											"end": 5734,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5724,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 5724,
											"end": 5734,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 5724,
											"end": 5734,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 5724,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 5724,
											"end": 5734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5724,
											"end": 5734,
											"name": "tag",
											"source": 8,
											"value": "487"
										},
										{
											"begin": 5724,
											"end": 5734,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5700,
											"end": 5734,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5700,
											"end": 5734,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "25"
										},
										{
											"begin": 5700,
											"end": 5734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5700,
											"end": 5734,
											"name": "tag",
											"source": 8,
											"value": "486"
										},
										{
											"begin": 5700,
											"end": 5734,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5517,
											"end": 5520,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5482,
											"end": 5495,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 5482,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "477"
										},
										{
											"begin": 5482,
											"end": 5495,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1E"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4D696C6573746F6E65206465736372697074696F6E2072657175697265640000"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "21"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4D696C6573746F6E6520616D6F756E74206D75737420626520706F7369746976"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5497,
											"end": 5515,
											"name": "tag",
											"source": 8,
											"value": "478"
										},
										{
											"begin": 5497,
											"end": 5515,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5497,
											"end": 5515,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 5497,
											"end": 5515,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 5497,
											"end": 5515,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 5497,
											"end": 5515,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 5872,
											"end": 5896,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 5872,
											"end": 5896,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 5872,
											"end": 5896,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 5848,
											"end": 5896,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6057,
											"end": 6076,
											"name": "PUSH",
											"source": 8,
											"value": "10"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5998,
											"end": 6011,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 5998,
											"end": 6011,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 6057,
											"end": 6076,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5993,
											"end": 6288,
											"name": "SWAP7",
											"source": 8
										},
										{
											"begin": 6038,
											"end": 6041,
											"name": "tag",
											"source": 8,
											"value": "490"
										},
										{
											"begin": 6038,
											"end": 6041,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6013,
											"end": 6036,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6036,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6036,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6036,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 6013,
											"end": 6036,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6141,
											"end": 6156,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 6141,
											"end": 6156,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6141,
											"end": 6156,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6141,
											"end": 6156,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 6141,
											"end": 6156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6141,
											"end": 6156,
											"name": "tag",
											"source": 8,
											"value": "493"
										},
										{
											"begin": 6141,
											"end": 6156,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6141,
											"end": 6156,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6182,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 6182,
											"end": 6192,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6182,
											"end": 6192,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 6182,
											"end": 6192,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "13"
										},
										{
											"begin": 6182,
											"end": 6192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6182,
											"end": 6192,
											"name": "tag",
											"source": 8,
											"value": "494"
										},
										{
											"begin": 6182,
											"end": 6192,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6082,
											"end": 6276,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6082,
											"end": 6276,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6082,
											"end": 6276,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6082,
											"end": 6276,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 6082,
											"end": 6276,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6082,
											"end": 6276,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP12",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "10000000000000000"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP15",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4505,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6038,
											"end": 6041,
											"name": "tag",
											"source": 8,
											"value": "505"
										},
										{
											"begin": 6038,
											"end": 6041,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "506"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4523,
											"end": 4539,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 4491,
											"end": 4505,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5998,
											"end": 6011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "490"
										},
										{
											"begin": 5998,
											"end": 6011,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "506"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP10",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP8",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4523,
											"end": 4539,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "F8"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "511"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "518"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "519"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "519"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "518"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "32"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 6013,
											"end": 6036,
											"name": "tag",
											"source": 8,
											"value": "491"
										},
										{
											"begin": 6013,
											"end": 6036,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6013,
											"end": 6036,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6036,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6036,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1097,
											"end": 1206,
											"name": "PUSH",
											"source": 9,
											"value": "5AD01C818E42F77C2C5123D4D295C39799CF1CAC9125682A8C90C7CE9D9BF6B4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 6013,
											"end": 6036,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 6013,
											"end": 6036,
											"name": "DUP14",
											"source": 8
										},
										{
											"begin": 1139,
											"end": 1150,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1175,
											"end": 1188,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1175,
											"end": 1188,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "522"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "522"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4697,
											"end": 4712,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4697,
											"end": 4712,
											"name": "TIMESTAMP",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3757,
											"end": 3767,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 3757,
											"end": 3767,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 1097,
											"end": 1206,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1206,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1097,
											"end": 1206,
											"name": "LOG3",
											"source": 9
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "2F"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4D696C6573746F6E6520616D6F756E747320646F6E27742073756D20746F2072"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "195C5D595CDD195908185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP14",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "524"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5120,
											"end": 5147,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP11",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP9",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP7",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "526"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "527"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "526"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "F8"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4523,
											"end": 4539,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP14",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "527"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "524"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "523"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "528"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "530"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "531"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "531"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "530"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "528"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "529"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "464"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "534"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "536"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "536"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "F8"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4523,
											"end": 4539,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP13",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "534"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "540"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "541"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "541"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "540"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP14",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "452"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "544"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "547"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "F8"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP14",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "547"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "544"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "548"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "549"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "550"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "551"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "551"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "550"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "548"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "549"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "12541194C810D251081C995C5D5A5C9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92DCECC2D8D2C840E6EADADAC2E4F240D8CADCCEE8D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "53"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4171,
											"end": 4229,
											"name": "tag",
											"source": 8,
											"value": "441"
										},
										{
											"begin": 4171,
											"end": 4229,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4225,
											"end": 4229,
											"name": "PUSH",
											"source": 8,
											"value": "3E8"
										},
										{
											"begin": 4200,
											"end": 4229,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4200,
											"end": 4229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4200,
											"end": 4229,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 4200,
											"end": 4229,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 4171,
											"end": 4229,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 4171,
											"end": 4229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 4171,
											"end": 4229,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "496E73756666696369656E74205846492062616C616E63650000000000000000"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "496E76616C6964206D696C6573746F6E6520636F756E74000000000000000000"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3583,
											"end": 3641,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 3583,
											"end": 3641,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1008,
											"end": 1010,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 3607,
											"end": 3641,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3641,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3641,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3641,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3583,
											"end": 3641,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 3583,
											"end": 3641,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "435"
										},
										{
											"begin": 3583,
											"end": 3641,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4D696C6573746F6E6520617272617973206D69736D6174636800000000000000"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59081D9BDD1A5B99C81C195C9A5BD9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3379,
											"end": 3449,
											"name": "tag",
											"source": 8,
											"value": "428"
										},
										{
											"begin": 3379,
											"end": 3449,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 707,
											"end": 714,
											"name": "PUSH",
											"source": 8,
											"value": "127500"
										},
										{
											"begin": 3416,
											"end": 3449,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3416,
											"end": 3449,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3416,
											"end": 3449,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3416,
											"end": 3449,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3379,
											"end": 3449,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 3379,
											"end": 3449,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 3379,
											"end": 3449,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A5908185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3280,
											"end": 3342,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 3280,
											"end": 3342,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1063,
											"end": 1079,
											"name": "PUSH",
											"source": 8,
											"value": "D3C21BCECCEDA1000000"
										},
										{
											"begin": 3303,
											"end": 3342,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3303,
											"end": 3342,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3303,
											"end": 3342,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3303,
											"end": 3342,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3280,
											"end": 3342,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 3280,
											"end": 3342,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "425"
										},
										{
											"begin": 3280,
											"end": 3342,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92DCECC2D8D2C840E8D2E8D8CA40D8CADCCEE8D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "63"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3184,
											"end": 3237,
											"name": "tag",
											"source": 8,
											"value": "420"
										},
										{
											"begin": 3184,
											"end": 3237,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3234,
											"end": 3237,
											"name": "PUSH",
											"source": 8,
											"value": "C8"
										},
										{
											"begin": 3211,
											"end": 3237,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3211,
											"end": 3237,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3211,
											"end": 3237,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 3211,
											"end": 3237,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3184,
											"end": 3237,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 3184,
											"end": 3237,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 3184,
											"end": 3237,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "496E73756666696369656E742070726F706F73616C2066656500000000000000"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "555"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "555"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "30"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "562"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "563"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "tag",
											"source": 0,
											"value": "562"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 829,
											"end": 869,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 829,
											"end": 869,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "563"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "28"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "568"
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1123,
											"end": 1186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "tag",
											"source": 8,
											"value": "568"
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "569"
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "PUSH",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1123,
											"end": 1186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "tag",
											"source": 8,
											"value": "569"
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "570"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1123,
											"end": 1186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "tag",
											"source": 8,
											"value": "570"
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "PUSH",
											"source": 8,
											"value": "5"
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "PUSH",
											"source": 8,
											"value": "6"
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "PUSH",
											"source": 8,
											"value": "7"
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "PUSH",
											"source": 8,
											"value": "9"
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "PUSH",
											"source": 8,
											"value": "A"
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "PUSH",
											"source": 8,
											"value": "B"
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "PUSH",
											"source": 8,
											"value": "C"
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "DUP11",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "SWAP8",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "PUSH",
											"source": 8,
											"value": "D"
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "DUP12",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "SWAP10",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "PUSH",
											"source": 8,
											"value": "E"
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "DUP13",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "SWAP12",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "PUSH",
											"source": 8,
											"value": "F"
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "571"
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "3"
										},
										{
											"begin": 1123,
											"end": 1186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "tag",
											"source": 8,
											"value": "571"
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "SWAP14",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 1123,
											"end": 1186,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "220"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "572"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "572"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "573"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "573"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "574"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "574"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP10",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "575"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "575"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "140"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "160"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1A0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1C0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1E0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "576"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "576"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "200"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "577"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "578"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "579"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "579"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "577"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "7F"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "578"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "583"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "583"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "584"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "586"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "587"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "588"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "588"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "586"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "589"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "590"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "588"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "587"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "590"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP10",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "589"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "584"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "588"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "587"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MCOPY",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "598"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "598"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "23"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "615"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "615"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "616"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "616"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "364"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "619"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "620"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "620"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "619"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "353"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "626"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "626"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "F"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C69642061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "tag",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "tag",
											"source": 14,
											"value": "628"
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1936,
											"end": 1952,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1936,
											"end": 1952,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 1936,
											"end": 1952,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1936,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "629"
										},
										{
											"begin": 1936,
											"end": 1952,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1977,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "631"
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "182"
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 1985,
											"end": 1993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1977,
											"end": 2003,
											"name": "tag",
											"source": 14,
											"value": "631"
										},
										{
											"begin": 1977,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1973,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "633"
										},
										{
											"begin": 1973,
											"end": 2049,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1921,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "628"
										},
										{
											"begin": 1921,
											"end": 1934,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1973,
											"end": 2049,
											"name": "tag",
											"source": 14,
											"value": "633"
										},
										{
											"begin": 1973,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2023,
											"end": 2034,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2023,
											"end": 2034,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2023,
											"end": 2034,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2023,
											"end": 2034,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2023,
											"end": 2034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1936,
											"end": 1952,
											"name": "tag",
											"source": 14,
											"value": "629"
										},
										{
											"begin": 1936,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1936,
											"end": 1952,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1936,
											"end": 1952,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1936,
											"end": 1952,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1816,
											"end": 2087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "635"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "635"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "tag",
											"source": 14,
											"value": "18"
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "637"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "637"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2823,
											"end": 2824,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "CALLDATACOPY",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2880,
											"end": 2881,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 343,
											"end": 366,
											"name": "PUSH",
											"source": 14,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2911,
											"end": 2912,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 413,
											"end": 440,
											"name": "PUSH",
											"source": 14,
											"value": "482648E7878E9FA54C0A2F67FFD22D00EBC37CF7A03E060E428D2AB0CD6735CC"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2946,
											"end": 2947,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 494,
											"end": 528,
											"name": "PUSH",
											"source": 14,
											"value": "EDE9DCDB0CE99DC7CEC9C7BE9246AD08B37853683AD91569C187B647DDF5E21C"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2988,
											"end": 2989,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 584,
											"end": 620,
											"name": "PUSH",
											"source": 14,
											"value": "58223CDFB69946630D837D40B5C366A584F0217ADA7FDDD8318F2E08603CFA22"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "A0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 674,
											"end": 708,
											"name": "PUSH",
											"source": 14,
											"value": "7B8BB8356A3F32F5C111FF23F050D97F08988E0883529EA7BFF3B918887A6E0E"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "C0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2723,
											"end": 3087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "650"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "650"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "A"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F7420766F74696E67"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "7D7FFB7A348E1C6A02869081A26547B49160DD3DF72D1D75A570EB9B698292EC"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3495,
											"end": 3518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "652"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "tag",
											"source": 0,
											"value": "652"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 343,
											"end": 366,
											"name": "PUSH",
											"source": 14,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "AD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3495,
											"end": 3518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "654"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "tag",
											"source": 0,
											"value": "654"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3495,
											"end": 3518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "656"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "tag",
											"source": 0,
											"value": "656"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "658"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6323,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6400,
											"end": 6411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "tag",
											"source": 0,
											"value": "658"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6442,
											"end": 6454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "658"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP6",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "KECCAK256",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 6965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "tag",
											"source": 7,
											"value": "25"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "635"
										},
										{
											"begin": 135,
											"end": 2475,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 135,
											"end": 2475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								},
								"01400FE2F234CF888B5E4C66700C7903F33F31BFC9675E51CB0119F915EB534D": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
								"27AD65E758A22F2FE9F0D501DA4E2A54EB635546AB8210118501A36D81E3B048": "7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec",
								"F0DF3DCDA05B4FBD9C655CDE3D5CEB211E019E72EC816E127A59E7195F2CD7F5": "ad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5"
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol",
								"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol",
								"CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol",
								"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol",
								"CrossFi-Treasury-Guard/contracts/interfaces/IAIScoreRegistry.sol",
								"CrossFi-Treasury-Guard/contracts/interfaces/IProposalRegistry.sol",
								"CrossFi-Treasury-Guard/contracts/interfaces/ITreasuryEscrow.sol",
								"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ADMIN_ROLE()": "75b238fc",
							"AI_ORACLE_ROLE()": "c601f7af",
							"AI_SCORE_THRESHOLD()": "39c854fa",
							"APPROVAL_THRESHOLD()": "3ab34290",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"DISPUTE_RESOLVER_ROLE()": "bfe42a37",
							"MAX_MILESTONES()": "4c05abeb",
							"MAX_REQUESTED_AMOUNT()": "2d75ae0e",
							"MAX_VOTING_PERIOD()": "a64e024a",
							"MILESTONE_APPROVER_ROLE()": "a02d72fb",
							"MIN_PROPOSAL_THRESHOLD()": "791f5d23",
							"MIN_VOTING_PERIOD()": "215809ca",
							"QUORUM_PERCENTAGE()": "ee8a7c15",
							"TREASURY_MANAGER_ROLE()": "ebdf690f",
							"aiScoreRegistry()": "96479e19",
							"castVote(uint256,uint8)": "56781388",
							"executeProposal(uint256)": "0d61b519",
							"getAllRoles()": "f2bcac3d",
							"getCurrentProposalId()": "fe10226d",
							"getProposal(uint256)": "c7f758a8",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleCount(address)": "aca5a8a7",
							"getVotingPower(address)": "bb4d4436",
							"grantMultipleRoles(address,bytes32[])": "91b9f9d8",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasAnyRole(address,bytes32[])": "68ca78f9",
							"hasRole(bytes32,address)": "91d14854",
							"hasVoted(uint256,address)": "43859632",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"proposals(uint256)": "013cf08b",
							"proposerReputation(address)": "2d142b76",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeMultipleRoles(address,bytes32[])": "4fe9d1f5",
							"revokeRole(bytes32,address)": "d547741f",
							"submitProposal((string,string,string,uint256,string[],uint256[],uint256))": "08d256af",
							"supportsInterface(bytes4)": "01ffc9a7",
							"treasuryEscrow()": "1d9dfd4e",
							"unpause()": "3f4ba83a",
							"updateAIScoreRegistry(address)": "6807fc21",
							"updateTreasuryEscrow(address)": "abd98fb0",
							"voterChoices(uint256,address)": "db994b4f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_aiScoreRegistry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasuryEscrow\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"justification\",\"type\":\"string\"}],\"name\":\"AIScoreProcessed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newRegistry\",\"type\":\"address\"}],\"name\":\"AIScoreRegistryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProposalApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ProposalCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum IProposalRegistry.ProposalStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"ProposalRejected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"ipfsCID\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ProposalSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newEscrow\",\"type\":\"address\"}],\"name\":\"TreasuryEscrowUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IProposalRegistry.VoteType\",\"name\":\"voteType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votingStart\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votingEnd\",\"type\":\"uint256\"}],\"name\":\"VotingStarted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"AI_ORACLE_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"AI_SCORE_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"APPROVAL_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DISPUTE_RESOLVER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_MILESTONES\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_REQUESTED_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_VOTING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MILESTONE_APPROVER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_PROPOSAL_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_VOTING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"QUORUM_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TREASURY_MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aiScoreRegistry\",\"outputs\":[{\"internalType\":\"contract IAIScoreRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"enum IProposalRegistry.VoteType\",\"name\":\"voteType\",\"type\":\"uint8\"}],\"name\":\"castVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"executeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllRoles\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentProposalId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"summary\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum IProposalRegistry.ProposalStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"aiScore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"abstainVotes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getRoleCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"roleCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotingPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"}],\"name\":\"grantMultipleRoles\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"}],\"name\":\"hasAnyRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"summary\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ipfsCID\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum IProposalRegistry.ProposalStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"submissionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"abstainVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"aiScore\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"aiJustification\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupplyAtStart\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"proposerReputation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"}],\"name\":\"revokeMultipleRoles\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"summary\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ipfsCID\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"milestoneDescriptions\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"milestoneAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"votingPeriod\",\"type\":\"uint256\"}],\"internalType\":\"struct IProposalRegistry.ProposalInput\",\"name\":\"input\",\"type\":\"tuple\"}],\"name\":\"submitProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryEscrow\",\"outputs\":[{\"internalType\":\"contract ITreasuryEscrow\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRegistry\",\"type\":\"address\"}],\"name\":\"updateAIScoreRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newEscrow\",\"type\":\"address\"}],\"name\":\"updateTreasuryEscrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"voterChoices\",\"outputs\":[{\"internalType\":\"enum IProposalRegistry.VoteType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"getAllRoles()\":{\"details\":\"Get all available roles\",\"returns\":{\"roles\":\"Array of all role identifiers\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleCount(address)\":{\"details\":\"Get all roles for an account\",\"params\":{\"account\":\"Account to check\"},\"returns\":{\"roleCount\":\"Number of roles the account has\"}},\"grantMultipleRoles(address,bytes32[])\":{\"details\":\"Grant multiple roles to an account\",\"params\":{\"account\":\"Account to grant roles to\",\"roles\":\"Array of role identifiers\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasAnyRole(address,bytes32[])\":{\"details\":\"Check if account has any of the specified roles\",\"params\":{\"account\":\"Account to check\",\"roles\":\"Array of role identifiers\"},\"returns\":{\"_0\":\"hasAnyRole True if account has at least one of the roles\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeMultipleRoles(address,bytes32[])\":{\"details\":\"Revoke multiple roles from an account\",\"params\":{\"account\":\"Account to revoke roles from\",\"roles\":\"Array of role identifiers\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":\"ProposalRegistry\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol\":{\"keccak256\":\"0x44d19c23029b152fc8532e41b29baa2bc7675555d7c5a493f28d92d2d0c336c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01d38f137a7aeb381e3925101d8530f858464a077cfde5ec0e299704e66b6a22\",\"dweb:/ipfs/QmYKEM2uno3sk9dHSPxKCrLKgzTgQnfhTN3TfjMUiWYPJy\"]},\"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":{\"keccak256\":\"0x06e411368e92d45f5e5f260357a7b8af5f1e438cab9f564f2c354056b33d5c19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa5182e9932e450623394e7136adfa2a174761c07fb90fe806d31640061bf947\",\"dweb:/ipfs/QmfPN8xDNDKQcTmzn3FCaQ3uG3NKp8oJYBrrCQxnumjnbM\"]},\"CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol\":{\"keccak256\":\"0x034aaeef4f0406edf31fcd19f82bdab02be08d08bca2cba234324f0afc1679e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6ebb2b2171c93715a4994d3e11cba13c64469b509a7230169c90bd3b8b6ae13\",\"dweb:/ipfs/QmdDDD4r9scrb9fxo4w4QcnXqHMHPmrxQ748rN57wQTUgE\"]},\"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":{\"keccak256\":\"0x396a8aacdab825e592444ab3767eac2746ac1915dc4d1757eb8999925bea9163\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f0f1aed8da835d92d7ab088df9b742ee6e630d1c5c82c44f55ecb494096871c\",\"dweb:/ipfs/QmNZhuFzGJnK9itc2DzbcvgQMZZacxiadTCQD6ENtz3m9w\"]},\"CrossFi-Treasury-Guard/contracts/interfaces/IAIScoreRegistry.sol\":{\"keccak256\":\"0xb36aceb50a3c334f727f77bbd2f6660b3a7f48226a1cc73c6b4273f03c1c6b17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b080c589ae5af3faf1a2a218267478d86dc5408b674e696f4a9a5b617ac46ff\",\"dweb:/ipfs/QmaYY5xJZHYqg7KPdB25pTZyYnhcDrN3miPVTTUE38tvJS\"]},\"CrossFi-Treasury-Guard/contracts/interfaces/IProposalRegistry.sol\":{\"keccak256\":\"0xa7e293a5cf8d8648651f4aec782dc64870dd507aa335bcd33380f7ea0c524a1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5f3d6288cee34a9c3e6adb189ced4c4157782be50b9dae4243ad4d94b760cf6\",\"dweb:/ipfs/QmRSjFJokP5VYo6fp2PHFA8LHxNDba6tqEw2ZUPZvCE6vR\"]},\"CrossFi-Treasury-Guard/contracts/interfaces/ITreasuryEscrow.sol\":{\"keccak256\":\"0xad314e57c5476470baf2d3b0ddee9ed70504b45297febf59727e81b2e9acc17d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b41f63c3b0998a3514d3c3b3e84636bfa4ac9a4980fbaf8e70c46d37bff40c6\",\"dweb:/ipfs/Qmc6VgUwi1iqQNHfzaiHQSSW3PYyJq83mVvyRuvCXpB8qn\"]},\"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":{\"keccak256\":\"0x8b7cd81ef25f52c2cdffb0879b4c8d953d671eef13fa1ebdda28c0c2e16c52da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc0018431667094cdb37883ffc7417dfd2c552844692f1340143f4e7e4b903f3\",\"dweb:/ipfs/QmPdnh9tbMBQCaazQ2fzbQSKKxkERU75TcSDZ9KVfDhujb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol:ProposalRegistry",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)22_storage)"
							},
							{
								"astId": 498,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol:ProposalRegistry",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 397,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol:ProposalRegistry",
								"label": "_paused",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 835,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol:ProposalRegistry",
								"label": "aiScoreRegistry",
								"offset": 1,
								"slot": "2",
								"type": "t_contract(IAIScoreRegistry)1976"
							},
							{
								"astId": 838,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol:ProposalRegistry",
								"label": "treasuryEscrow",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(ITreasuryEscrow)2185"
							},
							{
								"astId": 840,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol:ProposalRegistry",
								"label": "_currentProposalId",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 877,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol:ProposalRegistry",
								"label": "proposals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_struct(Proposal)2040_storage)"
							},
							{
								"astId": 883,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol:ProposalRegistry",
								"label": "hasVoted",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 890,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol:ProposalRegistry",
								"label": "voterChoices",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_enum(VoteType)1991))"
							},
							{
								"astId": 894,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol:ProposalRegistry",
								"label": "proposerReputation",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Milestone)2000_storage)dyn_storage": {
								"base": "t_struct(Milestone)2000_storage",
								"encoding": "dynamic_array",
								"label": "struct IProposalRegistry.Milestone[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IAIScoreRegistry)1976": {
								"encoding": "inplace",
								"label": "contract IAIScoreRegistry",
								"numberOfBytes": "20"
							},
							"t_contract(ITreasuryEscrow)2185": {
								"encoding": "inplace",
								"label": "contract ITreasuryEscrow",
								"numberOfBytes": "20"
							},
							"t_enum(ProposalStatus)1987": {
								"encoding": "inplace",
								"label": "enum IProposalRegistry.ProposalStatus",
								"numberOfBytes": "1"
							},
							"t_enum(VoteType)1991": {
								"encoding": "inplace",
								"label": "enum IProposalRegistry.VoteType",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_enum(VoteType)1991)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => enum IProposalRegistry.VoteType)",
								"numberOfBytes": "32",
								"value": "t_enum(VoteType)1991"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)22_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)22_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_enum(VoteType)1991))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => enum IProposalRegistry.VoteType))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_enum(VoteType)1991)"
							},
							"t_mapping(t_uint256,t_struct(Proposal)2040_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct IProposalRegistry.Proposal)",
								"numberOfBytes": "32",
								"value": "t_struct(Proposal)2040_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Milestone)2000_storage": {
								"encoding": "inplace",
								"label": "struct IProposalRegistry.Milestone",
								"members": [
									{
										"astId": 1993,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol:ProposalRegistry",
										"label": "description",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 1995,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol:ProposalRegistry",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1997,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol:ProposalRegistry",
										"label": "completed",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 1999,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol:ProposalRegistry",
										"label": "completionTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(Proposal)2040_storage": {
								"encoding": "inplace",
								"label": "struct IProposalRegistry.Proposal",
								"members": [
									{
										"astId": 2002,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol:ProposalRegistry",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2004,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol:ProposalRegistry",
										"label": "proposer",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 2006,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol:ProposalRegistry",
										"label": "title",
										"offset": 0,
										"slot": "2",
										"type": "t_string_storage"
									},
									{
										"astId": 2008,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol:ProposalRegistry",
										"label": "summary",
										"offset": 0,
										"slot": "3",
										"type": "t_string_storage"
									},
									{
										"astId": 2010,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol:ProposalRegistry",
										"label": "ipfsCID",
										"offset": 0,
										"slot": "4",
										"type": "t_string_storage"
									},
									{
										"astId": 2012,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol:ProposalRegistry",
										"label": "requestedAmount",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 2015,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol:ProposalRegistry",
										"label": "status",
										"offset": 0,
										"slot": "6",
										"type": "t_enum(ProposalStatus)1987"
									},
									{
										"astId": 2017,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol:ProposalRegistry",
										"label": "submissionTime",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 2019,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol:ProposalRegistry",
										"label": "votingPeriod",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 2021,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol:ProposalRegistry",
										"label": "votingStart",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 2023,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol:ProposalRegistry",
										"label": "votingEnd",
										"offset": 0,
										"slot": "10",
										"type": "t_uint256"
									},
									{
										"astId": 2025,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol:ProposalRegistry",
										"label": "forVotes",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									},
									{
										"astId": 2027,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol:ProposalRegistry",
										"label": "againstVotes",
										"offset": 0,
										"slot": "12",
										"type": "t_uint256"
									},
									{
										"astId": 2029,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol:ProposalRegistry",
										"label": "abstainVotes",
										"offset": 0,
										"slot": "13",
										"type": "t_uint256"
									},
									{
										"astId": 2031,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol:ProposalRegistry",
										"label": "aiScore",
										"offset": 0,
										"slot": "14",
										"type": "t_uint256"
									},
									{
										"astId": 2033,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol:ProposalRegistry",
										"label": "aiJustification",
										"offset": 0,
										"slot": "15",
										"type": "t_string_storage"
									},
									{
										"astId": 2037,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol:ProposalRegistry",
										"label": "milestones",
										"offset": 0,
										"slot": "16",
										"type": "t_array(t_struct(Milestone)2000_storage)dyn_storage"
									},
									{
										"astId": 2039,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol:ProposalRegistry",
										"label": "totalSupplyAtStart",
										"offset": 0,
										"slot": "17",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "576"
							},
							"t_struct(RoleData)22_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 19,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol:ProposalRegistry",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 21,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol:ProposalRegistry",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol": {
				"ProposalRegistryBase": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "score",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "justification",
									"type": "string"
								}
							],
							"name": "AIScoreProcessed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newRegistry",
									"type": "address"
								}
							],
							"name": "AIScoreRegistryUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ProposalApproved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "proposer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "ProposalCancelled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum IProposalRegistry.ProposalStatus",
									"name": "status",
									"type": "uint8"
								}
							],
							"name": "ProposalExecuted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"name": "ProposalRejected",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "proposer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "title",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "requestedAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "ipfsCID",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "ProposalSubmitted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newEscrow",
									"type": "address"
								}
							],
							"name": "TreasuryEscrowUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "voter",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "enum IProposalRegistry.VoteType",
									"name": "voteType",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								}
							],
							"name": "VoteCast",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "votingStart",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "votingEnd",
									"type": "uint256"
								}
							],
							"name": "VotingStarted",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "AI_ORACLE_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "AI_SCORE_THRESHOLD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "APPROVAL_THRESHOLD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DISPUTE_RESOLVER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_MILESTONES",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_REQUESTED_AMOUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_VOTING_PERIOD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MILESTONE_APPROVER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MIN_PROPOSAL_THRESHOLD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MIN_VOTING_PERIOD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "QUORUM_PERCENTAGE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TREASURY_MANAGER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "aiScoreRegistry",
							"outputs": [
								{
									"internalType": "contract IAIScoreRegistry",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllRoles",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentProposalId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getRoleCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "roleCount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getVotingPower",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								}
							],
							"name": "grantMultipleRoles",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								}
							],
							"name": "hasAnyRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "hasVoted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "proposals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "proposer",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "title",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "summary",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "ipfsCID",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "requestedAmount",
									"type": "uint256"
								},
								{
									"internalType": "enum IProposalRegistry.ProposalStatus",
									"name": "status",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "submissionTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "votingPeriod",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "votingStart",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "votingEnd",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "forVotes",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "againstVotes",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "abstainVotes",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "aiScore",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "aiJustification",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "totalSupplyAtStart",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "proposerReputation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								}
							],
							"name": "revokeMultipleRoles",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasuryEscrow",
							"outputs": [
								{
									"internalType": "contract ITreasuryEscrow",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newRegistry",
									"type": "address"
								}
							],
							"name": "updateAIScoreRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newEscrow",
									"type": "address"
								}
							],
							"name": "updateTreasuryEscrow",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "voterChoices",
							"outputs": [
								{
									"internalType": "enum IProposalRegistry.VoteType",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"getAllRoles()": {
								"details": "Get all available roles",
								"returns": {
									"roles": "Array of all role identifiers"
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleCount(address)": {
								"details": "Get all roles for an account",
								"params": {
									"account": "Account to check"
								},
								"returns": {
									"roleCount": "Number of roles the account has"
								}
							},
							"grantMultipleRoles(address,bytes32[])": {
								"details": "Grant multiple roles to an account",
								"params": {
									"account": "Account to grant roles to",
									"roles": "Array of role identifiers"
								}
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasAnyRole(address,bytes32[])": {
								"details": "Check if account has any of the specified roles",
								"params": {
									"account": "Account to check",
									"roles": "Array of role identifiers"
								},
								"returns": {
									"_0": "hasAnyRole True if account has at least one of the roles"
								}
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeMultipleRoles(address,bytes32[])": {
								"details": "Revoke multiple roles from an account",
								"params": {
									"account": "Account to revoke roles from",
									"roles": "Array of role identifiers"
								}
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"ADMIN_ROLE()": "75b238fc",
							"AI_ORACLE_ROLE()": "c601f7af",
							"AI_SCORE_THRESHOLD()": "39c854fa",
							"APPROVAL_THRESHOLD()": "3ab34290",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"DISPUTE_RESOLVER_ROLE()": "bfe42a37",
							"MAX_MILESTONES()": "4c05abeb",
							"MAX_REQUESTED_AMOUNT()": "2d75ae0e",
							"MAX_VOTING_PERIOD()": "a64e024a",
							"MILESTONE_APPROVER_ROLE()": "a02d72fb",
							"MIN_PROPOSAL_THRESHOLD()": "791f5d23",
							"MIN_VOTING_PERIOD()": "215809ca",
							"QUORUM_PERCENTAGE()": "ee8a7c15",
							"TREASURY_MANAGER_ROLE()": "ebdf690f",
							"aiScoreRegistry()": "96479e19",
							"getAllRoles()": "f2bcac3d",
							"getCurrentProposalId()": "fe10226d",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleCount(address)": "aca5a8a7",
							"getVotingPower(address)": "bb4d4436",
							"grantMultipleRoles(address,bytes32[])": "91b9f9d8",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasAnyRole(address,bytes32[])": "68ca78f9",
							"hasRole(bytes32,address)": "91d14854",
							"hasVoted(uint256,address)": "43859632",
							"paused()": "5c975abb",
							"proposals(uint256)": "013cf08b",
							"proposerReputation(address)": "2d142b76",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeMultipleRoles(address,bytes32[])": "4fe9d1f5",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"treasuryEscrow()": "1d9dfd4e",
							"updateAIScoreRegistry(address)": "6807fc21",
							"updateTreasuryEscrow(address)": "abd98fb0",
							"voterChoices(uint256,address)": "db994b4f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"justification\",\"type\":\"string\"}],\"name\":\"AIScoreProcessed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newRegistry\",\"type\":\"address\"}],\"name\":\"AIScoreRegistryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProposalApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ProposalCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum IProposalRegistry.ProposalStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"ProposalRejected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"ipfsCID\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ProposalSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newEscrow\",\"type\":\"address\"}],\"name\":\"TreasuryEscrowUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IProposalRegistry.VoteType\",\"name\":\"voteType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votingStart\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votingEnd\",\"type\":\"uint256\"}],\"name\":\"VotingStarted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"AI_ORACLE_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"AI_SCORE_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"APPROVAL_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DISPUTE_RESOLVER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_MILESTONES\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_REQUESTED_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_VOTING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MILESTONE_APPROVER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_PROPOSAL_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_VOTING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"QUORUM_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TREASURY_MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aiScoreRegistry\",\"outputs\":[{\"internalType\":\"contract IAIScoreRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllRoles\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentProposalId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getRoleCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"roleCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotingPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"}],\"name\":\"grantMultipleRoles\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"}],\"name\":\"hasAnyRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"summary\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ipfsCID\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum IProposalRegistry.ProposalStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"submissionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"abstainVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"aiScore\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"aiJustification\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupplyAtStart\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"proposerReputation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"}],\"name\":\"revokeMultipleRoles\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryEscrow\",\"outputs\":[{\"internalType\":\"contract ITreasuryEscrow\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRegistry\",\"type\":\"address\"}],\"name\":\"updateAIScoreRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newEscrow\",\"type\":\"address\"}],\"name\":\"updateTreasuryEscrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"voterChoices\",\"outputs\":[{\"internalType\":\"enum IProposalRegistry.VoteType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"getAllRoles()\":{\"details\":\"Get all available roles\",\"returns\":{\"roles\":\"Array of all role identifiers\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleCount(address)\":{\"details\":\"Get all roles for an account\",\"params\":{\"account\":\"Account to check\"},\"returns\":{\"roleCount\":\"Number of roles the account has\"}},\"grantMultipleRoles(address,bytes32[])\":{\"details\":\"Grant multiple roles to an account\",\"params\":{\"account\":\"Account to grant roles to\",\"roles\":\"Array of role identifiers\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasAnyRole(address,bytes32[])\":{\"details\":\"Check if account has any of the specified roles\",\"params\":{\"account\":\"Account to check\",\"roles\":\"Array of role identifiers\"},\"returns\":{\"_0\":\"hasAnyRole True if account has at least one of the roles\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeMultipleRoles(address,bytes32[])\":{\"details\":\"Revoke multiple roles from an account\",\"params\":{\"account\":\"Account to revoke roles from\",\"roles\":\"Array of role identifiers\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":\"ProposalRegistryBase\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":{\"keccak256\":\"0x06e411368e92d45f5e5f260357a7b8af5f1e438cab9f564f2c354056b33d5c19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa5182e9932e450623394e7136adfa2a174761c07fb90fe806d31640061bf947\",\"dweb:/ipfs/QmfPN8xDNDKQcTmzn3FCaQ3uG3NKp8oJYBrrCQxnumjnbM\"]},\"CrossFi-Treasury-Guard/contracts/interfaces/IAIScoreRegistry.sol\":{\"keccak256\":\"0xb36aceb50a3c334f727f77bbd2f6660b3a7f48226a1cc73c6b4273f03c1c6b17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b080c589ae5af3faf1a2a218267478d86dc5408b674e696f4a9a5b617ac46ff\",\"dweb:/ipfs/QmaYY5xJZHYqg7KPdB25pTZyYnhcDrN3miPVTTUE38tvJS\"]},\"CrossFi-Treasury-Guard/contracts/interfaces/IProposalRegistry.sol\":{\"keccak256\":\"0xa7e293a5cf8d8648651f4aec782dc64870dd507aa335bcd33380f7ea0c524a1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5f3d6288cee34a9c3e6adb189ced4c4157782be50b9dae4243ad4d94b760cf6\",\"dweb:/ipfs/QmRSjFJokP5VYo6fp2PHFA8LHxNDba6tqEw2ZUPZvCE6vR\"]},\"CrossFi-Treasury-Guard/contracts/interfaces/ITreasuryEscrow.sol\":{\"keccak256\":\"0xad314e57c5476470baf2d3b0ddee9ed70504b45297febf59727e81b2e9acc17d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b41f63c3b0998a3514d3c3b3e84636bfa4ac9a4980fbaf8e70c46d37bff40c6\",\"dweb:/ipfs/Qmc6VgUwi1iqQNHfzaiHQSSW3PYyJq83mVvyRuvCXpB8qn\"]},\"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":{\"keccak256\":\"0x8b7cd81ef25f52c2cdffb0879b4c8d953d671eef13fa1ebdda28c0c2e16c52da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc0018431667094cdb37883ffc7417dfd2c552844692f1340143f4e7e4b903f3\",\"dweb:/ipfs/QmPdnh9tbMBQCaazQ2fzbQSKKxkERU75TcSDZ9KVfDhujb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol:ProposalRegistryBase",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)22_storage)"
							},
							{
								"astId": 498,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol:ProposalRegistryBase",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 397,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol:ProposalRegistryBase",
								"label": "_paused",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 835,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol:ProposalRegistryBase",
								"label": "aiScoreRegistry",
								"offset": 1,
								"slot": "2",
								"type": "t_contract(IAIScoreRegistry)1976"
							},
							{
								"astId": 838,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol:ProposalRegistryBase",
								"label": "treasuryEscrow",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(ITreasuryEscrow)2185"
							},
							{
								"astId": 840,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol:ProposalRegistryBase",
								"label": "_currentProposalId",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 877,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol:ProposalRegistryBase",
								"label": "proposals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_struct(Proposal)2040_storage)"
							},
							{
								"astId": 883,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol:ProposalRegistryBase",
								"label": "hasVoted",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 890,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol:ProposalRegistryBase",
								"label": "voterChoices",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_enum(VoteType)1991))"
							},
							{
								"astId": 894,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol:ProposalRegistryBase",
								"label": "proposerReputation",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Milestone)2000_storage)dyn_storage": {
								"base": "t_struct(Milestone)2000_storage",
								"encoding": "dynamic_array",
								"label": "struct IProposalRegistry.Milestone[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IAIScoreRegistry)1976": {
								"encoding": "inplace",
								"label": "contract IAIScoreRegistry",
								"numberOfBytes": "20"
							},
							"t_contract(ITreasuryEscrow)2185": {
								"encoding": "inplace",
								"label": "contract ITreasuryEscrow",
								"numberOfBytes": "20"
							},
							"t_enum(ProposalStatus)1987": {
								"encoding": "inplace",
								"label": "enum IProposalRegistry.ProposalStatus",
								"numberOfBytes": "1"
							},
							"t_enum(VoteType)1991": {
								"encoding": "inplace",
								"label": "enum IProposalRegistry.VoteType",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_enum(VoteType)1991)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => enum IProposalRegistry.VoteType)",
								"numberOfBytes": "32",
								"value": "t_enum(VoteType)1991"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)22_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)22_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_enum(VoteType)1991))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => enum IProposalRegistry.VoteType))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_enum(VoteType)1991)"
							},
							"t_mapping(t_uint256,t_struct(Proposal)2040_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct IProposalRegistry.Proposal)",
								"numberOfBytes": "32",
								"value": "t_struct(Proposal)2040_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Milestone)2000_storage": {
								"encoding": "inplace",
								"label": "struct IProposalRegistry.Milestone",
								"members": [
									{
										"astId": 1993,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol:ProposalRegistryBase",
										"label": "description",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 1995,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol:ProposalRegistryBase",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1997,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol:ProposalRegistryBase",
										"label": "completed",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 1999,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol:ProposalRegistryBase",
										"label": "completionTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(Proposal)2040_storage": {
								"encoding": "inplace",
								"label": "struct IProposalRegistry.Proposal",
								"members": [
									{
										"astId": 2002,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol:ProposalRegistryBase",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2004,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol:ProposalRegistryBase",
										"label": "proposer",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 2006,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol:ProposalRegistryBase",
										"label": "title",
										"offset": 0,
										"slot": "2",
										"type": "t_string_storage"
									},
									{
										"astId": 2008,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol:ProposalRegistryBase",
										"label": "summary",
										"offset": 0,
										"slot": "3",
										"type": "t_string_storage"
									},
									{
										"astId": 2010,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol:ProposalRegistryBase",
										"label": "ipfsCID",
										"offset": 0,
										"slot": "4",
										"type": "t_string_storage"
									},
									{
										"astId": 2012,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol:ProposalRegistryBase",
										"label": "requestedAmount",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 2015,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol:ProposalRegistryBase",
										"label": "status",
										"offset": 0,
										"slot": "6",
										"type": "t_enum(ProposalStatus)1987"
									},
									{
										"astId": 2017,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol:ProposalRegistryBase",
										"label": "submissionTime",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 2019,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol:ProposalRegistryBase",
										"label": "votingPeriod",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 2021,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol:ProposalRegistryBase",
										"label": "votingStart",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 2023,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol:ProposalRegistryBase",
										"label": "votingEnd",
										"offset": 0,
										"slot": "10",
										"type": "t_uint256"
									},
									{
										"astId": 2025,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol:ProposalRegistryBase",
										"label": "forVotes",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									},
									{
										"astId": 2027,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol:ProposalRegistryBase",
										"label": "againstVotes",
										"offset": 0,
										"slot": "12",
										"type": "t_uint256"
									},
									{
										"astId": 2029,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol:ProposalRegistryBase",
										"label": "abstainVotes",
										"offset": 0,
										"slot": "13",
										"type": "t_uint256"
									},
									{
										"astId": 2031,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol:ProposalRegistryBase",
										"label": "aiScore",
										"offset": 0,
										"slot": "14",
										"type": "t_uint256"
									},
									{
										"astId": 2033,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol:ProposalRegistryBase",
										"label": "aiJustification",
										"offset": 0,
										"slot": "15",
										"type": "t_string_storage"
									},
									{
										"astId": 2037,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol:ProposalRegistryBase",
										"label": "milestones",
										"offset": 0,
										"slot": "16",
										"type": "t_array(t_struct(Milestone)2000_storage)dyn_storage"
									},
									{
										"astId": 2039,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol:ProposalRegistryBase",
										"label": "totalSupplyAtStart",
										"offset": 0,
										"slot": "17",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "576"
							},
							"t_struct(RoleData)22_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 19,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol:ProposalRegistryBase",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 21,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol:ProposalRegistryBase",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol": {
				"ProposalSubmission": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "score",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "justification",
									"type": "string"
								}
							],
							"name": "AIScoreProcessed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newRegistry",
									"type": "address"
								}
							],
							"name": "AIScoreRegistryUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ProposalApproved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "proposer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "ProposalCancelled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum IProposalRegistry.ProposalStatus",
									"name": "status",
									"type": "uint8"
								}
							],
							"name": "ProposalExecuted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"name": "ProposalRejected",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "proposer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "title",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "requestedAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "ipfsCID",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "ProposalSubmitted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newEscrow",
									"type": "address"
								}
							],
							"name": "TreasuryEscrowUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "voter",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "enum IProposalRegistry.VoteType",
									"name": "voteType",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								}
							],
							"name": "VoteCast",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "votingStart",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "votingEnd",
									"type": "uint256"
								}
							],
							"name": "VotingStarted",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "AI_ORACLE_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "AI_SCORE_THRESHOLD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "APPROVAL_THRESHOLD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DISPUTE_RESOLVER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_MILESTONES",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_REQUESTED_AMOUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_VOTING_PERIOD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MILESTONE_APPROVER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MIN_PROPOSAL_THRESHOLD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MIN_VOTING_PERIOD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "QUORUM_PERCENTAGE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TREASURY_MANAGER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "aiScoreRegistry",
							"outputs": [
								{
									"internalType": "contract IAIScoreRegistry",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllRoles",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentProposalId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getRoleCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "roleCount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getVotingPower",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								}
							],
							"name": "grantMultipleRoles",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								}
							],
							"name": "hasAnyRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "hasVoted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "proposals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "proposer",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "title",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "summary",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "ipfsCID",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "requestedAmount",
									"type": "uint256"
								},
								{
									"internalType": "enum IProposalRegistry.ProposalStatus",
									"name": "status",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "submissionTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "votingPeriod",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "votingStart",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "votingEnd",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "forVotes",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "againstVotes",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "abstainVotes",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "aiScore",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "aiJustification",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "totalSupplyAtStart",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "proposerReputation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								}
							],
							"name": "revokeMultipleRoles",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "title",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "summary",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "ipfsCID",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "requestedAmount",
											"type": "uint256"
										},
										{
											"internalType": "string[]",
											"name": "milestoneDescriptions",
											"type": "string[]"
										},
										{
											"internalType": "uint256[]",
											"name": "milestoneAmounts",
											"type": "uint256[]"
										},
										{
											"internalType": "uint256",
											"name": "votingPeriod",
											"type": "uint256"
										}
									],
									"internalType": "struct IProposalRegistry.ProposalInput",
									"name": "input",
									"type": "tuple"
								}
							],
							"name": "submitProposal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasuryEscrow",
							"outputs": [
								{
									"internalType": "contract ITreasuryEscrow",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newRegistry",
									"type": "address"
								}
							],
							"name": "updateAIScoreRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newEscrow",
									"type": "address"
								}
							],
							"name": "updateTreasuryEscrow",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "voterChoices",
							"outputs": [
								{
									"internalType": "enum IProposalRegistry.VoteType",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"getAllRoles()": {
								"details": "Get all available roles",
								"returns": {
									"roles": "Array of all role identifiers"
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleCount(address)": {
								"details": "Get all roles for an account",
								"params": {
									"account": "Account to check"
								},
								"returns": {
									"roleCount": "Number of roles the account has"
								}
							},
							"grantMultipleRoles(address,bytes32[])": {
								"details": "Grant multiple roles to an account",
								"params": {
									"account": "Account to grant roles to",
									"roles": "Array of role identifiers"
								}
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasAnyRole(address,bytes32[])": {
								"details": "Check if account has any of the specified roles",
								"params": {
									"account": "Account to check",
									"roles": "Array of role identifiers"
								},
								"returns": {
									"_0": "hasAnyRole True if account has at least one of the roles"
								}
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeMultipleRoles(address,bytes32[])": {
								"details": "Revoke multiple roles from an account",
								"params": {
									"account": "Account to revoke roles from",
									"roles": "Array of role identifiers"
								}
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"ADMIN_ROLE()": "75b238fc",
							"AI_ORACLE_ROLE()": "c601f7af",
							"AI_SCORE_THRESHOLD()": "39c854fa",
							"APPROVAL_THRESHOLD()": "3ab34290",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"DISPUTE_RESOLVER_ROLE()": "bfe42a37",
							"MAX_MILESTONES()": "4c05abeb",
							"MAX_REQUESTED_AMOUNT()": "2d75ae0e",
							"MAX_VOTING_PERIOD()": "a64e024a",
							"MILESTONE_APPROVER_ROLE()": "a02d72fb",
							"MIN_PROPOSAL_THRESHOLD()": "791f5d23",
							"MIN_VOTING_PERIOD()": "215809ca",
							"QUORUM_PERCENTAGE()": "ee8a7c15",
							"TREASURY_MANAGER_ROLE()": "ebdf690f",
							"aiScoreRegistry()": "96479e19",
							"getAllRoles()": "f2bcac3d",
							"getCurrentProposalId()": "fe10226d",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleCount(address)": "aca5a8a7",
							"getVotingPower(address)": "bb4d4436",
							"grantMultipleRoles(address,bytes32[])": "91b9f9d8",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasAnyRole(address,bytes32[])": "68ca78f9",
							"hasRole(bytes32,address)": "91d14854",
							"hasVoted(uint256,address)": "43859632",
							"paused()": "5c975abb",
							"proposals(uint256)": "013cf08b",
							"proposerReputation(address)": "2d142b76",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeMultipleRoles(address,bytes32[])": "4fe9d1f5",
							"revokeRole(bytes32,address)": "d547741f",
							"submitProposal((string,string,string,uint256,string[],uint256[],uint256))": "08d256af",
							"supportsInterface(bytes4)": "01ffc9a7",
							"treasuryEscrow()": "1d9dfd4e",
							"updateAIScoreRegistry(address)": "6807fc21",
							"updateTreasuryEscrow(address)": "abd98fb0",
							"voterChoices(uint256,address)": "db994b4f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"justification\",\"type\":\"string\"}],\"name\":\"AIScoreProcessed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newRegistry\",\"type\":\"address\"}],\"name\":\"AIScoreRegistryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProposalApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ProposalCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum IProposalRegistry.ProposalStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"ProposalRejected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"ipfsCID\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ProposalSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newEscrow\",\"type\":\"address\"}],\"name\":\"TreasuryEscrowUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IProposalRegistry.VoteType\",\"name\":\"voteType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votingStart\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votingEnd\",\"type\":\"uint256\"}],\"name\":\"VotingStarted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"AI_ORACLE_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"AI_SCORE_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"APPROVAL_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DISPUTE_RESOLVER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_MILESTONES\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_REQUESTED_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_VOTING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MILESTONE_APPROVER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_PROPOSAL_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_VOTING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"QUORUM_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TREASURY_MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aiScoreRegistry\",\"outputs\":[{\"internalType\":\"contract IAIScoreRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllRoles\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentProposalId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getRoleCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"roleCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotingPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"}],\"name\":\"grantMultipleRoles\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"}],\"name\":\"hasAnyRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"summary\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ipfsCID\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum IProposalRegistry.ProposalStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"submissionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"abstainVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"aiScore\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"aiJustification\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupplyAtStart\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"proposerReputation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"}],\"name\":\"revokeMultipleRoles\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"summary\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ipfsCID\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"milestoneDescriptions\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"milestoneAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"votingPeriod\",\"type\":\"uint256\"}],\"internalType\":\"struct IProposalRegistry.ProposalInput\",\"name\":\"input\",\"type\":\"tuple\"}],\"name\":\"submitProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryEscrow\",\"outputs\":[{\"internalType\":\"contract ITreasuryEscrow\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRegistry\",\"type\":\"address\"}],\"name\":\"updateAIScoreRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newEscrow\",\"type\":\"address\"}],\"name\":\"updateTreasuryEscrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"voterChoices\",\"outputs\":[{\"internalType\":\"enum IProposalRegistry.VoteType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"getAllRoles()\":{\"details\":\"Get all available roles\",\"returns\":{\"roles\":\"Array of all role identifiers\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleCount(address)\":{\"details\":\"Get all roles for an account\",\"params\":{\"account\":\"Account to check\"},\"returns\":{\"roleCount\":\"Number of roles the account has\"}},\"grantMultipleRoles(address,bytes32[])\":{\"details\":\"Grant multiple roles to an account\",\"params\":{\"account\":\"Account to grant roles to\",\"roles\":\"Array of role identifiers\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasAnyRole(address,bytes32[])\":{\"details\":\"Check if account has any of the specified roles\",\"params\":{\"account\":\"Account to check\",\"roles\":\"Array of role identifiers\"},\"returns\":{\"_0\":\"hasAnyRole True if account has at least one of the roles\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeMultipleRoles(address,bytes32[])\":{\"details\":\"Revoke multiple roles from an account\",\"params\":{\"account\":\"Account to revoke roles from\",\"roles\":\"Array of role identifiers\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol\":\"ProposalSubmission\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":{\"keccak256\":\"0x06e411368e92d45f5e5f260357a7b8af5f1e438cab9f564f2c354056b33d5c19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa5182e9932e450623394e7136adfa2a174761c07fb90fe806d31640061bf947\",\"dweb:/ipfs/QmfPN8xDNDKQcTmzn3FCaQ3uG3NKp8oJYBrrCQxnumjnbM\"]},\"CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol\":{\"keccak256\":\"0x034aaeef4f0406edf31fcd19f82bdab02be08d08bca2cba234324f0afc1679e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6ebb2b2171c93715a4994d3e11cba13c64469b509a7230169c90bd3b8b6ae13\",\"dweb:/ipfs/QmdDDD4r9scrb9fxo4w4QcnXqHMHPmrxQ748rN57wQTUgE\"]},\"CrossFi-Treasury-Guard/contracts/interfaces/IAIScoreRegistry.sol\":{\"keccak256\":\"0xb36aceb50a3c334f727f77bbd2f6660b3a7f48226a1cc73c6b4273f03c1c6b17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b080c589ae5af3faf1a2a218267478d86dc5408b674e696f4a9a5b617ac46ff\",\"dweb:/ipfs/QmaYY5xJZHYqg7KPdB25pTZyYnhcDrN3miPVTTUE38tvJS\"]},\"CrossFi-Treasury-Guard/contracts/interfaces/IProposalRegistry.sol\":{\"keccak256\":\"0xa7e293a5cf8d8648651f4aec782dc64870dd507aa335bcd33380f7ea0c524a1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5f3d6288cee34a9c3e6adb189ced4c4157782be50b9dae4243ad4d94b760cf6\",\"dweb:/ipfs/QmRSjFJokP5VYo6fp2PHFA8LHxNDba6tqEw2ZUPZvCE6vR\"]},\"CrossFi-Treasury-Guard/contracts/interfaces/ITreasuryEscrow.sol\":{\"keccak256\":\"0xad314e57c5476470baf2d3b0ddee9ed70504b45297febf59727e81b2e9acc17d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b41f63c3b0998a3514d3c3b3e84636bfa4ac9a4980fbaf8e70c46d37bff40c6\",\"dweb:/ipfs/Qmc6VgUwi1iqQNHfzaiHQSSW3PYyJq83mVvyRuvCXpB8qn\"]},\"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":{\"keccak256\":\"0x8b7cd81ef25f52c2cdffb0879b4c8d953d671eef13fa1ebdda28c0c2e16c52da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc0018431667094cdb37883ffc7417dfd2c552844692f1340143f4e7e4b903f3\",\"dweb:/ipfs/QmPdnh9tbMBQCaazQ2fzbQSKKxkERU75TcSDZ9KVfDhujb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol:ProposalSubmission",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)22_storage)"
							},
							{
								"astId": 498,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol:ProposalSubmission",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 397,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol:ProposalSubmission",
								"label": "_paused",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 835,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol:ProposalSubmission",
								"label": "aiScoreRegistry",
								"offset": 1,
								"slot": "2",
								"type": "t_contract(IAIScoreRegistry)1976"
							},
							{
								"astId": 838,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol:ProposalSubmission",
								"label": "treasuryEscrow",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(ITreasuryEscrow)2185"
							},
							{
								"astId": 840,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol:ProposalSubmission",
								"label": "_currentProposalId",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 877,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol:ProposalSubmission",
								"label": "proposals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_struct(Proposal)2040_storage)"
							},
							{
								"astId": 883,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol:ProposalSubmission",
								"label": "hasVoted",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 890,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol:ProposalSubmission",
								"label": "voterChoices",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_enum(VoteType)1991))"
							},
							{
								"astId": 894,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol:ProposalSubmission",
								"label": "proposerReputation",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Milestone)2000_storage)dyn_storage": {
								"base": "t_struct(Milestone)2000_storage",
								"encoding": "dynamic_array",
								"label": "struct IProposalRegistry.Milestone[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IAIScoreRegistry)1976": {
								"encoding": "inplace",
								"label": "contract IAIScoreRegistry",
								"numberOfBytes": "20"
							},
							"t_contract(ITreasuryEscrow)2185": {
								"encoding": "inplace",
								"label": "contract ITreasuryEscrow",
								"numberOfBytes": "20"
							},
							"t_enum(ProposalStatus)1987": {
								"encoding": "inplace",
								"label": "enum IProposalRegistry.ProposalStatus",
								"numberOfBytes": "1"
							},
							"t_enum(VoteType)1991": {
								"encoding": "inplace",
								"label": "enum IProposalRegistry.VoteType",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_enum(VoteType)1991)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => enum IProposalRegistry.VoteType)",
								"numberOfBytes": "32",
								"value": "t_enum(VoteType)1991"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)22_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)22_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_enum(VoteType)1991))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => enum IProposalRegistry.VoteType))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_enum(VoteType)1991)"
							},
							"t_mapping(t_uint256,t_struct(Proposal)2040_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct IProposalRegistry.Proposal)",
								"numberOfBytes": "32",
								"value": "t_struct(Proposal)2040_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Milestone)2000_storage": {
								"encoding": "inplace",
								"label": "struct IProposalRegistry.Milestone",
								"members": [
									{
										"astId": 1993,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol:ProposalSubmission",
										"label": "description",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 1995,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol:ProposalSubmission",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1997,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol:ProposalSubmission",
										"label": "completed",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 1999,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol:ProposalSubmission",
										"label": "completionTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(Proposal)2040_storage": {
								"encoding": "inplace",
								"label": "struct IProposalRegistry.Proposal",
								"members": [
									{
										"astId": 2002,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol:ProposalSubmission",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2004,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol:ProposalSubmission",
										"label": "proposer",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 2006,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol:ProposalSubmission",
										"label": "title",
										"offset": 0,
										"slot": "2",
										"type": "t_string_storage"
									},
									{
										"astId": 2008,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol:ProposalSubmission",
										"label": "summary",
										"offset": 0,
										"slot": "3",
										"type": "t_string_storage"
									},
									{
										"astId": 2010,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol:ProposalSubmission",
										"label": "ipfsCID",
										"offset": 0,
										"slot": "4",
										"type": "t_string_storage"
									},
									{
										"astId": 2012,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol:ProposalSubmission",
										"label": "requestedAmount",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 2015,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol:ProposalSubmission",
										"label": "status",
										"offset": 0,
										"slot": "6",
										"type": "t_enum(ProposalStatus)1987"
									},
									{
										"astId": 2017,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol:ProposalSubmission",
										"label": "submissionTime",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 2019,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol:ProposalSubmission",
										"label": "votingPeriod",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 2021,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol:ProposalSubmission",
										"label": "votingStart",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 2023,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol:ProposalSubmission",
										"label": "votingEnd",
										"offset": 0,
										"slot": "10",
										"type": "t_uint256"
									},
									{
										"astId": 2025,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol:ProposalSubmission",
										"label": "forVotes",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									},
									{
										"astId": 2027,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol:ProposalSubmission",
										"label": "againstVotes",
										"offset": 0,
										"slot": "12",
										"type": "t_uint256"
									},
									{
										"astId": 2029,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol:ProposalSubmission",
										"label": "abstainVotes",
										"offset": 0,
										"slot": "13",
										"type": "t_uint256"
									},
									{
										"astId": 2031,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol:ProposalSubmission",
										"label": "aiScore",
										"offset": 0,
										"slot": "14",
										"type": "t_uint256"
									},
									{
										"astId": 2033,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol:ProposalSubmission",
										"label": "aiJustification",
										"offset": 0,
										"slot": "15",
										"type": "t_string_storage"
									},
									{
										"astId": 2037,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol:ProposalSubmission",
										"label": "milestones",
										"offset": 0,
										"slot": "16",
										"type": "t_array(t_struct(Milestone)2000_storage)dyn_storage"
									},
									{
										"astId": 2039,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol:ProposalSubmission",
										"label": "totalSupplyAtStart",
										"offset": 0,
										"slot": "17",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "576"
							},
							"t_struct(RoleData)22_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 19,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol:ProposalSubmission",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 21,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol:ProposalSubmission",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol": {
				"ProposalVoting": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "score",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "justification",
									"type": "string"
								}
							],
							"name": "AIScoreProcessed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newRegistry",
									"type": "address"
								}
							],
							"name": "AIScoreRegistryUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ProposalApproved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "proposer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "ProposalCancelled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "enum IProposalRegistry.ProposalStatus",
									"name": "status",
									"type": "uint8"
								}
							],
							"name": "ProposalExecuted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "reason",
									"type": "string"
								}
							],
							"name": "ProposalRejected",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "proposer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "title",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "requestedAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "ipfsCID",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "ProposalSubmitted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "newEscrow",
									"type": "address"
								}
							],
							"name": "TreasuryEscrowUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "voter",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "enum IProposalRegistry.VoteType",
									"name": "voteType",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "weight",
									"type": "uint256"
								}
							],
							"name": "VoteCast",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "votingStart",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "votingEnd",
									"type": "uint256"
								}
							],
							"name": "VotingStarted",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "AI_ORACLE_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "AI_SCORE_THRESHOLD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "APPROVAL_THRESHOLD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DISPUTE_RESOLVER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_MILESTONES",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_REQUESTED_AMOUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_VOTING_PERIOD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MILESTONE_APPROVER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MIN_PROPOSAL_THRESHOLD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MIN_VOTING_PERIOD",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "QUORUM_PERCENTAGE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TREASURY_MANAGER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "aiScoreRegistry",
							"outputs": [
								{
									"internalType": "contract IAIScoreRegistry",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"internalType": "enum IProposalRegistry.VoteType",
									"name": "voteType",
									"type": "uint8"
								}
							],
							"name": "castVote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "executeProposal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllRoles",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentProposalId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getRoleCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "roleCount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getVotingPower",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								}
							],
							"name": "grantMultipleRoles",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								}
							],
							"name": "hasAnyRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "hasVoted",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "proposals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "proposer",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "title",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "summary",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "ipfsCID",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "requestedAmount",
									"type": "uint256"
								},
								{
									"internalType": "enum IProposalRegistry.ProposalStatus",
									"name": "status",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "submissionTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "votingPeriod",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "votingStart",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "votingEnd",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "forVotes",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "againstVotes",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "abstainVotes",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "aiScore",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "aiJustification",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "totalSupplyAtStart",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "proposerReputation",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								}
							],
							"name": "revokeMultipleRoles",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "title",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "summary",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "ipfsCID",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "requestedAmount",
											"type": "uint256"
										},
										{
											"internalType": "string[]",
											"name": "milestoneDescriptions",
											"type": "string[]"
										},
										{
											"internalType": "uint256[]",
											"name": "milestoneAmounts",
											"type": "uint256[]"
										},
										{
											"internalType": "uint256",
											"name": "votingPeriod",
											"type": "uint256"
										}
									],
									"internalType": "struct IProposalRegistry.ProposalInput",
									"name": "input",
									"type": "tuple"
								}
							],
							"name": "submitProposal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasuryEscrow",
							"outputs": [
								{
									"internalType": "contract ITreasuryEscrow",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newRegistry",
									"type": "address"
								}
							],
							"name": "updateAIScoreRegistry",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newEscrow",
									"type": "address"
								}
							],
							"name": "updateTreasuryEscrow",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "voterChoices",
							"outputs": [
								{
									"internalType": "enum IProposalRegistry.VoteType",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"getAllRoles()": {
								"details": "Get all available roles",
								"returns": {
									"roles": "Array of all role identifiers"
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleCount(address)": {
								"details": "Get all roles for an account",
								"params": {
									"account": "Account to check"
								},
								"returns": {
									"roleCount": "Number of roles the account has"
								}
							},
							"grantMultipleRoles(address,bytes32[])": {
								"details": "Grant multiple roles to an account",
								"params": {
									"account": "Account to grant roles to",
									"roles": "Array of role identifiers"
								}
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasAnyRole(address,bytes32[])": {
								"details": "Check if account has any of the specified roles",
								"params": {
									"account": "Account to check",
									"roles": "Array of role identifiers"
								},
								"returns": {
									"_0": "hasAnyRole True if account has at least one of the roles"
								}
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeMultipleRoles(address,bytes32[])": {
								"details": "Revoke multiple roles from an account",
								"params": {
									"account": "Account to revoke roles from",
									"roles": "Array of role identifiers"
								}
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"ADMIN_ROLE()": "75b238fc",
							"AI_ORACLE_ROLE()": "c601f7af",
							"AI_SCORE_THRESHOLD()": "39c854fa",
							"APPROVAL_THRESHOLD()": "3ab34290",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"DISPUTE_RESOLVER_ROLE()": "bfe42a37",
							"MAX_MILESTONES()": "4c05abeb",
							"MAX_REQUESTED_AMOUNT()": "2d75ae0e",
							"MAX_VOTING_PERIOD()": "a64e024a",
							"MILESTONE_APPROVER_ROLE()": "a02d72fb",
							"MIN_PROPOSAL_THRESHOLD()": "791f5d23",
							"MIN_VOTING_PERIOD()": "215809ca",
							"QUORUM_PERCENTAGE()": "ee8a7c15",
							"TREASURY_MANAGER_ROLE()": "ebdf690f",
							"aiScoreRegistry()": "96479e19",
							"castVote(uint256,uint8)": "56781388",
							"executeProposal(uint256)": "0d61b519",
							"getAllRoles()": "f2bcac3d",
							"getCurrentProposalId()": "fe10226d",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleCount(address)": "aca5a8a7",
							"getVotingPower(address)": "bb4d4436",
							"grantMultipleRoles(address,bytes32[])": "91b9f9d8",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasAnyRole(address,bytes32[])": "68ca78f9",
							"hasRole(bytes32,address)": "91d14854",
							"hasVoted(uint256,address)": "43859632",
							"paused()": "5c975abb",
							"proposals(uint256)": "013cf08b",
							"proposerReputation(address)": "2d142b76",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeMultipleRoles(address,bytes32[])": "4fe9d1f5",
							"revokeRole(bytes32,address)": "d547741f",
							"submitProposal((string,string,string,uint256,string[],uint256[],uint256))": "08d256af",
							"supportsInterface(bytes4)": "01ffc9a7",
							"treasuryEscrow()": "1d9dfd4e",
							"updateAIScoreRegistry(address)": "6807fc21",
							"updateTreasuryEscrow(address)": "abd98fb0",
							"voterChoices(uint256,address)": "db994b4f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"justification\",\"type\":\"string\"}],\"name\":\"AIScoreProcessed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newRegistry\",\"type\":\"address\"}],\"name\":\"AIScoreRegistryUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ProposalApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ProposalCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum IProposalRegistry.ProposalStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"ProposalRejected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"ipfsCID\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"ProposalSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newEscrow\",\"type\":\"address\"}],\"name\":\"TreasuryEscrowUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum IProposalRegistry.VoteType\",\"name\":\"voteType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"weight\",\"type\":\"uint256\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votingStart\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votingEnd\",\"type\":\"uint256\"}],\"name\":\"VotingStarted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"AI_ORACLE_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"AI_SCORE_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"APPROVAL_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DISPUTE_RESOLVER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_MILESTONES\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_REQUESTED_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_VOTING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MILESTONE_APPROVER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_PROPOSAL_THRESHOLD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_VOTING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"QUORUM_PERCENTAGE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TREASURY_MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"aiScoreRegistry\",\"outputs\":[{\"internalType\":\"contract IAIScoreRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"enum IProposalRegistry.VoteType\",\"name\":\"voteType\",\"type\":\"uint8\"}],\"name\":\"castVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"executeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllRoles\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentProposalId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getRoleCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"roleCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotingPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"}],\"name\":\"grantMultipleRoles\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"}],\"name\":\"hasAnyRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasVoted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"summary\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ipfsCID\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum IProposalRegistry.ProposalStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"submissionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"abstainVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"aiScore\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"aiJustification\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupplyAtStart\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"proposerReputation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"}],\"name\":\"revokeMultipleRoles\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"summary\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ipfsCID\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"milestoneDescriptions\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"milestoneAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"votingPeriod\",\"type\":\"uint256\"}],\"internalType\":\"struct IProposalRegistry.ProposalInput\",\"name\":\"input\",\"type\":\"tuple\"}],\"name\":\"submitProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryEscrow\",\"outputs\":[{\"internalType\":\"contract ITreasuryEscrow\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRegistry\",\"type\":\"address\"}],\"name\":\"updateAIScoreRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newEscrow\",\"type\":\"address\"}],\"name\":\"updateTreasuryEscrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"voterChoices\",\"outputs\":[{\"internalType\":\"enum IProposalRegistry.VoteType\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"getAllRoles()\":{\"details\":\"Get all available roles\",\"returns\":{\"roles\":\"Array of all role identifiers\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleCount(address)\":{\"details\":\"Get all roles for an account\",\"params\":{\"account\":\"Account to check\"},\"returns\":{\"roleCount\":\"Number of roles the account has\"}},\"grantMultipleRoles(address,bytes32[])\":{\"details\":\"Grant multiple roles to an account\",\"params\":{\"account\":\"Account to grant roles to\",\"roles\":\"Array of role identifiers\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasAnyRole(address,bytes32[])\":{\"details\":\"Check if account has any of the specified roles\",\"params\":{\"account\":\"Account to check\",\"roles\":\"Array of role identifiers\"},\"returns\":{\"_0\":\"hasAnyRole True if account has at least one of the roles\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeMultipleRoles(address,bytes32[])\":{\"details\":\"Revoke multiple roles from an account\",\"params\":{\"account\":\"Account to revoke roles from\",\"roles\":\"Array of role identifiers\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":\"ProposalVoting\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol\":{\"keccak256\":\"0x06e411368e92d45f5e5f260357a7b8af5f1e438cab9f564f2c354056b33d5c19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fa5182e9932e450623394e7136adfa2a174761c07fb90fe806d31640061bf947\",\"dweb:/ipfs/QmfPN8xDNDKQcTmzn3FCaQ3uG3NKp8oJYBrrCQxnumjnbM\"]},\"CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol\":{\"keccak256\":\"0x034aaeef4f0406edf31fcd19f82bdab02be08d08bca2cba234324f0afc1679e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b6ebb2b2171c93715a4994d3e11cba13c64469b509a7230169c90bd3b8b6ae13\",\"dweb:/ipfs/QmdDDD4r9scrb9fxo4w4QcnXqHMHPmrxQ748rN57wQTUgE\"]},\"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol\":{\"keccak256\":\"0x396a8aacdab825e592444ab3767eac2746ac1915dc4d1757eb8999925bea9163\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f0f1aed8da835d92d7ab088df9b742ee6e630d1c5c82c44f55ecb494096871c\",\"dweb:/ipfs/QmNZhuFzGJnK9itc2DzbcvgQMZZacxiadTCQD6ENtz3m9w\"]},\"CrossFi-Treasury-Guard/contracts/interfaces/IAIScoreRegistry.sol\":{\"keccak256\":\"0xb36aceb50a3c334f727f77bbd2f6660b3a7f48226a1cc73c6b4273f03c1c6b17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b080c589ae5af3faf1a2a218267478d86dc5408b674e696f4a9a5b617ac46ff\",\"dweb:/ipfs/QmaYY5xJZHYqg7KPdB25pTZyYnhcDrN3miPVTTUE38tvJS\"]},\"CrossFi-Treasury-Guard/contracts/interfaces/IProposalRegistry.sol\":{\"keccak256\":\"0xa7e293a5cf8d8648651f4aec782dc64870dd507aa335bcd33380f7ea0c524a1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5f3d6288cee34a9c3e6adb189ced4c4157782be50b9dae4243ad4d94b760cf6\",\"dweb:/ipfs/QmRSjFJokP5VYo6fp2PHFA8LHxNDba6tqEw2ZUPZvCE6vR\"]},\"CrossFi-Treasury-Guard/contracts/interfaces/ITreasuryEscrow.sol\":{\"keccak256\":\"0xad314e57c5476470baf2d3b0ddee9ed70504b45297febf59727e81b2e9acc17d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b41f63c3b0998a3514d3c3b3e84636bfa4ac9a4980fbaf8e70c46d37bff40c6\",\"dweb:/ipfs/Qmc6VgUwi1iqQNHfzaiHQSSW3PYyJq83mVvyRuvCXpB8qn\"]},\"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":{\"keccak256\":\"0x8b7cd81ef25f52c2cdffb0879b4c8d953d671eef13fa1ebdda28c0c2e16c52da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc0018431667094cdb37883ffc7417dfd2c552844692f1340143f4e7e4b903f3\",\"dweb:/ipfs/QmPdnh9tbMBQCaazQ2fzbQSKKxkERU75TcSDZ9KVfDhujb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalVoting.sol:ProposalVoting",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)22_storage)"
							},
							{
								"astId": 498,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalVoting.sol:ProposalVoting",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 397,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalVoting.sol:ProposalVoting",
								"label": "_paused",
								"offset": 0,
								"slot": "2",
								"type": "t_bool"
							},
							{
								"astId": 835,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalVoting.sol:ProposalVoting",
								"label": "aiScoreRegistry",
								"offset": 1,
								"slot": "2",
								"type": "t_contract(IAIScoreRegistry)1976"
							},
							{
								"astId": 838,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalVoting.sol:ProposalVoting",
								"label": "treasuryEscrow",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(ITreasuryEscrow)2185"
							},
							{
								"astId": 840,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalVoting.sol:ProposalVoting",
								"label": "_currentProposalId",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 877,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalVoting.sol:ProposalVoting",
								"label": "proposals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_struct(Proposal)2040_storage)"
							},
							{
								"astId": 883,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalVoting.sol:ProposalVoting",
								"label": "hasVoted",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 890,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalVoting.sol:ProposalVoting",
								"label": "voterChoices",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_enum(VoteType)1991))"
							},
							{
								"astId": 894,
								"contract": "CrossFi-Treasury-Guard/contracts/ProposalVoting.sol:ProposalVoting",
								"label": "proposerReputation",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Milestone)2000_storage)dyn_storage": {
								"base": "t_struct(Milestone)2000_storage",
								"encoding": "dynamic_array",
								"label": "struct IProposalRegistry.Milestone[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IAIScoreRegistry)1976": {
								"encoding": "inplace",
								"label": "contract IAIScoreRegistry",
								"numberOfBytes": "20"
							},
							"t_contract(ITreasuryEscrow)2185": {
								"encoding": "inplace",
								"label": "contract ITreasuryEscrow",
								"numberOfBytes": "20"
							},
							"t_enum(ProposalStatus)1987": {
								"encoding": "inplace",
								"label": "enum IProposalRegistry.ProposalStatus",
								"numberOfBytes": "1"
							},
							"t_enum(VoteType)1991": {
								"encoding": "inplace",
								"label": "enum IProposalRegistry.VoteType",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_enum(VoteType)1991)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => enum IProposalRegistry.VoteType)",
								"numberOfBytes": "32",
								"value": "t_enum(VoteType)1991"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)22_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)22_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_enum(VoteType)1991))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => enum IProposalRegistry.VoteType))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_enum(VoteType)1991)"
							},
							"t_mapping(t_uint256,t_struct(Proposal)2040_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct IProposalRegistry.Proposal)",
								"numberOfBytes": "32",
								"value": "t_struct(Proposal)2040_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Milestone)2000_storage": {
								"encoding": "inplace",
								"label": "struct IProposalRegistry.Milestone",
								"members": [
									{
										"astId": 1993,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalVoting.sol:ProposalVoting",
										"label": "description",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 1995,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalVoting.sol:ProposalVoting",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1997,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalVoting.sol:ProposalVoting",
										"label": "completed",
										"offset": 0,
										"slot": "2",
										"type": "t_bool"
									},
									{
										"astId": 1999,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalVoting.sol:ProposalVoting",
										"label": "completionTime",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(Proposal)2040_storage": {
								"encoding": "inplace",
								"label": "struct IProposalRegistry.Proposal",
								"members": [
									{
										"astId": 2002,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalVoting.sol:ProposalVoting",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2004,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalVoting.sol:ProposalVoting",
										"label": "proposer",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 2006,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalVoting.sol:ProposalVoting",
										"label": "title",
										"offset": 0,
										"slot": "2",
										"type": "t_string_storage"
									},
									{
										"astId": 2008,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalVoting.sol:ProposalVoting",
										"label": "summary",
										"offset": 0,
										"slot": "3",
										"type": "t_string_storage"
									},
									{
										"astId": 2010,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalVoting.sol:ProposalVoting",
										"label": "ipfsCID",
										"offset": 0,
										"slot": "4",
										"type": "t_string_storage"
									},
									{
										"astId": 2012,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalVoting.sol:ProposalVoting",
										"label": "requestedAmount",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 2015,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalVoting.sol:ProposalVoting",
										"label": "status",
										"offset": 0,
										"slot": "6",
										"type": "t_enum(ProposalStatus)1987"
									},
									{
										"astId": 2017,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalVoting.sol:ProposalVoting",
										"label": "submissionTime",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 2019,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalVoting.sol:ProposalVoting",
										"label": "votingPeriod",
										"offset": 0,
										"slot": "8",
										"type": "t_uint256"
									},
									{
										"astId": 2021,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalVoting.sol:ProposalVoting",
										"label": "votingStart",
										"offset": 0,
										"slot": "9",
										"type": "t_uint256"
									},
									{
										"astId": 2023,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalVoting.sol:ProposalVoting",
										"label": "votingEnd",
										"offset": 0,
										"slot": "10",
										"type": "t_uint256"
									},
									{
										"astId": 2025,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalVoting.sol:ProposalVoting",
										"label": "forVotes",
										"offset": 0,
										"slot": "11",
										"type": "t_uint256"
									},
									{
										"astId": 2027,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalVoting.sol:ProposalVoting",
										"label": "againstVotes",
										"offset": 0,
										"slot": "12",
										"type": "t_uint256"
									},
									{
										"astId": 2029,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalVoting.sol:ProposalVoting",
										"label": "abstainVotes",
										"offset": 0,
										"slot": "13",
										"type": "t_uint256"
									},
									{
										"astId": 2031,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalVoting.sol:ProposalVoting",
										"label": "aiScore",
										"offset": 0,
										"slot": "14",
										"type": "t_uint256"
									},
									{
										"astId": 2033,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalVoting.sol:ProposalVoting",
										"label": "aiJustification",
										"offset": 0,
										"slot": "15",
										"type": "t_string_storage"
									},
									{
										"astId": 2037,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalVoting.sol:ProposalVoting",
										"label": "milestones",
										"offset": 0,
										"slot": "16",
										"type": "t_array(t_struct(Milestone)2000_storage)dyn_storage"
									},
									{
										"astId": 2039,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalVoting.sol:ProposalVoting",
										"label": "totalSupplyAtStart",
										"offset": 0,
										"slot": "17",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "576"
							},
							"t_struct(RoleData)22_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 19,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalVoting.sol:ProposalVoting",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 21,
										"contract": "CrossFi-Treasury-Guard/contracts/ProposalVoting.sol:ProposalVoting",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"CrossFi-Treasury-Guard/contracts/interfaces/IAIScoreRegistry.sol": {
				"IAIScoreRegistry": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "overallScore",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "justificationIPFS",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "modelVersion",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "oracle",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "AIScoreSubmitted",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "getAIScore",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "score",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "justification",
									"type": "string"
								},
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "hasAIScore",
							"outputs": [
								{
									"internalType": "bool",
									"name": "exists",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "overallScore",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "justificationIPFS",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "modelVersion",
									"type": "string"
								},
								{
									"components": [
										{
											"internalType": "uint8",
											"name": "ecosystemScore",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "feasibilityScore",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "riskScore",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "teamScore",
											"type": "uint8"
										},
										{
											"internalType": "uint8",
											"name": "innovationScore",
											"type": "uint8"
										}
									],
									"internalType": "struct IAIScoreRegistry.ScoringBreakdown",
									"name": "breakdown",
									"type": "tuple"
								}
							],
							"name": "submitAIScore",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for AIScoreRegistry contract",
						"kind": "dev",
						"methods": {},
						"title": "IAIScoreRegistry",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getAIScore(uint256)": "0311b82d",
							"hasAIScore(uint256)": "96caac0a",
							"submitAIScore(uint256,uint256,string,string,(uint8,uint8,uint8,uint8,uint8))": "7092b0bc"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"overallScore\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"justificationIPFS\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"modelVersion\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"AIScoreSubmitted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getAIScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"justification\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"hasAIScore\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"overallScore\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"justificationIPFS\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"modelVersion\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"uint8\",\"name\":\"ecosystemScore\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feasibilityScore\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"riskScore\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"teamScore\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"innovationScore\",\"type\":\"uint8\"}],\"internalType\":\"struct IAIScoreRegistry.ScoringBreakdown\",\"name\":\"breakdown\",\"type\":\"tuple\"}],\"name\":\"submitAIScore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for AIScoreRegistry contract\",\"kind\":\"dev\",\"methods\":{},\"title\":\"IAIScoreRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CrossFi-Treasury-Guard/contracts/interfaces/IAIScoreRegistry.sol\":\"IAIScoreRegistry\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"CrossFi-Treasury-Guard/contracts/interfaces/IAIScoreRegistry.sol\":{\"keccak256\":\"0xb36aceb50a3c334f727f77bbd2f6660b3a7f48226a1cc73c6b4273f03c1c6b17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b080c589ae5af3faf1a2a218267478d86dc5408b674e696f4a9a5b617ac46ff\",\"dweb:/ipfs/QmaYY5xJZHYqg7KPdB25pTZyYnhcDrN3miPVTTUE38tvJS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"CrossFi-Treasury-Guard/contracts/interfaces/IProposalRegistry.sol": {
				"IProposalRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"internalType": "enum IProposalRegistry.VoteType",
									"name": "voteType",
									"type": "uint8"
								}
							],
							"name": "castVote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "executeProposal",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentProposalId",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "getProposal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "proposer",
									"type": "address"
								},
								{
									"internalType": "string",
									"name": "title",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "summary",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "requestedAmount",
									"type": "uint256"
								},
								{
									"internalType": "enum IProposalRegistry.ProposalStatus",
									"name": "status",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "aiScore",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "votingStart",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "votingEnd",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "forVotes",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "againstVotes",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "abstainVotes",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getVotingPower",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "string",
											"name": "title",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "summary",
											"type": "string"
										},
										{
											"internalType": "string",
											"name": "ipfsCID",
											"type": "string"
										},
										{
											"internalType": "uint256",
											"name": "requestedAmount",
											"type": "uint256"
										},
										{
											"internalType": "string[]",
											"name": "milestoneDescriptions",
											"type": "string[]"
										},
										{
											"internalType": "uint256[]",
											"name": "milestoneAmounts",
											"type": "uint256[]"
										},
										{
											"internalType": "uint256",
											"name": "votingPeriod",
											"type": "uint256"
										}
									],
									"internalType": "struct IProposalRegistry.ProposalInput",
									"name": "input",
									"type": "tuple"
								}
							],
							"name": "submitProposal",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"castVote(uint256,uint8)": "56781388",
							"executeProposal(uint256)": "0d61b519",
							"getCurrentProposalId()": "fe10226d",
							"getProposal(uint256)": "c7f758a8",
							"getVotingPower(address)": "bb4d4436",
							"submitProposal((string,string,string,uint256,string[],uint256[],uint256))": "08d256af"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"enum IProposalRegistry.VoteType\",\"name\":\"voteType\",\"type\":\"uint8\"}],\"name\":\"castVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"executeProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentProposalId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"summary\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"},{\"internalType\":\"enum IProposalRegistry.ProposalStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"aiScore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingStart\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingEnd\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"abstainVotes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getVotingPower\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"summary\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"ipfsCID\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"requestedAmount\",\"type\":\"uint256\"},{\"internalType\":\"string[]\",\"name\":\"milestoneDescriptions\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"milestoneAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"votingPeriod\",\"type\":\"uint256\"}],\"internalType\":\"struct IProposalRegistry.ProposalInput\",\"name\":\"input\",\"type\":\"tuple\"}],\"name\":\"submitProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CrossFi-Treasury-Guard/contracts/interfaces/IProposalRegistry.sol\":\"IProposalRegistry\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"CrossFi-Treasury-Guard/contracts/interfaces/IProposalRegistry.sol\":{\"keccak256\":\"0xa7e293a5cf8d8648651f4aec782dc64870dd507aa335bcd33380f7ea0c524a1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5f3d6288cee34a9c3e6adb189ced4c4157782be50b9dae4243ad4d94b760cf6\",\"dweb:/ipfs/QmRSjFJokP5VYo6fp2PHFA8LHxNDba6tqEw2ZUPZvCE6vR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"CrossFi-Treasury-Guard/contracts/interfaces/ITreasuryEscrow.sol": {
				"ITreasuryEscrow": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "milestoneCount",
									"type": "uint256"
								}
							],
							"name": "EscrowCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "milestoneIndex",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								}
							],
							"name": "FundsReleased",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "totalAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "milestoneCount",
									"type": "uint256"
								}
							],
							"name": "createEscrow",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "escrowExists",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "proposalId",
									"type": "uint256"
								}
							],
							"name": "getEscrow",
							"outputs": [
								{
									"internalType": "address",
									"name": "beneficiary",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "totalAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "releasedAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "milestoneCount",
									"type": "uint256"
								},
								{
									"internalType": "enum ITreasuryEscrow.EscrowStatus",
									"name": "status",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "creationTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for TreasuryEscrow contract handling native XFI coin",
						"kind": "dev",
						"methods": {},
						"title": "ITreasuryEscrow",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createEscrow(uint256,address,uint256,uint256)": "faa33920",
							"escrowExists(uint256)": "8e0eac0f",
							"getEscrow(uint256)": "7d19e596"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"milestoneCount\",\"type\":\"uint256\"}],\"name\":\"EscrowCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"milestoneIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"FundsReleased\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"milestoneCount\",\"type\":\"uint256\"}],\"name\":\"createEscrow\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"escrowExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getEscrow\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"releasedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"milestoneCount\",\"type\":\"uint256\"},{\"internalType\":\"enum ITreasuryEscrow.EscrowStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"creationTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for TreasuryEscrow contract handling native XFI coin\",\"kind\":\"dev\",\"methods\":{},\"title\":\"ITreasuryEscrow\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CrossFi-Treasury-Guard/contracts/interfaces/ITreasuryEscrow.sol\":\"ITreasuryEscrow\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"CrossFi-Treasury-Guard/contracts/interfaces/ITreasuryEscrow.sol\":{\"keccak256\":\"0xad314e57c5476470baf2d3b0ddee9ed70504b45297febf59727e81b2e9acc17d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b41f63c3b0998a3514d3c3b3e84636bfa4ac9a4980fbaf8e70c46d37bff40c6\",\"dweb:/ipfs/Qmc6VgUwi1iqQNHfzaiHQSSW3PYyJq83mVvyRuvCXpB8qn\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol": {
				"ExtendedAccessControl": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "AI_ORACLE_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DISPUTE_RESOLVER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MILESTONE_APPROVER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TREASURY_MANAGER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllRoles",
							"outputs": [
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getRoleCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "roleCount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								}
							],
							"name": "grantMultipleRoles",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								}
							],
							"name": "hasAnyRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32[]",
									"name": "roles",
									"type": "bytes32[]"
								}
							],
							"name": "revokeMultipleRoles",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extended access control with custom roles for CrossFi Treasury Guard",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getAllRoles()": {
								"details": "Get all available roles",
								"returns": {
									"roles": "Array of all role identifiers"
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"getRoleCount(address)": {
								"details": "Get all roles for an account",
								"params": {
									"account": "Account to check"
								},
								"returns": {
									"roleCount": "Number of roles the account has"
								}
							},
							"grantMultipleRoles(address,bytes32[])": {
								"details": "Grant multiple roles to an account",
								"params": {
									"account": "Account to grant roles to",
									"roles": "Array of role identifiers"
								}
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasAnyRole(address,bytes32[])": {
								"details": "Check if account has any of the specified roles",
								"params": {
									"account": "Account to check",
									"roles": "Array of role identifiers"
								},
								"returns": {
									"_0": "hasAnyRole True if account has at least one of the roles"
								}
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeMultipleRoles(address,bytes32[])": {
								"details": "Revoke multiple roles from an account",
								"params": {
									"account": "Account to revoke roles from",
									"roles": "Array of role identifiers"
								}
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"title": "AccessControl",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n  mstore(0x40, 0x80)\n  jumpi(tag_2, callvalue)\n    /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":744:786  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_4\n    /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":775:785  msg.sender */\n  caller\n    /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":744:786  _grantRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_1\n  jump\t// in\ntag_4:\n  pop\n    /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n  mload(0x40)\n  dataSize(sub_0)\n  swap1\n  dup2\n  dataOffset(sub_0)\n  dup3\n  codecopy\n  return\ntag_2:\n  0x00\n  dup1\n  revert\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_1:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n  dup2\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n  0x00\n    /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n  swap1\n  dup2\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_f0df3dcda05b4fbd9c655cde3d5ceb211e019e72ec816e127a59e7195f2cd7f5\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  0x20\n  mstore\n  0x40\n  swap1\n  keccak256\n  sload\n  0xff\n  and\n  tag_5\n  jumpi\n  sub(shl(0xa0, 0x01), 0x01)\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n  0x00\n    /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n  dup2\n  dup2\n  mstore\n  0x00\n  dup1\n  mload\n  0x20\n  data_f0df3dcda05b4fbd9c655cde3d5ceb211e019e72ec816e127a59e7195f2cd7f5\n  dup4\n  codecopy\n  dup2\n  mload\n  swap2\n  mstore\n  0x20\n  mstore\n  0x40\n  dup2\n  keccak256\n  dup1\n  sload\n  not(0xff)\n  and\n  0x01\n  or\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n  swap2\n    /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n  swap1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n  dup2\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6323:6327  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\ntag_5:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n  swap1\n  jump\t// out\nstop\ndata_f0df3dcda05b4fbd9c655cde3d5ceb211e019e72ec816e127a59e7195f2cd7f5 ad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5\n\nsub_0: assembly {\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      0x80\n      dup1\n      0x40\n      mstore\n      jumpi(tag_13, iszero(lt(calldatasize, 0x04)))\n      0x00\n      dup1\n      revert\n    tag_13:\n      shr(0xe0, calldataload(0x00))\n      swap1\n      dup2\n      0x01ffc9a7\n      eq\n      tag_15\n      jumpi\n      pop\n      dup1\n      0x248a9ca3\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x4fe9d1f5\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x68ca78f9\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x75b238fc\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x91b9f9d8\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xa02d72fb\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xaca5a8a7\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xbfe42a37\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xc601f7af\n      eq\n      tag_41\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_43\n      jumpi\n      dup1\n      0xebdf690f\n      eq\n      tag_45\n      jumpi\n      0xf2bcac3d\n      eq\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      jumpi(tag_51, callvalue)\n      jumpi(tag_51, slt(add(not(0x03), calldatasize), 0x00))\n      tag_53\n      tag_8\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      0x20\n      dup3\n      add\n      0x20\n      dup4\n      mstore\n      dup2\n      mload\n      dup1\n      swap2\n      mstore\n      0x20\n      0x40\n      dup5\n      add\n      swap3\n      add\n      swap1\n      0x00\n    tag_54:\n      dup2\n      dup2\n      lt\n      tag_55\n      jumpi\n      pop\n      pop\n      pop\n      sub\n      swap1\n      return\n    tag_55:\n      dup3\n      mload\n      dup5\n      mstore\n      dup6\n      swap5\n      pop\n      0x20\n      swap4\n      dup5\n      add\n      swap4\n      swap1\n      swap3\n      add\n      swap2\n      0x01\n      add\n      jump(tag_54)\n    tag_51:\n      0x00\n      dup1\n      revert\n    tag_45:\n      jumpi(tag_51, callvalue)\n      jumpi(tag_51, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":494:528  keccak256(\"TREASURY_MANAGER_ROLE\") */\n      0xede9dcdb0ce99dc7cec9c7be9246ad08b37853683ad91569c187b647ddf5e21c\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      dup2\n      mstore\n      return\n    tag_43:\n      jumpi(tag_51, callvalue)\n      jumpi(tag_51, slt(add(not(0x03), calldatasize), 0x40))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      tag_65\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      calldataload(0x04)\n      tag_66\n      tag_1\n      jump\t// in\n    tag_66:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_67\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n      tag_68\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      0x01\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      0x40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap1\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_10\n      jump\t// in\n    tag_67:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      tag_12\n      jump\t// in\n    tag_65:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      stop\n    tag_41:\n      jumpi(tag_51, callvalue)\n      jumpi(tag_51, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":413:440  keccak256(\"AI_ORACLE_ROLE\") */\n      0x482648e7878e9fa54c0a2f67ffd22d00ebc37cf7a03e060e428d2ab0cd6735cc\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      dup2\n      mstore\n      return\n    tag_39:\n      jumpi(tag_51, callvalue)\n      jumpi(tag_51, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":674:708  keccak256(\"DISPUTE_RESOLVER_ROLE\") */\n      0x7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      dup2\n      mstore\n      return\n    tag_37:\n      jumpi(tag_51, callvalue)\n      jumpi(tag_51, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_51\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2369:2382  getAllRoles() */\n      tag_83\n      tag_8\n      jump\t// in\n    tag_83:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2433:2446  uint256 i = 0 */\n      swap2\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2469:2472  i++ */\n    tag_84:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      dup3\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2448:2467  i < allRoles.length */\n      dup2\n      lt\n      iszero\n      tag_85\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2492:2521  hasRole(allRoles[i], account) */\n      tag_87\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2500:2511  allRoles[i] */\n      dup3\n      tag_88\n      dup4\n      dup7\n      tag_5\n      jump\t// in\n    tag_88:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      mload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      0x20\n      mstore\n      0x40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      and(sload(keccak256(0x00, 0x40)), 0xff)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap1\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2492:2521  hasRole(allRoles[i], account) */\n    tag_87:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2488:2563  if (hasRole(allRoles[i], account)) {... */\n      tag_89\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2469:2472  i++ */\n    tag_90:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      0x01\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2433:2446  uint256 i = 0 */\n      jump(tag_84)\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2488:2563  if (hasRole(allRoles[i], account)) {... */\n    tag_89:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      swap3\n      not(0x00)\n      dup2\n      eq\n      tag_91\n      jumpi\n      0x01\n      add\n      swap3\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2488:2563  if (hasRole(allRoles[i], account)) {... */\n      jump(tag_90)\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n    tag_91:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x11)\n      revert(0x00, 0x24)\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2448:2467  i < allRoles.length */\n    tag_85:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      0x20\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2448:2467  i < allRoles.length */\n      dup5\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_35:\n      jumpi(tag_51, callvalue)\n      jumpi(tag_51, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n      0x00\n      dup2\n      mstore\n      return\n    tag_33:\n      jumpi(tag_51, callvalue)\n      jumpi(tag_51, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":584:620  keccak256(\"MILESTONE_APPROVER_ROLE\") */\n      0x58223cdfb69946630d837d40b5c366a584f0217ada7fddd8318f2e08603cfa22\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      dup2\n      mstore\n      return\n    tag_31:\n      jumpi(tag_51, callvalue)\n      jumpi(tag_51, slt(add(not(0x03), calldatasize), 0x40))\n      tag_105\n      tag_1\n      jump\t// in\n    tag_105:\n      mstore(0x00, calldataload(0x04))\n      mstore(0x20, 0x00)\n      keccak256(0x00, 0x40)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      0x01\n      dup1\n      0xa0\n      shl\n      sub\n      and\n      0x00\n      mstore\n      0x20\n      mstore\n      0x20\n      and(sload(keccak256(0x00, 0x40)), 0xff)\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_29:\n      jumpi(tag_51, callvalue)\n      tag_108\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_108:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_109\n      tag_9\n      jump\t// in\n    tag_109:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1115:1118  i++ */\n    tag_110:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      dup2\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1097:1113  i < roles.length */\n      dup2\n      lt\n      iszero\n      tag_65\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1144:1152  roles[i] */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      tag_113\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1144:1152  roles[i] */\n      dup5\n      tag_114\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      0x01\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1144:1152  roles[i] */\n      swap5\n      dup7\n      tag_5\n      jump\t// in\n    tag_114:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      mload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_115\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4294  getRoleAdmin(role) */\n      tag_68\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      0x01\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      0x40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap1\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n    tag_115:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      tag_11\n      jump\t// in\n    tag_113:\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1082:1095  uint256 i = 0 */\n      jump(tag_110)\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n    tag_27:\n      jumpi(tag_51, callvalue)\n      jumpi(tag_51, slt(add(not(0x03), calldatasize), 0x00))\n      0x20\n      mload(0x40)\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":343:366  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      dup2\n      mstore\n      return\n    tag_25:\n      jumpi(tag_51, callvalue)\n      0x20\n      tag_123\n      tag_124\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_124:\n      swap1\n      tag_6\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      swap1\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n    tag_23:\n      jumpi(tag_51, callvalue)\n      tag_127\n      calldatasize\n      tag_3\n      jump\t// in\n    tag_127:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_128\n      tag_9\n      jump\t// in\n    tag_128:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1508:1511  i++ */\n    tag_129:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      dup2\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1490:1506  i < roles.length */\n      dup2\n      lt\n      iszero\n      tag_65\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1538:1546  roles[i] */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      tag_132\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1538:1546  roles[i] */\n      dup5\n      tag_133\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      0x01\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1538:1546  roles[i] */\n      swap5\n      dup7\n      tag_5\n      jump\t// in\n    tag_133:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      mload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_67\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n      tag_68\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      0x01\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      0x40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap1\n      jump\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n    tag_132:\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1475:1488  uint256 i = 0 */\n      jump(tag_129)\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n    tag_21:\n      jumpi(tag_51, callvalue)\n      jumpi(tag_51, slt(add(not(0x03), calldatasize), 0x40))\n      tag_140\n      tag_1\n      jump\t// in\n    tag_140:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      sub\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n      tag_141\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      tag_65\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      swap1\n      calldataload(0x04)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      tag_12\n      jump\t// in\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5454:5484  AccessControlBadConfirmation() */\n      shl(0xe1, 0x334bd919)\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5454:5484  AccessControlBadConfirmation() */\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      0x04\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5454:5484  AccessControlBadConfirmation() */\n      revert\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n    tag_19:\n      jumpi(tag_51, callvalue)\n      jumpi(tag_51, slt(add(not(0x03), calldatasize), 0x40))\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      tag_65\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      calldataload(0x04)\n      tag_149\n      tag_1\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4294  getRoleAdmin(role) */\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      tag_115\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4294  getRoleAdmin(role) */\n      tag_68\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      0x01\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      0x40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap1\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n    tag_17:\n      jumpi(tag_51, callvalue)\n      jumpi(tag_51, slt(add(not(0x03), calldatasize), 0x20))\n      0x20\n      tag_156\n      calldataload(0x04)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      0x20\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      0x01\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      0x40\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap1\n      jump\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n    tag_156:\n      mload(0x40)\n      swap1\n      dup2\n      mstore\n      return\n    tag_15:\n      jumpi(tag_51, callvalue)\n      jumpi(tag_51, slt(add(not(0x03), calldatasize), 0x20))\n      calldataload(0x04)\n      swap1\n      shl(0xe0, 0xffffffff)\n      dup3\n      and\n      dup1\n      swap3\n      sub\n      tag_51\n      jumpi\n      0x20\n      swap2\n      shl(0xe0, 0x7965db0b)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2696  interfaceId == type(IAccessControl).interfaceId */\n      dup2\n      eq\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup2\n      iszero\n      tag_163\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n    tag_164:\n      pop\n      iszero\n      iszero\n      dup2\n      mstore\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_163:\n      shl(0xe0, 0x01ffc9a7)\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:869  interfaceId == type(IERC165).interfaceId */\n      eq\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup4\n      jump(tag_164)\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n    tag_1:\n      calldataload(0x24)\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      dup3\n      and\n      dup3\n      sub\n      tag_51\n      jumpi\n      jump\t// out\n    tag_2:\n      mload(0x40)\n      swap2\n      swap1\n      0x1f\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      0xffffffffffffffff\n      dup2\n      gt\n      dup4\n      dup3\n      lt\n      or\n      tag_167\n      jumpi\n      0x40\n      mstore\n      jump\t// out\n    tag_167:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x41)\n      revert(0x00, 0x24)\n    tag_3:\n      swap1\n      0x40\n      not(0x03)\n      dup4\n      add\n      slt\n      tag_51\n      jumpi\n      calldataload(0x04)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      and\n      dup2\n      sub\n      tag_51\n      jumpi\n      swap2\n      calldataload(0x24)\n      swap1\n      0xffffffffffffffff\n      dup3\n      gt\n      tag_51\n      jumpi\n      dup1\n      0x23\n      dup4\n      add\n      slt\n      iszero\n      tag_51\n      jumpi\n      dup2\n      0x04\n      add\n      calldataload\n      0xffffffffffffffff\n      dup2\n      gt\n      tag_167\n      jumpi\n      tag_179\n      0x20\n      dup3\n      0x05\n      shl\n      add\n      tag_2\n      jump\t// in\n    tag_179:\n      swap3\n      0x24\n      0x20\n      dup6\n      dup5\n      dup2\n      mstore\n      add\n      swap3\n      0x05\n      shl\n      dup3\n      add\n      add\n      swap3\n      dup4\n      gt\n      tag_51\n      jumpi\n      0x24\n      add\n      swap1\n    tag_182:\n      dup3\n      dup3\n      lt\n      tag_183\n      jumpi\n      pop\n      pop\n      pop\n      swap1\n      jump\t// out\n    tag_183:\n      dup2\n      calldataload\n      dup2\n      mstore\n      0x20\n      swap2\n      dup3\n      add\n      swap2\n      add\n      jump(tag_182)\n    tag_5:\n      dup1\n      mload\n      dup3\n      lt\n      iszero\n      tag_185\n      jumpi\n      0x20\n      swap2\n      0x05\n      shl\n      add\n      add\n      swap1\n      jump\t// out\n    tag_185:\n      mstore(0x00, shl(0xe0, 0x4e487b71))\n      mstore(0x04, 0x32)\n      revert(0x00, 0x24)\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1816:2087  function hasAnyRole(address account, bytes32[] memory roles) external view returns (bool) {... */\n    tag_6:\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1954:1957  i++ */\n    tag_187:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      dup2\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1936:1952  i < roles.length */\n      dup2\n      lt\n      iszero\n      tag_188\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1977:2003  hasRole(roles[i], account) */\n      tag_190\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1985:1993  roles[i] */\n      dup4\n      tag_88\n      dup4\n      dup6\n      tag_5\n      jump\t// in\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1977:2003  hasRole(roles[i], account) */\n    tag_190:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1973:2049  if (hasRole(roles[i], account)) {... */\n      tag_192\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      0x01\n      add\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1921:1934  uint256 i = 0 */\n      jump(tag_187)\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1973:2049  if (hasRole(roles[i], account)) {... */\n    tag_192:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2023:2034  return true */\n      pop\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      0x01\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2023:2034  return true */\n      swap1\n      jump\t// out\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1936:1952  i < roles.length */\n    tag_188:\n      pop\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":1816:2087  function hasAnyRole(address account, bytes32[] memory roles) external view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2723:3087  function getAllRoles() public pure returns (bytes32[] memory roles) {... */\n    tag_8:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      tag_194\n      0xe0\n      tag_2\n      jump\t// in\n    tag_194:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2823:2824  6 */\n      0x06\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      0xc0\n      calldatasize\n      dup3\n      calldatacopy\n      dup2\n      mload\n      iszero\n      tag_185\n      jumpi\n      0x00\n      swap1\n      mstore\n      dup1\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2880:2881  1 */\n      0x01\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      lt\n      iszero\n      tag_185\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":343:366  keccak256(\"ADMIN_ROLE\") */\n      0xa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      0x40\n      dup3\n      add\n      mstore\n      dup1\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2911:2912  2 */\n      0x02\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      lt\n      iszero\n      tag_185\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":413:440  keccak256(\"AI_ORACLE_ROLE\") */\n      0x482648e7878e9fa54c0a2f67ffd22d00ebc37cf7a03e060e428d2ab0cd6735cc\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      0x60\n      dup3\n      add\n      mstore\n      dup1\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2946:2947  3 */\n      0x03\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      lt\n      iszero\n      tag_185\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":494:528  keccak256(\"TREASURY_MANAGER_ROLE\") */\n      0xede9dcdb0ce99dc7cec9c7be9246ad08b37853683ad91569c187b647ddf5e21c\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      0x80\n      dup3\n      add\n      mstore\n      dup1\n      mload\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2988:2989  4 */\n      0x04\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      lt\n      iszero\n      tag_185\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":584:620  keccak256(\"MILESTONE_APPROVER_ROLE\") */\n      0x58223cdfb69946630d837d40b5c366a584f0217ada7fddd8318f2e08603cfa22\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      0xa0\n      dup3\n      add\n      mstore\n      dup1\n      mload\n      0x05\n      lt\n      iszero\n      tag_185\n      jumpi\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":674:708  keccak256(\"DISPUTE_RESOLVER_ROLE\") */\n      0x7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      0xc0\n      dup3\n      add\n      mstore\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":2723:3087  function getAllRoles() public pure returns (bytes32[] memory roles) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_9:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      0x00\n      swap1\n      dup2\n      mstore\n      mstore(0x20, 0xad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5)\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3495:3518  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n      tag_207\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      shl(0xe0, 0xe2517d3f)\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      mstore\n      mstore(0x24, 0x00)\n      0x44\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_10:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      0x00\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3495:3518  !hasRole(role, account) */\n      iszero\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n      tag_209\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      shl(0xe0, 0xe2517d3f)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      mstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      mstore\n      0x24\n      mstore\n      0x44\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_11:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      0x00\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      tag_211\n      jumpi\n      0x00\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      swap6\n      swap1\n      swap6\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      dup1\n      sload\n      not(0xff)\n      and\n      0x01\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap3\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      swap2\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6323:6327  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n      pop\n      pop\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6708:7025  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_12:\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      0x00\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      iszero\n      tag_211\n      jumpi\n      0x00\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n      swap6\n      swap1\n      swap6\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n      swap3\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      swap2\n      swap1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap1\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      log4\n        /* \"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":227:3089  contract ExtendedAccessControl is AccessControl {... */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6954:6965  return true */\n      swap1\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f3466d2dc5900b177c49cf06df731aafe702a784ba4cfa8a74c57531768359ba64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"fun_grantRole": {
									"entryPoint": 35,
									"id": 257,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234601f57600f336023565b5060405161099790816100ac8239f35b5f80fd5b6001600160a01b0381165f9081525f80516020610a43833981519152602052604090205460ff1660a6576001600160a01b03165f8181525f80516020610a4383398151915260205260408120805460ff191660011790553391907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d8180a4600190565b505f9056fe6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a71461052257508063248a9ca3146104f05780632f2ff15d146104b857806336568abe146104745780634fe9d1f51461042257806368ca78f9146103ff57806375b238fc146103c557806391b9f9d81461036e57806391d1485414610326578063a02d72fb146102ec578063a217fddf146102d2578063aca5a8a714610229578063bfe42a37146101ef578063c601f7af146101b5578063d547741f14610171578063ebdf690f146101375763f2bcac3d146100d7575f80fd5b34610133575f366003190112610133576100ef6106be565b6040518091602082016020835281518091526020604084019201905f5b81811061011a575050500390f35b825184528594506020938401939092019160010161010c565b5f80fd5b34610133575f3660031901126101335760206040517fede9dcdb0ce99dc7cec9c7be9246ad08b37853683ad91569c187b647ddf5e21c8152f35b34610133576040366003190112610133576101b3600435610190610575565b906101ae6101a9825f525f602052600160405f20015490565b610821565b6108e1565b005b34610133575f3660031901126101335760206040517f482648e7878e9fa54c0a2f67ffd22d00ebc37cf7a03e060e428d2ab0cd6735cc8152f35b34610133575f3660031901126101335760206040517f7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e8152f35b34610133576020366003190112610133576004356001600160a01b0381168103610133576102556106be565b5f915f5b82518110156102c757610294826102708386610661565b515f525f60205260405f209060018060a01b03165f5260205260ff60405f20541690565b6102a1575b600101610259565b925f1981146102b35760010192610299565b634e487b7160e01b5f52601160045260245ffd5b602084604051908152f35b34610133575f3660031901126101335760206040515f8152f35b34610133575f3660031901126101335760206040517f58223cdfb69946630d837d40b5c366a584f0217ada7fddd8318f2e08603cfa228152f35b346101335760403660031901126101335761033f610575565b6004355f525f60205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b346101335761037c366105c5565b6103846107d2565b5f5b81518110156101b357806103be846103a060019486610661565b516103b96101a9825f525f602052600160405f20015490565b610859565b5001610386565b34610133575f3660031901126101335760206040517fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217758152f35b34610133576020610418610412366105c5565b90610689565b6040519015158152f35b3461013357610430366105c5565b6104386107d2565b5f5b81518110156101b3578061046d8461045460019486610661565b516101ae6101a9825f525f602052600160405f20015490565b500161043a565b346101335760403660031901126101335761048d610575565b336001600160a01b038216036104a9576101b3906004356108e1565b63334bd91960e11b5f5260045ffd5b34610133576040366003190112610133576101b36004356104d7610575565b906103b96101a9825f525f602052600160405f20015490565b3461013357602036600319011261013357602061051a6004355f525f602052600160405f20015490565b604051908152f35b34610133576020366003190112610133576004359063ffffffff60e01b821680920361013357602091637965db0b60e01b8114908115610564575b5015158152f35b6301ffc9a760e01b1490508361055d565b602435906001600160a01b038216820361013357565b6040519190601f01601f1916820167ffffffffffffffff8111838210176105b157604052565b634e487b7160e01b5f52604160045260245ffd5b906040600319830112610133576004356001600160a01b038116810361013357916024359067ffffffffffffffff8211610133578060238301121561013357816004013567ffffffffffffffff81116105b15761062760208260051b0161058b565b926024602085848152019260051b82010192831161013357602401905b8282106106515750505090565b8135815260209182019101610644565b80518210156106755760209160051b010190565b634e487b7160e01b5f52603260045260245ffd5b905f5b81518110156106b7576106a3836102708385610661565b6106af5760010161068c565b505050600190565b5050505f90565b6106c860e061058b565b600681526020810160c0368237815115610675575f9052805160011015610675577fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217756040820152805160021015610675577f482648e7878e9fa54c0a2f67ffd22d00ebc37cf7a03e060e428d2ab0cd6735cc6060820152805160031015610675577fede9dcdb0ce99dc7cec9c7be9246ad08b37853683ad91569c187b647ddf5e21c6080820152805160041015610675577f58223cdfb69946630d837d40b5c366a584f0217ada7fddd8318f2e08603cfa2260a0820152805160051015610675577f7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e60c082015290565b335f9081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604090205460ff161561080a57565b63e2517d3f60e01b5f52336004525f60245260445ffd5b5f8181526020818152604080832033845290915290205460ff16156108435750565b63e2517d3f60e01b5f523360045260245260445ffd5b5f818152602081815260408083206001600160a01b038616845290915290205460ff166108db575f818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19166001179055339291907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b50505f90565b5f818152602081815260408083206001600160a01b038616845290915290205460ff16156108db575f818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19169055339291907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a460019056fea2646970667358221220f3466d2dc5900b177c49cf06df731aafe702a784ba4cfa8a74c57531768359ba64736f6c634300081a0033ad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x1F JUMPI PUSH1 0xF CALLER PUSH1 0x23 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x997 SWAP1 DUP2 PUSH2 0xAC DUP3 CODECOPY RETURN JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA43 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH1 0xA6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 DUP2 DUP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0xA43 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP2 SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D DUP2 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP PUSH0 SWAP1 JUMP INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x522 JUMPI POP DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x4F0 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x4B8 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x474 JUMPI DUP1 PUSH4 0x4FE9D1F5 EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0x68CA78F9 EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0x91B9F9D8 EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xA02D72FB EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xACA5A8A7 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xBFE42A37 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xC601F7AF EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0xEBDF690F EQ PUSH2 0x137 JUMPI PUSH4 0xF2BCAC3D EQ PUSH2 0xD7 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x133 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH2 0xEF PUSH2 0x6BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0x20 DUP4 MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x20 PUSH1 0x40 DUP5 ADD SWAP3 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x11A JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x10C JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x133 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xEDE9DCDB0CE99DC7CEC9C7BE9246AD08B37853683AD91569C187B647DDF5E21C DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x133 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH2 0x1B3 PUSH1 0x4 CALLDATALOAD PUSH2 0x190 PUSH2 0x575 JUMP JUMPDEST SWAP1 PUSH2 0x1AE PUSH2 0x1A9 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x821 JUMP JUMPDEST PUSH2 0x8E1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x133 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x482648E7878E9FA54C0A2F67FFD22D00EBC37CF7A03E060E428D2AB0CD6735CC DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x133 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x7B8BB8356A3F32F5C111FF23F050D97F08988E0883529EA7BFF3B918887A6E0E DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x133 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x133 JUMPI PUSH2 0x255 PUSH2 0x6BE JUMP JUMPDEST PUSH0 SWAP2 PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2C7 JUMPI PUSH2 0x294 DUP3 PUSH2 0x270 DUP4 DUP7 PUSH2 0x661 JUMP JUMPDEST MLOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH2 0x2A1 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x259 JUMP JUMPDEST SWAP3 PUSH0 NOT DUP2 EQ PUSH2 0x2B3 JUMPI PUSH1 0x1 ADD SWAP3 PUSH2 0x299 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP5 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x133 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x133 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x58223CDFB69946630D837D40B5C366A584F0217ADA7FDDD8318F2E08603CFA22 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x133 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH2 0x33F PUSH2 0x575 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x133 JUMPI PUSH2 0x37C CALLDATASIZE PUSH2 0x5C5 JUMP JUMPDEST PUSH2 0x384 PUSH2 0x7D2 JUMP JUMPDEST PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1B3 JUMPI DUP1 PUSH2 0x3BE DUP5 PUSH2 0x3A0 PUSH1 0x1 SWAP5 DUP7 PUSH2 0x661 JUMP JUMPDEST MLOAD PUSH2 0x3B9 PUSH2 0x1A9 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x859 JUMP JUMPDEST POP ADD PUSH2 0x386 JUMP JUMPDEST CALLVALUE PUSH2 0x133 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x133 JUMPI PUSH1 0x20 PUSH2 0x418 PUSH2 0x412 CALLDATASIZE PUSH2 0x5C5 JUMP JUMPDEST SWAP1 PUSH2 0x689 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x133 JUMPI PUSH2 0x430 CALLDATASIZE PUSH2 0x5C5 JUMP JUMPDEST PUSH2 0x438 PUSH2 0x7D2 JUMP JUMPDEST PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1B3 JUMPI DUP1 PUSH2 0x46D DUP5 PUSH2 0x454 PUSH1 0x1 SWAP5 DUP7 PUSH2 0x661 JUMP JUMPDEST MLOAD PUSH2 0x1AE PUSH2 0x1A9 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST POP ADD PUSH2 0x43A JUMP JUMPDEST CALLVALUE PUSH2 0x133 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH2 0x48D PUSH2 0x575 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x4A9 JUMPI PUSH2 0x1B3 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x8E1 JUMP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x133 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH2 0x1B3 PUSH1 0x4 CALLDATALOAD PUSH2 0x4D7 PUSH2 0x575 JUMP JUMPDEST SWAP1 PUSH2 0x3B9 PUSH2 0x1A9 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x133 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH1 0x20 PUSH2 0x51A PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x133 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x133 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x564 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x55D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x133 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP4 DUP3 LT OR PUSH2 0x5B1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x40 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x133 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x133 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x133 JUMPI DUP1 PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x133 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x5B1 JUMPI PUSH2 0x627 PUSH1 0x20 DUP3 PUSH1 0x5 SHL ADD PUSH2 0x58B JUMP JUMPDEST SWAP3 PUSH1 0x24 PUSH1 0x20 DUP6 DUP5 DUP2 MSTORE ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x133 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x651 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x644 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x675 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x6B7 JUMPI PUSH2 0x6A3 DUP4 PUSH2 0x270 DUP4 DUP6 PUSH2 0x661 JUMP JUMPDEST PUSH2 0x6AF JUMPI PUSH1 0x1 ADD PUSH2 0x68C JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x6C8 PUSH1 0xE0 PUSH2 0x58B JUMP JUMPDEST PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD PUSH1 0xC0 CALLDATASIZE DUP3 CALLDATACOPY DUP2 MLOAD ISZERO PUSH2 0x675 JUMPI PUSH0 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x1 LT ISZERO PUSH2 0x675 JUMPI PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH1 0x40 DUP3 ADD MSTORE DUP1 MLOAD PUSH1 0x2 LT ISZERO PUSH2 0x675 JUMPI PUSH32 0x482648E7878E9FA54C0A2F67FFD22D00EBC37CF7A03E060E428D2AB0CD6735CC PUSH1 0x60 DUP3 ADD MSTORE DUP1 MLOAD PUSH1 0x3 LT ISZERO PUSH2 0x675 JUMPI PUSH32 0xEDE9DCDB0CE99DC7CEC9C7BE9246AD08B37853683AD91569C187B647DDF5E21C PUSH1 0x80 DUP3 ADD MSTORE DUP1 MLOAD PUSH1 0x4 LT ISZERO PUSH2 0x675 JUMPI PUSH32 0x58223CDFB69946630D837D40B5C366A584F0217ADA7FDDD8318F2E08603CFA22 PUSH1 0xA0 DUP3 ADD MSTORE DUP1 MLOAD PUSH1 0x5 LT ISZERO PUSH2 0x675 JUMPI PUSH32 0x7B8BB8356A3F32F5C111FF23F050D97F08988E0883529EA7BFF3B918887A6E0E PUSH1 0xC0 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x80A JUMPI JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH0 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x843 JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x8DB JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x8DB JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN CHAINID PUSH14 0x2DC5900B177C49CF06DF731AAFE7 MUL 0xA7 DUP5 0xBA 0x4C STATICCALL DUP11 PUSH21 0xC57531768359BA64736F6C634300081A0033AD3228 0xB6 PUSH23 0xF7D3CD4284A5443F17F1962B36E491B30A40B2405849E5 SWAP8 0xBA PUSH0 0xB5 ",
							"sourceMap": "227:2862:14:-:0;;;;;;744:42;775:10;744:42;:::i;:::-;;227:2862;;;;;;;;;;;;;6155:316:0;-1:-1:-1;;;;;227:2862:14;;2241:4:0;227:2862:14;;;-1:-1:-1;;;;;;;;;;;227:2862:14;;;;;;;;;;-1:-1:-1;;;;;227:2862:14;2241:4:0;227:2862:14;;;-1:-1:-1;;;;;;;;;;;227:2862:14;;;;;;;-1:-1:-1;;227:2862:14;;;;;735:10:4;;227:2862:14;6346:40:0;2241:4;;6346:40;6323:4;6400:11;:::o;6248:217::-;6442:12;2241:4;6442:12;:::o"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"abi_decode_address": {
									"entryPoint": 1397,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_addresst_array_bytes32_dyn": {
									"entryPoint": 1477,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 1419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_checkRole": {
									"entryPoint": 2081,
									"id": 94,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"fun_checkRole_3708": {
									"entryPoint": 2002,
									"id": 94,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"fun_getAllRoles": {
									"entryPoint": 1726,
									"id": 2430,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"fun_getRoleAdmin": {
									"entryPoint": null,
									"id": 129,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"fun_grantRole": {
									"entryPoint": 2137,
									"id": 257,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_hasAnyRole": {
									"entryPoint": 1673,
									"id": 2329,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_hasRole": {
									"entryPoint": null,
									"id": 81,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"fun_revokeRole": {
									"entryPoint": 2273,
									"id": 295,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"memory_array_index_access_bytes32_dyn": {
									"entryPoint": 1633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080806040526004361015610012575f80fd5b5f3560e01c90816301ffc9a71461052257508063248a9ca3146104f05780632f2ff15d146104b857806336568abe146104745780634fe9d1f51461042257806368ca78f9146103ff57806375b238fc146103c557806391b9f9d81461036e57806391d1485414610326578063a02d72fb146102ec578063a217fddf146102d2578063aca5a8a714610229578063bfe42a37146101ef578063c601f7af146101b5578063d547741f14610171578063ebdf690f146101375763f2bcac3d146100d7575f80fd5b34610133575f366003190112610133576100ef6106be565b6040518091602082016020835281518091526020604084019201905f5b81811061011a575050500390f35b825184528594506020938401939092019160010161010c565b5f80fd5b34610133575f3660031901126101335760206040517fede9dcdb0ce99dc7cec9c7be9246ad08b37853683ad91569c187b647ddf5e21c8152f35b34610133576040366003190112610133576101b3600435610190610575565b906101ae6101a9825f525f602052600160405f20015490565b610821565b6108e1565b005b34610133575f3660031901126101335760206040517f482648e7878e9fa54c0a2f67ffd22d00ebc37cf7a03e060e428d2ab0cd6735cc8152f35b34610133575f3660031901126101335760206040517f7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e8152f35b34610133576020366003190112610133576004356001600160a01b0381168103610133576102556106be565b5f915f5b82518110156102c757610294826102708386610661565b515f525f60205260405f209060018060a01b03165f5260205260ff60405f20541690565b6102a1575b600101610259565b925f1981146102b35760010192610299565b634e487b7160e01b5f52601160045260245ffd5b602084604051908152f35b34610133575f3660031901126101335760206040515f8152f35b34610133575f3660031901126101335760206040517f58223cdfb69946630d837d40b5c366a584f0217ada7fddd8318f2e08603cfa228152f35b346101335760403660031901126101335761033f610575565b6004355f525f60205260405f209060018060a01b03165f52602052602060ff60405f2054166040519015158152f35b346101335761037c366105c5565b6103846107d2565b5f5b81518110156101b357806103be846103a060019486610661565b516103b96101a9825f525f602052600160405f20015490565b610859565b5001610386565b34610133575f3660031901126101335760206040517fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217758152f35b34610133576020610418610412366105c5565b90610689565b6040519015158152f35b3461013357610430366105c5565b6104386107d2565b5f5b81518110156101b3578061046d8461045460019486610661565b516101ae6101a9825f525f602052600160405f20015490565b500161043a565b346101335760403660031901126101335761048d610575565b336001600160a01b038216036104a9576101b3906004356108e1565b63334bd91960e11b5f5260045ffd5b34610133576040366003190112610133576101b36004356104d7610575565b906103b96101a9825f525f602052600160405f20015490565b3461013357602036600319011261013357602061051a6004355f525f602052600160405f20015490565b604051908152f35b34610133576020366003190112610133576004359063ffffffff60e01b821680920361013357602091637965db0b60e01b8114908115610564575b5015158152f35b6301ffc9a760e01b1490508361055d565b602435906001600160a01b038216820361013357565b6040519190601f01601f1916820167ffffffffffffffff8111838210176105b157604052565b634e487b7160e01b5f52604160045260245ffd5b906040600319830112610133576004356001600160a01b038116810361013357916024359067ffffffffffffffff8211610133578060238301121561013357816004013567ffffffffffffffff81116105b15761062760208260051b0161058b565b926024602085848152019260051b82010192831161013357602401905b8282106106515750505090565b8135815260209182019101610644565b80518210156106755760209160051b010190565b634e487b7160e01b5f52603260045260245ffd5b905f5b81518110156106b7576106a3836102708385610661565b6106af5760010161068c565b505050600190565b5050505f90565b6106c860e061058b565b600681526020810160c0368237815115610675575f9052805160011015610675577fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217756040820152805160021015610675577f482648e7878e9fa54c0a2f67ffd22d00ebc37cf7a03e060e428d2ab0cd6735cc6060820152805160031015610675577fede9dcdb0ce99dc7cec9c7be9246ad08b37853683ad91569c187b647ddf5e21c6080820152805160041015610675577f58223cdfb69946630d837d40b5c366a584f0217ada7fddd8318f2e08603cfa2260a0820152805160051015610675577f7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e60c082015290565b335f9081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604090205460ff161561080a57565b63e2517d3f60e01b5f52336004525f60245260445ffd5b5f8181526020818152604080832033845290915290205460ff16156108435750565b63e2517d3f60e01b5f523360045260245260445ffd5b5f818152602081815260408083206001600160a01b038616845290915290205460ff166108db575f818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19166001179055339291907f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d9080a4600190565b50505f90565b5f818152602081815260408083206001600160a01b038616845290915290205460ff16156108db575f818152602081815260408083206001600160a01b0395909516808452949091528120805460ff19169055339291907ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9080a460019056fea2646970667358221220f3466d2dc5900b177c49cf06df731aafe702a784ba4cfa8a74c57531768359ba64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x1FFC9A7 EQ PUSH2 0x522 JUMPI POP DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x4F0 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x4B8 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x474 JUMPI DUP1 PUSH4 0x4FE9D1F5 EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0x68CA78F9 EQ PUSH2 0x3FF JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0x91B9F9D8 EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0xA02D72FB EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x2D2 JUMPI DUP1 PUSH4 0xACA5A8A7 EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0xBFE42A37 EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xC601F7AF EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0xEBDF690F EQ PUSH2 0x137 JUMPI PUSH4 0xF2BCAC3D EQ PUSH2 0xD7 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x133 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH2 0xEF PUSH2 0x6BE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 PUSH1 0x20 DUP3 ADD PUSH1 0x20 DUP4 MSTORE DUP2 MLOAD DUP1 SWAP2 MSTORE PUSH1 0x20 PUSH1 0x40 DUP5 ADD SWAP3 ADD SWAP1 PUSH0 JUMPDEST DUP2 DUP2 LT PUSH2 0x11A JUMPI POP POP POP SUB SWAP1 RETURN JUMPDEST DUP3 MLOAD DUP5 MSTORE DUP6 SWAP5 POP PUSH1 0x20 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x10C JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x133 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xEDE9DCDB0CE99DC7CEC9C7BE9246AD08B37853683AD91569C187B647DDF5E21C DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x133 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH2 0x1B3 PUSH1 0x4 CALLDATALOAD PUSH2 0x190 PUSH2 0x575 JUMP JUMPDEST SWAP1 PUSH2 0x1AE PUSH2 0x1A9 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x821 JUMP JUMPDEST PUSH2 0x8E1 JUMP JUMPDEST STOP JUMPDEST CALLVALUE PUSH2 0x133 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x482648E7878E9FA54C0A2F67FFD22D00EBC37CF7A03E060E428D2AB0CD6735CC DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x133 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x7B8BB8356A3F32F5C111FF23F050D97F08988E0883529EA7BFF3B918887A6E0E DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x133 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x133 JUMPI PUSH2 0x255 PUSH2 0x6BE JUMP JUMPDEST PUSH0 SWAP2 PUSH0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x2C7 JUMPI PUSH2 0x294 DUP3 PUSH2 0x270 DUP4 DUP7 PUSH2 0x661 JUMP JUMPDEST MLOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND SWAP1 JUMP JUMPDEST PUSH2 0x2A1 JUMPI JUMPDEST PUSH1 0x1 ADD PUSH2 0x259 JUMP JUMPDEST SWAP3 PUSH0 NOT DUP2 EQ PUSH2 0x2B3 JUMPI PUSH1 0x1 ADD SWAP3 PUSH2 0x299 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP5 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x133 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH0 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x133 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0x58223CDFB69946630D837D40B5C366A584F0217ADA7FDDD8318F2E08603CFA22 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x133 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH2 0x33F PUSH2 0x575 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH0 KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x133 JUMPI PUSH2 0x37C CALLDATASIZE PUSH2 0x5C5 JUMP JUMPDEST PUSH2 0x384 PUSH2 0x7D2 JUMP JUMPDEST PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1B3 JUMPI DUP1 PUSH2 0x3BE DUP5 PUSH2 0x3A0 PUSH1 0x1 SWAP5 DUP7 PUSH2 0x661 JUMP JUMPDEST MLOAD PUSH2 0x3B9 PUSH2 0x1A9 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x859 JUMP JUMPDEST POP ADD PUSH2 0x386 JUMP JUMPDEST CALLVALUE PUSH2 0x133 JUMPI PUSH0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x133 JUMPI PUSH1 0x20 PUSH2 0x418 PUSH2 0x412 CALLDATASIZE PUSH2 0x5C5 JUMP JUMPDEST SWAP1 PUSH2 0x689 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x133 JUMPI PUSH2 0x430 CALLDATASIZE PUSH2 0x5C5 JUMP JUMPDEST PUSH2 0x438 PUSH2 0x7D2 JUMP JUMPDEST PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x1B3 JUMPI DUP1 PUSH2 0x46D DUP5 PUSH2 0x454 PUSH1 0x1 SWAP5 DUP7 PUSH2 0x661 JUMP JUMPDEST MLOAD PUSH2 0x1AE PUSH2 0x1A9 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST POP ADD PUSH2 0x43A JUMP JUMPDEST CALLVALUE PUSH2 0x133 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH2 0x48D PUSH2 0x575 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SUB PUSH2 0x4A9 JUMPI PUSH2 0x1B3 SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x8E1 JUMP JUMPDEST PUSH4 0x334BD919 PUSH1 0xE1 SHL PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST CALLVALUE PUSH2 0x133 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH2 0x1B3 PUSH1 0x4 CALLDATALOAD PUSH2 0x4D7 PUSH2 0x575 JUMP JUMPDEST SWAP1 PUSH2 0x3B9 PUSH2 0x1A9 DUP3 PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x133 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH1 0x20 PUSH2 0x51A PUSH1 0x4 CALLDATALOAD PUSH0 MSTORE PUSH0 PUSH1 0x20 MSTORE PUSH1 0x1 PUSH1 0x40 PUSH0 KECCAK256 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x133 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x133 JUMPI PUSH1 0x4 CALLDATALOAD SWAP1 PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP3 AND DUP1 SWAP3 SUB PUSH2 0x133 JUMPI PUSH1 0x20 SWAP2 PUSH4 0x7965DB0B PUSH1 0xE0 SHL DUP2 EQ SWAP1 DUP2 ISZERO PUSH2 0x564 JUMPI JUMPDEST POP ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL EQ SWAP1 POP DUP4 PUSH2 0x55D JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x133 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP3 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP4 DUP3 LT OR PUSH2 0x5B1 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH1 0x40 PUSH1 0x3 NOT DUP4 ADD SLT PUSH2 0x133 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x133 JUMPI SWAP2 PUSH1 0x24 CALLDATALOAD SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT PUSH2 0x133 JUMPI DUP1 PUSH1 0x23 DUP4 ADD SLT ISZERO PUSH2 0x133 JUMPI DUP2 PUSH1 0x4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x5B1 JUMPI PUSH2 0x627 PUSH1 0x20 DUP3 PUSH1 0x5 SHL ADD PUSH2 0x58B JUMP JUMPDEST SWAP3 PUSH1 0x24 PUSH1 0x20 DUP6 DUP5 DUP2 MSTORE ADD SWAP3 PUSH1 0x5 SHL DUP3 ADD ADD SWAP3 DUP4 GT PUSH2 0x133 JUMPI PUSH1 0x24 ADD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x651 JUMPI POP POP POP SWAP1 JUMP JUMPDEST DUP2 CALLDATALOAD DUP2 MSTORE PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x644 JUMP JUMPDEST DUP1 MLOAD DUP3 LT ISZERO PUSH2 0x675 JUMPI PUSH1 0x20 SWAP2 PUSH1 0x5 SHL ADD ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP1 PUSH0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x6B7 JUMPI PUSH2 0x6A3 DUP4 PUSH2 0x270 DUP4 DUP6 PUSH2 0x661 JUMP JUMPDEST PUSH2 0x6AF JUMPI PUSH1 0x1 ADD PUSH2 0x68C JUMP JUMPDEST POP POP POP PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x6C8 PUSH1 0xE0 PUSH2 0x58B JUMP JUMPDEST PUSH1 0x6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD PUSH1 0xC0 CALLDATASIZE DUP3 CALLDATACOPY DUP2 MLOAD ISZERO PUSH2 0x675 JUMPI PUSH0 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x1 LT ISZERO PUSH2 0x675 JUMPI PUSH32 0xA49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775 PUSH1 0x40 DUP3 ADD MSTORE DUP1 MLOAD PUSH1 0x2 LT ISZERO PUSH2 0x675 JUMPI PUSH32 0x482648E7878E9FA54C0A2F67FFD22D00EBC37CF7A03E060E428D2AB0CD6735CC PUSH1 0x60 DUP3 ADD MSTORE DUP1 MLOAD PUSH1 0x3 LT ISZERO PUSH2 0x675 JUMPI PUSH32 0xEDE9DCDB0CE99DC7CEC9C7BE9246AD08B37853683AD91569C187B647DDF5E21C PUSH1 0x80 DUP3 ADD MSTORE DUP1 MLOAD PUSH1 0x4 LT ISZERO PUSH2 0x675 JUMPI PUSH32 0x58223CDFB69946630D837D40B5C366A584F0217ADA7FDDD8318F2E08603CFA22 PUSH1 0xA0 DUP3 ADD MSTORE DUP1 MLOAD PUSH1 0x5 LT ISZERO PUSH2 0x675 JUMPI PUSH32 0x7B8BB8356A3F32F5C111FF23F050D97F08988E0883529EA7BFF3B918887A6E0E PUSH1 0xC0 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x80A JUMPI JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH0 PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x843 JUMPI POP JUMP JUMPDEST PUSH4 0xE2517D3F PUSH1 0xE0 SHL PUSH0 MSTORE CALLER PUSH1 0x4 MSTORE PUSH1 0x24 MSTORE PUSH1 0x44 PUSH0 REVERT JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x8DB JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP JUMPDEST POP POP PUSH0 SWAP1 JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x8DB JUMPI PUSH0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 SWAP1 SWAP6 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE CALLER SWAP3 SWAP2 SWAP1 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP1 DUP1 LOG4 PUSH1 0x1 SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURN CHAINID PUSH14 0x2DC5900B177C49CF06DF731AAFE7 MUL 0xA7 DUP5 0xBA 0x4C STATICCALL DUP11 PUSH21 0xC57531768359BA64736F6C634300081A0033000000 ",
							"sourceMap": "227:2862:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;227:2862:14;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;227:2862:14;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;227:2862:14;;;;;;;494:34;227:2862;;;;;;;;;-1:-1:-1;;227:2862:14;;;;4723:26:0;227:2862:14;;;;:::i;:::-;4693:18:0;2484:4;4693:18;;3877:6;227:2862:14;3877:6:0;227:2862:14;;3877:22:0;227:2862:14;3877:6:0;227:2862:14;3877:22:0;227:2862:14;3786:120:0;;4693:18;2484:4;:::i;:::-;4723:26;:::i;:::-;227:2862:14;;;;;;;-1:-1:-1;;227:2862:14;;;;;;;413:27;227:2862;;;;;;;;;-1:-1:-1;;227:2862:14;;;;;;;674:34;227:2862;;;;;;;;;-1:-1:-1;;227:2862:14;;;;;;-1:-1:-1;;;;;227:2862:14;;;;;;2369:13;;:::i;:::-;227:2862;2433:13;227:2862;2469:3;227:2862;;2448:19;;;;;2492:29;2500:11;;;;;:::i;:::-;227:2862;2930:6:0;227:2862:14;2930:6:0;227:2862:14;;;2930:6:0;227:2862:14;2930:29:0;227:2862:14;;;;;;-1:-1:-1;227:2862:14;;;;;-1:-1:-1;227:2862:14;;;2830:136:0;;2492:29:14;2488:75;;2469:3;227:2862;;2433:13;;2488:75;227:2862;-1:-1:-1;;227:2862:14;;;;;;;2488:75;;227:2862;;;;;;;;;;;;2448:19;227:2862;2448:19;227:2862;;;;;;;;;;;;-1:-1:-1;;227:2862:14;;;;;;;;;;;;;;;;;-1:-1:-1;;227:2862:14;;;;;;;584:36;227:2862;;;;;;;;;-1:-1:-1;;227:2862:14;;;;;;:::i;:::-;;;;;;;;;;;2930:29:0;227:2862:14;;;;;;-1:-1:-1;227:2862:14;;;;;;-1:-1:-1;227:2862:14;;;;;;;;;;;;;;;;;;:::i;:::-;2484:4:0;;:::i;:::-;227:2862:14;1115:3;227:2862;;1097:16;;;;;1144:8;4306:25:0;1144:8:14;;227:2862;1144:8;;;:::i;:::-;227:2862;2484:4:0;4276:18;;3877:6;227:2862:14;3877:6:0;227:2862:14;;3877:22:0;227:2862:14;3877:6:0;227:2862:14;3877:22:0;227:2862:14;3786:120:0;;2484:4;4306:25;:::i;:::-;;227:2862:14;1082:13;;227:2862;;;;;;-1:-1:-1;;227:2862:14;;;;;;;343:23;227:2862;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;2484:4:0;;:::i;:::-;227:2862:14;1508:3;227:2862;;1490:16;;;;;1538:8;4723:26:0;1538:8:14;;227:2862;1538:8;;;:::i;:::-;227:2862;2484:4:0;4693:18;;3877:6;227:2862:14;3877:6:0;227:2862:14;;3877:22:0;227:2862:14;3877:6:0;227:2862:14;3877:22:0;227:2862:14;3786:120:0;;4723:26;;227:2862:14;1475:13;;227:2862;;;;;;-1:-1:-1;;227:2862:14;;;;;;:::i;:::-;735:10:4;-1:-1:-1;;;;;227:2862:14;;5397:34:0;5393:102;;5505:37;227:2862:14;;;5505:37:0;:::i;5393:102::-;5454:30;;;227:2862:14;5454:30:0;227:2862:14;;5454:30:0;227:2862:14;;;;;;-1:-1:-1;;227:2862:14;;;;4306:25:0;227:2862:14;;;;:::i;:::-;4276:18:0;2484:4;4276:18;;3877:6;227:2862:14;3877:6:0;227:2862:14;;3877:22:0;227:2862:14;3877:6:0;227:2862:14;3877:22:0;227:2862:14;3786:120:0;;227:2862:14;;;;;;-1:-1:-1;;227:2862:14;;;;;;;;3877:6:0;227:2862:14;3877:6:0;227:2862:14;;3877:22:0;227:2862:14;3877:6:0;227:2862:14;3877:22:0;227:2862:14;3786:120:0;;227:2862:14;;;;;;;;;;;;;-1:-1:-1;;227:2862:14;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2649:47:0;;;:87;;;;227:2862:14;;;;;;;2649:87:0;-1:-1:-1;;;829:40:5;;-1:-1:-1;2649:87:0;;;227:2862:14;;;;-1:-1:-1;;;;;227:2862:14;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;227:2862:14;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;227:2862:14;;;;;-1:-1:-1;227:2862:14;;;;-1:-1:-1;;227:2862:14;;;;;;;-1:-1:-1;;;;;227:2862:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;1816:271;;227:2862;1954:3;227:2862;;1936:16;;;;;1977:26;1985:8;;;;;:::i;1977:26::-;1973:76;;227:2862;;1921:13;;1973:76;2023:11;;;227:2862;2023:11;:::o;1936:16::-;;;;227:2862;1816:271;:::o;2723:364::-;227:2862;;;:::i;:::-;2823:1;227:2862;;;;;;;;;;;;;;-1:-1:-1;227:2862:14;;;;2880:1;227:2862;;;;343:23;227:2862;;;;;;2911:1;227:2862;;;;413:27;227:2862;;;;;;2946:1;227:2862;;;;494:34;227:2862;;;;;;2988:1;227:2862;;;;584:36;227:2862;;;;;;;;;;;674:34;227:2862;;;;2723:364;:::o;3175:103:0:-;735:10:4;227:2862:14;;;;;;;;;;;;;3495:23:0;3491:108;;3175:103::o;3491:108::-;3541:47;;;227:2862:14;3541:47:0;735:10:4;3541:47:0;227:2862:14;;;;;;3541:47:0;3175:103;2930:6;227:2862:14;;;;;;;;;;;735:10:4;227:2862:14;;;;;;;;;;3495:23:0;3491:108;;3175:103;:::o;3491:108::-;3541:47;;;2930:6;3541:47;735:10:4;3541:47:0;227:2862:14;;;;2930:6:0;3541:47;6155:316;227:2862:14;;;;;;;;;;;;-1:-1:-1;;;;;227:2862:14;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;227:2862:14;;;;;;;;;;;;;;;-1:-1:-1;;227:2862:14;;;;;735:10:4;;227:2862:14;;6346:40:0;;227:2862:14;6346:40:0;6323:4;6400:11;:::o;6248:217::-;6442:12;;227:2862:14;6442:12:0;:::o;6708:317::-;227:2862:14;;;;;;;;;;;;-1:-1:-1;;;;;227:2862:14;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;227:2862:14;;;;;;;;;;;;;;;-1:-1:-1;;227:2862:14;;;735:10:4;;227:2862:14;;6900:40:0;;227:2862:14;6900:40:0;227:2862:14;6954:11:0;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "491000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ADMIN_ROLE()": "285",
								"AI_ORACLE_ROLE()": "439",
								"DEFAULT_ADMIN_ROLE()": "372",
								"DISPUTE_RESOLVER_ROLE()": "417",
								"MILESTONE_APPROVER_ROLE()": "351",
								"TREASURY_MANAGER_ROLE()": "483",
								"getAllRoles()": "infinite",
								"getRoleAdmin(bytes32)": "2363",
								"getRoleCount(address)": "infinite",
								"grantMultipleRoles(address,bytes32[])": "infinite",
								"grantRole(bytes32,address)": "33311",
								"hasAnyRole(address,bytes32[])": "infinite",
								"hasRole(bytes32,address)": "2660",
								"renounceRole(bytes32,address)": "28901",
								"revokeMultipleRoles(address,bytes32[])": "infinite",
								"revokeRole(bytes32,address)": "33572",
								"supportsInterface(bytes4)": "270"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 227,
									"end": 3089,
									"name": "PUSH",
									"source": 14,
									"value": "80"
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "CALLVALUE",
									"source": 14
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 744,
									"end": 786,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 775,
									"end": 785,
									"name": "CALLER",
									"source": 14
								},
								{
									"begin": 744,
									"end": 786,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 744,
									"end": 786,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 14
								},
								{
									"begin": 744,
									"end": 786,
									"name": "tag",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 744,
									"end": 786,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 744,
									"end": 786,
									"name": "POP",
									"source": 14
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "RETURN",
									"source": 14
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "tag",
									"source": 14,
									"value": "2"
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 2241,
									"end": 2245,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "F0DF3DCDA05B4FBD9C655CDE3D5CEB211E019E72EC816E127A59E7195F2CD7F5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "KECCAK256",
									"source": 14
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "PUSH",
									"source": 14,
									"value": "FF"
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "5"
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 2241,
									"end": 2245,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH data",
									"source": -1,
									"value": "F0DF3DCDA05B4FBD9C655CDE3D5CEB211E019E72EC816E127A59E7195F2CD7F5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "CODECOPY",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MLOAD",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SWAP2",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "PUSH",
									"source": 14,
									"value": "20"
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "PUSH",
									"source": 14,
									"value": "40"
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "KECCAK256",
									"source": 14
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "SLOAD",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "AND",
									"source": 14
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "PUSH",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "OR",
									"source": 14
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "SSTORE",
									"source": 14
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 735,
									"end": 745,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 227,
									"end": 3089,
									"name": "SWAP1",
									"source": 14
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 2241,
									"end": 2245,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2241,
									"end": 2245,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 6323,
									"end": 6327,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6400,
									"end": 6411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6442,
									"end": 6454,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2241,
									"end": 2245,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6442,
									"end": 6454,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 6442,
									"end": 6454,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f3466d2dc5900b177c49cf06df731aafe702a784ba4cfa8a74c57531768359ba64736f6c634300081a0033",
									".code": [
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "13"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "1FFC9A7"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "248A9CA3"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "2F2FF15D"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "36568ABE"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "4FE9D1F5"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "68CA78F9"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "75B238FC"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "91B9F9D8"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "91D14854"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "A02D72FB"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "A217FDDF"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "35"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "ACA5A8A7"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "37"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "BFE42A37"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "39"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "C601F7AF"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "D547741F"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "EBDF690F"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "45"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "F2BCAC3D"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "47"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 227,
											"end": 3089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "53"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "55"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "55"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "45"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 494,
											"end": 528,
											"name": "PUSH",
											"source": 14,
											"value": "EDE9DCDB0CE99DC7CEC9C7BE9246AD08B37853683AD91569C187B647DDF5E21C"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "43"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4723,
											"end": 4749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "66"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 227,
											"end": 3089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "66"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 4723,
											"end": 4749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4723,
											"end": 4749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "STOP",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 413,
											"end": 440,
											"name": "PUSH",
											"source": 14,
											"value": "482648E7878E9FA54C0A2F67FFD22D00EBC37CF7A03E060E428D2AB0CD6735CC"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "39"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 674,
											"end": 708,
											"name": "PUSH",
											"source": 14,
											"value": "7B8BB8356A3F32F5C111FF23F050D97F08988E0883529EA7BFF3B918887A6E0E"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "37"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "83"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 2369,
											"end": 2382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "tag",
											"source": 14,
											"value": "83"
										},
										{
											"begin": 2369,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2433,
											"end": 2446,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2469,
											"end": 2472,
											"name": "tag",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 2469,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2448,
											"end": 2467,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2448,
											"end": 2467,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 2448,
											"end": 2467,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2448,
											"end": 2467,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "85"
										},
										{
											"begin": 2448,
											"end": 2467,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2492,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "87"
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "88"
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 2500,
											"end": 2511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "tag",
											"source": 14,
											"value": "88"
										},
										{
											"begin": 2500,
											"end": 2511,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "AND",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2492,
											"end": 2521,
											"name": "tag",
											"source": 14,
											"value": "87"
										},
										{
											"begin": 2492,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2488,
											"end": 2563,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 2488,
											"end": 2563,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2469,
											"end": 2472,
											"name": "tag",
											"source": 14,
											"value": "90"
										},
										{
											"begin": 2469,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2433,
											"end": 2446,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 2433,
											"end": 2446,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2488,
											"end": 2563,
											"name": "tag",
											"source": 14,
											"value": "89"
										},
										{
											"begin": 2488,
											"end": 2563,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "91"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2488,
											"end": 2563,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "90"
										},
										{
											"begin": 2488,
											"end": 2563,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "91"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2448,
											"end": 2467,
											"name": "tag",
											"source": 14,
											"value": "85"
										},
										{
											"begin": 2448,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2467,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "35"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "33"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 584,
											"end": 620,
											"name": "PUSH",
											"source": 14,
											"value": "58223CDFB69946630D837D40B5C366A584F0217ADA7FDDD8318F2E08603CFA22"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "105"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 227,
											"end": 3089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "105"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "AND",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "29"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "108"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 227,
											"end": 3089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "108"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1115,
											"end": 1118,
											"name": "tag",
											"source": 14,
											"value": "110"
										},
										{
											"begin": 1115,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1097,
											"end": 1113,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1097,
											"end": 1113,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 1097,
											"end": 1113,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1097,
											"end": 1113,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "65"
										},
										{
											"begin": 1097,
											"end": 1113,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1144,
											"end": 1152,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4306,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1144,
											"end": 1152,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1144,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "114"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1144,
											"end": 1152,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 1144,
											"end": 1152,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1144,
											"end": 1152,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 1144,
											"end": 1152,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1144,
											"end": 1152,
											"name": "tag",
											"source": 14,
											"value": "114"
										},
										{
											"begin": 1144,
											"end": 1152,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4306,
											"end": 4331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 4306,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4306,
											"end": 4331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1082,
											"end": 1095,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "110"
										},
										{
											"begin": 1082,
											"end": 1095,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 343,
											"end": 366,
											"name": "PUSH",
											"source": 14,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "25"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "124"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 227,
											"end": 3089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "124"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 227,
											"end": 3089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "123"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "127"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 227,
											"end": 3089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "127"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2484,
											"end": 2488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1508,
											"end": 1511,
											"name": "tag",
											"source": 14,
											"value": "129"
										},
										{
											"begin": 1508,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1490,
											"end": 1506,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1490,
											"end": 1506,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 1490,
											"end": 1506,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1490,
											"end": 1506,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "65"
										},
										{
											"begin": 1490,
											"end": 1506,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1538,
											"end": 1546,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4723,
											"end": 4749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 1538,
											"end": 1546,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1538,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "133"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 1538,
											"end": 1546,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 1538,
											"end": 1546,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 1538,
											"end": 1546,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 1538,
											"end": 1546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1538,
											"end": 1546,
											"name": "tag",
											"source": 14,
											"value": "133"
										},
										{
											"begin": 1538,
											"end": 1546,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 4723,
											"end": 4749,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4723,
											"end": 4749,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1475,
											"end": 1488,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "129"
										},
										{
											"begin": 1475,
											"end": 1488,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "21"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "140"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 227,
											"end": 3089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "140"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5505,
											"end": 5542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "334BD919"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 0,
											"value": "E1"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "19"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4306,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "149"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 227,
											"end": 3089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "149"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "17"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "156"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "156"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLVALUE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFF"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "164"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "RETURN",
											"source": 14
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 829,
											"end": 869,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 829,
											"end": 869,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "167"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "167"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "23"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "167"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "179"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 227,
											"end": 3089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "179"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "51"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "182"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "183"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "183"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "182"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "185"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "185"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "tag",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "tag",
											"source": 14,
											"value": "187"
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 1936,
											"end": 1952,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1936,
											"end": 1952,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 1936,
											"end": 1952,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1936,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "188"
										},
										{
											"begin": 1936,
											"end": 1952,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1977,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "190"
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "88"
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1985,
											"end": 1993,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 1985,
											"end": 1993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1977,
											"end": 2003,
											"name": "tag",
											"source": 14,
											"value": "190"
										},
										{
											"begin": 1977,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1973,
											"end": 2049,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "192"
										},
										{
											"begin": 1973,
											"end": 2049,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1921,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "187"
										},
										{
											"begin": 1921,
											"end": 1934,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1973,
											"end": 2049,
											"name": "tag",
											"source": 14,
											"value": "192"
										},
										{
											"begin": 1973,
											"end": 2049,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2023,
											"end": 2034,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2023,
											"end": 2034,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2023,
											"end": 2034,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 2023,
											"end": 2034,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2023,
											"end": 2034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1936,
											"end": 1952,
											"name": "tag",
											"source": 14,
											"value": "188"
										},
										{
											"begin": 1936,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1936,
											"end": 1952,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1936,
											"end": 1952,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1936,
											"end": 1952,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1816,
											"end": 2087,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1816,
											"end": 2087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "tag",
											"source": 14,
											"value": "8"
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "194"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 227,
											"end": 3089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "tag",
											"source": 14,
											"value": "194"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2823,
											"end": 2824,
											"name": "PUSH",
											"source": 14,
											"value": "6"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "C0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLDATASIZE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "185"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2880,
											"end": 2881,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "185"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 343,
											"end": 366,
											"name": "PUSH",
											"source": 14,
											"value": "A49807205CE4D355092EF5A8A18F56E8913CF4A201FBE287825B095693C21775"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2911,
											"end": 2912,
											"name": "PUSH",
											"source": 14,
											"value": "2"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "185"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 413,
											"end": 440,
											"name": "PUSH",
											"source": 14,
											"value": "482648E7878E9FA54C0A2F67FFD22D00EBC37CF7A03E060E428D2AB0CD6735CC"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2946,
											"end": 2947,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "185"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 494,
											"end": 528,
											"name": "PUSH",
											"source": 14,
											"value": "EDE9DCDB0CE99DC7CEC9C7BE9246AD08B37853683AD91569C187B647DDF5E21C"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 2988,
											"end": 2989,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "185"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 584,
											"end": 620,
											"name": "PUSH",
											"source": 14,
											"value": "58223CDFB69946630D837D40B5C366A584F0217ADA7FDDD8318F2E08603CFA22"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "185"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 674,
											"end": 708,
											"name": "PUSH",
											"source": 14,
											"value": "7B8BB8356A3F32F5C111FF23F050D97F08988E0883529EA7BFF3B918887A6E0E"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "C0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2723,
											"end": 3087,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2723,
											"end": 3087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "AD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3495,
											"end": 3518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 3495,
											"end": 3518,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3175,
											"end": 3278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "E2517D3F"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "211"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 6323,
											"end": 6327,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6400,
											"end": 6411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6442,
											"end": 6454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "FF"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "211"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 735,
											"end": 745,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 227,
											"end": 3089,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6954,
											"end": 6965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										}
									]
								},
								"F0DF3DCDA05B4FBD9C655CDE3D5CEB211E019E72EC816E127A59E7195F2CD7F5": "ad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5"
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol",
								"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol",
								"CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol",
								"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol",
								"CrossFi-Treasury-Guard/contracts/interfaces/IAIScoreRegistry.sol",
								"CrossFi-Treasury-Guard/contracts/interfaces/IProposalRegistry.sol",
								"CrossFi-Treasury-Guard/contracts/interfaces/ITreasuryEscrow.sol",
								"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ADMIN_ROLE()": "75b238fc",
							"AI_ORACLE_ROLE()": "c601f7af",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"DISPUTE_RESOLVER_ROLE()": "bfe42a37",
							"MILESTONE_APPROVER_ROLE()": "a02d72fb",
							"TREASURY_MANAGER_ROLE()": "ebdf690f",
							"getAllRoles()": "f2bcac3d",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getRoleCount(address)": "aca5a8a7",
							"grantMultipleRoles(address,bytes32[])": "91b9f9d8",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasAnyRole(address,bytes32[])": "68ca78f9",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeMultipleRoles(address,bytes32[])": "4fe9d1f5",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"AI_ORACLE_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DISPUTE_RESOLVER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MILESTONE_APPROVER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TREASURY_MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllRoles\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getRoleCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"roleCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"}],\"name\":\"grantMultipleRoles\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"}],\"name\":\"hasAnyRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"roles\",\"type\":\"bytes32[]\"}],\"name\":\"revokeMultipleRoles\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extended access control with custom roles for CrossFi Treasury Guard\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getAllRoles()\":{\"details\":\"Get all available roles\",\"returns\":{\"roles\":\"Array of all role identifiers\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleCount(address)\":{\"details\":\"Get all roles for an account\",\"params\":{\"account\":\"Account to check\"},\"returns\":{\"roleCount\":\"Number of roles the account has\"}},\"grantMultipleRoles(address,bytes32[])\":{\"details\":\"Grant multiple roles to an account\",\"params\":{\"account\":\"Account to grant roles to\",\"roles\":\"Array of role identifiers\"}},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasAnyRole(address,bytes32[])\":{\"details\":\"Check if account has any of the specified roles\",\"params\":{\"account\":\"Account to check\",\"roles\":\"Array of role identifiers\"},\"returns\":{\"_0\":\"hasAnyRole True if account has at least one of the roles\"}},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeMultipleRoles(address,bytes32[])\":{\"details\":\"Revoke multiple roles from an account\",\"params\":{\"account\":\"Account to revoke roles from\",\"roles\":\"Array of role identifiers\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"title\":\"AccessControl\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":\"ExtendedAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol\":{\"keccak256\":\"0x8b7cd81ef25f52c2cdffb0879b4c8d953d671eef13fa1ebdda28c0c2e16c52da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc0018431667094cdb37883ffc7417dfd2c552844692f1340143f4e7e4b903f3\",\"dweb:/ipfs/QmPdnh9tbMBQCaazQ2fzbQSKKxkERU75TcSDZ9KVfDhujb\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol:ExtendedAccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)22_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)22_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)22_storage"
							},
							"t_struct(RoleData)22_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 19,
										"contract": "CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol:ExtendedAccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 21,
										"contract": "CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol:ExtendedAccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							296
						],
						"Context": [
							582
						],
						"ERC165": [
							606
						],
						"IAccessControl": [
							379
						],
						"IERC165": [
							618
						]
					},
					"id": 297,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 380,
							"src": "134:52:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 379,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 583,
							"src": "187:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 582,
										"src": "195:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 297,
							"sourceUnit": 607,
							"src": "233:66:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 618,
										"src": "241:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 7,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 606,
										"src": "250:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 10,
										"name": "Context",
										"nameLocations": [
											"1997:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 582,
										"src": "1997:7:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:7:0"
								},
								{
									"baseName": {
										"id": 12,
										"name": "IAccessControl",
										"nameLocations": [
											"2006:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 379,
										"src": "2006:14:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "2006:14:0"
								},
								{
									"baseName": {
										"id": 14,
										"name": "ERC165",
										"nameLocations": [
											"2022:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 606,
										"src": "2022:6:0"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "2022:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 9,
								"nodeType": "StructuredDocumentation",
								"src": "301:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 296,
							"linearizedBaseContracts": [
								296,
								606,
								618,
								379,
								582
							],
							"name": "AccessControl",
							"nameLocation": "1980:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 22,
									"members": [
										{
											"constant": false,
											"id": 19,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2094:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "2061:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 18,
												"keyName": "account",
												"keyNameLocation": "2077:7:0",
												"keyType": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2061:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2088:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 21,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2119:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 22,
											"src": "2111:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 20,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2111:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2042:8:0",
									"nodeType": "StructDefinition",
									"scope": 296,
									"src": "2035:100:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2183:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 296,
									"src": "2141:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 26,
										"keyName": "role",
										"keyNameLocation": "2157:4:0",
										"keyType": {
											"id": 23,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2149:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2141:33:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 25,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 24,
												"name": "RoleData",
												"nameLocations": [
													"2165:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 22,
												"src": "2165:8:0"
											},
											"referencedDeclaration": 22,
											"src": "2165:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$22_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 30,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2220:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 296,
									"src": "2196:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 28,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2196:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 29,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2241:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 40,
										"nodeType": "Block",
										"src": "2463:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 36,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "2484:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 35,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															94,
															115
														],
														"referencedDeclaration": 94,
														"src": "2473:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2473:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "2473:16:0"
											},
											{
												"id": 39,
												"nodeType": "PlaceholderStatement",
												"src": "2499:1:0"
											}
										]
									},
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "2252:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 41,
									"name": "onlyRole",
									"nameLocation": "2440:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2457:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "2449:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 32,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2448:14:0"
									},
									"src": "2431:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										605
									],
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "2632:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 55,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 50,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "2649:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 52,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 379,
																		"src": "2669:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$379_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$379_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 51,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2664:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 53,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2664:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$379",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2685:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2664:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2649:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 58,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 44,
																"src": "2724:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 56,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2700:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$296_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2706:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 605,
															"src": "2700:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2700:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2649:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 49,
												"id": 61,
												"nodeType": "Return",
												"src": "2642:94:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "2513:23:0",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2550:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 46,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2608:8:0"
									},
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2575:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2568:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 43,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2567:20:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "2626:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 47,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2626:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2625:6:0"
									},
									"scope": 296,
									"src": "2541:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										346
									],
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2913:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 73,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "2930:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 75,
															"indexExpression": {
																"id": 74,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "2937:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2930:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$22_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2943:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "2930:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 78,
													"indexExpression": {
														"id": 77,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "2951:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2930:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 72,
												"id": 79,
												"nodeType": "Return",
												"src": "2923:36:0"
											}
										]
									},
									"documentation": {
										"id": 64,
										"nodeType": "StructuredDocumentation",
										"src": "2749:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2839:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2855:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2847:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 65,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2847:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2869:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2861:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 67,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2861:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2846:31:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2907:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 70,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2907:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2906:6:0"
									},
									"scope": 296,
									"src": "2830:136:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "3231:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 88,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 84,
															"src": "3252:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 89,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 564,
																"src": "3258:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3258:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 87,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															94,
															115
														],
														"referencedDeclaration": 115,
														"src": "3241:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3241:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "ExpressionStatement",
												"src": "3241:30:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2972:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 94,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3184:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3203:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "3195:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 83,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3194:14:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:0"
									},
									"scope": 296,
									"src": "3175:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "3481:124:0",
										"statements": [
											{
												"condition": {
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3495:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 103,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3504:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 104,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 99,
																"src": "3510:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 102,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "3496:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3496:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 113,
												"nodeType": "IfStatement",
												"src": "3491:108:0",
												"trueBody": {
													"id": 112,
													"nodeType": "Block",
													"src": "3520:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 108,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 99,
																		"src": "3574:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 109,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 97,
																		"src": "3583:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 107,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "3541:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3541:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 111,
															"nodeType": "RevertStatement",
															"src": "3534:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "3284:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3417:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3436:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3428:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 96,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3450:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "3442:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 98,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3442:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3427:31:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3481:0:0"
									},
									"scope": 296,
									"src": "3408:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										354
									],
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "3860:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 123,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "3877:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 125,
														"indexExpression": {
															"id": 124,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "3884:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3877:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$22_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3890:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 21,
													"src": "3877:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 122,
												"id": 127,
												"nodeType": "Return",
												"src": "3870:29:0"
											}
										]
									},
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "3611:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3795:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3816:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3808:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 117,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:14:0"
									},
									"returnParameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "3851:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 120,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:9:0"
									},
									"scope": 296,
									"src": "3786:120:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										362
									],
									"body": {
										"id": 147,
										"nodeType": "Block",
										"src": "4296:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 143,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "4317:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 144,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "4323:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 142,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "4306:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4306:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "4306:25:0"
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "3912:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 148,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 138,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 132,
															"src": "4289:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 137,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4276:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 140,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 136,
												"name": "onlyRole",
												"nameLocations": [
													"4267:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "4267:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4267:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4211:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4229:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "4221:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4221:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4243:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 148,
												"src": "4235:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4235:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4220:31:0"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4296:0:0"
									},
									"scope": 296,
									"src": "4202:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										370
									],
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "4713:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 162,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "4735:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 163,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4741:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 161,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "4723:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4723:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "4723:26:0"
											}
										]
									},
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "4344:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 157,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "4706:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 156,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "4693:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4693:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 159,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 155,
												"name": "onlyRole",
												"nameLocations": [
													"4684:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "4684:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4684:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4627:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4646:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4638:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 150,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "4652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4637:31:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4713:0:0"
									},
									"scope": 296,
									"src": "4618:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										378
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "5383:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 175,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "5397:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 176,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "5419:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5419:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5397:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 183,
												"nodeType": "IfStatement",
												"src": "5393:102:0",
												"trueBody": {
													"id": 182,
													"nodeType": "Block",
													"src": "5433:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 179,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 309,
																	"src": "5454:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5454:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 181,
															"nodeType": "RevertStatement",
															"src": "5447:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "5517:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 186,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "5523:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "5505:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5505:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5505:37:0"
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "4762:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5313:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5334:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5326:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 169,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5348:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5340:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5325:42:0"
									},
									"returnParameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5383:0:0"
									},
									"scope": 296,
									"src": "5304:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 217,
										"nodeType": "Block",
										"src": "5747:174:0",
										"statements": [
											{
												"assignments": [
													199
												],
												"declarations": [
													{
														"constant": false,
														"id": 199,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5765:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 217,
														"src": "5757:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 198,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5757:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 203,
												"initialValue": {
													"arguments": [
														{
															"id": 201,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5798:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 200,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "5785:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5785:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5757:46:0"
											},
											{
												"expression": {
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 204,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 27,
																"src": "5813:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 206,
															"indexExpression": {
																"id": 205,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 193,
																"src": "5820:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5813:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$22_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5826:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 21,
														"src": "5813:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 208,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "5838:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5813:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 210,
												"nodeType": "ExpressionStatement",
												"src": "5813:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 212,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5879:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 213,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "5885:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 214,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "5904:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 211,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 318,
														"src": "5862:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5862:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 216,
												"nodeType": "EmitStatement",
												"src": "5857:57:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5555:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5683:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5705:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5697:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5697:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5719:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 218,
												"src": "5711:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 194,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5696:33:0"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5747:0:0"
									},
									"scope": 296,
									"src": "5674:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "6238:233:0",
										"statements": [
											{
												"condition": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6252:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 229,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "6261:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 230,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 223,
																"src": "6267:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 228,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "6253:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6253:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 254,
													"nodeType": "Block",
													"src": "6428:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6449:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 227,
															"id": 253,
															"nodeType": "Return",
															"src": "6442:12:0"
														}
													]
												},
												"id": 255,
												"nodeType": "IfStatement",
												"src": "6248:217:0",
												"trueBody": {
													"id": 251,
													"nodeType": "Block",
													"src": "6277:145:0",
													"statements": [
														{
															"expression": {
																"id": 240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 233,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 27,
																				"src": "6291:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 235,
																			"indexExpression": {
																				"id": 234,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 221,
																				"src": "6298:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6291:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$22_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 236,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6304:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 19,
																		"src": "6291:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 238,
																	"indexExpression": {
																		"id": 237,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 223,
																		"src": "6312:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6291:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6323:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6291:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 241,
															"nodeType": "ExpressionStatement",
															"src": "6291:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 243,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "6358:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 244,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 223,
																		"src": "6364:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 245,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 564,
																			"src": "6373:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 246,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6373:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 242,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 327,
																	"src": "6346:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6346:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 248,
															"nodeType": "EmitStatement",
															"src": "6341:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6407:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 227,
															"id": 250,
															"nodeType": "Return",
															"src": "6400:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "5927:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6164:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6183:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6175:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 220,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6175:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6197:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6189:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6189:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6174:31:0"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "6232:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6232:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6231:6:0"
									},
									"scope": 296,
									"src": "6155:316:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 294,
										"nodeType": "Block",
										"src": "6792:233:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 268,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "6814:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 269,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 262,
															"src": "6820:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 267,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "6806:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6806:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 292,
													"nodeType": "Block",
													"src": "6982:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7003:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 266,
															"id": 291,
															"nodeType": "Return",
															"src": "6996:12:0"
														}
													]
												},
												"id": 293,
												"nodeType": "IfStatement",
												"src": "6802:217:0",
												"trueBody": {
													"id": 289,
													"nodeType": "Block",
													"src": "6830:146:0",
													"statements": [
														{
															"expression": {
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 271,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 27,
																				"src": "6844:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$22_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 273,
																			"indexExpression": {
																				"id": 272,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 260,
																				"src": "6851:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6844:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$22_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 274,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6857:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 19,
																		"src": "6844:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 276,
																	"indexExpression": {
																		"id": 275,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "6865:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6844:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6876:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6844:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 279,
															"nodeType": "ExpressionStatement",
															"src": "6844:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 281,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "6912:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 282,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 262,
																		"src": "6918:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 283,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 564,
																			"src": "6927:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6927:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 280,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "6900:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6900:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 286,
															"nodeType": "EmitStatement",
															"src": "6895:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6961:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 266,
															"id": 288,
															"nodeType": "Return",
															"src": "6954:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "6477:226:0",
										"text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6717:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6737:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6729:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 259,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6729:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6751:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6743:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6743:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6728:31:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "6786:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 264,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6786:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6785:6:0"
									},
									"scope": 296,
									"src": "6708:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 297,
							"src": "1962:5065:0",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336
							]
						}
					],
					"src": "108:6920:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							379
						]
					},
					"id": 380,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 298,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 299,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:1",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 379,
							"linearizedBaseContracts": [
								379
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:1",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 306,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "357:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "374:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 303,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:1"
									},
									"src": "318:76:1"
								},
								{
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:1",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 309,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:1"
									},
									"src": "553:37:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 310,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 318,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "878:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 311,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "900:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 313,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "935:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 315,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:1"
									},
									"src": "855:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 327,
									"name": "RoleGranted",
									"nameLocation": "1277:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1289:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 320,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1311:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "1336:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 324,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:1"
									},
									"src": "1271:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 336,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1664:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 329,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1686:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1711:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:1"
									},
									"src": "1646:89:1"
								},
								{
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 346,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1839:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 338,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1853:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:1"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "1893:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 343,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:1"
									},
									"scope": 379,
									"src": "1822:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 354,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2116:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 348,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:1"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2153:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 351,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:1"
									},
									"scope": 379,
									"src": "2094:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 355,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 357,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2431:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 356,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2445:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:1"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:1"
									},
									"scope": 379,
									"src": "2412:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 370,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2725:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 364,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "2739:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:1"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:1"
									},
									"scope": 379,
									"src": "2705:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 378,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "3289:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 372,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "3303:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:1"
									},
									"returnParameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:1"
									},
									"scope": 379,
									"src": "3267:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 380,
							"src": "226:3116:1",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336
							]
						}
					],
					"src": "109:3234:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							582
						],
						"Pausable": [
							487
						]
					},
					"id": 488,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 381,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 382,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 488,
							"sourceUnit": 583,
							"src": "130:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 384,
										"name": "Context",
										"nameLocations": [
											"632:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 582,
										"src": "632:7:2"
									},
									"id": 385,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:2"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 383,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:2",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 487,
							"linearizedBaseContracts": [
								487,
								582
							],
							"name": "Pausable",
							"nameLocation": "620:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:2",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 390,
									"name": "Paused",
									"nameLocation": "730:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "737:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:2"
									},
									"src": "724:30:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:2",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 395,
									"name": "Unpaused",
									"nameLocation": "841:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "850:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:2"
									},
									"src": "835:32:2"
								},
								{
									"constant": false,
									"id": 397,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 487,
									"src": "873:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 396,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "986:32:2",
										"statements": [
											{
												"expression": {
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 401,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "996:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 402,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "996:15:2"
											}
										]
									},
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:2",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 406,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:2"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:2"
									},
									"scope": 487,
									"src": "972:46:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "1229:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 409,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 443,
														"src": "1239:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:2"
											},
											{
												"id": 412,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:2"
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:2",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 414,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:2"
									},
									"src": "1204:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "1476:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 417,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "1486:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 419,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:2"
											},
											{
												"id": 420,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:2"
											}
										]
									},
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:2",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 422,
									"name": "whenPaused",
									"nameLocation": "1463:10:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:2"
									},
									"src": "1454:66:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "1668:31:2",
										"statements": [
											{
												"expression": {
													"id": 428,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 397,
													"src": "1685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 427,
												"id": 429,
												"nodeType": "Return",
												"src": "1678:14:2"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:2",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:2"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "1662:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 425,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:2"
									},
									"scope": 487,
									"src": "1615:84:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 442,
										"nodeType": "Block",
										"src": "1818:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:2",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 436,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 431,
																	"src": "1837:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 435,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:2"
											}
										]
									},
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:2",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:2"
									},
									"returnParameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:2"
									},
									"scope": 487,
									"src": "1767:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "1993:58:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 448,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 431,
																"src": "2011:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 447,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 452,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:2"
											}
										]
									},
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:2",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:2"
									},
									"returnParameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:2"
									},
									"scope": 487,
									"src": "1945:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 469,
										"nodeType": "Block",
										"src": "2235:66:2",
										"statements": [
											{
												"expression": {
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 460,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "2245:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 461,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 463,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 465,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 564,
																"src": "2281:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 464,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "2274:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 468,
												"nodeType": "EmitStatement",
												"src": "2269:25:2"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:2",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 470,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 458,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 457,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 414,
												"src": "2221:13:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:2"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:2"
									},
									"returnParameters": {
										"id": 459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:2"
									},
									"scope": 487,
									"src": "2186:115:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 485,
										"nodeType": "Block",
										"src": "2481:69:2",
										"statements": [
											{
												"expression": {
													"id": 478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 476,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "2491:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 477,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 479,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 481,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 564,
																"src": "2530:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 482,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 480,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 395,
														"src": "2521:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 484,
												"nodeType": "EmitStatement",
												"src": "2516:27:2"
											}
										]
									},
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:2",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 486,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 474,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 473,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 422,
												"src": "2470:10:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:2"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:2"
									},
									"returnParameters": {
										"id": 475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:2"
									},
									"scope": 487,
									"src": "2433:117:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 488,
							"src": "602:1950:2",
							"usedErrors": [],
							"usedEvents": [
								390,
								395
							]
						}
					],
					"src": "105:2448:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							552
						]
					},
					"id": 553,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 489,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 490,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 552,
							"linearizedBaseContracts": [
								552
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 493,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 552,
									"src": "1676:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 491,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 492,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 496,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 552,
									"src": "1723:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 494,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 495,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 498,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 552,
									"src": "1767:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 497,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 505,
										"nodeType": "Block",
										"src": "1811:39:3",
										"statements": [
											{
												"expression": {
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 501,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "1821:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 502,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "1831:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:3"
											}
										]
									},
									"id": 506,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:3"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:3"
									},
									"scope": 552,
									"src": "1797:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "2251:79:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 509,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "2261:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:3"
											},
											{
												"id": 512,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 513,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "2303:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 515,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:3"
											}
										]
									},
									"documentation": {
										"id": 507,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 517,
									"name": "nonReentrant",
									"nameLocation": "2236:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:3"
									},
									"src": "2227:103:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 531,
										"nodeType": "Block",
										"src": "2375:248:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 521,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 498,
																"src": "2468:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 522,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 496,
																"src": "2479:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 520,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:3"
											},
											{
												"expression": {
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 527,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "2598:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 528,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "2608:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 530,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:3"
											}
										]
									},
									"id": 532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:3"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:3"
									},
									"scope": 552,
									"src": "2336:287:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "2667:171:3",
										"statements": [
											{
												"expression": {
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 535,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "2809:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 536,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 493,
														"src": "2819:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:3"
											}
										]
									},
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:3"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:3"
									},
									"scope": 552,
									"src": "2629:209:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 550,
										"nodeType": "Block",
										"src": "3081:43:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 546,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "3098:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 547,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 496,
														"src": "3109:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 545,
												"id": 549,
												"nodeType": "Return",
												"src": "3091:26:3"
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:3",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 551,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:3"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "3075:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 543,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:3"
									},
									"scope": 552,
									"src": "3017:107:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 553,
							"src": "888:2238:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							582
						]
					},
					"id": 583,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 554,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 555,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 582,
							"linearizedBaseContracts": [
								582
							],
							"name": "Context",
							"nameLocation": "642:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "718:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 560,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 559,
												"id": 562,
												"nodeType": "Return",
												"src": "728:17:4"
											}
										]
									},
									"id": 564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:4"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "709:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:4"
									},
									"scope": 582,
									"src": "656:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "825:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 569,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 568,
												"id": 571,
												"nodeType": "Return",
												"src": "835:15:4"
											}
										]
									},
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:4"
									},
									"returnParameters": {
										"id": 568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "809:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 566,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:4"
									},
									"scope": 582,
									"src": "758:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "935:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 577,
												"id": 579,
												"nodeType": "Return",
												"src": "945:8:4"
											}
										]
									},
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:4"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "926:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:4"
									},
									"scope": 582,
									"src": "863:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 583,
							"src": "624:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							606
						],
						"IERC165": [
							618
						]
					},
					"id": 607,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 584,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 586,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 607,
							"sourceUnit": 619,
							"src": "140:38:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 585,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 618,
										"src": "148:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 588,
										"name": "IERC165",
										"nameLocations": [
											"688:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 618,
										"src": "688:7:5"
									},
									"id": 589,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:5"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 587,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:5",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 606,
							"linearizedBaseContracts": [
								606,
								618
							],
							"name": "ERC165",
							"nameLocation": "678:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										617
									],
									"body": {
										"id": 604,
										"nodeType": "Block",
										"src": "812:64:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 597,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 592,
														"src": "829:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 599,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 618,
																	"src": "849:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$618_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$618_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 598,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "844:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 600,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "844:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$618",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "858:11:5",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "844:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "829:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 596,
												"id": 603,
												"nodeType": "Return",
												"src": "822:47:5"
											}
										]
									},
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "702:23:5",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "739:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "764:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "757:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 591,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "757:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:20:5"
									},
									"returnParameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "806:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 594,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "806:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "805:6:5"
									},
									"scope": 606,
									"src": "730:146:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 607,
							"src": "660:218:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:765:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							618
						]
					},
					"id": 619,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 608,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 609,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:6",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 618,
							"linearizedBaseContracts": [
								618
							],
							"name": "IERC165",
							"nameLocation": "433:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 610,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:6",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 617,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "819:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 611,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:6"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "862:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 614,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:6"
									},
									"scope": 618,
									"src": "792:76:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 619,
							"src": "423:447:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:6"
				},
				"id": 6
			},
			"CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol": {
				"ast": {
					"absolutePath": "CrossFi-Treasury-Guard/contracts/ProposalRegistry.sol",
					"exportedSymbols": {
						"AccessControl": [
							296
						],
						"Context": [
							582
						],
						"ERC165": [
							606
						],
						"ExtendedAccessControl": [
							2431
						],
						"IAIScoreRegistry": [
							1976
						],
						"IAccessControl": [
							379
						],
						"IERC165": [
							618
						],
						"IProposalRegistry": [
							2121
						],
						"ITreasuryEscrow": [
							2185
						],
						"Pausable": [
							487
						],
						"ProposalRegistry": [
							818
						],
						"ProposalRegistryBase": [
							1519
						],
						"ProposalSubmission": [
							1611
						],
						"ProposalVoting": [
							1915
						],
						"ReentrancyGuard": [
							552
						]
					},
					"id": 819,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 620,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"absolutePath": "CrossFi-Treasury-Guard/contracts/ProposalVoting.sol",
							"file": "./ProposalVoting.sol",
							"id": 621,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 819,
							"sourceUnit": 1916,
							"src": "58:30:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "CrossFi-Treasury-Guard/contracts/interfaces/IProposalRegistry.sol",
							"file": "./interfaces/IProposalRegistry.sol",
							"id": 622,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 819,
							"sourceUnit": 2122,
							"src": "89:44:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 623,
										"name": "IProposalRegistry",
										"nameLocations": [
											"164:17:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2121,
										"src": "164:17:7"
									},
									"id": 624,
									"nodeType": "InheritanceSpecifier",
									"src": "164:17:7"
								},
								{
									"baseName": {
										"id": 625,
										"name": "ProposalVoting",
										"nameLocations": [
											"183:14:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1915,
										"src": "183:14:7"
									},
									"id": 626,
									"nodeType": "InheritanceSpecifier",
									"src": "183:14:7"
								}
							],
							"canonicalName": "ProposalRegistry",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 818,
							"linearizedBaseContracts": [
								818,
								1915,
								1611,
								1519,
								487,
								552,
								2431,
								296,
								606,
								618,
								379,
								582,
								2121
							],
							"name": "ProposalRegistry",
							"nameLocation": "144:16:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 637,
										"nodeType": "Block",
										"src": "331:2:7",
										"statements": []
									},
									"id": 638,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 633,
													"name": "_aiScoreRegistry",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 628,
													"src": "296:16:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 634,
													"name": "_treasuryEscrow",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 630,
													"src": "314:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 635,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 632,
												"name": "ProposalRegistryBase",
												"nameLocations": [
													"275:20:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1519,
												"src": "275:20:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "275:55:7"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "_aiScoreRegistry",
												"nameLocation": "224:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "216:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "216:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "_treasuryEscrow",
												"nameLocation": "250:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "242:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "242:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "215:51:7"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "331:0:7"
									},
									"scope": 818,
									"src": "204:129:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1542,
										2065
									],
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "528:134:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 657,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 650,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "546:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "550:5:7",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "546:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000_by_1",
																	"typeString": "int_const 1000000000000000"
																},
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "302e303031",
																	"id": 652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "559:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1000",
																		"typeString": "rational_const 1 / 1000"
																	},
																	"value": "0.001"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"id": 655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "3130",
																		"id": 653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "567:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10_by_1",
																			"typeString": "int_const 10"
																		},
																		"value": "10"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "**",
																	"rightExpression": {
																		"hexValue": "3138",
																		"id": 654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "571:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_18_by_1",
																			"typeString": "int_const 18"
																		},
																		"value": "18"
																	},
																	"src": "567:6:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																},
																"src": "559:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000_by_1",
																	"typeString": "int_const 1000000000000000"
																}
															},
															"src": "546:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742070726f706f73616c20666565",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "575:27:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e556687448f872f8591d3d226ac5a0afb03384ac584060299329bc19ebe6cef0",
																"typeString": "literal_string \"Insufficient proposal fee\""
															},
															"value": "Insufficient proposal fee"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e556687448f872f8591d3d226ac5a0afb03384ac584060299329bc19ebe6cef0",
																"typeString": "literal_string \"Insufficient proposal fee\""
															}
														],
														"id": 649,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "538:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "538:65:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "538:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 662,
															"name": "input",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 641,
															"src": "649:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ProposalInput_$2057_memory_ptr",
																"typeString": "struct IProposalRegistry.ProposalInput memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_ProposalInput_$2057_memory_ptr",
																"typeString": "struct IProposalRegistry.ProposalInput memory"
															}
														],
														"id": 661,
														"name": "_submitProposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1610,
														"src": "633:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_ProposalInput_$2057_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct IProposalRegistry.ProposalInput memory) returns (uint256)"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "633:22:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 648,
												"id": 664,
												"nodeType": "Return",
												"src": "626:29:7"
											}
										]
									},
									"functionSelector": "08d256af",
									"id": 666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "submitProposal",
									"nameLocation": "348:14:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 645,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 643,
												"name": "IProposalRegistry",
												"nameLocations": [
													"459:17:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2121,
												"src": "459:17:7"
											},
											{
												"id": 644,
												"name": "ProposalSubmission",
												"nameLocations": [
													"478:18:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1611,
												"src": "478:18:7"
											}
										],
										"src": "450:47:7"
									},
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "402:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "363:44:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ProposalInput_$2057_memory_ptr",
													"typeString": "struct IProposalRegistry.ProposalInput"
												},
												"typeName": {
													"id": 640,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 639,
														"name": "IProposalRegistry.ProposalInput",
														"nameLocations": [
															"363:17:7",
															"381:13:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2057,
														"src": "363:31:7"
													},
													"referencedDeclaration": 2057,
													"src": "363:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ProposalInput_$2057_storage_ptr",
														"typeString": "struct IProposalRegistry.ProposalInput"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "362:46:7"
									},
									"returnParameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "515:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "515:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "514:9:7"
									},
									"scope": 818,
									"src": "339:323:7",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1632,
										2073
									],
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "798:48:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 678,
															"name": "proposalId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "818:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 679,
															"name": "voteType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "830:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_VoteType_$1991",
																"typeString": "enum IProposalRegistry.VoteType"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_enum$_VoteType_$1991",
																"typeString": "enum IProposalRegistry.VoteType"
															}
														],
														"id": 677,
														"name": "_castVote",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1712,
														"src": "808:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_VoteType_$1991_$returns$__$",
															"typeString": "function (uint256,enum IProposalRegistry.VoteType)"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "808:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "808:31:7"
											}
										]
									},
									"functionSelector": "56781388",
									"id": 683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "castVote",
									"nameLocation": "677:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 675,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 673,
												"name": "IProposalRegistry",
												"nameLocations": [
													"759:17:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2121,
												"src": "759:17:7"
											},
											{
												"id": 674,
												"name": "ProposalVoting",
												"nameLocations": [
													"778:14:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1915,
												"src": "778:14:7"
											}
										],
										"src": "750:43:7"
									},
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "694:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "686:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "686:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "voteType",
												"nameLocation": "715:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "706:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_VoteType_$1991",
													"typeString": "enum IProposalRegistry.VoteType"
												},
												"typeName": {
													"id": 670,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 669,
														"name": "VoteType",
														"nameLocations": [
															"706:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1991,
														"src": "706:8:7"
													},
													"referencedDeclaration": 1991,
													"src": "706:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_VoteType_$1991",
														"typeString": "enum IProposalRegistry.VoteType"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "685:39:7"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "798:0:7"
									},
									"scope": 818,
									"src": "668:178:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1644,
										2078
									],
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "970:45:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 692,
															"name": "proposalId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "997:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 691,
														"name": "_executeProposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "980:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "980:28:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 694,
												"nodeType": "ExpressionStatement",
												"src": "980:28:7"
											}
										]
									},
									"functionSelector": "0d61b519",
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "executeProposal",
									"nameLocation": "861:15:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 689,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 687,
												"name": "IProposalRegistry",
												"nameLocations": [
													"931:17:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2121,
												"src": "931:17:7"
											},
											{
												"id": 688,
												"name": "ProposalVoting",
												"nameLocations": [
													"950:14:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1915,
												"src": "950:14:7"
											}
										],
										"src": "922:43:7"
									},
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "885:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "877:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:20:7"
									},
									"returnParameters": {
										"id": 690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "970:0:7"
									},
									"scope": 818,
									"src": "852:163:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1364,
										2113
									],
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "1171:42:7",
										"statements": [
											{
												"expression": {
													"id": 704,
													"name": "_currentProposalId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 840,
													"src": "1188:18:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 703,
												"id": 705,
												"nodeType": "Return",
												"src": "1181:25:7"
											}
										]
									},
									"functionSelector": "fe10226d",
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentProposalId",
									"nameLocation": "1030:20:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 700,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 698,
												"name": "IProposalRegistry",
												"nameLocations": [
													"1100:17:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2121,
												"src": "1100:17:7"
											},
											{
												"id": 699,
												"name": "ProposalRegistryBase",
												"nameLocations": [
													"1119:20:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1519,
												"src": "1119:20:7"
											}
										],
										"src": "1091:49:7"
									},
									"parameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1050:2:7"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "1158:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1158:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1157:9:7"
									},
									"scope": 818,
									"src": "1021:192:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1375,
										2120
									],
									"body": {
										"id": 720,
										"nodeType": "Block",
										"src": "1378:39:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 717,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 709,
														"src": "1395:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 718,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1403:7:7",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "1395:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 716,
												"id": 719,
												"nodeType": "Return",
												"src": "1388:22:7"
											}
										]
									},
									"functionSelector": "bb4d4436",
									"id": 721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getVotingPower",
									"nameLocation": "1228:14:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 713,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 711,
												"name": "IProposalRegistry",
												"nameLocations": [
													"1307:17:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2121,
												"src": "1307:17:7"
											},
											{
												"id": 712,
												"name": "ProposalRegistryBase",
												"nameLocations": [
													"1326:20:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1519,
												"src": "1326:20:7"
											}
										],
										"src": "1298:49:7"
									},
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1251:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "1243:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:17:7"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 721,
												"src": "1365:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1365:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1364:9:7"
									},
									"scope": 818,
									"src": "1219:198:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										2108
									],
									"body": {
										"id": 796,
										"nodeType": "Block",
										"src": "1839:474:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 753,
																	"name": "proposalId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 723,
																	"src": "1857:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1870:1:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1857:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 758,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 756,
																	"name": "proposalId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 723,
																	"src": "1875:10:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 757,
																	"name": "_currentProposalId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 840,
																	"src": "1889:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1875:32:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1857:50:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642070726f706f73616c204944",
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1909:21:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0febab928e40c46453cf5b5d4970676eff56829a16bec62dc48d209b2deaf8aa",
																"typeString": "literal_string \"Invalid proposal ID\""
															},
															"value": "Invalid proposal ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0febab928e40c46453cf5b5d4970676eff56829a16bec62dc48d209b2deaf8aa",
																"typeString": "literal_string \"Invalid proposal ID\""
															}
														],
														"id": 752,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1849:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1849:82:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 762,
												"nodeType": "ExpressionStatement",
												"src": "1849:82:7"
											},
											{
												"assignments": [
													765
												],
												"declarations": [
													{
														"constant": false,
														"id": 765,
														"mutability": "mutable",
														"name": "p",
														"nameLocation": "1959:1:7",
														"nodeType": "VariableDeclaration",
														"scope": 796,
														"src": "1942:18:7",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
															"typeString": "struct IProposalRegistry.Proposal"
														},
														"typeName": {
															"id": 764,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 763,
																"name": "Proposal",
																"nameLocations": [
																	"1942:8:7"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2040,
																"src": "1942:8:7"
															},
															"referencedDeclaration": 2040,
															"src": "1942:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																"typeString": "struct IProposalRegistry.Proposal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 769,
												"initialValue": {
													"baseExpression": {
														"id": 766,
														"name": "proposals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "1963:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$2040_storage_$",
															"typeString": "mapping(uint256 => struct IProposalRegistry.Proposal storage ref)"
														}
													},
													"id": 768,
													"indexExpression": {
														"id": 767,
														"name": "proposalId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 723,
														"src": "1973:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1963:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Proposal_$2040_storage",
														"typeString": "struct IProposalRegistry.Proposal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1942:42:7"
											},
											{
												"expression": {
													"components": [
														{
															"expression": {
																"id": 770,
																"name": "p",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "2016:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																	"typeString": "struct IProposalRegistry.Proposal storage pointer"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2018:2:7",
															"memberName": "id",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2002,
															"src": "2016:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 772,
																"name": "p",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "2034:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																	"typeString": "struct IProposalRegistry.Proposal storage pointer"
																}
															},
															"id": 773,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2036:8:7",
															"memberName": "proposer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2004,
															"src": "2034:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 774,
																"name": "p",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "2058:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																	"typeString": "struct IProposalRegistry.Proposal storage pointer"
																}
															},
															"id": 775,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2060:5:7",
															"memberName": "title",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2006,
															"src": "2058:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														},
														{
															"expression": {
																"id": 776,
																"name": "p",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "2079:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																	"typeString": "struct IProposalRegistry.Proposal storage pointer"
																}
															},
															"id": 777,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2081:7:7",
															"memberName": "summary",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2008,
															"src": "2079:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage",
																"typeString": "string storage ref"
															}
														},
														{
															"expression": {
																"id": 778,
																"name": "p",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "2102:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																	"typeString": "struct IProposalRegistry.Proposal storage pointer"
																}
															},
															"id": 779,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2104:15:7",
															"memberName": "requestedAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2012,
															"src": "2102:17:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 780,
																"name": "p",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "2133:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																	"typeString": "struct IProposalRegistry.Proposal storage pointer"
																}
															},
															"id": 781,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2135:6:7",
															"memberName": "status",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2015,
															"src": "2133:8:7",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_ProposalStatus_$1987",
																"typeString": "enum IProposalRegistry.ProposalStatus"
															}
														},
														{
															"expression": {
																"id": 782,
																"name": "p",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "2155:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																	"typeString": "struct IProposalRegistry.Proposal storage pointer"
																}
															},
															"id": 783,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2157:7:7",
															"memberName": "aiScore",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2031,
															"src": "2155:9:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 784,
																"name": "p",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "2178:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																	"typeString": "struct IProposalRegistry.Proposal storage pointer"
																}
															},
															"id": 785,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2180:11:7",
															"memberName": "votingStart",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2021,
															"src": "2178:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 786,
																"name": "p",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "2205:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																	"typeString": "struct IProposalRegistry.Proposal storage pointer"
																}
															},
															"id": 787,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2207:9:7",
															"memberName": "votingEnd",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2023,
															"src": "2205:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 788,
																"name": "p",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "2230:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																	"typeString": "struct IProposalRegistry.Proposal storage pointer"
																}
															},
															"id": 789,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2232:8:7",
															"memberName": "forVotes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2025,
															"src": "2230:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 790,
																"name": "p",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "2254:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																	"typeString": "struct IProposalRegistry.Proposal storage pointer"
																}
															},
															"id": 791,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2256:12:7",
															"memberName": "againstVotes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2027,
															"src": "2254:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 792,
																"name": "p",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "2282:1:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																	"typeString": "struct IProposalRegistry.Proposal storage pointer"
																}
															},
															"id": 793,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2284:12:7",
															"memberName": "abstainVotes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2029,
															"src": "2282:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 794,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2002:304:7",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$_t_string_storage_$_t_string_storage_$_t_uint256_$_t_enum$_ProposalStatus_$1987_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,address,string storage ref,string storage ref,uint256,enum IProposalRegistry.ProposalStatus,uint256,uint256,uint256,uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 751,
												"id": 795,
												"nodeType": "Return",
												"src": "1995:311:7"
											}
										]
									},
									"functionSelector": "c7f758a8",
									"id": 797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getProposal",
									"nameLocation": "1432:11:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 725,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1478:8:7"
									},
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "1452:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "1444:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1444:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1443:20:7"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1513:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "1505:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 726,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1505:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "proposer",
												"nameLocation": "1533:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "1525:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1525:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "title",
												"nameLocation": "1565:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "1551:19:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 730,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1551:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "summary",
												"nameLocation": "1594:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "1580:21:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 732,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1580:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "requestedAmount",
												"nameLocation": "1619:15:7",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "1611:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1611:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "1659:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "1644:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_ProposalStatus_$1987",
													"typeString": "enum IProposalRegistry.ProposalStatus"
												},
												"typeName": {
													"id": 737,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 736,
														"name": "ProposalStatus",
														"nameLocations": [
															"1644:14:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1987,
														"src": "1644:14:7"
													},
													"referencedDeclaration": 1987,
													"src": "1644:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ProposalStatus_$1987",
														"typeString": "enum IProposalRegistry.ProposalStatus"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "aiScore",
												"nameLocation": "1683:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "1675:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1675:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "votingStart",
												"nameLocation": "1708:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "1700:19:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1700:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "votingEnd",
												"nameLocation": "1737:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "1729:17:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "forVotes",
												"nameLocation": "1764:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "1756:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "againstVotes",
												"nameLocation": "1790:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "1782:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 747,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1782:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "abstainVotes",
												"nameLocation": "1820:12:7",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "1812:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1812:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:343:7"
									},
									"scope": 818,
									"src": "1423:890:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 806,
										"nodeType": "Block",
										"src": "2366:25:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 803,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 470,
														"src": "2376:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2376:8:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 805,
												"nodeType": "ExpressionStatement",
												"src": "2376:8:7"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 807,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 800,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2196,
													"src": "2354:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 801,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 799,
												"name": "onlyRole",
												"nameLocations": [
													"2345:8:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "2345:8:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2345:20:7"
										}
									],
									"name": "pause",
									"nameLocation": "2328:5:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2333:2:7"
									},
									"returnParameters": {
										"id": 802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2366:0:7"
									},
									"scope": 818,
									"src": "2319:72:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 816,
										"nodeType": "Block",
										"src": "2446:27:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 813,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 486,
														"src": "2456:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2456:10:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 815,
												"nodeType": "ExpressionStatement",
												"src": "2456:10:7"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 817,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 810,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2196,
													"src": "2434:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 811,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 809,
												"name": "onlyRole",
												"nameLocations": [
													"2425:8:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "2425:8:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2425:20:7"
										}
									],
									"name": "unpause",
									"nameLocation": "2406:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2413:2:7"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2446:0:7"
									},
									"scope": 818,
									"src": "2397:76:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 819,
							"src": "135:2340:7",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336,
								390,
								395,
								908,
								916,
								927,
								933,
								939,
								946,
								954,
								962,
								966,
								970
							]
						}
					],
					"src": "32:2462:7"
				},
				"id": 7
			},
			"CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol": {
				"ast": {
					"absolutePath": "CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol",
					"exportedSymbols": {
						"AccessControl": [
							296
						],
						"Context": [
							582
						],
						"ERC165": [
							606
						],
						"ExtendedAccessControl": [
							2431
						],
						"IAIScoreRegistry": [
							1976
						],
						"IAccessControl": [
							379
						],
						"IERC165": [
							618
						],
						"IProposalRegistry": [
							2121
						],
						"ITreasuryEscrow": [
							2185
						],
						"Pausable": [
							487
						],
						"ProposalRegistryBase": [
							1519
						],
						"ReentrancyGuard": [
							552
						]
					},
					"id": 1520,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 820,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:8"
						},
						{
							"absolutePath": "CrossFi-Treasury-Guard/contracts/interfaces/IProposalRegistry.sol",
							"file": "./interfaces/IProposalRegistry.sol",
							"id": 821,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1520,
							"sourceUnit": 2122,
							"src": "58:44:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "CrossFi-Treasury-Guard/contracts/interfaces/IAIScoreRegistry.sol",
							"file": "./interfaces/IAIScoreRegistry.sol",
							"id": 822,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1520,
							"sourceUnit": 1977,
							"src": "103:43:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "CrossFi-Treasury-Guard/contracts/interfaces/ITreasuryEscrow.sol",
							"file": "./interfaces/ITreasuryEscrow.sol",
							"id": 823,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1520,
							"sourceUnit": 2186,
							"src": "147:42:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol",
							"file": "./utils/ExtendedAccessControl.sol",
							"id": 824,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1520,
							"sourceUnit": 2432,
							"src": "190:43:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 825,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1520,
							"sourceUnit": 553,
							"src": "234:62:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 826,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1520,
							"sourceUnit": 488,
							"src": "297:55:8",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 827,
										"name": "ExtendedAccessControl",
										"nameLocations": [
											"396:21:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2431,
										"src": "396:21:8"
									},
									"id": 828,
									"nodeType": "InheritanceSpecifier",
									"src": "396:21:8"
								},
								{
									"baseName": {
										"id": 829,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"419:15:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 552,
										"src": "419:15:8"
									},
									"id": 830,
									"nodeType": "InheritanceSpecifier",
									"src": "419:15:8"
								},
								{
									"baseName": {
										"id": 831,
										"name": "Pausable",
										"nameLocations": [
											"436:8:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 487,
										"src": "436:8:8"
									},
									"id": 832,
									"nodeType": "InheritanceSpecifier",
									"src": "436:8:8"
								}
							],
							"canonicalName": "ProposalRegistryBase",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1519,
							"linearizedBaseContracts": [
								1519,
								487,
								552,
								2431,
								296,
								606,
								618,
								379,
								582
							],
							"name": "ProposalRegistryBase",
							"nameLocation": "372:20:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "96479e19",
									"id": 835,
									"mutability": "mutable",
									"name": "aiScoreRegistry",
									"nameLocation": "475:15:8",
									"nodeType": "VariableDeclaration",
									"scope": 1519,
									"src": "451:39:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IAIScoreRegistry_$1976",
										"typeString": "contract IAIScoreRegistry"
									},
									"typeName": {
										"id": 834,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 833,
											"name": "IAIScoreRegistry",
											"nameLocations": [
												"451:16:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1976,
											"src": "451:16:8"
										},
										"referencedDeclaration": 1976,
										"src": "451:16:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IAIScoreRegistry_$1976",
											"typeString": "contract IAIScoreRegistry"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1d9dfd4e",
									"id": 838,
									"mutability": "mutable",
									"name": "treasuryEscrow",
									"nameLocation": "519:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 1519,
									"src": "496:37:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ITreasuryEscrow_$2185",
										"typeString": "contract ITreasuryEscrow"
									},
									"typeName": {
										"id": 837,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 836,
											"name": "ITreasuryEscrow",
											"nameLocations": [
												"496:15:8"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2185,
											"src": "496:15:8"
										},
										"referencedDeclaration": 2185,
										"src": "496:15:8",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ITreasuryEscrow_$2185",
											"typeString": "contract ITreasuryEscrow"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 840,
									"mutability": "mutable",
									"name": "_currentProposalId",
									"nameLocation": "561:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 1519,
									"src": "544:35:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 839,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "544:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"functionSelector": "215809ca",
									"id": 843,
									"mutability": "constant",
									"name": "MIN_VOTING_PERIOD",
									"nameLocation": "631:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 1519,
									"src": "607:50:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 841,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "607:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 842,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "651:6:8",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_259200_by_1",
											"typeString": "int_const 259200"
										},
										"value": "3"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a64e024a",
									"id": 846,
									"mutability": "constant",
									"name": "MAX_VOTING_PERIOD",
									"nameLocation": "687:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 1519,
									"src": "663:51:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 844,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "663:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3134",
										"id": 845,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "707:7:8",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1209600_by_1",
											"typeString": "int_const 1209600"
										},
										"value": "14"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "791f5d23",
									"id": 853,
									"mutability": "constant",
									"name": "MIN_PROPOSAL_THRESHOLD",
									"nameLocation": "744:22:8",
									"nodeType": "VariableDeclaration",
									"scope": 1519,
									"src": "720:62:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 847,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "720:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000"
										},
										"id": 852,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31303030",
											"id": 848,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "769:4:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000_by_1",
												"typeString": "int_const 1000"
											},
											"value": "1000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 851,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 849,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "776:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 850,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "780:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "776:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "769:13:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "ee8a7c15",
									"id": 856,
									"mutability": "constant",
									"name": "QUORUM_PERCENTAGE",
									"nameLocation": "833:17:8",
									"nodeType": "VariableDeclaration",
									"scope": 1519,
									"src": "809:46:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 854,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "809:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3135",
										"id": 855,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "853:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_15_by_1",
											"typeString": "int_const 15"
										},
										"value": "15"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "3ab34290",
									"id": 859,
									"mutability": "constant",
									"name": "APPROVAL_THRESHOLD",
									"nameLocation": "885:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 1519,
									"src": "861:47:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 857,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "861:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3531",
										"id": 858,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "906:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_51_by_1",
											"typeString": "int_const 51"
										},
										"value": "51"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "39c854fa",
									"id": 862,
									"mutability": "constant",
									"name": "AI_SCORE_THRESHOLD",
									"nameLocation": "938:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 1519,
									"src": "914:47:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 860,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "914:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3730",
										"id": 861,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "959:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_70_by_1",
											"typeString": "int_const 70"
										},
										"value": "70"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "4c05abeb",
									"id": 865,
									"mutability": "constant",
									"name": "MAX_MILESTONES",
									"nameLocation": "991:14:8",
									"nodeType": "VariableDeclaration",
									"scope": 1519,
									"src": "967:43:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 863,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "967:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 864,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1008:2:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "2d75ae0e",
									"id": 872,
									"mutability": "constant",
									"name": "MAX_REQUESTED_AMOUNT",
									"nameLocation": "1040:20:8",
									"nodeType": "VariableDeclaration",
									"scope": 1519,
									"src": "1016:63:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 866,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1016:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000"
										},
										"id": 871,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31303030303030",
											"id": 867,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "1063:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											},
											"value": "1000000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 870,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 868,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1073:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 869,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1077:2:8",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "1073:6:8",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "1063:16:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "013cf08b",
									"id": 877,
									"mutability": "mutable",
									"name": "proposals",
									"nameLocation": "1177:9:8",
									"nodeType": "VariableDeclaration",
									"scope": 1519,
									"src": "1123:63:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$2040_storage_$",
										"typeString": "mapping(uint256 => struct IProposalRegistry.Proposal)"
									},
									"typeName": {
										"id": 876,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 873,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1131:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1123:46:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$2040_storage_$",
											"typeString": "mapping(uint256 => struct IProposalRegistry.Proposal)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 875,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 874,
												"name": "IProposalRegistry.Proposal",
												"nameLocations": [
													"1142:17:8",
													"1160:8:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2040,
												"src": "1142:26:8"
											},
											"referencedDeclaration": 2040,
											"src": "1142:26:8",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
												"typeString": "struct IProposalRegistry.Proposal"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "43859632",
									"id": 883,
									"mutability": "mutable",
									"name": "hasVoted",
									"nameLocation": "1244:8:8",
									"nodeType": "VariableDeclaration",
									"scope": 1519,
									"src": "1192:60:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(uint256 => mapping(address => bool))"
									},
									"typeName": {
										"id": 882,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 878,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1200:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1192:44:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(uint256 => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 881,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 879,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1219:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1211:24:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 880,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1230:4:8",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "db994b4f",
									"id": 890,
									"mutability": "mutable",
									"name": "voterChoices",
									"nameLocation": "1332:12:8",
									"nodeType": "VariableDeclaration",
									"scope": 1519,
									"src": "1258:86:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_enum$_VoteType_$1991_$_$",
										"typeString": "mapping(uint256 => mapping(address => enum IProposalRegistry.VoteType))"
									},
									"typeName": {
										"id": 889,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 884,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1266:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1258:66:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_enum$_VoteType_$1991_$_$",
											"typeString": "mapping(uint256 => mapping(address => enum IProposalRegistry.VoteType))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 888,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 885,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1285:7:8",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1277:46:8",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_enum$_VoteType_$1991_$",
												"typeString": "mapping(address => enum IProposalRegistry.VoteType)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 887,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 886,
													"name": "IProposalRegistry.VoteType",
													"nameLocations": [
														"1296:17:8",
														"1314:8:8"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1991,
													"src": "1296:26:8"
												},
												"referencedDeclaration": 1991,
												"src": "1296:26:8",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_VoteType_$1991",
													"typeString": "enum IProposalRegistry.VoteType"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2d142b76",
									"id": 894,
									"mutability": "mutable",
									"name": "proposerReputation",
									"nameLocation": "1385:18:8",
									"nodeType": "VariableDeclaration",
									"scope": 1519,
									"src": "1350:53:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 893,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 891,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1358:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1350:27:8",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 892,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1369:7:8",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "5ad01c818e42f77c2c5123d4d295c39799cf1cac9125682a8c90c7ce9d9bf6b4",
									"id": 908,
									"name": "ProposalSubmitted",
									"nameLocation": "1434:17:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"indexed": true,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "1468:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "1452:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"indexed": true,
												"mutability": "mutable",
												"name": "proposer",
												"nameLocation": "1496:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "1480:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 900,
												"indexed": false,
												"mutability": "mutable",
												"name": "title",
												"nameLocation": "1513:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "1506:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 899,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1506:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 902,
												"indexed": false,
												"mutability": "mutable",
												"name": "requestedAmount",
												"nameLocation": "1528:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "1520:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1520:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"indexed": false,
												"mutability": "mutable",
												"name": "ipfsCID",
												"nameLocation": "1552:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "1545:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 903,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1545:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1569:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "1561:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1561:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1451:128:8"
									},
									"src": "1428:152:8"
								},
								{
									"anonymous": false,
									"eventSelector": "79f4674ed037bbb3d5409860f08f43169a7aab59581ca8d1f2f97578dc944b91",
									"id": 916,
									"name": "VotingStarted",
									"nameLocation": "1591:13:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"indexed": true,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "1621:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "1605:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1605:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"indexed": false,
												"mutability": "mutable",
												"name": "votingStart",
												"nameLocation": "1641:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "1633:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1633:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"indexed": false,
												"mutability": "mutable",
												"name": "votingEnd",
												"nameLocation": "1662:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "1654:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1654:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1604:68:8"
									},
									"src": "1585:88:8"
								},
								{
									"anonymous": false,
									"eventSelector": "b83d25c6a5d258561330739951487acb4bd09ba5190b5d32c4f261817d906792",
									"id": 927,
									"name": "VoteCast",
									"nameLocation": "1684:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 918,
												"indexed": true,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "1709:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "1693:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1693:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"indexed": true,
												"mutability": "mutable",
												"name": "voter",
												"nameLocation": "1737:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "1721:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1721:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"indexed": false,
												"mutability": "mutable",
												"name": "voteType",
												"nameLocation": "1771:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "1744:35:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_VoteType_$1991",
													"typeString": "enum IProposalRegistry.VoteType"
												},
												"typeName": {
													"id": 922,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 921,
														"name": "IProposalRegistry.VoteType",
														"nameLocations": [
															"1744:17:8",
															"1762:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1991,
														"src": "1744:26:8"
													},
													"referencedDeclaration": 1991,
													"src": "1744:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_VoteType_$1991",
														"typeString": "enum IProposalRegistry.VoteType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"indexed": false,
												"mutability": "mutable",
												"name": "weight",
												"nameLocation": "1789:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 927,
												"src": "1781:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1781:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1692:104:8"
									},
									"src": "1678:119:8"
								},
								{
									"anonymous": false,
									"eventSelector": "c6a4fd4a703d2a2fe3167ce7f6d62bf96458b7e55042cfaa85d5c7ef3ac56eea",
									"id": 933,
									"name": "ProposalApproved",
									"nameLocation": "1808:16:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 929,
												"indexed": true,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "1841:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "1825:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1825:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1861:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "1853:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1824:44:8"
									},
									"src": "1802:67:8"
								},
								{
									"anonymous": false,
									"eventSelector": "e5f9059dc551d2dcf73c3bc69f282e134799b450f062c909d9f7ff45951327bd",
									"id": 939,
									"name": "ProposalRejected",
									"nameLocation": "1880:16:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"indexed": true,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "1913:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "1897:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1897:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"indexed": false,
												"mutability": "mutable",
												"name": "reason",
												"nameLocation": "1932:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 939,
												"src": "1925:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 936,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1925:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1896:43:8"
									},
									"src": "1874:66:8"
								},
								{
									"anonymous": false,
									"eventSelector": "5b9614f21773d68c0b149bda804ff3d491c8bc8795f7ed236cc97804cd005389",
									"id": 946,
									"name": "ProposalExecuted",
									"nameLocation": "1951:16:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 941,
												"indexed": true,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "1984:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "1968:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1968:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"indexed": false,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "2029:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "1996:39:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_ProposalStatus_$1987",
													"typeString": "enum IProposalRegistry.ProposalStatus"
												},
												"typeName": {
													"id": 943,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 942,
														"name": "IProposalRegistry.ProposalStatus",
														"nameLocations": [
															"1996:17:8",
															"2014:14:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1987,
														"src": "1996:32:8"
													},
													"referencedDeclaration": 1987,
													"src": "1996:32:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ProposalStatus_$1987",
														"typeString": "enum IProposalRegistry.ProposalStatus"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:69:8"
									},
									"src": "1945:92:8"
								},
								{
									"anonymous": false,
									"eventSelector": "31a05a6cdf208c2e0a2e44af5fb421a8cef2c20c53d5f17f9fc6ab10e860e45e",
									"id": 954,
									"name": "ProposalCancelled",
									"nameLocation": "2048:17:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"indexed": true,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "2082:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "2066:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2066:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"indexed": true,
												"mutability": "mutable",
												"name": "proposer",
												"nameLocation": "2110:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "2094:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2094:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "2128:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 954,
												"src": "2120:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2120:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:73:8"
									},
									"src": "2042:97:8"
								},
								{
									"anonymous": false,
									"eventSelector": "29158dfdc365a8dfba79bc7cf81e30b2b15bf4ee24a1c116e1231336cd5676b2",
									"id": 962,
									"name": "AIScoreProcessed",
									"nameLocation": "2150:16:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 956,
												"indexed": true,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "2183:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "2167:26:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2167:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"indexed": false,
												"mutability": "mutable",
												"name": "score",
												"nameLocation": "2203:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "2195:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2195:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 960,
												"indexed": false,
												"mutability": "mutable",
												"name": "justification",
												"nameLocation": "2217:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "2210:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 959,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2210:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2166:65:8"
									},
									"src": "2144:88:8"
								},
								{
									"anonymous": false,
									"eventSelector": "12cb47b190a758acbe916b2a7c5a734b023ce60f4d93ec2b3159160163c9291a",
									"id": 966,
									"name": "AIScoreRegistryUpdated",
									"nameLocation": "2243:22:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"indexed": false,
												"mutability": "mutable",
												"name": "newRegistry",
												"nameLocation": "2274:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 966,
												"src": "2266:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2266:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2265:21:8"
									},
									"src": "2237:50:8"
								},
								{
									"anonymous": false,
									"eventSelector": "b0375a2ebcfdc355daf31c17062233e587a73c013fde410d569cf8167b1d4098",
									"id": 970,
									"name": "TreasuryEscrowUpdated",
									"nameLocation": "2298:21:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 969,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"indexed": false,
												"mutability": "mutable",
												"name": "newEscrow",
												"nameLocation": "2328:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 970,
												"src": "2320:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2320:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2319:19:8"
									},
									"src": "2292:47:8"
								},
								{
									"body": {
										"id": 1025,
										"nodeType": "Block",
										"src": "2408:421:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 978,
																"name": "_aiScoreRegistry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "2426:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 981,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2454:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 980,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2446:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 979,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2446:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2446:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2426:30:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964204149207265676973747279",
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2458:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4974cffd6115b5bdf33de7d83eaaab5000fd1563f199db63209560844f04f615",
																"typeString": "literal_string \"Invalid AI registry\""
															},
															"value": "Invalid AI registry"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4974cffd6115b5bdf33de7d83eaaab5000fd1563f199db63209560844f04f615",
																"typeString": "literal_string \"Invalid AI registry\""
															}
														],
														"id": 977,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2418:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2418:62:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 986,
												"nodeType": "ExpressionStatement",
												"src": "2418:62:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 993,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 988,
																"name": "_treasuryEscrow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 974,
																"src": "2498:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 991,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2525:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2517:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 989,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2517:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2517:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2498:29:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420747265617375727920657363726f77",
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2529:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_919d531e2888cffd6ada755b7800ecf5e67e76203bf4caffac60a57872cb5c48",
																"typeString": "literal_string \"Invalid treasury escrow\""
															},
															"value": "Invalid treasury escrow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_919d531e2888cffd6ada755b7800ecf5e67e76203bf4caffac60a57872cb5c48",
																"typeString": "literal_string \"Invalid treasury escrow\""
															}
														],
														"id": 987,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2490:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2490:65:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 996,
												"nodeType": "ExpressionStatement",
												"src": "2490:65:8"
											},
											{
												"expression": {
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 997,
														"name": "aiScoreRegistry",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "2574:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAIScoreRegistry_$1976",
															"typeString": "contract IAIScoreRegistry"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 999,
																"name": "_aiScoreRegistry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "2609:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 998,
															"name": "IAIScoreRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1976,
															"src": "2592:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IAIScoreRegistry_$1976_$",
																"typeString": "type(contract IAIScoreRegistry)"
															}
														},
														"id": 1000,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2592:34:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAIScoreRegistry_$1976",
															"typeString": "contract IAIScoreRegistry"
														}
													},
													"src": "2574:52:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAIScoreRegistry_$1976",
														"typeString": "contract IAIScoreRegistry"
													}
												},
												"id": 1002,
												"nodeType": "ExpressionStatement",
												"src": "2574:52:8"
											},
											{
												"expression": {
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1003,
														"name": "treasuryEscrow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "2636:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITreasuryEscrow_$2185",
															"typeString": "contract ITreasuryEscrow"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1005,
																"name": "_treasuryEscrow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 974,
																"src": "2669:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1004,
															"name": "ITreasuryEscrow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2185,
															"src": "2653:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ITreasuryEscrow_$2185_$",
																"typeString": "type(contract ITreasuryEscrow)"
															}
														},
														"id": 1006,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2653:32:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITreasuryEscrow_$2185",
															"typeString": "contract ITreasuryEscrow"
														}
													},
													"src": "2636:49:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITreasuryEscrow_$2185",
														"typeString": "contract ITreasuryEscrow"
													}
												},
												"id": 1008,
												"nodeType": "ExpressionStatement",
												"src": "2636:49:8"
											},
											{
												"expression": {
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1009,
														"name": "_currentProposalId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "2695:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1010,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2716:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2695:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "2695:22:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1014,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "2747:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1015,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2767:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2771:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2767:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1013,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "2736:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2736:42:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1018,
												"nodeType": "ExpressionStatement",
												"src": "2736:42:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1020,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2196,
															"src": "2799:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1021,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2811:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1022,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2815:6:8",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2811:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1019,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "2788:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2788:34:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1024,
												"nodeType": "ExpressionStatement",
												"src": "2788:34:8"
											}
										]
									},
									"id": 1026,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "_aiScoreRegistry",
												"nameLocation": "2365:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "2357:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 971,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2357:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"mutability": "mutable",
												"name": "_treasuryEscrow",
												"nameLocation": "2391:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 1026,
												"src": "2383:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 973,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2356:51:8"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2408:0:8"
									},
									"scope": 1519,
									"src": "2345:484:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1113,
										"nodeType": "Block",
										"src": "3138:781:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1045,
																				"name": "title",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1029,
																				"src": "3190:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"id": 1044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3184:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																				"typeString": "type(bytes storage pointer)"
																			},
																			"typeName": {
																				"id": 1043,
																				"name": "bytes",
																				"nodeType": "ElementaryTypeName",
																				"src": "3184:5:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3184:12:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3197:6:8",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3184:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1048,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3206:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3184:23:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1052,
																				"name": "title",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1029,
																				"src": "3217:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"id": 1051,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3211:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																				"typeString": "type(bytes storage pointer)"
																			},
																			"typeName": {
																				"id": 1050,
																				"name": "bytes",
																				"nodeType": "ElementaryTypeName",
																				"src": "3211:5:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1053,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3211:12:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1054,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3224:6:8",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "3211:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "323030",
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3234:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_200_by_1",
																		"typeString": "int_const 200"
																	},
																	"value": "200"
																},
																"src": "3211:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3184:53:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207469746c65206c656e677468",
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3239:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3fd03bea1627272f1fb955b68b823854002f444d59c0a3c6fd71ebbb59a68a6d",
																"typeString": "literal_string \"Invalid title length\""
															},
															"value": "Invalid title length"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3fd03bea1627272f1fb955b68b823854002f444d59c0a3c6fd71ebbb59a68a6d",
																"typeString": "literal_string \"Invalid title length\""
															}
														],
														"id": 1042,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3176:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1059,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3176:86:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1060,
												"nodeType": "ExpressionStatement",
												"src": "3176:86:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1062,
																	"name": "requestedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1031,
																	"src": "3280:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3298:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3280:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1065,
																	"name": "requestedAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1031,
																	"src": "3303:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1066,
																	"name": "MAX_REQUESTED_AMOUNT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 872,
																	"src": "3322:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3303:39:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3280:62:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420616d6f756e74",
															"id": 1069,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3344:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															},
															"value": "Invalid amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1",
																"typeString": "literal_string \"Invalid amount\""
															}
														],
														"id": 1061,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3272:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3272:89:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1071,
												"nodeType": "ExpressionStatement",
												"src": "3272:89:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1073,
																	"name": "votingPeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1033,
																	"src": "3379:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1074,
																	"name": "MIN_VOTING_PERIOD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 843,
																	"src": "3395:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3379:33:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1076,
																	"name": "votingPeriod",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1033,
																	"src": "3416:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1077,
																	"name": "MAX_VOTING_PERIOD",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 846,
																	"src": "3432:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3416:33:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3379:70:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420766f74696e6720706572696f64",
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3451:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_00c1d43622f94442cb438928f76da51c3b9e3908dbf50778d41cb576a12eb286",
																"typeString": "literal_string \"Invalid voting period\""
															},
															"value": "Invalid voting period"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_00c1d43622f94442cb438928f76da51c3b9e3908dbf50778d41cb576a12eb286",
																"typeString": "literal_string \"Invalid voting period\""
															}
														],
														"id": 1072,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3371:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3371:104:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1082,
												"nodeType": "ExpressionStatement",
												"src": "3371:104:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1086,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1084,
																"name": "milestonesLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1035,
																"src": "3493:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1085,
																"name": "milestoneAmountsLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1037,
																"src": "3513:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3493:42:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696c6573746f6e6520617272617973206d69736d61746368",
															"id": 1087,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3537:27:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8dee2da35ca8f9860eb1353e8c7c510ae1d294718b98fdc2cb75fbb10eaf701b",
																"typeString": "literal_string \"Milestone arrays mismatch\""
															},
															"value": "Milestone arrays mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8dee2da35ca8f9860eb1353e8c7c510ae1d294718b98fdc2cb75fbb10eaf701b",
																"typeString": "literal_string \"Milestone arrays mismatch\""
															}
														],
														"id": 1083,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3485:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3485:80:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1089,
												"nodeType": "ExpressionStatement",
												"src": "3485:80:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1097,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1093,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1091,
																	"name": "milestonesLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1035,
																	"src": "3583:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3602:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3583:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1094,
																	"name": "milestonesLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1035,
																	"src": "3607:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1095,
																	"name": "MAX_MILESTONES",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 865,
																	"src": "3627:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3607:34:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3583:58:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206d696c6573746f6e6520636f756e74",
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3643:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0fcfdb67df6b16dc41f3b362f0e74df2d0beb5f32cfab128afb62d30865cc151",
																"typeString": "literal_string \"Invalid milestone count\""
															},
															"value": "Invalid milestone count"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0fcfdb67df6b16dc41f3b362f0e74df2d0beb5f32cfab128afb62d30865cc151",
																"typeString": "literal_string \"Invalid milestone count\""
															}
														],
														"id": 1090,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3575:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3575:94:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1100,
												"nodeType": "ExpressionStatement",
												"src": "3575:94:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 1102,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3757:3:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3761:6:8",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3757:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3768:7:8",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "3757:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1105,
																"name": "MIN_PROPOSAL_THRESHOLD",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 853,
																"src": "3779:22:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3757:44:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74205846492062616c616e6365",
															"id": 1107,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3803:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_893f998996a392c04120aeead82d703a6d5372d42b717027e14fdb5cae80eebb",
																"typeString": "literal_string \"Insufficient XFI balance\""
															},
															"value": "Insufficient XFI balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_893f998996a392c04120aeead82d703a6d5372d42b717027e14fdb5cae80eebb",
																"typeString": "literal_string \"Insufficient XFI balance\""
															}
														],
														"id": 1101,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3749:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3749:81:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1109,
												"nodeType": "ExpressionStatement",
												"src": "3749:81:8"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1110,
														"name": "_incrementProposalId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1386,
														"src": "3890:20:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_uint256_$",
															"typeString": "function () returns (uint256)"
														}
													},
													"id": 1111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3890:22:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1041,
												"id": 1112,
												"nodeType": "Return",
												"src": "3883:29:8"
											}
										]
									},
									"documentation": {
										"id": 1027,
										"nodeType": "StructuredDocumentation",
										"src": "2839:65:8",
										"text": " @dev Validate input and create new proposal ID"
									},
									"id": 1114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_validateAndCreateId",
									"nameLocation": "2918:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "title",
												"nameLocation": "2962:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "2948:19:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1028,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2948:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "requestedAmount",
												"nameLocation": "2985:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "2977:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2977:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "votingPeriod",
												"nameLocation": "3018:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "3010:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1032,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3010:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "milestonesLength",
												"nameLocation": "3048:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "3040:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3040:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "milestoneAmountsLength",
												"nameLocation": "3082:22:8",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "3074:30:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3074:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2938:172:8"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1114,
												"src": "3129:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1039,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3129:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3128:9:8"
									},
									"scope": 1519,
									"src": "2909:1010:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1211,
										"nodeType": "Block",
										"src": "4153:566:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1133,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1129,
																				"name": "summary",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1121,
																				"src": "4177:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"id": 1128,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4171:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																				"typeString": "type(bytes storage pointer)"
																			},
																			"typeName": {
																				"id": 1127,
																				"name": "bytes",
																				"nodeType": "ElementaryTypeName",
																				"src": "4171:5:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4171:14:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4186:6:8",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "4171:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4195:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4171:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1140,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1136,
																				"name": "summary",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1121,
																				"src": "4206:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			],
																			"id": 1135,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4200:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																				"typeString": "type(bytes storage pointer)"
																			},
																			"typeName": {
																				"id": 1134,
																				"name": "bytes",
																				"nodeType": "ElementaryTypeName",
																				"src": "4200:5:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4200:14:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4215:6:8",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "4200:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"hexValue": "31303030",
																	"id": 1139,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4225:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																"src": "4200:29:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4171:58:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642073756d6d617279206c656e677468",
															"id": 1142,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4231:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_59bb78b3e416dfa627e57f19418f67943ac935c08f0f074f83416d4fe1fe428e",
																"typeString": "literal_string \"Invalid summary length\""
															},
															"value": "Invalid summary length"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_59bb78b3e416dfa627e57f19418f67943ac935c08f0f074f83416d4fe1fe428e",
																"typeString": "literal_string \"Invalid summary length\""
															}
														],
														"id": 1126,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4163:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4163:93:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1144,
												"nodeType": "ExpressionStatement",
												"src": "4163:93:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1148,
																			"name": "ipfsCID",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1123,
																			"src": "4280:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4274:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1146,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "4274:5:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4274:14:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4289:6:8",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4274:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1151,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4298:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4274:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4950465320434944207265717569726564",
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4301:19:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4ce8b12812914fad495fe4dda4b18fea6717ead9c4c2053e076882ebc60b7052",
																"typeString": "literal_string \"IPFS CID required\""
															},
															"value": "IPFS CID required"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4ce8b12812914fad495fe4dda4b18fea6717ead9c4c2053e076882ebc60b7052",
																"typeString": "literal_string \"IPFS CID required\""
															}
														],
														"id": 1145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4266:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4266:55:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "4266:55:8"
											},
											{
												"assignments": [
													1160
												],
												"declarations": [
													{
														"constant": false,
														"id": 1160,
														"mutability": "mutable",
														"name": "proposal",
														"nameLocation": "4375:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1211,
														"src": "4340:43:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
															"typeString": "struct IProposalRegistry.Proposal"
														},
														"typeName": {
															"id": 1159,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1158,
																"name": "IProposalRegistry.Proposal",
																"nameLocations": [
																	"4340:17:8",
																	"4358:8:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2040,
																"src": "4340:26:8"
															},
															"referencedDeclaration": 2040,
															"src": "4340:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																"typeString": "struct IProposalRegistry.Proposal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1164,
												"initialValue": {
													"baseExpression": {
														"id": 1161,
														"name": "proposals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "4386:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$2040_storage_$",
															"typeString": "mapping(uint256 => struct IProposalRegistry.Proposal storage ref)"
														}
													},
													"id": 1163,
													"indexExpression": {
														"id": 1162,
														"name": "proposalId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "4396:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4386:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Proposal_$2040_storage",
														"typeString": "struct IProposalRegistry.Proposal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4340:67:8"
											},
											{
												"expression": {
													"id": 1169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1165,
															"name": "proposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "4417:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																"typeString": "struct IProposalRegistry.Proposal storage pointer"
															}
														},
														"id": 1167,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4426:2:8",
														"memberName": "id",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2002,
														"src": "4417:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1168,
														"name": "proposalId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "4431:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4417:24:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1170,
												"nodeType": "ExpressionStatement",
												"src": "4417:24:8"
											},
											{
												"expression": {
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1171,
															"name": "proposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "4451:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																"typeString": "struct IProposalRegistry.Proposal storage pointer"
															}
														},
														"id": 1173,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4460:8:8",
														"memberName": "proposer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2004,
														"src": "4451:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1174,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "4471:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1175,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4475:6:8",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "4471:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4451:30:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1177,
												"nodeType": "ExpressionStatement",
												"src": "4451:30:8"
											},
											{
												"expression": {
													"id": 1182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1178,
															"name": "proposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "4491:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																"typeString": "struct IProposalRegistry.Proposal storage pointer"
															}
														},
														"id": 1180,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4500:5:8",
														"memberName": "title",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2006,
														"src": "4491:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1181,
														"name": "title",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1119,
														"src": "4508:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "4491:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1183,
												"nodeType": "ExpressionStatement",
												"src": "4491:22:8"
											},
											{
												"expression": {
													"id": 1188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1184,
															"name": "proposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "4523:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																"typeString": "struct IProposalRegistry.Proposal storage pointer"
															}
														},
														"id": 1186,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4532:7:8",
														"memberName": "summary",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2008,
														"src": "4523:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1187,
														"name": "summary",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1121,
														"src": "4542:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "4523:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1189,
												"nodeType": "ExpressionStatement",
												"src": "4523:26:8"
											},
											{
												"expression": {
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1190,
															"name": "proposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "4559:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																"typeString": "struct IProposalRegistry.Proposal storage pointer"
															}
														},
														"id": 1192,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4568:7:8",
														"memberName": "ipfsCID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2010,
														"src": "4559:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1193,
														"name": "ipfsCID",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1123,
														"src": "4578:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "4559:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1195,
												"nodeType": "ExpressionStatement",
												"src": "4559:26:8"
											},
											{
												"expression": {
													"id": 1202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1196,
															"name": "proposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "4595:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																"typeString": "struct IProposalRegistry.Proposal storage pointer"
															}
														},
														"id": 1198,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4604:6:8",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2015,
														"src": "4595:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ProposalStatus_$1987",
															"typeString": "enum IProposalRegistry.ProposalStatus"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"expression": {
																"id": 1199,
																"name": "IProposalRegistry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2121,
																"src": "4613:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IProposalRegistry_$2121_$",
																	"typeString": "type(contract IProposalRegistry)"
																}
															},
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4631:14:8",
															"memberName": "ProposalStatus",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1987,
															"src": "4613:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_ProposalStatus_$1987_$",
																"typeString": "type(enum IProposalRegistry.ProposalStatus)"
															}
														},
														"id": 1201,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4646:15:8",
														"memberName": "PendingAIReview",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1980,
														"src": "4613:48:8",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_ProposalStatus_$1987",
															"typeString": "enum IProposalRegistry.ProposalStatus"
														}
													},
													"src": "4595:66:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ProposalStatus_$1987",
														"typeString": "enum IProposalRegistry.ProposalStatus"
													}
												},
												"id": 1203,
												"nodeType": "ExpressionStatement",
												"src": "4595:66:8"
											},
											{
												"expression": {
													"id": 1209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1204,
															"name": "proposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1160,
															"src": "4671:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																"typeString": "struct IProposalRegistry.Proposal storage pointer"
															}
														},
														"id": 1206,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4680:14:8",
														"memberName": "submissionTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2017,
														"src": "4671:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1207,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4697:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4703:9:8",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4697:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4671:41:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1210,
												"nodeType": "ExpressionStatement",
												"src": "4671:41:8"
											}
										]
									},
									"documentation": {
										"id": 1115,
										"nodeType": "StructuredDocumentation",
										"src": "3929:54:8",
										"text": " @dev Set basic proposal information"
									},
									"id": 1212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBasicProposalInfo",
									"nameLocation": "3997:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "4036:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "4028:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4028:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "title",
												"nameLocation": "4070:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "4056:19:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1118,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4056:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "summary",
												"nameLocation": "4099:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "4085:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1120,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4085:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "ipfsCID",
												"nameLocation": "4130:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1212,
												"src": "4116:21:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1122,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4116:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4018:125:8"
									},
									"returnParameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4153:0:8"
									},
									"scope": 1519,
									"src": "3988:731:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1249,
										"nodeType": "Block",
										"src": "4935:224:8",
										"statements": [
											{
												"assignments": [
													1226
												],
												"declarations": [
													{
														"constant": false,
														"id": 1226,
														"mutability": "mutable",
														"name": "proposal",
														"nameLocation": "4980:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1249,
														"src": "4945:43:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
															"typeString": "struct IProposalRegistry.Proposal"
														},
														"typeName": {
															"id": 1225,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1224,
																"name": "IProposalRegistry.Proposal",
																"nameLocations": [
																	"4945:17:8",
																	"4963:8:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2040,
																"src": "4945:26:8"
															},
															"referencedDeclaration": 2040,
															"src": "4945:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																"typeString": "struct IProposalRegistry.Proposal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1230,
												"initialValue": {
													"baseExpression": {
														"id": 1227,
														"name": "proposals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "4991:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$2040_storage_$",
															"typeString": "mapping(uint256 => struct IProposalRegistry.Proposal storage ref)"
														}
													},
													"id": 1229,
													"indexExpression": {
														"id": 1228,
														"name": "proposalId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1215,
														"src": "5001:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4991:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Proposal_$2040_storage",
														"typeString": "struct IProposalRegistry.Proposal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4945:67:8"
											},
											{
												"expression": {
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1231,
															"name": "proposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "5022:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																"typeString": "struct IProposalRegistry.Proposal storage pointer"
															}
														},
														"id": 1233,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5031:15:8",
														"memberName": "requestedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2012,
														"src": "5022:24:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1234,
														"name": "requestedAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "5049:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5022:42:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1236,
												"nodeType": "ExpressionStatement",
												"src": "5022:42:8"
											},
											{
												"expression": {
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1237,
															"name": "proposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "5074:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																"typeString": "struct IProposalRegistry.Proposal storage pointer"
															}
														},
														"id": 1239,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5083:12:8",
														"memberName": "votingPeriod",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2019,
														"src": "5074:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1240,
														"name": "votingPeriod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1219,
														"src": "5098:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5074:36:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1242,
												"nodeType": "ExpressionStatement",
												"src": "5074:36:8"
											},
											{
												"expression": {
													"id": 1247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1243,
															"name": "proposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1226,
															"src": "5120:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																"typeString": "struct IProposalRegistry.Proposal storage pointer"
															}
														},
														"id": 1245,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5129:18:8",
														"memberName": "totalSupplyAtStart",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2039,
														"src": "5120:27:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1246,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5150:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5120:31:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1248,
												"nodeType": "ExpressionStatement",
												"src": "5120:31:8"
											}
										]
									},
									"documentation": {
										"id": 1213,
										"nodeType": "StructuredDocumentation",
										"src": "4729:59:8",
										"text": " @dev Set additional proposal information"
									},
									"id": 1250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdditionalProposalInfo",
									"nameLocation": "4802:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "4846:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "4838:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4838:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "requestedAmount",
												"nameLocation": "4874:15:8",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "4866:23:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4866:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "votingPeriod",
												"nameLocation": "4907:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "4899:20:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4899:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4828:97:8"
									},
									"returnParameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4935:0:8"
									},
									"scope": 1519,
									"src": "4793:366:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1355,
										"nodeType": "Block",
										"src": "5363:931:8",
										"statements": [
											{
												"assignments": [
													1263
												],
												"declarations": [
													{
														"constant": false,
														"id": 1263,
														"mutability": "mutable",
														"name": "totalMilestoneAmount",
														"nameLocation": "5443:20:8",
														"nodeType": "VariableDeclaration",
														"scope": 1355,
														"src": "5435:28:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1262,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5435:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1265,
												"initialValue": {
													"hexValue": "30",
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5466:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5435:32:8"
											},
											{
												"body": {
													"id": 1305,
													"nodeType": "Block",
													"src": "5522:223:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1282,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1278,
																				"name": "amounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1259,
																				"src": "5544:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1280,
																			"indexExpression": {
																				"id": 1279,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1267,
																				"src": "5552:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5544:10:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1281,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5557:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5544:14:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4d696c6573746f6e6520616d6f756e74206d75737420626520706f736974697665",
																		"id": 1283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5560:35:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_b0161cd0385b68c8380ed17af9d85bf76dd86f9bac4dfd1e9fb47354c2f04c77",
																			"typeString": "literal_string \"Milestone amount must be positive\""
																		},
																		"value": "Milestone amount must be positive"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_b0161cd0385b68c8380ed17af9d85bf76dd86f9bac4dfd1e9fb47354c2f04c77",
																			"typeString": "literal_string \"Milestone amount must be positive\""
																		}
																	],
																	"id": 1277,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5536:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5536:60:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1285,
															"nodeType": "ExpressionStatement",
															"src": "5536:60:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"arguments": [
																					{
																						"baseExpression": {
																							"id": 1289,
																							"name": "descriptions",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1256,
																							"src": "5624:12:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																								"typeString": "string memory[] memory"
																							}
																						},
																						"id": 1291,
																						"indexExpression": {
																							"id": 1290,
																							"name": "i",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1267,
																							"src": "5637:1:8",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "5624:15:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"id": 1288,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "5618:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": {
																						"id": 1287,
																						"name": "bytes",
																						"nodeType": "ElementaryTypeName",
																						"src": "5618:5:8",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1292,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "5618:22:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1293,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5641:6:8",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5618:29:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1294,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5650:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5618:33:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "4d696c6573746f6e65206465736372697074696f6e207265717569726564",
																		"id": 1296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5653:32:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_a56eb49d41e54b54e496bd768674c18fb3624a73b00218f3a28dc22152388042",
																			"typeString": "literal_string \"Milestone description required\""
																		},
																		"value": "Milestone description required"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_a56eb49d41e54b54e496bd768674c18fb3624a73b00218f3a28dc22152388042",
																			"typeString": "literal_string \"Milestone description required\""
																		}
																	],
																	"id": 1286,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5610:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:76:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1298,
															"nodeType": "ExpressionStatement",
															"src": "5610:76:8"
														},
														{
															"expression": {
																"id": 1303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1299,
																	"name": "totalMilestoneAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1263,
																	"src": "5700:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1300,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1259,
																		"src": "5724:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1302,
																	"indexExpression": {
																		"id": 1301,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1267,
																		"src": "5732:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5724:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5700:34:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1304,
															"nodeType": "ExpressionStatement",
															"src": "5700:34:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1270,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1267,
														"src": "5497:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1271,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1259,
															"src": "5501:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5509:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5501:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5497:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1306,
												"initializationExpression": {
													"assignments": [
														1267
													],
													"declarations": [
														{
															"constant": false,
															"id": 1267,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5490:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1306,
															"src": "5482:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1266,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5482:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1269,
													"initialValue": {
														"hexValue": "30",
														"id": 1268,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5494:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5482:13:8"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5517:3:8",
														"subExpression": {
															"id": 1274,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1267,
															"src": "5517:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1276,
													"nodeType": "ExpressionStatement",
													"src": "5517:3:8"
												},
												"nodeType": "ForStatement",
												"src": "5477:268:8"
											},
											{
												"assignments": [
													1311
												],
												"declarations": [
													{
														"constant": false,
														"id": 1311,
														"mutability": "mutable",
														"name": "proposal",
														"nameLocation": "5798:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1355,
														"src": "5763:43:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
															"typeString": "struct IProposalRegistry.Proposal"
														},
														"typeName": {
															"id": 1310,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1309,
																"name": "IProposalRegistry.Proposal",
																"nameLocations": [
																	"5763:17:8",
																	"5781:8:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2040,
																"src": "5763:26:8"
															},
															"referencedDeclaration": 2040,
															"src": "5763:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																"typeString": "struct IProposalRegistry.Proposal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1315,
												"initialValue": {
													"baseExpression": {
														"id": 1312,
														"name": "proposals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "5809:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$2040_storage_$",
															"typeString": "mapping(uint256 => struct IProposalRegistry.Proposal storage ref)"
														}
													},
													"id": 1314,
													"indexExpression": {
														"id": 1313,
														"name": "proposalId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1253,
														"src": "5819:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5809:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Proposal_$2040_storage",
														"typeString": "struct IProposalRegistry.Proposal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5763:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1317,
																"name": "totalMilestoneAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1263,
																"src": "5848:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1318,
																	"name": "proposal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1311,
																	"src": "5872:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																		"typeString": "struct IProposalRegistry.Proposal storage pointer"
																	}
																},
																"id": 1319,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5881:15:8",
																"memberName": "requestedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2012,
																"src": "5872:24:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5848:48:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d696c6573746f6e6520616d6f756e747320646f6e27742073756d20746f2072657175657374656420616d6f756e74",
															"id": 1321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5898:49:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_920ba52a5a24fa80c2ca90dda5934af95154ccdf03d9a5e2a656c76021f48b08",
																"typeString": "literal_string \"Milestone amounts don't sum to requested amount\""
															},
															"value": "Milestone amounts don't sum to requested amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_920ba52a5a24fa80c2ca90dda5934af95154ccdf03d9a5e2a656c76021f48b08",
																"typeString": "literal_string \"Milestone amounts don't sum to requested amount\""
															}
														],
														"id": 1316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5840:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5840:108:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1323,
												"nodeType": "ExpressionStatement",
												"src": "5840:108:8"
											},
											{
												"body": {
													"id": 1353,
													"nodeType": "Block",
													"src": "6043:245:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 1342,
																					"name": "descriptions",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1256,
																					"src": "6141:12:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																						"typeString": "string memory[] memory"
																					}
																				},
																				"id": 1344,
																				"indexExpression": {
																					"id": 1343,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1325,
																					"src": "6154:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6141:15:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				}
																			},
																			{
																				"baseExpression": {
																					"id": 1345,
																					"name": "amounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1259,
																					"src": "6182:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 1347,
																				"indexExpression": {
																					"id": 1346,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1325,
																					"src": "6190:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6182:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1348,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6221:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			},
																			{
																				"hexValue": "30",
																				"id": 1349,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6260:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string memory"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"expression": {
																				"id": 1340,
																				"name": "IProposalRegistry",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2121,
																				"src": "6082:17:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IProposalRegistry_$2121_$",
																					"typeString": "type(contract IProposalRegistry)"
																				}
																			},
																			"id": 1341,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6100:9:8",
																			"memberName": "Milestone",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2000,
																			"src": "6082:27:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_struct$_Milestone_$2000_storage_ptr_$",
																				"typeString": "type(struct IProposalRegistry.Milestone storage pointer)"
																			}
																		},
																		"id": 1350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "structConstructorCall",
																		"lValueRequested": false,
																		"nameLocations": [
																			"6128:11:8",
																			"6174:6:8",
																			"6210:9:8",
																			"6244:14:8"
																		],
																		"names": [
																			"description",
																			"amount",
																			"completed",
																			"completionTime"
																		],
																		"nodeType": "FunctionCall",
																		"src": "6082:194:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Milestone_$2000_memory_ptr",
																			"typeString": "struct IProposalRegistry.Milestone memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_Milestone_$2000_memory_ptr",
																			"typeString": "struct IProposalRegistry.Milestone memory"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1335,
																			"name": "proposal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1311,
																			"src": "6057:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																				"typeString": "struct IProposalRegistry.Proposal storage pointer"
																			}
																		},
																		"id": 1338,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6066:10:8",
																		"memberName": "milestones",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2037,
																		"src": "6057:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Milestone_$2000_storage_$dyn_storage",
																			"typeString": "struct IProposalRegistry.Milestone storage ref[] storage ref"
																		}
																	},
																	"id": 1339,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6077:4:8",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "6057:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Milestone_$2000_storage_$dyn_storage_ptr_$_t_struct$_Milestone_$2000_storage_$returns$__$attached_to$_t_array$_t_struct$_Milestone_$2000_storage_$dyn_storage_ptr_$",
																		"typeString": "function (struct IProposalRegistry.Milestone storage ref[] storage pointer,struct IProposalRegistry.Milestone storage ref)"
																	}
																},
																"id": 1351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6057:220:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1352,
															"nodeType": "ExpressionStatement",
															"src": "6057:220:8"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1328,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1325,
														"src": "6013:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1329,
															"name": "descriptions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1256,
															"src": "6017:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																"typeString": "string memory[] memory"
															}
														},
														"id": 1330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6030:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6017:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6013:23:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1354,
												"initializationExpression": {
													"assignments": [
														1325
													],
													"declarations": [
														{
															"constant": false,
															"id": 1325,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6006:1:8",
															"nodeType": "VariableDeclaration",
															"scope": 1354,
															"src": "5998:9:8",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1324,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "5998:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1327,
													"initialValue": {
														"hexValue": "30",
														"id": 1326,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6010:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5998:13:8"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "6038:3:8",
														"subExpression": {
															"id": 1332,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1325,
															"src": "6038:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1334,
													"nodeType": "ExpressionStatement",
													"src": "6038:3:8"
												},
												"nodeType": "ForStatement",
												"src": "5993:295:8"
											}
										]
									},
									"documentation": {
										"id": 1251,
										"nodeType": "StructuredDocumentation",
										"src": "5169:50:8",
										"text": " @dev Add milestones to proposal"
									},
									"id": 1356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_addMilestones",
									"nameLocation": "5233:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "5265:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "5257:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5257:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "descriptions",
												"nameLocation": "5301:12:8",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "5285:28:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
													"typeString": "string[]"
												},
												"typeName": {
													"baseType": {
														"id": 1254,
														"name": "string",
														"nodeType": "ElementaryTypeName",
														"src": "5285:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage_ptr",
															"typeString": "string"
														}
													},
													"id": 1255,
													"nodeType": "ArrayTypeName",
													"src": "5285:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
														"typeString": "string[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "5340:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1356,
												"src": "5323:24:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1257,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "5323:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1258,
													"nodeType": "ArrayTypeName",
													"src": "5323:9:8",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5247:106:8"
									},
									"returnParameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5363:0:8"
									},
									"scope": 1519,
									"src": "5224:1070:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1363,
										"nodeType": "Block",
										"src": "6372:42:8",
										"statements": [
											{
												"expression": {
													"id": 1361,
													"name": "_currentProposalId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 840,
													"src": "6389:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1360,
												"id": 1362,
												"nodeType": "Return",
												"src": "6382:25:8"
											}
										]
									},
									"functionSelector": "fe10226d",
									"id": 1364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentProposalId",
									"nameLocation": "6309:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6329:2:8"
									},
									"returnParameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "6363:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6363:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6362:9:8"
									},
									"scope": 1519,
									"src": "6300:114:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1374,
										"nodeType": "Block",
										"src": "6501:61:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1371,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1366,
														"src": "6518:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6526:7:8",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "6518:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1370,
												"id": 1373,
												"nodeType": "Return",
												"src": "6511:22:8"
											}
										]
									},
									"functionSelector": "bb4d4436",
									"id": 1375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getVotingPower",
									"nameLocation": "6429:14:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6452:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "6444:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6444:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6443:17:8"
									},
									"returnParameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1375,
												"src": "6492:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6492:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6491:9:8"
									},
									"scope": 1519,
									"src": "6420:142:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1385,
										"nodeType": "Block",
										"src": "6627:72:8",
										"statements": [
											{
												"expression": {
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "6637:20:8",
													"subExpression": {
														"id": 1380,
														"name": "_currentProposalId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "6637:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1382,
												"nodeType": "ExpressionStatement",
												"src": "6637:20:8"
											},
											{
												"expression": {
													"id": 1383,
													"name": "_currentProposalId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 840,
													"src": "6674:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1379,
												"id": 1384,
												"nodeType": "Return",
												"src": "6667:25:8"
											}
										]
									},
									"id": 1386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_incrementProposalId",
									"nameLocation": "6577:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6597:2:8"
									},
									"returnParameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1378,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1386,
												"src": "6618:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6618:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6617:9:8"
									},
									"scope": 1519,
									"src": "6568:131:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1402,
										"nodeType": "Block",
										"src": "6773:110:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1393,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1391,
																	"name": "proposalId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1388,
																	"src": "6791:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6804:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6791:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1396,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1394,
																	"name": "proposalId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1388,
																	"src": "6809:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1395,
																	"name": "_currentProposalId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 840,
																	"src": "6823:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6809:32:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "6791:50:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642070726f706f73616c204944",
															"id": 1398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6843:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0febab928e40c46453cf5b5d4970676eff56829a16bec62dc48d209b2deaf8aa",
																"typeString": "literal_string \"Invalid proposal ID\""
															},
															"value": "Invalid proposal ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0febab928e40c46453cf5b5d4970676eff56829a16bec62dc48d209b2deaf8aa",
																"typeString": "literal_string \"Invalid proposal ID\""
															}
														],
														"id": 1390,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6783:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6783:82:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1400,
												"nodeType": "ExpressionStatement",
												"src": "6783:82:8"
											},
											{
												"id": 1401,
												"nodeType": "PlaceholderStatement",
												"src": "6875:1:8"
											}
										]
									},
									"id": 1403,
									"name": "onlyValidProposal",
									"nameLocation": "6735:17:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "6761:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "6753:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6753:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6752:20:8"
									},
									"src": "6726:157:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1419,
										"nodeType": "Block",
										"src": "6935:101:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1408,
																		"name": "proposals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 877,
																		"src": "6953:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$2040_storage_$",
																			"typeString": "mapping(uint256 => struct IProposalRegistry.Proposal storage ref)"
																		}
																	},
																	"id": 1410,
																	"indexExpression": {
																		"id": 1409,
																		"name": "proposalId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1405,
																		"src": "6963:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6953:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Proposal_$2040_storage",
																		"typeString": "struct IProposalRegistry.Proposal storage ref"
																	}
																},
																"id": 1411,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6975:8:8",
																"memberName": "proposer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2004,
																"src": "6953:30:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1412,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6987:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6991:6:8",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6987:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6953:44:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74207468652070726f706f736572",
															"id": 1415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6999:18:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_137f8f214c7fa7e9d4fe334f6d25f5eec59255c492360ab1ef0f9ca2ef442e15",
																"typeString": "literal_string \"Not the proposer\""
															},
															"value": "Not the proposer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_137f8f214c7fa7e9d4fe334f6d25f5eec59255c492360ab1ef0f9ca2ef442e15",
																"typeString": "literal_string \"Not the proposer\""
															}
														],
														"id": 1407,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6945:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6945:73:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1417,
												"nodeType": "ExpressionStatement",
												"src": "6945:73:8"
											},
											{
												"id": 1418,
												"nodeType": "PlaceholderStatement",
												"src": "7028:1:8"
											}
										]
									},
									"id": 1420,
									"name": "onlyProposer",
									"nameLocation": "6902:12:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "6923:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "6915:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1404,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6915:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6914:20:8"
									},
									"src": "6893:143:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1459,
										"nodeType": "Block",
										"src": "7092:319:8",
										"statements": [
											{
												"assignments": [
													1428
												],
												"declarations": [
													{
														"constant": false,
														"id": 1428,
														"mutability": "mutable",
														"name": "proposal",
														"nameLocation": "7137:8:8",
														"nodeType": "VariableDeclaration",
														"scope": 1459,
														"src": "7102:43:8",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
															"typeString": "struct IProposalRegistry.Proposal"
														},
														"typeName": {
															"id": 1427,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1426,
																"name": "IProposalRegistry.Proposal",
																"nameLocations": [
																	"7102:17:8",
																	"7120:8:8"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2040,
																"src": "7102:26:8"
															},
															"referencedDeclaration": 2040,
															"src": "7102:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																"typeString": "struct IProposalRegistry.Proposal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1432,
												"initialValue": {
													"baseExpression": {
														"id": 1429,
														"name": "proposals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "7148:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$2040_storage_$",
															"typeString": "mapping(uint256 => struct IProposalRegistry.Proposal storage ref)"
														}
													},
													"id": 1431,
													"indexExpression": {
														"id": 1430,
														"name": "proposalId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1422,
														"src": "7158:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7148:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Proposal_$2040_storage",
														"typeString": "struct IProposalRegistry.Proposal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7102:67:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_ProposalStatus_$1987",
																"typeString": "enum IProposalRegistry.ProposalStatus"
															},
															"id": 1439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1434,
																	"name": "proposal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1428,
																	"src": "7187:8:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																		"typeString": "struct IProposalRegistry.Proposal storage pointer"
																	}
																},
																"id": 1435,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7196:6:8",
																"memberName": "status",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2015,
																"src": "7187:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_ProposalStatus_$1987",
																	"typeString": "enum IProposalRegistry.ProposalStatus"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"expression": {
																		"id": 1436,
																		"name": "IProposalRegistry",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2121,
																		"src": "7206:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IProposalRegistry_$2121_$",
																			"typeString": "type(contract IProposalRegistry)"
																		}
																	},
																	"id": 1437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7224:14:8",
																	"memberName": "ProposalStatus",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1987,
																	"src": "7206:32:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_ProposalStatus_$1987_$",
																		"typeString": "type(enum IProposalRegistry.ProposalStatus)"
																	}
																},
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7239:6:8",
																"memberName": "Voting",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1981,
																"src": "7206:39:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_ProposalStatus_$1987",
																	"typeString": "enum IProposalRegistry.ProposalStatus"
																}
															},
															"src": "7187:58:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420696e20766f74696e67207068617365",
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7247:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_758181e8dded09ae19ad3025dc90dbf97337c908c094ecc808cf2f03552ba294",
																"typeString": "literal_string \"Not in voting phase\""
															},
															"value": "Not in voting phase"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_758181e8dded09ae19ad3025dc90dbf97337c908c094ecc808cf2f03552ba294",
																"typeString": "literal_string \"Not in voting phase\""
															}
														],
														"id": 1433,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7179:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7179:90:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1442,
												"nodeType": "ExpressionStatement",
												"src": "7179:90:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1444,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "7287:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7293:9:8",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "7287:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"expression": {
																		"id": 1446,
																		"name": "proposal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1428,
																		"src": "7306:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																			"typeString": "struct IProposalRegistry.Proposal storage pointer"
																		}
																	},
																	"id": 1447,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7315:11:8",
																	"memberName": "votingStart",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2021,
																	"src": "7306:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7287:39:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1449,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "7330:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7336:9:8",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "7330:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"expression": {
																		"id": 1451,
																		"name": "proposal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1428,
																		"src": "7349:8:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																			"typeString": "struct IProposalRegistry.Proposal storage pointer"
																		}
																	},
																	"id": 1452,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7358:9:8",
																	"memberName": "votingEnd",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2023,
																	"src": "7349:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7330:37:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "7287:80:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "566f74696e6720706572696f6420696e76616c6964",
															"id": 1455,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7369:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc6cc51a14e68d8cadd05887d3e9a36551899056c3a1a90b9aaf47945c39c2",
																"typeString": "literal_string \"Voting period invalid\""
															},
															"value": "Voting period invalid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc6cc51a14e68d8cadd05887d3e9a36551899056c3a1a90b9aaf47945c39c2",
																"typeString": "literal_string \"Voting period invalid\""
															}
														],
														"id": 1443,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7279:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7279:114:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1457,
												"nodeType": "ExpressionStatement",
												"src": "7279:114:8"
											},
											{
												"id": 1458,
												"nodeType": "PlaceholderStatement",
												"src": "7403:1:8"
											}
										]
									},
									"id": 1460,
									"name": "onlyDuringVoting",
									"nameLocation": "7055:16:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "7080:10:8",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "7072:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7072:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7071:20:8"
									},
									"src": "7046:365:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1488,
										"nodeType": "Block",
										"src": "7503:177:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1469,
																"name": "newRegistry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1462,
																"src": "7521:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7544:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1471,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7536:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1470,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7536:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1473,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7536:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7521:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 1475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7548:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 1468,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7513:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1476,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7513:53:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1477,
												"nodeType": "ExpressionStatement",
												"src": "7513:53:8"
											},
											{
												"expression": {
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1478,
														"name": "aiScoreRegistry",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 835,
														"src": "7576:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAIScoreRegistry_$1976",
															"typeString": "contract IAIScoreRegistry"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1480,
																"name": "newRegistry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1462,
																"src": "7611:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1479,
															"name": "IAIScoreRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1976,
															"src": "7594:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IAIScoreRegistry_$1976_$",
																"typeString": "type(contract IAIScoreRegistry)"
															}
														},
														"id": 1481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7594:29:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IAIScoreRegistry_$1976",
															"typeString": "contract IAIScoreRegistry"
														}
													},
													"src": "7576:47:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IAIScoreRegistry_$1976",
														"typeString": "contract IAIScoreRegistry"
													}
												},
												"id": 1483,
												"nodeType": "ExpressionStatement",
												"src": "7576:47:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1485,
															"name": "newRegistry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1462,
															"src": "7661:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1484,
														"name": "AIScoreRegistryUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 966,
														"src": "7638:22:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7638:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1487,
												"nodeType": "EmitStatement",
												"src": "7633:40:8"
											}
										]
									},
									"functionSelector": "6807fc21",
									"id": 1489,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1465,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2196,
													"src": "7491:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1466,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1464,
												"name": "onlyRole",
												"nameLocations": [
													"7482:8:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "7482:8:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "7482:20:8"
										}
									],
									"name": "updateAIScoreRegistry",
									"nameLocation": "7430:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "newRegistry",
												"nameLocation": "7460:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "7452:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7452:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7451:21:8"
									},
									"returnParameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7503:0:8"
									},
									"scope": 1519,
									"src": "7421:259:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1517,
										"nodeType": "Block",
										"src": "7765:168:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1498,
																"name": "newEscrow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1491,
																"src": "7783:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7804:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7796:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1499,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7796:7:8",
																		"typeDescriptions": {}
																	}
																},
																"id": 1502,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7796:10:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7783:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642061646472657373",
															"id": 1504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7808:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															},
															"value": "Invalid address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1462473b7a4b33d32b109b815fd2324d00c9e5839b707ecf16d0ab5744f99226",
																"typeString": "literal_string \"Invalid address\""
															}
														],
														"id": 1497,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7775:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7775:51:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1506,
												"nodeType": "ExpressionStatement",
												"src": "7775:51:8"
											},
											{
												"expression": {
													"id": 1511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1507,
														"name": "treasuryEscrow",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "7836:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITreasuryEscrow_$2185",
															"typeString": "contract ITreasuryEscrow"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1509,
																"name": "newEscrow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1491,
																"src": "7869:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1508,
															"name": "ITreasuryEscrow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2185,
															"src": "7853:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ITreasuryEscrow_$2185_$",
																"typeString": "type(contract ITreasuryEscrow)"
															}
														},
														"id": 1510,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7853:26:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ITreasuryEscrow_$2185",
															"typeString": "contract ITreasuryEscrow"
														}
													},
													"src": "7836:43:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ITreasuryEscrow_$2185",
														"typeString": "contract ITreasuryEscrow"
													}
												},
												"id": 1512,
												"nodeType": "ExpressionStatement",
												"src": "7836:43:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1514,
															"name": "newEscrow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "7916:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1513,
														"name": "TreasuryEscrowUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 970,
														"src": "7894:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7894:32:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1516,
												"nodeType": "EmitStatement",
												"src": "7889:37:8"
											}
										]
									},
									"functionSelector": "abd98fb0",
									"id": 1518,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1494,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2196,
													"src": "7753:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1495,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1493,
												"name": "onlyRole",
												"nameLocations": [
													"7744:8:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "7744:8:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "7744:20:8"
										}
									],
									"name": "updateTreasuryEscrow",
									"nameLocation": "7695:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "newEscrow",
												"nameLocation": "7724:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "7716:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7716:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7715:19:8"
									},
									"returnParameters": {
										"id": 1496,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7765:0:8"
									},
									"scope": 1519,
									"src": "7686:247:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1520,
							"src": "354:7581:8",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336,
								390,
								395,
								908,
								916,
								927,
								933,
								939,
								946,
								954,
								962,
								966,
								970
							]
						}
					],
					"src": "32:7910:8"
				},
				"id": 8
			},
			"CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol": {
				"ast": {
					"absolutePath": "CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol",
					"exportedSymbols": {
						"AccessControl": [
							296
						],
						"Context": [
							582
						],
						"ERC165": [
							606
						],
						"ExtendedAccessControl": [
							2431
						],
						"IAIScoreRegistry": [
							1976
						],
						"IAccessControl": [
							379
						],
						"IERC165": [
							618
						],
						"IProposalRegistry": [
							2121
						],
						"ITreasuryEscrow": [
							2185
						],
						"Pausable": [
							487
						],
						"ProposalRegistryBase": [
							1519
						],
						"ProposalSubmission": [
							1611
						],
						"ReentrancyGuard": [
							552
						]
					},
					"id": 1612,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1521,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"absolutePath": "CrossFi-Treasury-Guard/contracts/ProposalRegistryBase.sol",
							"file": "./ProposalRegistryBase.sol",
							"id": 1522,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1612,
							"sourceUnit": 1520,
							"src": "58:36:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "CrossFi-Treasury-Guard/contracts/interfaces/IProposalRegistry.sol",
							"file": "./interfaces/IProposalRegistry.sol",
							"id": 1523,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1612,
							"sourceUnit": 2122,
							"src": "95:44:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1524,
										"name": "ProposalRegistryBase",
										"nameLocations": [
											"181:20:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1519,
										"src": "181:20:9"
									},
									"id": 1525,
									"nodeType": "InheritanceSpecifier",
									"src": "181:20:9"
								}
							],
							"canonicalName": "ProposalSubmission",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1611,
							"linearizedBaseContracts": [
								1611,
								1519,
								487,
								552,
								2431,
								296,
								606,
								618,
								379,
								582
							],
							"name": "ProposalSubmission",
							"nameLocation": "159:18:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1541,
										"nodeType": "Block",
										"src": "400:46:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1538,
															"name": "input",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "433:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ProposalInput_$2057_memory_ptr",
																"typeString": "struct IProposalRegistry.ProposalInput memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_ProposalInput_$2057_memory_ptr",
																"typeString": "struct IProposalRegistry.ProposalInput memory"
															}
														],
														"id": 1537,
														"name": "_submitProposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1610,
														"src": "417:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_ProposalInput_$2057_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct IProposalRegistry.ProposalInput memory) returns (uint256)"
														}
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "417:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1536,
												"id": 1540,
												"nodeType": "Return",
												"src": "410:29:9"
											}
										]
									},
									"functionSelector": "08d256af",
									"id": 1542,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1531,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1530,
												"name": "whenNotPaused",
												"nameLocations": [
													"335:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 414,
												"src": "335:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "335:13:9"
										},
										{
											"id": 1533,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1532,
												"name": "nonReentrant",
												"nameLocations": [
													"357:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 517,
												"src": "357:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "357:12:9"
										}
									],
									"name": "submitProposal",
									"nameLocation": "217:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "271:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "232:44:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ProposalInput_$2057_memory_ptr",
													"typeString": "struct IProposalRegistry.ProposalInput"
												},
												"typeName": {
													"id": 1527,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1526,
														"name": "IProposalRegistry.ProposalInput",
														"nameLocations": [
															"232:17:9",
															"250:13:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2057,
														"src": "232:31:9"
													},
													"referencedDeclaration": 2057,
													"src": "232:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ProposalInput_$2057_storage_ptr",
														"typeString": "struct IProposalRegistry.ProposalInput"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "231:46:9"
									},
									"returnParameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1542,
												"src": "387:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "386:9:9"
									},
									"scope": 1611,
									"src": "208:238:9",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1609,
										"nodeType": "Block",
										"src": "570:670:9",
										"statements": [
											{
												"assignments": [
													1551
												],
												"declarations": [
													{
														"constant": false,
														"id": 1551,
														"mutability": "mutable",
														"name": "proposalId",
														"nameLocation": "588:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1609,
														"src": "580:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1550,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "580:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1566,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1553,
																"name": "input",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1545,
																"src": "635:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ProposalInput_$2057_memory_ptr",
																	"typeString": "struct IProposalRegistry.ProposalInput memory"
																}
															},
															"id": 1554,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "641:5:9",
															"memberName": "title",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2042,
															"src": "635:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 1555,
																"name": "input",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1545,
																"src": "660:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ProposalInput_$2057_memory_ptr",
																	"typeString": "struct IProposalRegistry.ProposalInput memory"
																}
															},
															"id": 1556,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "666:15:9",
															"memberName": "requestedAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2048,
															"src": "660:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1557,
																"name": "input",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1545,
																"src": "695:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ProposalInput_$2057_memory_ptr",
																	"typeString": "struct IProposalRegistry.ProposalInput memory"
																}
															},
															"id": 1558,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "701:12:9",
															"memberName": "votingPeriod",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2056,
															"src": "695:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 1559,
																	"name": "input",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1545,
																	"src": "727:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ProposalInput_$2057_memory_ptr",
																		"typeString": "struct IProposalRegistry.ProposalInput memory"
																	}
																},
																"id": 1560,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "733:21:9",
																"memberName": "milestoneDescriptions",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2051,
																"src": "727:27:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																	"typeString": "string memory[] memory"
																}
															},
															"id": 1561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "755:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "727:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"expression": {
																	"id": 1562,
																	"name": "input",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1545,
																	"src": "775:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ProposalInput_$2057_memory_ptr",
																		"typeString": "struct IProposalRegistry.ProposalInput memory"
																	}
																},
																"id": 1563,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "781:16:9",
																"memberName": "milestoneAmounts",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2054,
																"src": "775:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															"id": 1564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "798:6:9",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "775:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1552,
														"name": "_validateAndCreateId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1114,
														"src": "601:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (string memory,uint256,uint256,uint256,uint256) returns (uint256)"
														}
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "601:213:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "580:234:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1568,
															"name": "proposalId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1551,
															"src": "847:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1569,
																"name": "input",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1545,
																"src": "859:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ProposalInput_$2057_memory_ptr",
																	"typeString": "struct IProposalRegistry.ProposalInput memory"
																}
															},
															"id": 1570,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "865:5:9",
															"memberName": "title",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2042,
															"src": "859:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 1571,
																"name": "input",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1545,
																"src": "872:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ProposalInput_$2057_memory_ptr",
																	"typeString": "struct IProposalRegistry.ProposalInput memory"
																}
															},
															"id": 1572,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "878:7:9",
															"memberName": "summary",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2044,
															"src": "872:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 1573,
																"name": "input",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1545,
																"src": "887:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ProposalInput_$2057_memory_ptr",
																	"typeString": "struct IProposalRegistry.ProposalInput memory"
																}
															},
															"id": 1574,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "893:7:9",
															"memberName": "ipfsCID",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2046,
															"src": "887:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1567,
														"name": "_setBasicProposalInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "825:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory,string memory,string memory)"
														}
													},
													"id": 1575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "825:76:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1576,
												"nodeType": "ExpressionStatement",
												"src": "825:76:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1578,
															"name": "proposalId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1551,
															"src": "938:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1579,
																"name": "input",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1545,
																"src": "950:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ProposalInput_$2057_memory_ptr",
																	"typeString": "struct IProposalRegistry.ProposalInput memory"
																}
															},
															"id": 1580,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "956:15:9",
															"memberName": "requestedAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2048,
															"src": "950:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1581,
																"name": "input",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1545,
																"src": "973:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ProposalInput_$2057_memory_ptr",
																	"typeString": "struct IProposalRegistry.ProposalInput memory"
																}
															},
															"id": 1582,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "979:12:9",
															"memberName": "votingPeriod",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2056,
															"src": "973:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1577,
														"name": "_setAdditionalProposalInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1250,
														"src": "911:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,uint256)"
														}
													},
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "911:81:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1584,
												"nodeType": "ExpressionStatement",
												"src": "911:81:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1586,
															"name": "proposalId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1551,
															"src": "1017:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1587,
																"name": "input",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1545,
																"src": "1029:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ProposalInput_$2057_memory_ptr",
																	"typeString": "struct IProposalRegistry.ProposalInput memory"
																}
															},
															"id": 1588,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1035:21:9",
															"memberName": "milestoneDescriptions",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2051,
															"src": "1029:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																"typeString": "string memory[] memory"
															}
														},
														{
															"expression": {
																"id": 1589,
																"name": "input",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1545,
																"src": "1058:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ProposalInput_$2057_memory_ptr",
																	"typeString": "struct IProposalRegistry.ProposalInput memory"
																}
															},
															"id": 1590,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1064:16:9",
															"memberName": "milestoneAmounts",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2054,
															"src": "1058:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
																"typeString": "string memory[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1585,
														"name": "_addMilestones",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1356,
														"src": "1002:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory[] memory,uint256[] memory)"
														}
													},
													"id": 1591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1002:79:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1592,
												"nodeType": "ExpressionStatement",
												"src": "1002:79:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1594,
															"name": "proposalId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1551,
															"src": "1115:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1595,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1127:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1596,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1131:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1127:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1597,
																"name": "input",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1545,
																"src": "1139:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ProposalInput_$2057_memory_ptr",
																	"typeString": "struct IProposalRegistry.ProposalInput memory"
																}
															},
															"id": 1598,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1145:5:9",
															"memberName": "title",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2042,
															"src": "1139:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 1599,
																"name": "input",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1545,
																"src": "1152:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ProposalInput_$2057_memory_ptr",
																	"typeString": "struct IProposalRegistry.ProposalInput memory"
																}
															},
															"id": 1600,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1158:15:9",
															"memberName": "requestedAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2048,
															"src": "1152:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1601,
																"name": "input",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1545,
																"src": "1175:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ProposalInput_$2057_memory_ptr",
																	"typeString": "struct IProposalRegistry.ProposalInput memory"
																}
															},
															"id": 1602,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1181:7:9",
															"memberName": "ipfsCID",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2046,
															"src": "1175:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"expression": {
																"id": 1603,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1190:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1196:9:9",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1190:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1593,
														"name": "ProposalSubmitted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 908,
														"src": "1097:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,string memory,uint256,string memory,uint256)"
														}
													},
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1097:109:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1606,
												"nodeType": "EmitStatement",
												"src": "1092:114:9"
											},
											{
												"expression": {
													"id": 1607,
													"name": "proposalId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1551,
													"src": "1223:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1549,
												"id": 1608,
												"nodeType": "Return",
												"src": "1216:17:9"
											}
										]
									},
									"id": 1610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_submitProposal",
									"nameLocation": "461:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "516:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "477:44:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ProposalInput_$2057_memory_ptr",
													"typeString": "struct IProposalRegistry.ProposalInput"
												},
												"typeName": {
													"id": 1544,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1543,
														"name": "IProposalRegistry.ProposalInput",
														"nameLocations": [
															"477:17:9",
															"495:13:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2057,
														"src": "477:31:9"
													},
													"referencedDeclaration": 2057,
													"src": "477:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ProposalInput_$2057_storage_ptr",
														"typeString": "struct IProposalRegistry.ProposalInput"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "476:46:9"
									},
									"returnParameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "557:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:9:9"
									},
									"scope": 1611,
									"src": "452:788:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1612,
							"src": "141:1101:9",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336,
								390,
								395,
								908,
								916,
								927,
								933,
								939,
								946,
								954,
								962,
								966,
								970
							]
						}
					],
					"src": "32:1213:9"
				},
				"id": 9
			},
			"CrossFi-Treasury-Guard/contracts/ProposalVoting.sol": {
				"ast": {
					"absolutePath": "CrossFi-Treasury-Guard/contracts/ProposalVoting.sol",
					"exportedSymbols": {
						"AccessControl": [
							296
						],
						"Context": [
							582
						],
						"ERC165": [
							606
						],
						"ExtendedAccessControl": [
							2431
						],
						"IAIScoreRegistry": [
							1976
						],
						"IAccessControl": [
							379
						],
						"IERC165": [
							618
						],
						"IProposalRegistry": [
							2121
						],
						"ITreasuryEscrow": [
							2185
						],
						"Pausable": [
							487
						],
						"ProposalRegistryBase": [
							1519
						],
						"ProposalSubmission": [
							1611
						],
						"ProposalVoting": [
							1915
						],
						"ReentrancyGuard": [
							552
						]
					},
					"id": 1916,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1613,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:10"
						},
						{
							"absolutePath": "CrossFi-Treasury-Guard/contracts/ProposalSubmission.sol",
							"file": "./ProposalSubmission.sol",
							"id": 1614,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1916,
							"sourceUnit": 1612,
							"src": "58:34:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1615,
										"name": "ProposalSubmission",
										"nameLocations": [
											"130:18:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1611,
										"src": "130:18:10"
									},
									"id": 1616,
									"nodeType": "InheritanceSpecifier",
									"src": "130:18:10"
								}
							],
							"canonicalName": "ProposalVoting",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1915,
							"linearizedBaseContracts": [
								1915,
								1611,
								1519,
								487,
								552,
								2431,
								296,
								606,
								618,
								379,
								582
							],
							"name": "ProposalVoting",
							"nameLocation": "112:14:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1631,
										"nodeType": "Block",
										"src": "266:48:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1627,
															"name": "proposalId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1618,
															"src": "286:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1628,
															"name": "voteType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1621,
															"src": "298:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_VoteType_$1991",
																"typeString": "enum IProposalRegistry.VoteType"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_enum$_VoteType_$1991",
																"typeString": "enum IProposalRegistry.VoteType"
															}
														],
														"id": 1626,
														"name": "_castVote",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1712,
														"src": "276:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_enum$_VoteType_$1991_$returns$__$",
															"typeString": "function (uint256,enum IProposalRegistry.VoteType)"
														}
													},
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "276:31:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1630,
												"nodeType": "ExpressionStatement",
												"src": "276:31:10"
											}
										]
									},
									"functionSelector": "56781388",
									"id": 1632,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1624,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1623,
												"name": "whenNotPaused",
												"nameLocations": [
													"252:13:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 414,
												"src": "252:13:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "252:13:10"
										}
									],
									"name": "castVote",
									"nameLocation": "169:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "186:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "178:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "178:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "voteType",
												"nameLocation": "225:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1632,
												"src": "198:35:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_VoteType_$1991",
													"typeString": "enum IProposalRegistry.VoteType"
												},
												"typeName": {
													"id": 1620,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1619,
														"name": "IProposalRegistry.VoteType",
														"nameLocations": [
															"198:17:10",
															"216:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1991,
														"src": "198:26:10"
													},
													"referencedDeclaration": 1991,
													"src": "198:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_VoteType_$1991",
														"typeString": "enum IProposalRegistry.VoteType"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "177:57:10"
									},
									"returnParameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "266:0:10"
									},
									"scope": 1915,
									"src": "160:154:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1643,
										"nodeType": "Block",
										"src": "395:45:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1640,
															"name": "proposalId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1634,
															"src": "422:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1639,
														"name": "_executeProposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "405:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "405:28:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1642,
												"nodeType": "ExpressionStatement",
												"src": "405:28:10"
											}
										]
									},
									"functionSelector": "0d61b519",
									"id": 1644,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1637,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1636,
												"name": "nonReentrant",
												"nameLocations": [
													"382:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 517,
												"src": "382:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "382:12:10"
										}
									],
									"name": "executeProposal",
									"nameLocation": "329:15:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "353:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "345:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "345:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "344:20:10"
									},
									"returnParameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "395:0:10"
									},
									"scope": 1915,
									"src": "320:120:10",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1711,
										"nodeType": "Block",
										"src": "531:540:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "549:33:10",
															"subExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1653,
																		"name": "hasVoted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 883,
																		"src": "550:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																			"typeString": "mapping(uint256 => mapping(address => bool))"
																		}
																	},
																	"id": 1655,
																	"indexExpression": {
																		"id": 1654,
																		"name": "proposalId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1646,
																		"src": "559:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "550:20:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1658,
																"indexExpression": {
																	"expression": {
																		"id": 1656,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "571:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "575:6:10",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "571:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "550:32:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920766f746564",
															"id": 1660,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "584:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6",
																"typeString": "literal_string \"Already voted\""
															},
															"value": "Already voted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6",
																"typeString": "literal_string \"Already voted\""
															}
														],
														"id": 1652,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "541:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "541:59:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1662,
												"nodeType": "ExpressionStatement",
												"src": "541:59:10"
											},
											{
												"assignments": [
													1667
												],
												"declarations": [
													{
														"constant": false,
														"id": 1667,
														"mutability": "mutable",
														"name": "proposal",
														"nameLocation": "654:8:10",
														"nodeType": "VariableDeclaration",
														"scope": 1711,
														"src": "619:43:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
															"typeString": "struct IProposalRegistry.Proposal"
														},
														"typeName": {
															"id": 1666,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1665,
																"name": "IProposalRegistry.Proposal",
																"nameLocations": [
																	"619:17:10",
																	"637:8:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2040,
																"src": "619:26:10"
															},
															"referencedDeclaration": 2040,
															"src": "619:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																"typeString": "struct IProposalRegistry.Proposal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1671,
												"initialValue": {
													"baseExpression": {
														"id": 1668,
														"name": "proposals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "665:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$2040_storage_$",
															"typeString": "mapping(uint256 => struct IProposalRegistry.Proposal storage ref)"
														}
													},
													"id": 1670,
													"indexExpression": {
														"id": 1669,
														"name": "proposalId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1646,
														"src": "675:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "665:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Proposal_$2040_storage",
														"typeString": "struct IProposalRegistry.Proposal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "619:67:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_ProposalStatus_$1987",
																"typeString": "enum IProposalRegistry.ProposalStatus"
															},
															"id": 1678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1673,
																	"name": "proposal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1667,
																	"src": "704:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																		"typeString": "struct IProposalRegistry.Proposal storage pointer"
																	}
																},
																"id": 1674,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "713:6:10",
																"memberName": "status",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2015,
																"src": "704:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_ProposalStatus_$1987",
																	"typeString": "enum IProposalRegistry.ProposalStatus"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"expression": {
																		"id": 1675,
																		"name": "IProposalRegistry",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2121,
																		"src": "723:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IProposalRegistry_$2121_$",
																			"typeString": "type(contract IProposalRegistry)"
																		}
																	},
																	"id": 1676,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "741:14:10",
																	"memberName": "ProposalStatus",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1987,
																	"src": "723:32:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_ProposalStatus_$1987_$",
																		"typeString": "type(enum IProposalRegistry.ProposalStatus)"
																	}
																},
																"id": 1677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "756:6:10",
																"memberName": "Voting",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1981,
																"src": "723:39:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_ProposalStatus_$1987",
																	"typeString": "enum IProposalRegistry.ProposalStatus"
																}
															},
															"src": "704:58:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420766f74696e67",
															"id": 1679,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "764:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_da933b044ef7279296c38b343705480b95bcd2e4e61cfbeaa2bc4d810bf72216",
																"typeString": "literal_string \"Not voting\""
															},
															"value": "Not voting"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_da933b044ef7279296c38b343705480b95bcd2e4e61cfbeaa2bc4d810bf72216",
																"typeString": "literal_string \"Not voting\""
															}
														],
														"id": 1672,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "696:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "696:81:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1681,
												"nodeType": "ExpressionStatement",
												"src": "696:81:10"
											},
											{
												"assignments": [
													1683
												],
												"declarations": [
													{
														"constant": false,
														"id": 1683,
														"mutability": "mutable",
														"name": "votingPower",
														"nameLocation": "804:11:10",
														"nodeType": "VariableDeclaration",
														"scope": 1711,
														"src": "796:19:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1682,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "796:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1687,
												"initialValue": {
													"expression": {
														"expression": {
															"id": 1684,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "818:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1685,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "822:6:10",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "818:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "829:7:10",
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "818:18:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "796:40:10"
											},
											{
												"expression": {
													"id": 1695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1688,
																"name": "hasVoted",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 883,
																"src": "847:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(uint256 => mapping(address => bool))"
																}
															},
															"id": 1692,
															"indexExpression": {
																"id": 1689,
																"name": "proposalId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1646,
																"src": "856:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "847:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1693,
														"indexExpression": {
															"expression": {
																"id": 1690,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "868:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "872:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "868:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "847:32:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1694,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "882:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "847:39:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1696,
												"nodeType": "ExpressionStatement",
												"src": "847:39:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1698,
															"name": "proposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1667,
															"src": "953:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																"typeString": "struct IProposalRegistry.Proposal storage pointer"
															}
														},
														{
															"id": 1699,
															"name": "voteType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1649,
															"src": "963:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_VoteType_$1991",
																"typeString": "enum IProposalRegistry.VoteType"
															}
														},
														{
															"id": 1700,
															"name": "votingPower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1683,
															"src": "973:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																"typeString": "struct IProposalRegistry.Proposal storage pointer"
															},
															{
																"typeIdentifier": "t_enum$_VoteType_$1991",
																"typeString": "enum IProposalRegistry.VoteType"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1697,
														"name": "_updateVoteCounts",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1757,
														"src": "935:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Proposal_$2040_storage_ptr_$_t_enum$_VoteType_$1991_$_t_uint256_$returns$__$",
															"typeString": "function (struct IProposalRegistry.Proposal storage pointer,enum IProposalRegistry.VoteType,uint256)"
														}
													},
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "935:50:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1702,
												"nodeType": "ExpressionStatement",
												"src": "935:50:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1704,
															"name": "proposalId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1646,
															"src": "1018:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1705,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1030:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1706,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1034:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1030:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1707,
															"name": "voteType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1649,
															"src": "1042:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_VoteType_$1991",
																"typeString": "enum IProposalRegistry.VoteType"
															}
														},
														{
															"id": 1708,
															"name": "votingPower",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1683,
															"src": "1052:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_enum$_VoteType_$1991",
																"typeString": "enum IProposalRegistry.VoteType"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1703,
														"name": "VoteCast",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 927,
														"src": "1009:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_enum$_VoteType_$1991_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,enum IProposalRegistry.VoteType,uint256)"
														}
													},
													"id": 1709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1009:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1710,
												"nodeType": "EmitStatement",
												"src": "1004:60:10"
											}
										]
									},
									"id": 1712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_castVote",
									"nameLocation": "455:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1646,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "473:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "465:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1645,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "voteType",
												"nameLocation": "512:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "485:35:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_VoteType_$1991",
													"typeString": "enum IProposalRegistry.VoteType"
												},
												"typeName": {
													"id": 1648,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1647,
														"name": "IProposalRegistry.VoteType",
														"nameLocations": [
															"485:17:10",
															"503:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1991,
														"src": "485:26:10"
													},
													"referencedDeclaration": 1991,
													"src": "485:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_VoteType_$1991",
														"typeString": "enum IProposalRegistry.VoteType"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:57:10"
									},
									"returnParameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "531:0:10"
									},
									"scope": 1915,
									"src": "446:625:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1756,
										"nodeType": "Block",
										"src": "1246:307:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_VoteType_$1991",
														"typeString": "enum IProposalRegistry.VoteType"
													},
													"id": 1727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1723,
														"name": "voteType",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1718,
														"src": "1260:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_VoteType_$1991",
															"typeString": "enum IProposalRegistry.VoteType"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 1724,
																"name": "IProposalRegistry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2121,
																"src": "1272:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IProposalRegistry_$2121_$",
																	"typeString": "type(contract IProposalRegistry)"
																}
															},
															"id": 1725,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1290:8:10",
															"memberName": "VoteType",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1991,
															"src": "1272:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_VoteType_$1991_$",
																"typeString": "type(enum IProposalRegistry.VoteType)"
															}
														},
														"id": 1726,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1299:3:10",
														"memberName": "For",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1989,
														"src": "1272:30:10",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_VoteType_$1991",
															"typeString": "enum IProposalRegistry.VoteType"
														}
													},
													"src": "1260:42:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_VoteType_$1991",
															"typeString": "enum IProposalRegistry.VoteType"
														},
														"id": 1739,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1735,
															"name": "voteType",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1718,
															"src": "1371:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_VoteType_$1991",
																"typeString": "enum IProposalRegistry.VoteType"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"expression": {
																	"id": 1736,
																	"name": "IProposalRegistry",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "1383:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IProposalRegistry_$2121_$",
																		"typeString": "type(contract IProposalRegistry)"
																	}
																},
																"id": 1737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1401:8:10",
																"memberName": "VoteType",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1991,
																"src": "1383:26:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_VoteType_$1991_$",
																	"typeString": "type(enum IProposalRegistry.VoteType)"
																}
															},
															"id": 1738,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1410:7:10",
															"memberName": "Against",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1988,
															"src": "1383:34:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_VoteType_$1991",
																"typeString": "enum IProposalRegistry.VoteType"
															}
														},
														"src": "1371:46:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 1753,
														"nodeType": "Block",
														"src": "1486:61:10",
														"statements": [
															{
																"expression": {
																	"id": 1751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"id": 1747,
																			"name": "proposal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1715,
																			"src": "1500:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																				"typeString": "struct IProposalRegistry.Proposal storage pointer"
																			}
																		},
																		"id": 1749,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "1509:12:10",
																		"memberName": "abstainVotes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2029,
																		"src": "1500:21:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "+=",
																	"rightHandSide": {
																		"id": 1750,
																		"name": "votingPower",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1720,
																		"src": "1525:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1500:36:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1752,
																"nodeType": "ExpressionStatement",
																"src": "1500:36:10"
															}
														]
													},
													"id": 1754,
													"nodeType": "IfStatement",
													"src": "1367:180:10",
													"trueBody": {
														"id": 1746,
														"nodeType": "Block",
														"src": "1419:61:10",
														"statements": [
															{
																"expression": {
																	"id": 1744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"id": 1740,
																			"name": "proposal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1715,
																			"src": "1433:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																				"typeString": "struct IProposalRegistry.Proposal storage pointer"
																			}
																		},
																		"id": 1742,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "1442:12:10",
																		"memberName": "againstVotes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2027,
																		"src": "1433:21:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "+=",
																	"rightHandSide": {
																		"id": 1743,
																		"name": "votingPower",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1720,
																		"src": "1458:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1433:36:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1745,
																"nodeType": "ExpressionStatement",
																"src": "1433:36:10"
															}
														]
													}
												},
												"id": 1755,
												"nodeType": "IfStatement",
												"src": "1256:291:10",
												"trueBody": {
													"id": 1734,
													"nodeType": "Block",
													"src": "1304:57:10",
													"statements": [
														{
															"expression": {
																"id": 1732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1728,
																		"name": "proposal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1715,
																		"src": "1318:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																			"typeString": "struct IProposalRegistry.Proposal storage pointer"
																		}
																	},
																	"id": 1730,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "1327:8:10",
																	"memberName": "forVotes",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2025,
																	"src": "1318:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1731,
																	"name": "votingPower",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1720,
																	"src": "1339:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1318:32:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1733,
															"nodeType": "ExpressionStatement",
															"src": "1318:32:10"
														}
													]
												}
											}
										]
									},
									"id": 1757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateVoteCounts",
									"nameLocation": "1086:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "proposal",
												"nameLocation": "1148:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "1113:43:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
													"typeString": "struct IProposalRegistry.Proposal"
												},
												"typeName": {
													"id": 1714,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1713,
														"name": "IProposalRegistry.Proposal",
														"nameLocations": [
															"1113:17:10",
															"1131:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2040,
														"src": "1113:26:10"
													},
													"referencedDeclaration": 2040,
													"src": "1113:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
														"typeString": "struct IProposalRegistry.Proposal"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "voteType",
												"nameLocation": "1193:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "1166:35:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_VoteType_$1991",
													"typeString": "enum IProposalRegistry.VoteType"
												},
												"typeName": {
													"id": 1717,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1716,
														"name": "IProposalRegistry.VoteType",
														"nameLocations": [
															"1166:17:10",
															"1184:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1991,
														"src": "1166:26:10"
													},
													"referencedDeclaration": 1991,
													"src": "1166:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_VoteType_$1991",
														"typeString": "enum IProposalRegistry.VoteType"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1720,
												"mutability": "mutable",
												"name": "votingPower",
												"nameLocation": "1219:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "1211:19:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1719,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:133:10"
									},
									"returnParameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1246:0:10"
									},
									"scope": 1915,
									"src": "1077:476:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1811,
										"nodeType": "Block",
										"src": "1614:573:10",
										"statements": [
											{
												"assignments": [
													1766
												],
												"declarations": [
													{
														"constant": false,
														"id": 1766,
														"mutability": "mutable",
														"name": "proposal",
														"nameLocation": "1659:8:10",
														"nodeType": "VariableDeclaration",
														"scope": 1811,
														"src": "1624:43:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
															"typeString": "struct IProposalRegistry.Proposal"
														},
														"typeName": {
															"id": 1765,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1764,
																"name": "IProposalRegistry.Proposal",
																"nameLocations": [
																	"1624:17:10",
																	"1642:8:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2040,
																"src": "1624:26:10"
															},
															"referencedDeclaration": 2040,
															"src": "1624:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																"typeString": "struct IProposalRegistry.Proposal"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1770,
												"initialValue": {
													"baseExpression": {
														"id": 1767,
														"name": "proposals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "1670:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Proposal_$2040_storage_$",
															"typeString": "mapping(uint256 => struct IProposalRegistry.Proposal storage ref)"
														}
													},
													"id": 1769,
													"indexExpression": {
														"id": 1768,
														"name": "proposalId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1759,
														"src": "1680:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1670:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Proposal_$2040_storage",
														"typeString": "struct IProposalRegistry.Proposal storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1624:67:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_ProposalStatus_$1987",
																"typeString": "enum IProposalRegistry.ProposalStatus"
															},
															"id": 1777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1772,
																	"name": "proposal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1766,
																	"src": "1709:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																		"typeString": "struct IProposalRegistry.Proposal storage pointer"
																	}
																},
																"id": 1773,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1718:6:10",
																"memberName": "status",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2015,
																"src": "1709:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_ProposalStatus_$1987",
																	"typeString": "enum IProposalRegistry.ProposalStatus"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"expression": {
																		"id": 1774,
																		"name": "IProposalRegistry",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2121,
																		"src": "1728:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IProposalRegistry_$2121_$",
																			"typeString": "type(contract IProposalRegistry)"
																		}
																	},
																	"id": 1775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1746:14:10",
																	"memberName": "ProposalStatus",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1987,
																	"src": "1728:32:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_ProposalStatus_$1987_$",
																		"typeString": "type(enum IProposalRegistry.ProposalStatus)"
																	}
																},
																"id": 1776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1761:6:10",
																"memberName": "Voting",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1981,
																"src": "1728:39:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_ProposalStatus_$1987",
																	"typeString": "enum IProposalRegistry.ProposalStatus"
																}
															},
															"src": "1709:58:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420766f74696e67",
															"id": 1778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1769:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_da933b044ef7279296c38b343705480b95bcd2e4e61cfbeaa2bc4d810bf72216",
																"typeString": "literal_string \"Not voting\""
															},
															"value": "Not voting"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_da933b044ef7279296c38b343705480b95bcd2e4e61cfbeaa2bc4d810bf72216",
																"typeString": "literal_string \"Not voting\""
															}
														],
														"id": 1771,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1701:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1701:81:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1780,
												"nodeType": "ExpressionStatement",
												"src": "1701:81:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1782,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1800:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1783,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1806:9:10",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1800:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"expression": {
																	"id": 1784,
																	"name": "proposal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1766,
																	"src": "1818:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																		"typeString": "struct IProposalRegistry.Proposal storage pointer"
																	}
																},
																"id": 1785,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1827:9:10",
																"memberName": "votingEnd",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2023,
																"src": "1818:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1800:36:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "566f74696e6720616374697665",
															"id": 1787,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1838:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d62ef42f9083ddc54f26f899ecb64cc01cfd965dcd2ca5a558628e295574b38",
																"typeString": "literal_string \"Voting active\""
															},
															"value": "Voting active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d62ef42f9083ddc54f26f899ecb64cc01cfd965dcd2ca5a558628e295574b38",
																"typeString": "literal_string \"Voting active\""
															}
														],
														"id": 1781,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1792:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1792:62:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1789,
												"nodeType": "ExpressionStatement",
												"src": "1792:62:10"
											},
											{
												"assignments": [
													1791,
													1793
												],
												"declarations": [
													{
														"constant": false,
														"id": 1791,
														"mutability": "mutable",
														"name": "hasQuorum",
														"nameLocation": "1915:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 1811,
														"src": "1910:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1790,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1910:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1793,
														"mutability": "mutable",
														"name": "approved",
														"nameLocation": "1931:8:10",
														"nodeType": "VariableDeclaration",
														"scope": 1811,
														"src": "1926:13:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1792,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1926:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1797,
												"initialValue": {
													"arguments": [
														{
															"id": 1795,
															"name": "proposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1766,
															"src": "1967:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																"typeString": "struct IProposalRegistry.Proposal storage pointer"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																"typeString": "struct IProposalRegistry.Proposal storage pointer"
															}
														],
														"id": 1794,
														"name": "_calculateVotingResults",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1854,
														"src": "1943:23:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Proposal_$2040_storage_ptr_$returns$_t_bool_$_t_bool_$",
															"typeString": "function (struct IProposalRegistry.Proposal storage pointer) view returns (bool,bool)"
														}
													},
													"id": 1796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1943:33:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bool_$",
														"typeString": "tuple(bool,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1909:67:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1799,
															"name": "proposalId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1759,
															"src": "2069:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1800,
															"name": "proposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1766,
															"src": "2081:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																"typeString": "struct IProposalRegistry.Proposal storage pointer"
															}
														},
														{
															"id": 1801,
															"name": "hasQuorum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1791,
															"src": "2091:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1802,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1793,
															"src": "2102:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																"typeString": "struct IProposalRegistry.Proposal storage pointer"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1798,
														"name": "_handleVotingResults",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1914,
														"src": "2048:20:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_struct$_Proposal_$2040_storage_ptr_$_t_bool_$_t_bool_$returns$__$",
															"typeString": "function (uint256,struct IProposalRegistry.Proposal storage pointer,bool,bool)"
														}
													},
													"id": 1803,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2048:63:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1804,
												"nodeType": "ExpressionStatement",
												"src": "2048:63:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1806,
															"name": "proposalId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1759,
															"src": "2152:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1807,
																"name": "proposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1766,
																"src": "2164:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																	"typeString": "struct IProposalRegistry.Proposal storage pointer"
																}
															},
															"id": 1808,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2173:6:10",
															"memberName": "status",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2015,
															"src": "2164:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_ProposalStatus_$1987",
																"typeString": "enum IProposalRegistry.ProposalStatus"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_enum$_ProposalStatus_$1987",
																"typeString": "enum IProposalRegistry.ProposalStatus"
															}
														],
														"id": 1805,
														"name": "ProposalExecuted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "2135:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_enum$_ProposalStatus_$1987_$returns$__$",
															"typeString": "function (uint256,enum IProposalRegistry.ProposalStatus)"
														}
													},
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2135:45:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1810,
												"nodeType": "EmitStatement",
												"src": "2130:50:10"
											}
										]
									},
									"id": 1812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_executeProposal",
									"nameLocation": "1568:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "1593:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "1585:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1585:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1584:20:10"
									},
									"returnParameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1614:0:10"
									},
									"scope": 1915,
									"src": "1559:628:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1853,
										"nodeType": "Block",
										"src": "2357:227:10",
										"statements": [
											{
												"assignments": [
													1823
												],
												"declarations": [
													{
														"constant": false,
														"id": 1823,
														"mutability": "mutable",
														"name": "totalVotes",
														"nameLocation": "2375:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1853,
														"src": "2367:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1822,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2367:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1832,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1828,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1824,
																"name": "proposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1815,
																"src": "2388:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																	"typeString": "struct IProposalRegistry.Proposal storage pointer"
																}
															},
															"id": 1825,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2397:8:10",
															"memberName": "forVotes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2025,
															"src": "2388:17:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"expression": {
																"id": 1826,
																"name": "proposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1815,
																"src": "2408:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																	"typeString": "struct IProposalRegistry.Proposal storage pointer"
																}
															},
															"id": 1827,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2417:12:10",
															"memberName": "againstVotes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2027,
															"src": "2408:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2388:41:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"expression": {
															"id": 1829,
															"name": "proposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1815,
															"src": "2432:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																"typeString": "struct IProposalRegistry.Proposal storage pointer"
															}
														},
														"id": 1830,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2441:12:10",
														"memberName": "abstainVotes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2029,
														"src": "2432:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2388:65:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2367:86:10"
											},
											{
												"expression": {
													"id": 1841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1833,
														"name": "hasQuorum",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1818,
														"src": "2463:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1840,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1834,
															"name": "totalVotes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1823,
															"src": "2475:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_rational_1000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000"
															},
															"id": 1839,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "31303030",
																"id": 1835,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2489:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000_by_1",
																	"typeString": "int_const 1000"
																},
																"value": "1000"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"id": 1838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2496:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3138",
																	"id": 1837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2500:2:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_18_by_1",
																		"typeString": "int_const 18"
																	},
																	"value": "18"
																},
																"src": "2496:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																}
															},
															"src": "2489:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1000000000000000000000_by_1",
																"typeString": "int_const 1000000000000000000000"
															}
														},
														"src": "2475:27:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2463:39:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1842,
												"nodeType": "ExpressionStatement",
												"src": "2463:39:10"
											},
											{
												"expression": {
													"id": 1851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1843,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1820,
														"src": "2512:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1850,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1844,
															"name": "hasQuorum",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1818,
															"src": "2523:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1845,
																	"name": "proposal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1815,
																	"src": "2536:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																		"typeString": "struct IProposalRegistry.Proposal storage pointer"
																	}
																},
																"id": 1846,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2545:8:10",
																"memberName": "forVotes",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2025,
																"src": "2536:17:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"expression": {
																	"id": 1847,
																	"name": "proposal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1815,
																	"src": "2556:8:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																		"typeString": "struct IProposalRegistry.Proposal storage pointer"
																	}
																},
																"id": 1848,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2565:12:10",
																"memberName": "againstVotes",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2027,
																"src": "2556:21:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2536:41:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "2523:54:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2512:65:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1852,
												"nodeType": "ExpressionStatement",
												"src": "2512:65:10"
											}
										]
									},
									"id": 1854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateVotingResults",
									"nameLocation": "2202:23:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "proposal",
												"nameLocation": "2261:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "2226:43:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
													"typeString": "struct IProposalRegistry.Proposal"
												},
												"typeName": {
													"id": 1814,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1813,
														"name": "IProposalRegistry.Proposal",
														"nameLocations": [
															"2226:17:10",
															"2244:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2040,
														"src": "2226:26:10"
													},
													"referencedDeclaration": 2040,
													"src": "2226:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
														"typeString": "struct IProposalRegistry.Proposal"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2225:45:10"
									},
									"returnParameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "hasQuorum",
												"nameLocation": "2326:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "2321:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1817,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2321:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2342:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1854,
												"src": "2337:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1819,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2337:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:31:10"
									},
									"scope": 1915,
									"src": "2193:391:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1913,
										"nodeType": "Block",
										"src": "2763:517:10",
										"statements": [
											{
												"condition": {
													"id": 1866,
													"name": "approved",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1863,
													"src": "2777:8:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1911,
													"nodeType": "Block",
													"src": "3076:198:10",
													"statements": [
														{
															"expression": {
																"id": 1901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1895,
																		"name": "proposal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1859,
																		"src": "3090:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																			"typeString": "struct IProposalRegistry.Proposal storage pointer"
																		}
																	},
																	"id": 1897,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "3099:6:10",
																	"memberName": "status",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2015,
																	"src": "3090:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_ProposalStatus_$1987",
																		"typeString": "enum IProposalRegistry.ProposalStatus"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 1898,
																			"name": "IProposalRegistry",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2121,
																			"src": "3108:17:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IProposalRegistry_$2121_$",
																				"typeString": "type(contract IProposalRegistry)"
																			}
																		},
																		"id": 1899,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3126:14:10",
																		"memberName": "ProposalStatus",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1987,
																		"src": "3108:32:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_ProposalStatus_$1987_$",
																			"typeString": "type(enum IProposalRegistry.ProposalStatus)"
																		}
																	},
																	"id": 1900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3141:13:10",
																	"memberName": "RejectedByDAO",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1984,
																	"src": "3108:46:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_ProposalStatus_$1987",
																		"typeString": "enum IProposalRegistry.ProposalStatus"
																	}
																},
																"src": "3090:64:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_ProposalStatus_$1987",
																	"typeString": "enum IProposalRegistry.ProposalStatus"
																}
															},
															"id": 1902,
															"nodeType": "ExpressionStatement",
															"src": "3090:64:10"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1904,
																		"name": "proposalId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1856,
																		"src": "3190:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"condition": {
																			"id": 1905,
																			"name": "hasQuorum",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1861,
																			"src": "3202:9:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "496e73756666696369656e742071756f72756d",
																			"id": 1907,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3241:21:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_ff74e91362f26a69e35baaddd54267c224f04274e715a7e428a59bcf67459bae",
																				"typeString": "literal_string \"Insufficient quorum\""
																			},
																			"value": "Insufficient quorum"
																		},
																		"id": 1908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "3202:60:10",
																		"trueExpression": {
																			"hexValue": "4d616a6f7269747920766f74656420616761696e7374",
																			"id": 1906,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3214:24:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_41b6d3d9217d4084ddb266308467189828141fd788d6cbb7e124ab0a51821780",
																				"typeString": "literal_string \"Majority voted against\""
																			},
																			"value": "Majority voted against"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1903,
																	"name": "ProposalRejected",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 939,
																	"src": "3173:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (uint256,string memory)"
																	}
																},
																"id": 1909,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3173:90:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1910,
															"nodeType": "EmitStatement",
															"src": "3168:95:10"
														}
													]
												},
												"id": 1912,
												"nodeType": "IfStatement",
												"src": "2773:501:10",
												"trueBody": {
													"id": 1894,
													"nodeType": "Block",
													"src": "2787:283:10",
													"statements": [
														{
															"expression": {
																"id": 1873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1867,
																		"name": "proposal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1859,
																		"src": "2801:8:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																			"typeString": "struct IProposalRegistry.Proposal storage pointer"
																		}
																	},
																	"id": 1869,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "2810:6:10",
																	"memberName": "status",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2015,
																	"src": "2801:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_ProposalStatus_$1987",
																		"typeString": "enum IProposalRegistry.ProposalStatus"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 1870,
																			"name": "IProposalRegistry",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2121,
																			"src": "2819:17:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IProposalRegistry_$2121_$",
																				"typeString": "type(contract IProposalRegistry)"
																			}
																		},
																		"id": 1871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2837:14:10",
																		"memberName": "ProposalStatus",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1987,
																		"src": "2819:32:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_ProposalStatus_$1987_$",
																			"typeString": "type(enum IProposalRegistry.ProposalStatus)"
																		}
																	},
																	"id": 1872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2852:8:10",
																	"memberName": "Approved",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1982,
																	"src": "2819:41:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_ProposalStatus_$1987",
																		"typeString": "enum IProposalRegistry.ProposalStatus"
																	}
																},
																"src": "2801:59:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_ProposalStatus_$1987",
																	"typeString": "enum IProposalRegistry.ProposalStatus"
																}
															},
															"id": 1874,
															"nodeType": "ExpressionStatement",
															"src": "2801:59:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1878,
																		"name": "proposalId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1856,
																		"src": "2902:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1879,
																			"name": "proposal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1859,
																			"src": "2914:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																				"typeString": "struct IProposalRegistry.Proposal storage pointer"
																			}
																		},
																		"id": 1880,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2923:8:10",
																		"memberName": "proposer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2004,
																		"src": "2914:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1881,
																			"name": "proposal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1859,
																			"src": "2933:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																				"typeString": "struct IProposalRegistry.Proposal storage pointer"
																			}
																		},
																		"id": 1882,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2942:15:10",
																		"memberName": "requestedAmount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2012,
																		"src": "2933:24:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"expression": {
																				"id": 1883,
																				"name": "proposal",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1859,
																				"src": "2959:8:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																					"typeString": "struct IProposalRegistry.Proposal storage pointer"
																				}
																			},
																			"id": 1884,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2968:10:10",
																			"memberName": "milestones",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2037,
																			"src": "2959:19:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Milestone_$2000_storage_$dyn_storage",
																				"typeString": "struct IProposalRegistry.Milestone storage ref[] storage ref"
																			}
																		},
																		"id": 1885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2979:6:10",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2959:26:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1875,
																		"name": "treasuryEscrow",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 838,
																		"src": "2874:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ITreasuryEscrow_$2185",
																			"typeString": "contract ITreasuryEscrow"
																		}
																	},
																	"id": 1877,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2889:12:10",
																	"memberName": "createEscrow",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2159,
																	"src": "2874:27:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_payable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,address,uint256,uint256) payable external"
																	}
																},
																"id": 1886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2874:112:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1887,
															"nodeType": "ExpressionStatement",
															"src": "2874:112:10"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1889,
																		"name": "proposalId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1856,
																		"src": "3022:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1890,
																			"name": "proposal",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1859,
																			"src": "3034:8:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
																				"typeString": "struct IProposalRegistry.Proposal storage pointer"
																			}
																		},
																		"id": 1891,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3043:15:10",
																		"memberName": "requestedAmount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2012,
																		"src": "3034:24:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1888,
																	"name": "ProposalApproved",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 933,
																	"src": "3005:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 1892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3005:54:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1893,
															"nodeType": "EmitStatement",
															"src": "3000:59:10"
														}
													]
												}
											}
										]
									},
									"id": 1914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_handleVotingResults",
									"nameLocation": "2599:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "2637:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "2629:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2629:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1859,
												"mutability": "mutable",
												"name": "proposal",
												"nameLocation": "2692:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "2657:43:10",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
													"typeString": "struct IProposalRegistry.Proposal"
												},
												"typeName": {
													"id": 1858,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1857,
														"name": "IProposalRegistry.Proposal",
														"nameLocations": [
															"2657:17:10",
															"2675:8:10"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2040,
														"src": "2657:26:10"
													},
													"referencedDeclaration": 2040,
													"src": "2657:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Proposal_$2040_storage_ptr",
														"typeString": "struct IProposalRegistry.Proposal"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "hasQuorum",
												"nameLocation": "2715:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "2710:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1860,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2710:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2739:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "2734:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1862,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2734:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2619:134:10"
									},
									"returnParameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2763:0:10"
									},
									"scope": 1915,
									"src": "2590:690:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1916,
							"src": "94:3188:10",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336,
								390,
								395,
								908,
								916,
								927,
								933,
								939,
								946,
								954,
								962,
								966,
								970
							]
						}
					],
					"src": "32:3253:10"
				},
				"id": 10
			},
			"CrossFi-Treasury-Guard/contracts/interfaces/IAIScoreRegistry.sol": {
				"ast": {
					"absolutePath": "CrossFi-Treasury-Guard/contracts/interfaces/IAIScoreRegistry.sol",
					"exportedSymbols": {
						"IAIScoreRegistry": [
							1976
						]
					},
					"id": 1977,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1917,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAIScoreRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1918,
								"nodeType": "StructuredDocumentation",
								"src": "58:81:11",
								"text": " @title IAIScoreRegistry\n @dev Interface for AIScoreRegistry contract"
							},
							"fullyImplemented": false,
							"id": 1976,
							"linearizedBaseContracts": [
								1976
							],
							"name": "IAIScoreRegistry",
							"nameLocation": "150:16:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IAIScoreRegistry.ScoringBreakdown",
									"id": 1929,
									"members": [
										{
											"constant": false,
											"id": 1920,
											"mutability": "mutable",
											"name": "ecosystemScore",
											"nameLocation": "218:14:11",
											"nodeType": "VariableDeclaration",
											"scope": 1929,
											"src": "212:20:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1919,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "212:5:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1922,
											"mutability": "mutable",
											"name": "feasibilityScore",
											"nameLocation": "248:16:11",
											"nodeType": "VariableDeclaration",
											"scope": 1929,
											"src": "242:22:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1921,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "242:5:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1924,
											"mutability": "mutable",
											"name": "riskScore",
											"nameLocation": "280:9:11",
											"nodeType": "VariableDeclaration",
											"scope": 1929,
											"src": "274:15:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1923,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "274:5:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1926,
											"mutability": "mutable",
											"name": "teamScore",
											"nameLocation": "305:9:11",
											"nodeType": "VariableDeclaration",
											"scope": 1929,
											"src": "299:15:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1925,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "299:5:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1928,
											"mutability": "mutable",
											"name": "innovationScore",
											"nameLocation": "330:15:11",
											"nodeType": "VariableDeclaration",
											"scope": 1929,
											"src": "324:21:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1927,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "324:5:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ScoringBreakdown",
									"nameLocation": "185:16:11",
									"nodeType": "StructDefinition",
									"scope": 1976,
									"src": "178:174:11",
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "09e8ad66e4736435405704d301d344e9454f286d3feeb2036b1adc6f4900ccbc",
									"id": 1943,
									"name": "AIScoreSubmitted",
									"nameLocation": "382:16:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1931,
												"indexed": true,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "424:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "408:26:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "408:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1933,
												"indexed": false,
												"mutability": "mutable",
												"name": "overallScore",
												"nameLocation": "452:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "444:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "444:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1935,
												"indexed": false,
												"mutability": "mutable",
												"name": "justificationIPFS",
												"nameLocation": "481:17:11",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "474:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1934,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "474:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1937,
												"indexed": false,
												"mutability": "mutable",
												"name": "modelVersion",
												"nameLocation": "515:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "508:19:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1936,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "508:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1939,
												"indexed": true,
												"mutability": "mutable",
												"name": "oracle",
												"nameLocation": "553:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "537:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "537:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1941,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "577:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1943,
												"src": "569:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "569:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "398:194:11"
									},
									"src": "376:217:11"
								},
								{
									"functionSelector": "7092b0bc",
									"id": 1957,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "submitAIScore",
									"nameLocation": "629:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "660:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1957,
												"src": "652:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1947,
												"mutability": "mutable",
												"name": "overallScore",
												"nameLocation": "688:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1957,
												"src": "680:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "680:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "justificationIPFS",
												"nameLocation": "724:17:11",
												"nodeType": "VariableDeclaration",
												"scope": 1957,
												"src": "710:31:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1948,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "710:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1951,
												"mutability": "mutable",
												"name": "modelVersion",
												"nameLocation": "765:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1957,
												"src": "751:26:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1950,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "751:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "breakdown",
												"nameLocation": "811:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1957,
												"src": "787:33:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ScoringBreakdown_$1929_memory_ptr",
													"typeString": "struct IAIScoreRegistry.ScoringBreakdown"
												},
												"typeName": {
													"id": 1953,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1952,
														"name": "ScoringBreakdown",
														"nameLocations": [
															"787:16:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1929,
														"src": "787:16:11"
													},
													"referencedDeclaration": 1929,
													"src": "787:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ScoringBreakdown_$1929_storage_ptr",
														"typeString": "struct IAIScoreRegistry.ScoringBreakdown"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "642:184:11"
									},
									"returnParameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "835:0:11"
									},
									"scope": 1976,
									"src": "620:216:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0311b82d",
									"id": 1968,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getAIScore",
									"nameLocation": "855:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "874:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "866:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "866:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "865:20:11"
									},
									"returnParameters": {
										"id": 1967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "score",
												"nameLocation": "926:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "918:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "918:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "justification",
												"nameLocation": "955:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "941:27:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1963,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "941:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1966,
												"mutability": "mutable",
												"name": "exists",
												"nameLocation": "983:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "978:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1965,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "978:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "908:87:11"
									},
									"scope": 1976,
									"src": "846:150:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "96caac0a",
									"id": 1975,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasAIScore",
									"nameLocation": "1015:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1970,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "1034:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "1026:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1026:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1025:20:11"
									},
									"returnParameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1973,
												"mutability": "mutable",
												"name": "exists",
												"nameLocation": "1074:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "1069:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1972,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1069:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1068:13:11"
									},
									"scope": 1976,
									"src": "1006:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1977,
							"src": "140:944:11",
							"usedErrors": [],
							"usedEvents": [
								1943
							]
						}
					],
					"src": "32:1053:11"
				},
				"id": 11
			},
			"CrossFi-Treasury-Guard/contracts/interfaces/IProposalRegistry.sol": {
				"ast": {
					"absolutePath": "CrossFi-Treasury-Guard/contracts/interfaces/IProposalRegistry.sol",
					"exportedSymbols": {
						"IProposalRegistry": [
							2121
						]
					},
					"id": 2122,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1978,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:12"
						},
						{
							"id": 1979,
							"literals": [
								"experimental",
								"ABIEncoderV2"
							],
							"nodeType": "PragmaDirective",
							"src": "57:33:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IProposalRegistry",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2121,
							"linearizedBaseContracts": [
								2121
							],
							"name": "IProposalRegistry",
							"nameLocation": "102:17:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IProposalRegistry.ProposalStatus",
									"id": 1987,
									"members": [
										{
											"id": 1980,
											"name": "PendingAIReview",
											"nameLocation": "156:15:12",
											"nodeType": "EnumValue",
											"src": "156:15:12"
										},
										{
											"id": 1981,
											"name": "Voting",
											"nameLocation": "181:6:12",
											"nodeType": "EnumValue",
											"src": "181:6:12"
										},
										{
											"id": 1982,
											"name": "Approved",
											"nameLocation": "197:8:12",
											"nodeType": "EnumValue",
											"src": "197:8:12"
										},
										{
											"id": 1983,
											"name": "RejectedByAI",
											"nameLocation": "215:12:12",
											"nodeType": "EnumValue",
											"src": "215:12:12"
										},
										{
											"id": 1984,
											"name": "RejectedByDAO",
											"nameLocation": "237:13:12",
											"nodeType": "EnumValue",
											"src": "237:13:12"
										},
										{
											"id": 1985,
											"name": "Executed",
											"nameLocation": "260:8:12",
											"nodeType": "EnumValue",
											"src": "260:8:12"
										},
										{
											"id": 1986,
											"name": "Cancelled",
											"nameLocation": "278:9:12",
											"nodeType": "EnumValue",
											"src": "278:9:12"
										}
									],
									"name": "ProposalStatus",
									"nameLocation": "131:14:12",
									"nodeType": "EnumDefinition",
									"src": "126:167:12"
								},
								{
									"canonicalName": "IProposalRegistry.VoteType",
									"id": 1991,
									"members": [
										{
											"id": 1988,
											"name": "Against",
											"nameLocation": "323:7:12",
											"nodeType": "EnumValue",
											"src": "323:7:12"
										},
										{
											"id": 1989,
											"name": "For",
											"nameLocation": "340:3:12",
											"nodeType": "EnumValue",
											"src": "340:3:12"
										},
										{
											"id": 1990,
											"name": "Abstain",
											"nameLocation": "353:7:12",
											"nodeType": "EnumValue",
											"src": "353:7:12"
										}
									],
									"name": "VoteType",
									"nameLocation": "304:8:12",
									"nodeType": "EnumDefinition",
									"src": "299:67:12"
								},
								{
									"canonicalName": "IProposalRegistry.Milestone",
									"id": 2000,
									"members": [
										{
											"constant": false,
											"id": 1993,
											"mutability": "mutable",
											"name": "description",
											"nameLocation": "406:11:12",
											"nodeType": "VariableDeclaration",
											"scope": 2000,
											"src": "399:18:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1992,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "399:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1995,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "435:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 2000,
											"src": "427:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1994,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "427:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1997,
											"mutability": "mutable",
											"name": "completed",
											"nameLocation": "456:9:12",
											"nodeType": "VariableDeclaration",
											"scope": 2000,
											"src": "451:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1996,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "451:4:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1999,
											"mutability": "mutable",
											"name": "completionTime",
											"nameLocation": "483:14:12",
											"nodeType": "VariableDeclaration",
											"scope": 2000,
											"src": "475:22:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1998,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "475:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Milestone",
									"nameLocation": "379:9:12",
									"nodeType": "StructDefinition",
									"scope": 2121,
									"src": "372:132:12",
									"visibility": "public"
								},
								{
									"canonicalName": "IProposalRegistry.Proposal",
									"id": 2040,
									"members": [
										{
											"constant": false,
											"id": 2002,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "544:2:12",
											"nodeType": "VariableDeclaration",
											"scope": 2040,
											"src": "536:10:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2001,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "536:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2004,
											"mutability": "mutable",
											"name": "proposer",
											"nameLocation": "564:8:12",
											"nodeType": "VariableDeclaration",
											"scope": 2040,
											"src": "556:16:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2003,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "556:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2006,
											"mutability": "mutable",
											"name": "title",
											"nameLocation": "589:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 2040,
											"src": "582:12:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2005,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "582:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2008,
											"mutability": "mutable",
											"name": "summary",
											"nameLocation": "611:7:12",
											"nodeType": "VariableDeclaration",
											"scope": 2040,
											"src": "604:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2007,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "604:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2010,
											"mutability": "mutable",
											"name": "ipfsCID",
											"nameLocation": "635:7:12",
											"nodeType": "VariableDeclaration",
											"scope": 2040,
											"src": "628:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2009,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "628:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2012,
											"mutability": "mutable",
											"name": "requestedAmount",
											"nameLocation": "660:15:12",
											"nodeType": "VariableDeclaration",
											"scope": 2040,
											"src": "652:23:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2011,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "652:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2015,
											"mutability": "mutable",
											"name": "status",
											"nameLocation": "700:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 2040,
											"src": "685:21:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_ProposalStatus_$1987",
												"typeString": "enum IProposalRegistry.ProposalStatus"
											},
											"typeName": {
												"id": 2014,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 2013,
													"name": "ProposalStatus",
													"nameLocations": [
														"685:14:12"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1987,
													"src": "685:14:12"
												},
												"referencedDeclaration": 1987,
												"src": "685:14:12",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_ProposalStatus_$1987",
													"typeString": "enum IProposalRegistry.ProposalStatus"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2017,
											"mutability": "mutable",
											"name": "submissionTime",
											"nameLocation": "724:14:12",
											"nodeType": "VariableDeclaration",
											"scope": 2040,
											"src": "716:22:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2016,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "716:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2019,
											"mutability": "mutable",
											"name": "votingPeriod",
											"nameLocation": "756:12:12",
											"nodeType": "VariableDeclaration",
											"scope": 2040,
											"src": "748:20:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2018,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "748:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2021,
											"mutability": "mutable",
											"name": "votingStart",
											"nameLocation": "786:11:12",
											"nodeType": "VariableDeclaration",
											"scope": 2040,
											"src": "778:19:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2020,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "778:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2023,
											"mutability": "mutable",
											"name": "votingEnd",
											"nameLocation": "815:9:12",
											"nodeType": "VariableDeclaration",
											"scope": 2040,
											"src": "807:17:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2022,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "807:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2025,
											"mutability": "mutable",
											"name": "forVotes",
											"nameLocation": "842:8:12",
											"nodeType": "VariableDeclaration",
											"scope": 2040,
											"src": "834:16:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2024,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "834:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2027,
											"mutability": "mutable",
											"name": "againstVotes",
											"nameLocation": "868:12:12",
											"nodeType": "VariableDeclaration",
											"scope": 2040,
											"src": "860:20:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2026,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "860:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2029,
											"mutability": "mutable",
											"name": "abstainVotes",
											"nameLocation": "898:12:12",
											"nodeType": "VariableDeclaration",
											"scope": 2040,
											"src": "890:20:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2028,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "890:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2031,
											"mutability": "mutable",
											"name": "aiScore",
											"nameLocation": "928:7:12",
											"nodeType": "VariableDeclaration",
											"scope": 2040,
											"src": "920:15:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2030,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "920:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2033,
											"mutability": "mutable",
											"name": "aiJustification",
											"nameLocation": "952:15:12",
											"nodeType": "VariableDeclaration",
											"scope": 2040,
											"src": "945:22:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2032,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "945:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2037,
											"mutability": "mutable",
											"name": "milestones",
											"nameLocation": "989:10:12",
											"nodeType": "VariableDeclaration",
											"scope": 2040,
											"src": "977:22:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Milestone_$2000_storage_$dyn_storage_ptr",
												"typeString": "struct IProposalRegistry.Milestone[]"
											},
											"typeName": {
												"baseType": {
													"id": 2035,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2034,
														"name": "Milestone",
														"nameLocations": [
															"977:9:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2000,
														"src": "977:9:12"
													},
													"referencedDeclaration": 2000,
													"src": "977:9:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Milestone_$2000_storage_ptr",
														"typeString": "struct IProposalRegistry.Milestone"
													}
												},
												"id": 2036,
												"nodeType": "ArrayTypeName",
												"src": "977:11:12",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Milestone_$2000_storage_$dyn_storage_ptr",
													"typeString": "struct IProposalRegistry.Milestone[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2039,
											"mutability": "mutable",
											"name": "totalSupplyAtStart",
											"nameLocation": "1017:18:12",
											"nodeType": "VariableDeclaration",
											"scope": 2040,
											"src": "1009:26:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2038,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1009:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nameLocation": "517:8:12",
									"nodeType": "StructDefinition",
									"scope": 2121,
									"src": "510:532:12",
									"visibility": "public"
								},
								{
									"canonicalName": "IProposalRegistry.ProposalInput",
									"id": 2057,
									"members": [
										{
											"constant": false,
											"id": 2042,
											"mutability": "mutable",
											"name": "title",
											"nameLocation": "1086:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 2057,
											"src": "1079:12:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2041,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1079:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2044,
											"mutability": "mutable",
											"name": "summary",
											"nameLocation": "1108:7:12",
											"nodeType": "VariableDeclaration",
											"scope": 2057,
											"src": "1101:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2043,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1101:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2046,
											"mutability": "mutable",
											"name": "ipfsCID",
											"nameLocation": "1132:7:12",
											"nodeType": "VariableDeclaration",
											"scope": 2057,
											"src": "1125:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2045,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1125:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2048,
											"mutability": "mutable",
											"name": "requestedAmount",
											"nameLocation": "1157:15:12",
											"nodeType": "VariableDeclaration",
											"scope": 2057,
											"src": "1149:23:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2047,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1149:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2051,
											"mutability": "mutable",
											"name": "milestoneDescriptions",
											"nameLocation": "1191:21:12",
											"nodeType": "VariableDeclaration",
											"scope": 2057,
											"src": "1182:30:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
												"typeString": "string[]"
											},
											"typeName": {
												"baseType": {
													"id": 2049,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1182:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"id": 2050,
												"nodeType": "ArrayTypeName",
												"src": "1182:8:12",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
													"typeString": "string[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2054,
											"mutability": "mutable",
											"name": "milestoneAmounts",
											"nameLocation": "1232:16:12",
											"nodeType": "VariableDeclaration",
											"scope": 2057,
											"src": "1222:26:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 2052,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2053,
												"nodeType": "ArrayTypeName",
												"src": "1222:9:12",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2056,
											"mutability": "mutable",
											"name": "votingPeriod",
											"nameLocation": "1266:12:12",
											"nodeType": "VariableDeclaration",
											"scope": 2057,
											"src": "1258:20:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2055,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1258:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ProposalInput",
									"nameLocation": "1055:13:12",
									"nodeType": "StructDefinition",
									"scope": 2121,
									"src": "1048:237:12",
									"visibility": "public"
								},
								{
									"functionSelector": "08d256af",
									"id": 2065,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "submitProposal",
									"nameLocation": "1300:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2060,
												"mutability": "mutable",
												"name": "input",
												"nameLocation": "1336:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2065,
												"src": "1315:26:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ProposalInput_$2057_memory_ptr",
													"typeString": "struct IProposalRegistry.ProposalInput"
												},
												"typeName": {
													"id": 2059,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2058,
														"name": "ProposalInput",
														"nameLocations": [
															"1315:13:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2057,
														"src": "1315:13:12"
													},
													"referencedDeclaration": 2057,
													"src": "1315:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ProposalInput_$2057_storage_ptr",
														"typeString": "struct IProposalRegistry.ProposalInput"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1314:28:12"
									},
									"returnParameters": {
										"id": 2064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2063,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2065,
												"src": "1369:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2062,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1369:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1368:9:12"
									},
									"scope": 2121,
									"src": "1291:87:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "56781388",
									"id": 2073,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "castVote",
									"nameLocation": "1393:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2071,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "1410:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2073,
												"src": "1402:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1402:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2070,
												"mutability": "mutable",
												"name": "voteType",
												"nameLocation": "1431:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2073,
												"src": "1422:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_VoteType_$1991",
													"typeString": "enum IProposalRegistry.VoteType"
												},
												"typeName": {
													"id": 2069,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2068,
														"name": "VoteType",
														"nameLocations": [
															"1422:8:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1991,
														"src": "1422:8:12"
													},
													"referencedDeclaration": 1991,
													"src": "1422:8:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_VoteType_$1991",
														"typeString": "enum IProposalRegistry.VoteType"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1401:39:12"
									},
									"returnParameters": {
										"id": 2072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1449:0:12"
									},
									"scope": 2121,
									"src": "1384:66:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0d61b519",
									"id": 2078,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "executeProposal",
									"nameLocation": "1464:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2075,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "1488:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2078,
												"src": "1480:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:20:12"
									},
									"returnParameters": {
										"id": 2077,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1508:0:12"
									},
									"scope": 2121,
									"src": "1455:54:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c7f758a8",
									"id": 2108,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getProposal",
									"nameLocation": "1524:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2080,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "1544:10:12",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "1536:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2079,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1536:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1535:20:12"
									},
									"returnParameters": {
										"id": 2107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2083,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1596:2:12",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "1588:10:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2082,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1588:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2085,
												"mutability": "mutable",
												"name": "proposer",
												"nameLocation": "1616:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "1608:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1608:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "title",
												"nameLocation": "1648:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "1634:19:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2086,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2089,
												"mutability": "mutable",
												"name": "summary",
												"nameLocation": "1677:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "1663:21:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2088,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1663:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2091,
												"mutability": "mutable",
												"name": "requestedAmount",
												"nameLocation": "1702:15:12",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "1694:23:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2094,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "1742:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "1727:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_ProposalStatus_$1987",
													"typeString": "enum IProposalRegistry.ProposalStatus"
												},
												"typeName": {
													"id": 2093,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2092,
														"name": "ProposalStatus",
														"nameLocations": [
															"1727:14:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1987,
														"src": "1727:14:12"
													},
													"referencedDeclaration": 1987,
													"src": "1727:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_ProposalStatus_$1987",
														"typeString": "enum IProposalRegistry.ProposalStatus"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2096,
												"mutability": "mutable",
												"name": "aiScore",
												"nameLocation": "1766:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "1758:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1758:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2098,
												"mutability": "mutable",
												"name": "votingStart",
												"nameLocation": "1791:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "1783:19:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1783:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "votingEnd",
												"nameLocation": "1820:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "1812:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1812:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2102,
												"mutability": "mutable",
												"name": "forVotes",
												"nameLocation": "1847:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "1839:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "againstVotes",
												"nameLocation": "1873:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "1865:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1865:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2106,
												"mutability": "mutable",
												"name": "abstainVotes",
												"nameLocation": "1903:12:12",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "1895:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1895:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1578:343:12"
									},
									"scope": 2121,
									"src": "1515:407:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fe10226d",
									"id": 2113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentProposalId",
									"nameLocation": "1937:20:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1957:2:12"
									},
									"returnParameters": {
										"id": 2112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2113,
												"src": "1983:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:12"
									},
									"scope": 2121,
									"src": "1928:64:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bb4d4436",
									"id": 2120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getVotingPower",
									"nameLocation": "2006:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2029:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "2021:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2021:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2020:17:12"
									},
									"returnParameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "2061:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2117,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2061:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2060:9:12"
									},
									"scope": 2121,
									"src": "1997:73:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2122,
							"src": "92:1980:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:2041:12"
				},
				"id": 12
			},
			"CrossFi-Treasury-Guard/contracts/interfaces/ITreasuryEscrow.sol": {
				"ast": {
					"absolutePath": "CrossFi-Treasury-Guard/contracts/interfaces/ITreasuryEscrow.sol",
					"exportedSymbols": {
						"ITreasuryEscrow": [
							2185
						]
					},
					"id": 2186,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2123,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITreasuryEscrow",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2124,
								"nodeType": "StructuredDocumentation",
								"src": "58:104:13",
								"text": " @title ITreasuryEscrow\n @dev Interface for TreasuryEscrow contract handling native XFI coin"
							},
							"fullyImplemented": false,
							"id": 2185,
							"linearizedBaseContracts": [
								2185
							],
							"name": "ITreasuryEscrow",
							"nameLocation": "173:15:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ITreasuryEscrow.EscrowStatus",
									"id": 2128,
									"members": [
										{
											"id": 2125,
											"name": "Active",
											"nameLocation": "228:6:13",
											"nodeType": "EnumValue",
											"src": "228:6:13"
										},
										{
											"id": 2126,
											"name": "Completed",
											"nameLocation": "244:9:13",
											"nodeType": "EnumValue",
											"src": "244:9:13"
										},
										{
											"id": 2127,
											"name": "Cancelled",
											"nameLocation": "263:9:13",
											"nodeType": "EnumValue",
											"src": "263:9:13"
										}
									],
									"name": "EscrowStatus",
									"nameLocation": "205:12:13",
									"nodeType": "EnumDefinition",
									"src": "200:78:13"
								},
								{
									"anonymous": false,
									"eventSelector": "b357254b93527e63d7a8b4c8bfd45a0484888fc3ae105197566af8fa8f5a9e7e",
									"id": 2138,
									"name": "EscrowCreated",
									"nameLocation": "308:13:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2130,
												"indexed": true,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "347:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "331:26:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "331:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2132,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "383:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "367:27:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "367:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2134,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalAmount",
												"nameLocation": "412:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "404:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2136,
												"indexed": false,
												"mutability": "mutable",
												"name": "milestoneCount",
												"nameLocation": "441:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "433:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "321:140:13"
									},
									"src": "302:160:13"
								},
								{
									"anonymous": false,
									"eventSelector": "7c23647db3cb03f6f0d92ad3dcde207e9a1640d0b15a34689bd0ea8c8400f8d5",
									"id": 2148,
									"name": "FundsReleased",
									"nameLocation": "478:13:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2140,
												"indexed": true,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "517:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "501:26:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "501:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2142,
												"indexed": true,
												"mutability": "mutable",
												"name": "milestoneIndex",
												"nameLocation": "553:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "537:30:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "537:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2144,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "585:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "577:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "577:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2146,
												"indexed": true,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "617:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "601:27:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "491:143:13"
									},
									"src": "472:163:13"
								},
								{
									"functionSelector": "faa33920",
									"id": 2159,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createEscrow",
									"nameLocation": "654:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2150,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "684:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "676:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "676:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2152,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "712:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "704:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "704:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2154,
												"mutability": "mutable",
												"name": "totalAmount",
												"nameLocation": "741:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "733:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "733:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2156,
												"mutability": "mutable",
												"name": "milestoneCount",
												"nameLocation": "770:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 2159,
												"src": "762:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "762:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "666:124:13"
									},
									"returnParameters": {
										"id": 2158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "807:0:13"
									},
									"scope": 2185,
									"src": "645:163:13",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7d19e596",
									"id": 2177,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getEscrow",
									"nameLocation": "827:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2161,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "845:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "837:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "837:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "836:20:13"
									},
									"returnParameters": {
										"id": 2176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "beneficiary",
												"nameLocation": "897:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "889:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "totalAmount",
												"nameLocation": "926:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "918:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "918:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "releasedAmount",
												"nameLocation": "955:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "947:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "947:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "milestoneCount",
												"nameLocation": "987:14:13",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "979:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "979:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "1024:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "1011:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_EscrowStatus_$2128",
													"typeString": "enum ITreasuryEscrow.EscrowStatus"
												},
												"typeName": {
													"id": 2172,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2171,
														"name": "EscrowStatus",
														"nameLocations": [
															"1011:12:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2128,
														"src": "1011:12:13"
													},
													"referencedDeclaration": 2128,
													"src": "1011:12:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_EscrowStatus_$2128",
														"typeString": "enum ITreasuryEscrow.EscrowStatus"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2175,
												"mutability": "mutable",
												"name": "creationTime",
												"nameLocation": "1048:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2177,
												"src": "1040:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1040:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "879:187:13"
									},
									"scope": 2185,
									"src": "818:249:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8e0eac0f",
									"id": 2184,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "escrowExists",
									"nameLocation": "1086:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2179,
												"mutability": "mutable",
												"name": "proposalId",
												"nameLocation": "1107:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "1099:18:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1099:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1098:20:13"
									},
									"returnParameters": {
										"id": 2183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2184,
												"src": "1142:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2181,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1142:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1141:6:13"
									},
									"scope": 2185,
									"src": "1077:71:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2186,
							"src": "163:987:13",
							"usedErrors": [],
							"usedEvents": [
								2138,
								2148
							]
						}
					],
					"src": "32:1118:13"
				},
				"id": 13
			},
			"CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol": {
				"ast": {
					"absolutePath": "CrossFi-Treasury-Guard/contracts/utils/ExtendedAccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							296
						],
						"Context": [
							582
						],
						"ERC165": [
							606
						],
						"ExtendedAccessControl": [
							2431
						],
						"IAccessControl": [
							379
						],
						"IERC165": [
							618
						]
					},
					"id": 2432,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2187,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 2188,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2432,
							"sourceUnit": 297,
							"src": "58:58:14",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2190,
										"name": "AccessControl",
										"nameLocations": [
											"261:13:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 296,
										"src": "261:13:14"
									},
									"id": 2191,
									"nodeType": "InheritanceSpecifier",
									"src": "261:13:14"
								}
							],
							"canonicalName": "ExtendedAccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2189,
								"nodeType": "StructuredDocumentation",
								"src": "118:108:14",
								"text": " @title AccessControl\n @dev Extended access control with custom roles for CrossFi Treasury Guard"
							},
							"fullyImplemented": true,
							"id": 2431,
							"linearizedBaseContracts": [
								2431,
								296,
								606,
								618,
								379,
								582
							],
							"name": "ExtendedAccessControl",
							"nameLocation": "236:21:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "75b238fc",
									"id": 2196,
									"mutability": "constant",
									"name": "ADMIN_ROLE",
									"nameLocation": "330:10:14",
									"nodeType": "VariableDeclaration",
									"scope": 2431,
									"src": "306:60:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2192,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "306:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41444d494e5f524f4c45",
												"id": 2194,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "353:12:14",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												},
												"value": "ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												}
											],
											"id": 2193,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "343:9:14",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2195,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "343:23:14",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "c601f7af",
									"id": 2201,
									"mutability": "constant",
									"name": "AI_ORACLE_ROLE",
									"nameLocation": "396:14:14",
									"nodeType": "VariableDeclaration",
									"scope": 2431,
									"src": "372:68:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2197,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "372:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41495f4f5241434c455f524f4c45",
												"id": 2199,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "423:16:14",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_482648e7878e9fa54c0a2f67ffd22d00ebc37cf7a03e060e428d2ab0cd6735cc",
													"typeString": "literal_string \"AI_ORACLE_ROLE\""
												},
												"value": "AI_ORACLE_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_482648e7878e9fa54c0a2f67ffd22d00ebc37cf7a03e060e428d2ab0cd6735cc",
													"typeString": "literal_string \"AI_ORACLE_ROLE\""
												}
											],
											"id": 2198,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "413:9:14",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2200,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "413:27:14",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "ebdf690f",
									"id": 2206,
									"mutability": "constant",
									"name": "TREASURY_MANAGER_ROLE",
									"nameLocation": "470:21:14",
									"nodeType": "VariableDeclaration",
									"scope": 2431,
									"src": "446:82:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2202,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "446:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "54524541535552595f4d414e414745525f524f4c45",
												"id": 2204,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "504:23:14",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_ede9dcdb0ce99dc7cec9c7be9246ad08b37853683ad91569c187b647ddf5e21c",
													"typeString": "literal_string \"TREASURY_MANAGER_ROLE\""
												},
												"value": "TREASURY_MANAGER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_ede9dcdb0ce99dc7cec9c7be9246ad08b37853683ad91569c187b647ddf5e21c",
													"typeString": "literal_string \"TREASURY_MANAGER_ROLE\""
												}
											],
											"id": 2203,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "494:9:14",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2205,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "494:34:14",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a02d72fb",
									"id": 2211,
									"mutability": "constant",
									"name": "MILESTONE_APPROVER_ROLE",
									"nameLocation": "558:23:14",
									"nodeType": "VariableDeclaration",
									"scope": 2431,
									"src": "534:86:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2207,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "534:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d494c4553544f4e455f415050524f5645525f524f4c45",
												"id": 2209,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "594:25:14",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_58223cdfb69946630d837d40b5c366a584f0217ada7fddd8318f2e08603cfa22",
													"typeString": "literal_string \"MILESTONE_APPROVER_ROLE\""
												},
												"value": "MILESTONE_APPROVER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_58223cdfb69946630d837d40b5c366a584f0217ada7fddd8318f2e08603cfa22",
													"typeString": "literal_string \"MILESTONE_APPROVER_ROLE\""
												}
											],
											"id": 2208,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "584:9:14",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2210,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "584:36:14",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "bfe42a37",
									"id": 2216,
									"mutability": "constant",
									"name": "DISPUTE_RESOLVER_ROLE",
									"nameLocation": "650:21:14",
									"nodeType": "VariableDeclaration",
									"scope": 2431,
									"src": "626:82:14",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2212,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "626:7:14",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "444953505554455f5245534f4c5645525f524f4c45",
												"id": 2214,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "684:23:14",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e",
													"typeString": "literal_string \"DISPUTE_RESOLVER_ROLE\""
												},
												"value": "DISPUTE_RESOLVER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_7b8bb8356a3f32f5c111ff23f050d97f08988e0883529ea7bff3b918887a6e0e",
													"typeString": "literal_string \"DISPUTE_RESOLVER_ROLE\""
												}
											],
											"id": 2213,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "674:9:14",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2215,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "674:34:14",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2225,
										"nodeType": "Block",
										"src": "733:60:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2220,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "755:18:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 2221,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "775:3:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "779:6:14",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "775:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2219,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "744:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "744:42:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2224,
												"nodeType": "ExpressionStatement",
												"src": "744:42:14"
											}
										]
									},
									"id": 2226,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "730:2:14"
									},
									"returnParameters": {
										"id": 2218,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "733:0:14"
									},
									"scope": 2431,
									"src": "719:74:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2258,
										"nodeType": "Block",
										"src": "1067:112:14",
										"statements": [
											{
												"body": {
													"id": 2256,
													"nodeType": "Block",
													"src": "1120:53:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 2250,
																			"name": "roles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2232,
																			"src": "1144:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																				"typeString": "bytes32[] memory"
																			}
																		},
																		"id": 2252,
																		"indexExpression": {
																			"id": 2251,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2239,
																			"src": "1150:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1144:8:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 2253,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2229,
																		"src": "1154:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2249,
																	"name": "grantRole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 148,
																	"src": "1134:9:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address)"
																	}
																},
																"id": 2254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1134:28:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2255,
															"nodeType": "ExpressionStatement",
															"src": "1134:28:14"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2242,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2239,
														"src": "1097:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2243,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2232,
															"src": "1101:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 2244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1107:6:14",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1101:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1097:16:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2257,
												"initializationExpression": {
													"assignments": [
														2239
													],
													"declarations": [
														{
															"constant": false,
															"id": 2239,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1090:1:14",
															"nodeType": "VariableDeclaration",
															"scope": 2257,
															"src": "1082:9:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2238,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1082:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2241,
													"initialValue": {
														"hexValue": "30",
														"id": 2240,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1094:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1082:13:14"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1115:3:14",
														"subExpression": {
															"id": 2246,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2239,
															"src": "1115:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2248,
													"nodeType": "ExpressionStatement",
													"src": "1115:3:14"
												},
												"nodeType": "ForStatement",
												"src": "1077:96:14"
											}
										]
									},
									"documentation": {
										"id": 2227,
										"nodeType": "StructuredDocumentation",
										"src": "803:152:14",
										"text": " @dev Grant multiple roles to an account\n @param account Account to grant roles to\n @param roles Array of role identifiers"
									},
									"functionSelector": "91b9f9d8",
									"id": 2259,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2235,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 30,
													"src": "1047:18:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2236,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2234,
												"name": "onlyRole",
												"nameLocations": [
													"1038:8:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "1038:8:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "1038:28:14"
										}
									],
									"name": "grantMultipleRoles",
									"nameLocation": "969:18:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "996:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2259,
												"src": "988:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "988:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2232,
												"mutability": "mutable",
												"name": "roles",
												"nameLocation": "1022:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2259,
												"src": "1005:22:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 2230,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1005:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 2231,
													"nodeType": "ArrayTypeName",
													"src": "1005:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "987:41:14"
									},
									"returnParameters": {
										"id": 2237,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1067:0:14"
									},
									"scope": 2431,
									"src": "960:219:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2291,
										"nodeType": "Block",
										"src": "1460:113:14",
										"statements": [
											{
												"body": {
													"id": 2289,
													"nodeType": "Block",
													"src": "1513:54:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 2283,
																			"name": "roles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2265,
																			"src": "1538:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																				"typeString": "bytes32[] memory"
																			}
																		},
																		"id": 2285,
																		"indexExpression": {
																			"id": 2284,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2272,
																			"src": "1544:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1538:8:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 2286,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2262,
																		"src": "1548:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2282,
																	"name": "revokeRole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "1527:10:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address)"
																	}
																},
																"id": 2287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1527:29:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2288,
															"nodeType": "ExpressionStatement",
															"src": "1527:29:14"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2275,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2272,
														"src": "1490:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2276,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2265,
															"src": "1494:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 2277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1500:6:14",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1494:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1490:16:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2290,
												"initializationExpression": {
													"assignments": [
														2272
													],
													"declarations": [
														{
															"constant": false,
															"id": 2272,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1483:1:14",
															"nodeType": "VariableDeclaration",
															"scope": 2290,
															"src": "1475:9:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2271,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1475:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2274,
													"initialValue": {
														"hexValue": "30",
														"id": 2273,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1487:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1475:13:14"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2280,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1508:3:14",
														"subExpression": {
															"id": 2279,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2272,
															"src": "1508:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2281,
													"nodeType": "ExpressionStatement",
													"src": "1508:3:14"
												},
												"nodeType": "ForStatement",
												"src": "1470:97:14"
											}
										]
									},
									"documentation": {
										"id": 2260,
										"nodeType": "StructuredDocumentation",
										"src": "1189:158:14",
										"text": " @dev Revoke multiple roles from an account\n @param account Account to revoke roles from\n @param roles Array of role identifiers"
									},
									"functionSelector": "4fe9d1f5",
									"id": 2292,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2268,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 30,
													"src": "1440:18:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2269,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2267,
												"name": "onlyRole",
												"nameLocations": [
													"1431:8:14"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 41,
												"src": "1431:8:14"
											},
											"nodeType": "ModifierInvocation",
											"src": "1431:28:14"
										}
									],
									"name": "revokeMultipleRoles",
									"nameLocation": "1361:19:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2262,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1389:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "1381:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1381:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2265,
												"mutability": "mutable",
												"name": "roles",
												"nameLocation": "1415:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "1398:22:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 2263,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1398:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 2264,
													"nodeType": "ArrayTypeName",
													"src": "1398:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1380:41:14"
									},
									"returnParameters": {
										"id": 2270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1460:0:14"
									},
									"scope": 2431,
									"src": "1352:221:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2328,
										"nodeType": "Block",
										"src": "1906:181:14",
										"statements": [
											{
												"body": {
													"id": 2324,
													"nodeType": "Block",
													"src": "1959:100:14",
													"statements": [
														{
															"condition": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 2315,
																			"name": "roles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2298,
																			"src": "1985:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																				"typeString": "bytes32[] memory"
																			}
																		},
																		"id": 2317,
																		"indexExpression": {
																			"id": 2316,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2304,
																			"src": "1991:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1985:8:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 2318,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2295,
																		"src": "1995:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2314,
																	"name": "hasRole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 81,
																	"src": "1977:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (bytes32,address) view returns (bool)"
																	}
																},
																"id": 2319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1977:26:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2323,
															"nodeType": "IfStatement",
															"src": "1973:76:14",
															"trueBody": {
																"id": 2322,
																"nodeType": "Block",
																"src": "2005:44:14",
																"statements": [
																	{
																		"expression": {
																			"hexValue": "74727565",
																			"id": 2320,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2030:4:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "true"
																		},
																		"functionReturnParameters": 2302,
																		"id": 2321,
																		"nodeType": "Return",
																		"src": "2023:11:14"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2307,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2304,
														"src": "1936:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2308,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2298,
															"src": "1940:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 2309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1946:6:14",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1940:12:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1936:16:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2325,
												"initializationExpression": {
													"assignments": [
														2304
													],
													"declarations": [
														{
															"constant": false,
															"id": 2304,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1929:1:14",
															"nodeType": "VariableDeclaration",
															"scope": 2325,
															"src": "1921:9:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2303,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1921:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2306,
													"initialValue": {
														"hexValue": "30",
														"id": 2305,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1933:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1921:13:14"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2312,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1954:3:14",
														"subExpression": {
															"id": 2311,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2304,
															"src": "1954:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2313,
													"nodeType": "ExpressionStatement",
													"src": "1954:3:14"
												},
												"nodeType": "ForStatement",
												"src": "1916:143:14"
											},
											{
												"expression": {
													"hexValue": "66616c7365",
													"id": 2326,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2075:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 2302,
												"id": 2327,
												"nodeType": "Return",
												"src": "2068:12:14"
											}
										]
									},
									"documentation": {
										"id": 2293,
										"nodeType": "StructuredDocumentation",
										"src": "1583:228:14",
										"text": " @dev Check if account has any of the specified roles\n @param account Account to check\n @param roles Array of role identifiers\n @return hasAnyRole True if account has at least one of the roles"
									},
									"functionSelector": "68ca78f9",
									"id": 2329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasAnyRole",
									"nameLocation": "1825:10:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2295,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1844:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2329,
												"src": "1836:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1836:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2298,
												"mutability": "mutable",
												"name": "roles",
												"nameLocation": "1870:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2329,
												"src": "1853:22:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 2296,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "1853:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 2297,
													"nodeType": "ArrayTypeName",
													"src": "1853:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1835:41:14"
									},
									"returnParameters": {
										"id": 2302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2329,
												"src": "1900:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2300,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1900:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1899:6:14"
									},
									"scope": 2431,
									"src": "1816:271:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2375,
										"nodeType": "Block",
										"src": "2331:279:14",
										"statements": [
											{
												"assignments": [
													2341
												],
												"declarations": [
													{
														"constant": false,
														"id": 2341,
														"mutability": "mutable",
														"name": "allRoles",
														"nameLocation": "2358:8:14",
														"nodeType": "VariableDeclaration",
														"scope": 2375,
														"src": "2341:25:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 2339,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "2341:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 2340,
															"nodeType": "ArrayTypeName",
															"src": "2341:9:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2344,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2342,
														"name": "getAllRoles",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2430,
														"src": "2369:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function () pure returns (bytes32[] memory)"
														}
													},
													"id": 2343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2369:13:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2341:41:14"
											},
											{
												"assignments": [
													2346
												],
												"declarations": [
													{
														"constant": false,
														"id": 2346,
														"mutability": "mutable",
														"name": "count",
														"nameLocation": "2400:5:14",
														"nodeType": "VariableDeclaration",
														"scope": 2375,
														"src": "2392:13:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2345,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2392:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2348,
												"initialValue": {
													"hexValue": "30",
													"id": 2347,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2408:1:14",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2392:17:14"
											},
											{
												"body": {
													"id": 2371,
													"nodeType": "Block",
													"src": "2474:99:14",
													"statements": [
														{
															"condition": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 2361,
																			"name": "allRoles",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2341,
																			"src": "2500:8:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																				"typeString": "bytes32[] memory"
																			}
																		},
																		"id": 2363,
																		"indexExpression": {
																			"id": 2362,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2350,
																			"src": "2509:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2500:11:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 2364,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2332,
																		"src": "2513:7:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2360,
																	"name": "hasRole",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 81,
																	"src": "2492:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (bytes32,address) view returns (bool)"
																	}
																},
																"id": 2365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2492:29:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2370,
															"nodeType": "IfStatement",
															"src": "2488:75:14",
															"trueBody": {
																"id": 2369,
																"nodeType": "Block",
																"src": "2523:40:14",
																"statements": [
																	{
																		"expression": {
																			"id": 2367,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "2541:7:14",
																			"subExpression": {
																				"id": 2366,
																				"name": "count",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2346,
																				"src": "2541:5:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2368,
																		"nodeType": "ExpressionStatement",
																		"src": "2541:7:14"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2353,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2350,
														"src": "2448:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2354,
															"name": "allRoles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2341,
															"src": "2452:8:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 2355,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2461:6:14",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2452:15:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2448:19:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2372,
												"initializationExpression": {
													"assignments": [
														2350
													],
													"declarations": [
														{
															"constant": false,
															"id": 2350,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2441:1:14",
															"nodeType": "VariableDeclaration",
															"scope": 2372,
															"src": "2433:9:14",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2349,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2433:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2352,
													"initialValue": {
														"hexValue": "30",
														"id": 2351,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2445:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2433:13:14"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2469:3:14",
														"subExpression": {
															"id": 2357,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2350,
															"src": "2469:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2359,
													"nodeType": "ExpressionStatement",
													"src": "2469:3:14"
												},
												"nodeType": "ForStatement",
												"src": "2428:145:14"
											},
											{
												"expression": {
													"id": 2373,
													"name": "count",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2346,
													"src": "2598:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2336,
												"id": 2374,
												"nodeType": "Return",
												"src": "2591:12:14"
											}
										]
									},
									"documentation": {
										"id": 2330,
										"nodeType": "StructuredDocumentation",
										"src": "2097:148:14",
										"text": " @dev Get all roles for an account\n @param account Account to check\n @return roleCount Number of roles the account has"
									},
									"functionSelector": "aca5a8a7",
									"id": 2376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleCount",
									"nameLocation": "2259:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2332,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2280:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 2376,
												"src": "2272:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2272:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2271:17:14"
									},
									"returnParameters": {
										"id": 2336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2335,
												"mutability": "mutable",
												"name": "roleCount",
												"nameLocation": "2320:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 2376,
												"src": "2312:17:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2312:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2311:19:14"
									},
									"scope": 2431,
									"src": "2250:360:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2429,
										"nodeType": "Block",
										"src": "2791:296:14",
										"statements": [
											{
												"expression": {
													"id": 2389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2383,
														"name": "roles",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2381,
														"src": "2801:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "36",
																"id": 2387,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2823:1:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_6_by_1",
																	"typeString": "int_const 6"
																},
																"value": "6"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_6_by_1",
																	"typeString": "int_const 6"
																}
															],
															"id": 2386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "2809:13:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (bytes32[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 2384,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "2813:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"id": 2385,
																"nodeType": "ArrayTypeName",
																"src": "2813:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																	"typeString": "bytes32[]"
																}
															}
														},
														"id": 2388,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2809:16:14",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[] memory"
														}
													},
													"src": "2801:24:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"id": 2390,
												"nodeType": "ExpressionStatement",
												"src": "2801:24:14"
											},
											{
												"expression": {
													"id": 2395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2391,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2381,
															"src": "2835:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 2393,
														"indexExpression": {
															"hexValue": "30",
															"id": 2392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2841:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2835:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2394,
														"name": "DEFAULT_ADMIN_ROLE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "2846:18:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2835:29:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2396,
												"nodeType": "ExpressionStatement",
												"src": "2835:29:14"
											},
											{
												"expression": {
													"id": 2401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2397,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2381,
															"src": "2874:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 2399,
														"indexExpression": {
															"hexValue": "31",
															"id": 2398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2880:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2874:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2400,
														"name": "ADMIN_ROLE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2196,
														"src": "2885:10:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2874:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2402,
												"nodeType": "ExpressionStatement",
												"src": "2874:21:14"
											},
											{
												"expression": {
													"id": 2407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2403,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2381,
															"src": "2905:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 2405,
														"indexExpression": {
															"hexValue": "32",
															"id": 2404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2911:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2905:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2406,
														"name": "AI_ORACLE_ROLE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2201,
														"src": "2916:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2905:25:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2408,
												"nodeType": "ExpressionStatement",
												"src": "2905:25:14"
											},
											{
												"expression": {
													"id": 2413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2409,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2381,
															"src": "2940:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 2411,
														"indexExpression": {
															"hexValue": "33",
															"id": 2410,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2946:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "3"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2940:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2412,
														"name": "TREASURY_MANAGER_ROLE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2206,
														"src": "2951:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2940:32:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2414,
												"nodeType": "ExpressionStatement",
												"src": "2940:32:14"
											},
											{
												"expression": {
													"id": 2419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2415,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2381,
															"src": "2982:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 2417,
														"indexExpression": {
															"hexValue": "34",
															"id": 2416,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2988:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "4"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2982:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2418,
														"name": "MILESTONE_APPROVER_ROLE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2211,
														"src": "2993:23:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2982:34:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2420,
												"nodeType": "ExpressionStatement",
												"src": "2982:34:14"
											},
											{
												"expression": {
													"id": 2425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2421,
															"name": "roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2381,
															"src": "3026:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																"typeString": "bytes32[] memory"
															}
														},
														"id": 2423,
														"indexExpression": {
															"hexValue": "35",
															"id": 2422,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3032:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_5_by_1",
																"typeString": "int_const 5"
															},
															"value": "5"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3026:8:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2424,
														"name": "DISPUTE_RESOLVER_ROLE",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2216,
														"src": "3037:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "3026:32:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 2426,
												"nodeType": "ExpressionStatement",
												"src": "3026:32:14"
											},
											{
												"expression": {
													"id": 2427,
													"name": "roles",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2381,
													"src": "3075:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 2382,
												"id": 2428,
												"nodeType": "Return",
												"src": "3068:12:14"
											}
										]
									},
									"documentation": {
										"id": 2377,
										"nodeType": "StructuredDocumentation",
										"src": "2620:98:14",
										"text": " @dev Get all available roles\n @return roles Array of all role identifiers"
									},
									"functionSelector": "f2bcac3d",
									"id": 2430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllRoles",
									"nameLocation": "2732:11:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2743:2:14"
									},
									"returnParameters": {
										"id": 2382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2381,
												"mutability": "mutable",
												"name": "roles",
												"nameLocation": "2784:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2430,
												"src": "2767:22:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 2379,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "2767:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 2380,
													"nodeType": "ArrayTypeName",
													"src": "2767:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2766:24:14"
									},
									"scope": 2431,
									"src": "2723:364:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2432,
							"src": "227:2862:14",
							"usedErrors": [
								306,
								309
							],
							"usedEvents": [
								318,
								327,
								336
							]
						}
					],
					"src": "32:3057:14"
				},
				"id": 14
			}
		}
	}
}